var mceliece = (function () {
var sodiumUtil=function(){function from_string(str){if(typeof TextEncoder==="function"){return new TextEncoder("utf-8").encode(str)}str=unescape(encodeURIComponent(str));var bytes=new Uint8Array(str.length);for(var i=0;i<str.length;i++){bytes[i]=str.charCodeAt(i)}return bytes}function to_string(bytes){if(typeof TextDecoder==="function"){return new TextDecoder("utf-8",{fatal:true}).decode(bytes)}var toStringChunkSize=8192,numChunks=Math.ceil(bytes.length/toStringChunkSize);if(numChunks<=1){try{return decodeURIComponent(escape(String.fromCharCode.apply(null,bytes)))}catch(_){throw new TypeError("The encoded data was not valid.")}}var totalString="";var sequenceReadOffset=0;for(var i=0;i<numChunks;i++){var currentChunk=Array.prototype.slice.call(bytes,i*toStringChunkSize+sequenceReadOffset,(i+1)*toStringChunkSize+sequenceReadOffset);if(currentChunk.length==0){continue}var sequenceDetectionComplete,sequenceIndex=currentChunk.length,sequenceLength=0;do{sequenceIndex--;var currentByte=currentChunk[sequenceIndex];if(currentByte>=240){sequenceLength=4;sequenceDetectionComplete=true}else if(currentByte>=224){sequenceLength=3;sequenceDetectionComplete=true}else if(currentByte>=192){sequenceLength=2;sequenceDetectionComplete=true}else if(currentByte<128){sequenceLength=1;sequenceDetectionComplete=true}}while(!sequenceDetectionComplete);var extraBytes=sequenceLength-(currentChunk.length-sequenceIndex);for(var j=0;j<extraBytes;j++){sequenceReadOffset--;currentChunk.pop()}totalString+=to_string(currentChunk)}return totalString}function from_hex(str){if(!is_hex(str)){throw new TypeError("The provided string doesn't look like hex data")}var result=new Uint8Array(str.length/2);for(var i=0;i<str.length;i+=2){result[i>>>1]=parseInt(str.substr(i,2),16)}return result}function to_hex(bytes){var str="",b,c,x;for(var i=0;i<bytes.length;i++){c=bytes[i]&15;b=bytes[i]>>>4;x=87+c+(c-10>>8&~38)<<8|87+b+(b-10>>8&~38);str+=String.fromCharCode(x&255)+String.fromCharCode(x>>>8)}return str}function is_hex(str){return typeof str==="string"&&/^[0-9a-f]+$/i.test(str)&&str.length%2===0}function from_base64(sBase64,nBlocksSize){function _b64ToUint6(nChr){return nChr>64&&nChr<91?nChr-65:nChr>96&&nChr<123?nChr-71:nChr>47&&nChr<58?nChr+4:nChr===43?62:nChr===47?63:0}var sB64Enc=sBase64.replace(/[^A-Za-z0-9\+\/]/g,""),nInLen=sB64Enc.length,nOutLen=nBlocksSize?Math.ceil((nInLen*3+1>>2)/nBlocksSize)*nBlocksSize:nInLen*3+1>>2,taBytes=new Uint8Array(nOutLen);for(var nMod3,nMod4,nUint24=0,nOutIdx=0,nInIdx=0;nInIdx<nInLen;nInIdx++){nMod4=nInIdx&3;nUint24|=_b64ToUint6(sB64Enc.charCodeAt(nInIdx))<<18-6*nMod4;if(nMod4===3||nInLen-nInIdx===1){for(nMod3=0;nMod3<3&&nOutIdx<nOutLen;nMod3++,nOutIdx++){taBytes[nOutIdx]=nUint24>>>(16>>>nMod3&24)&255}nUint24=0}}return taBytes}function to_base64(aBytes,noNewLine){if(typeof noNewLine==="undefined"){noNewLine=true}function _uint6ToB64(nUint6){return nUint6<26?nUint6+65:nUint6<52?nUint6+71:nUint6<62?nUint6-4:nUint6===62?43:nUint6===63?47:65}if(typeof aBytes==="string"){throw new Error("input has to be an array")}var nMod3=2,sB64Enc="";for(var nLen=aBytes.length,nUint24=0,nIdx=0;nIdx<nLen;nIdx++){nMod3=nIdx%3;if(nIdx>0&&nIdx*4/3%76===0&&!noNewLine){sB64Enc+="\r\n"}nUint24|=aBytes[nIdx]<<(16>>>nMod3&24);if(nMod3===2||aBytes.length-nIdx===1){sB64Enc+=String.fromCharCode(_uint6ToB64(nUint24>>>18&63),_uint6ToB64(nUint24>>>12&63),_uint6ToB64(nUint24>>>6&63),_uint6ToB64(nUint24&63));nUint24=0}}return sB64Enc.substr(0,sB64Enc.length-2+nMod3)+(nMod3===2?"":nMod3===1?"=":"==")}function output_formats(){return["uint8array","text","hex","base64"]}function _format_output(output,optionalOutputFormat){var selectedOutputFormat=optionalOutputFormat||output_format;if(!_is_output_format(selectedOutputFormat)){throw new Error(selectedOutputFormat+" output format is not available")}if(output instanceof AllocatedBuf){if(selectedOutputFormat==="uint8array"){return output.to_Uint8Array()}else if(selectedOutputFormat==="text"){return to_string(output.to_Uint8Array())}else if(selectedOutputFormat==="hex"){return to_hex(output.to_Uint8Array())}else if(selectedOutputFormat==="base64"){return to_base64(output.to_Uint8Array())}else{throw new Error('What is output format "'+selectedOutputFormat+'"?')}}else if(typeof output==="object"){var props=Object.keys(output);var formattedOutput={};for(var i=0;i<props.length;i++){formattedOutput[props[i]]=_format_output(output[props[i]],selectedOutputFormat)}return formattedOutput}else if(typeof output==="string"){return output}else{throw new TypeError("Cannot format output")}}function _is_output_format(format){var formats=output_formats();for(var i=0;i<formats.length;i++){if(formats[i]===format){return true}}return false}function _check_output_format(format){if(!format){return}else if(typeof format!=="string"){throw new TypeError("When defined, the output format must be a string")}else if(!_is_output_format(format)){throw new Error(format+" is not a supported output format")}}function memcmp(b1,b2){if(!(b1 instanceof Uint8Array&&b2 instanceof Uint8Array)){throw new TypeError("Only Uint8Array instances can be compared")}if(b1.length!==b2.length){throw new TypeError("Only instances of identical length can be compared")}for(var d=0|0,i=0|0,j=b1.length;i<j;i++){d|=b1[i]^b2[i]}return d===0}function memzero(bytes){if(!bytes instanceof Uint8Array){throw new TypeError("Only Uint8Array instances can be wiped")}for(var i=0|0,j=bytes.length;i<j;i++){bytes[i]=0}}return{from_base64:function(data){return typeof data==="string"?from_base64(data):data},from_hex:function(data){return typeof data==="string"?from_hex(data):data},from_string:function(message){return typeof message==="string"?from_string(message):message},memcmp:memcmp,memzero:function(data){if(data instanceof Uint8Array){memzero(data)}else if(typeof Buffer!=="undefined"&&data instanceof Buffer){data.fill(0)}},to_base64:function(data){return typeof data==="string"?data:to_base64(data).replace(/\s+/g,"")},to_hex:function(data){return typeof data==="string"?data:to_hex(data).replace(/\s+/g,"")},to_string:function(message){return typeof message==="string"?message:to_string(message)}}}();
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status, toThrow) {
      quit(status);
    }
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function read(url) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.responseType = 'arraybuffer';
      xhr.send(null);
      return xhr.response;
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  abort('NO_DYNAMIC_EXECUTION=1 was set, cannot eval');
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}
if (!Module['quit']) {
  Module['quit'] = function(status, toThrow) {
    throw toThrow;
  }
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
    return value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      assert(args.length == sig.length-1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
    } else {
      assert(sig.length == 1);
      assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [null,null,null,null,null,null,null,null],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 1*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-1)/1] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      // optimize away arguments usage in common cases
      if (sig.length === 1) {
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func);
        };
      } else if (sig.length === 2) {
        sigCache[func] = function dynCall_wrapper(arg) {
          return Runtime.dynCall(sig, func, [arg]);
        };
      } else {
        // general case
        sigCache[func] = function dynCall_wrapper() {
          return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
        };
      }
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16);(assert((((STACKTOP|0) < (STACK_MAX|0))|0))|0); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + (assert(!staticSealed),size))|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { assert(DYNAMICTOP_PTR);var ret = HEAP32[DYNAMICTOP_PTR>>2];var end = (((ret + size + 15)|0) & -16);HEAP32[DYNAMICTOP_PTR>>2] = end;if (end >= TOTAL_MEMORY) {var success = enlargeMemory();if (!success) {HEAP32[DYNAMICTOP_PTR>>2] = ret;return 0;}}return ret;},
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = 0; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    abort('NO_DYNAMIC_EXECUTION=1 was set, cannot eval');
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = Runtime.stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface.
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    assert(returnType !== 'array', 'Return type should not be "array".');
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if ((!opts || !opts.async) && typeof EmterpreterAsync === 'object') {
      assert(!EmterpreterAsync.state, 'cannot start async op with normal JS calling ccall');
    }
    if (opts && opts.async) assert(!returnType, 'async ccalls cannot return values');
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  // NO_DYNAMIC_EXECUTION is on, so we can't use the fast version of cwrap.
  // Fall back to returning a bound version of ccall.
  cwrap = function cwrap(ident, returnType, argTypes) {
    return function() {
      Runtime.warnOnce('NO_DYNAMIC_EXECUTION was set, '
                     + 'using slow cwrap implementation');
      return ccall(ident, returnType, argTypes, arguments);
    }
  }
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if (!runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    assert(ptr + i < TOTAL_MEMORY);
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;
function UTF8ArrayToString(u8Array, idx) {
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  while (u8Array[endPtr]) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var u0, u1, u2, u3, u4, u5;

    var str = '';
    while (1) {
      // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
      u0 = u8Array[idx++];
      if (!u0) return str;
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        u3 = u8Array[idx++] & 63;
        if ((u0 & 0xF8) == 0xF0) {
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
        } else {
          u4 = u8Array[idx++] & 63;
          if ((u0 & 0xFC) == 0xF8) {
            u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
          } else {
            u5 = u8Array[idx++] & 63;
            u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
          }
        }
      }
      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
  if (__cxa_demangle_func) {
    try {
      var s =
        func.substr(1);
      var len = lengthBytesUTF8(s)+1;
      var buf = _malloc(len);
      stringToUTF8(s, buf, len);
      var status = _malloc(4);
      var ret = __cxa_demangle_func(buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed
    } catch(e) {
      // ignore problems here
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
    // failure when using libcxxabi, don't demangle
    return func;
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (x + ' [' + y + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;
var MIN_TOTAL_MEMORY = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE, STATICTOP, staticSealed; // static area
var STACK_BASE, STACKTOP, STACK_MAX; // stack area
var DYNAMIC_BASE, DYNAMICTOP_PTR; // dynamic area handled by sbrk

  STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
  staticSealed = false;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
  }
  // Also test the global address 0 for integrity. This check is not compatible with SAFE_SPLIT_MEMORY though, since that mode already tests all address 0 accesses on its own.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - asm.stackSave() + allocSize) + ' bytes available!');
}

function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}


function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 8388608;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
if (TOTAL_MEMORY < TOTAL_STACK) Module.printErr('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'JS engine does not provide full typed array support');



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === TOTAL_MEMORY, 'provided buffer should be ' + TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(TOTAL_MEMORY);
  }
  assert(buffer.byteLength === TOTAL_MEMORY);
}
updateGlobalBufferViews();


function getTotalMemory() {
  return TOTAL_MEMORY;
}

// Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 0x63736d65; /* 'emsc' */
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  checkStackCookie();
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
function writeStringToMemory(string, buffer, dontAddNull) {
  Runtime.warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var lastChar, end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

if (!Math['trunc']) Math['trunc'] = function(x) {
  return x < 0 ? Math.ceil(x) : Math.floor(x);
};
Math.trunc = Math['trunc'];

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            Module.printErr('still waiting on run dependencies:');
          }
          Module.printErr('dependency: ' + dep);
        }
        if (shown) {
          Module.printErr('(end of list)');
        }
      }, 10000);
    }
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;



var /* show errors on likely calls to FS when it was not included */ FS = {
  error: function() {
    abort('Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1');
  },
  init: function() { FS.error() },
  createDataFile: function() { FS.error() },
  createPreloadedFile: function() { FS.error() },
  createLazyFile: function() { FS.error() },
  open: function() { FS.error() },
  mkdev: function() { FS.error() },
  registerDevice: function() { FS.error() },
  analyzePath: function() { FS.error() },
  loadFilesFromDB: function() { FS.error() },

  ErrnoError: function ErrnoError() { FS.error() },
};
Module['FS_createDataFile'] = FS.createDataFile;
Module['FS_createPreloadedFile'] = FS.createPreloadedFile;



// === Body ===

var ASM_CONSTS = [function() { { return Module.getRandomValue(); } },
 function() { { if (Module.getRandomValue === undefined) { try { var window_ = "object" === typeof window ? window : self, crypto_ = typeof window_.crypto !== "undefined" ? window_.crypto : window_.msCrypto, randomValuesStandard = function() { var buf = new Uint32Array(1); crypto_.getRandomValues(buf); return buf[0] >>> 0; }; randomValuesStandard(); Module.getRandomValue = randomValuesStandard; } catch (e) { try { var crypto = require('crypto'), randomValueNodeJS = function() { var buf = crypto.randomBytes(4); return (buf[0] << 24 | buf[1] << 16 | buf[2] << 8 | buf[3]) >>> 0; }; randomValueNodeJS(); Module.getRandomValue = randomValueNodeJS; } catch (e) { throw 'No secure random number generator found'; } } } } }];

function _emscripten_asm_const_i(code) {
 return ASM_CONSTS[code]();
}

function _emscripten_asm_const_v(code) {
 return ASM_CONSTS[code]();
}



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 15984;
  /* global initializers */  __ATINIT__.push();
  

/* memory initializer */ allocatei8", ALLOC_NONE, Runtime.GLOBAL_BASE);





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


   
  Module["_i64Subtract"] = _i64Subtract;

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else Module.printErr('failed to set errno from JS');
      return value;
    } 
  Module["_sbrk"] = _sbrk;

   
  Module["_i64Add"] = _i64Add;

   
  Module["_memset"] = _memset;

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  var _emscripten_asm_const=true;

  var _emscripten_asm_const_int=true;

   
  Module["_bitshift64Shl"] = _bitshift64Shl;

  function _abort() {
      Module['abort']();
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
   
  Module["___muldsi3"] = ___muldsi3; 
  Module["___muldi3"] = ___muldi3;

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;
DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);

STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);

HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;

staticSealed = true; // seal the static portion of memory

assert(DYNAMIC_BASE < TOTAL_MEMORY, "TOTAL_MEMORY not big enough for stack");



var debug_table_iiiii = ["0", "jsCall_iiiii_0", "jsCall_iiiii_1", "jsCall_iiiii_2", "jsCall_iiiii_3", "jsCall_iiiii_4", "jsCall_iiiii_5", "jsCall_iiiii_6", "jsCall_iiiii_7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "_crypto_onetimeauth_poly1305_donna_update", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"];
var debug_table_iiiiii = ["0", "jsCall_iiiiii_0", "jsCall_iiiiii_1", "jsCall_iiiiii_2", "jsCall_iiiiii_3", "jsCall_iiiiii_4", "jsCall_iiiiii_5", "jsCall_iiiiii_6", "jsCall_iiiiii_7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "_crypto_onetimeauth_poly1305_donna", "_crypto_onetimeauth_poly1305_donna_verify", "_stream_ref", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"];
var debug_table_iii = ["0", "jsCall_iii_0", "jsCall_iii_1", "jsCall_iii_2", "jsCall_iii_3", "jsCall_iii_4", "jsCall_iii_5", "jsCall_iii_6", "jsCall_iii_7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "_crypto_onetimeauth_poly1305_donna_init", "_crypto_onetimeauth_poly1305_donna_final", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"];
var debug_table_iiiiiiiii = ["0", "jsCall_iiiiiiiii_0", "jsCall_iiiiiiiii_1", "jsCall_iiiiiiiii_2", "jsCall_iiiiiiiii_3", "jsCall_iiiiiiiii_4", "jsCall_iiiiiiiii_5", "jsCall_iiiiiiiii_6", "jsCall_iiiiiiiii_7", "0", "0", "0", "0", "0", "0", "0", "0", "0", "_stream_ref_xor_ic", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"];
function nullFunc_iiiii(x) { Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: iii: " + debug_table_iii[x] + "  iiiiii: " + debug_table_iiiiii[x] + "  iiiiiiiii: " + debug_table_iiiiiiiii[x] + "  "); abort(x) }

function nullFunc_iiiiii(x) { Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: iiiii: " + debug_table_iiiii[x] + "  iii: " + debug_table_iii[x] + "  iiiiiiiii: " + debug_table_iiiiiiiii[x] + "  "); abort(x) }

function nullFunc_iii(x) { Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: iiiii: " + debug_table_iiiii[x] + "  iiiiii: " + debug_table_iiiiii[x] + "  iiiiiiiii: " + debug_table_iiiiiiiii[x] + "  "); abort(x) }

function nullFunc_iiiiiiiii(x) { Module["printErr"]("Invalid function pointer '" + x + "' called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  Module["printErr"]("This pointer might make sense in another type signature: iiiii: " + debug_table_iiiii[x] + "  iiiiii: " + debug_table_iiiiii[x] + "  iii: " + debug_table_iii[x] + "  "); abort(x) }

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function jsCall_iiiii(index,a1,a2,a3,a4) {
    return Runtime.functionPointers[index](a1,a2,a3,a4);
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function jsCall_iiiiii(index,a1,a2,a3,a4,a5) {
    return Runtime.functionPointers[index](a1,a2,a3,a4,a5);
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function jsCall_iii(index,a1,a2) {
    return Runtime.functionPointers[index](a1,a2);
}

function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    Module["setThrew"](1, 0);
  }
}

function jsCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
    return Runtime.functionPointers[index](a1,a2,a3,a4,a5,a6,a7,a8);
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "abortStackOverflow": abortStackOverflow, "nullFunc_iiiii": nullFunc_iiiii, "nullFunc_iiiiii": nullFunc_iiiiii, "nullFunc_iii": nullFunc_iii, "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "jsCall_iiiii": jsCall_iiiii, "invoke_iiiiii": invoke_iiiiii, "jsCall_iiiiii": jsCall_iiiiii, "invoke_iii": invoke_iii, "jsCall_iii": jsCall_iii, "invoke_iiiiiiiii": invoke_iiiiiiiii, "jsCall_iiiiiiiii": jsCall_iiiiiiiii, "_emscripten_asm_const_i": _emscripten_asm_const_i, "_abort": _abort, "___setErrNo": ___setErrNo, "_emscripten_memcpy_big": _emscripten_memcpy_big, "_emscripten_asm_const_v": _emscripten_asm_const_v, "___assert_fail": ___assert_fail, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'almost asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var abortStackOverflow=env.abortStackOverflow;
  var nullFunc_iiiii=env.nullFunc_iiiii;
  var nullFunc_iiiiii=env.nullFunc_iiiiii;
  var nullFunc_iii=env.nullFunc_iii;
  var nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var jsCall_iiiii=env.jsCall_iiiii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var jsCall_iiiiii=env.jsCall_iiiiii;
  var invoke_iii=env.invoke_iii;
  var jsCall_iii=env.jsCall_iii;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var jsCall_iiiiiiiii=env.jsCall_iiiiiiiii;
  var _emscripten_asm_const_i=env._emscripten_asm_const_i;
  var _abort=env._abort;
  var ___setErrNo=env.___setErrNo;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _emscripten_asm_const_v=env._emscripten_asm_const_v;
  var ___assert_fail=env.___assert_fail;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;
  if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(size|0);

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _randombytes_random() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = _emscripten_asm_const_i(0)|0; //@line 78 "libsodium/src/libsodium/randombytes/randombytes.c"
 return ($0|0); //@line 78 "libsodium/src/libsodium/randombytes/randombytes.c"
}
function _randombytes_stir() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _emscripten_asm_const_v(1); //@line 93 "libsodium/src/libsodium/randombytes/randombytes.c"
 return; //@line 121 "libsodium/src/libsodium/randombytes/randombytes.c"
}
function _randombytes_buf($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 155 "libsodium/src/libsodium/randombytes/randombytes.c"
 $4 = $6; //@line 155 "libsodium/src/libsodium/randombytes/randombytes.c"
 $5 = 0; //@line 158 "libsodium/src/libsodium/randombytes/randombytes.c"
 while(1) {
  $7 = $5; //@line 158 "libsodium/src/libsodium/randombytes/randombytes.c"
  $8 = $3; //@line 158 "libsodium/src/libsodium/randombytes/randombytes.c"
  $9 = ($7>>>0)<($8>>>0); //@line 158 "libsodium/src/libsodium/randombytes/randombytes.c"
  if (!($9)) {
   break;
  }
  $10 = (_randombytes_random()|0); //@line 159 "libsodium/src/libsodium/randombytes/randombytes.c"
  $11 = $10&255; //@line 159 "libsodium/src/libsodium/randombytes/randombytes.c"
  $12 = $4; //@line 159 "libsodium/src/libsodium/randombytes/randombytes.c"
  $13 = $5; //@line 159 "libsodium/src/libsodium/randombytes/randombytes.c"
  $14 = (($12) + ($13)|0); //@line 159 "libsodium/src/libsodium/randombytes/randombytes.c"
  HEAP8[$14>>0] = $11; //@line 159 "libsodium/src/libsodium/randombytes/randombytes.c"
  $15 = $5; //@line 158 "libsodium/src/libsodium/randombytes/randombytes.c"
  $16 = (($15) + 1)|0; //@line 158 "libsodium/src/libsodium/randombytes/randombytes.c"
  $5 = $16; //@line 158 "libsodium/src/libsodium/randombytes/randombytes.c"
 }
 STACKTOP = sp;return; //@line 162 "libsodium/src/libsodium/randombytes/randombytes.c"
}
function _randombytes($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp;
 $3 = $0;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $1;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $2;
 $9 = $4; //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 $10 = $9; //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 $11 = HEAP32[$10>>2]|0; //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 $12 = (($9) + 4)|0; //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 $13 = $12; //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 $14 = HEAP32[$13>>2]|0; //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 $15 = ($14>>>0)<(0); //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 $16 = ($11>>>0)<=(4294967295); //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 $17 = ($14|0)==(0); //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 $18 = $17 & $16; //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 $19 = $15 | $18; //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 if ($19) {
  $20 = $3; //@line 201 "libsodium/src/libsodium/randombytes/randombytes.c"
  $21 = $4; //@line 201 "libsodium/src/libsodium/randombytes/randombytes.c"
  $22 = $21; //@line 201 "libsodium/src/libsodium/randombytes/randombytes.c"
  $23 = HEAP32[$22>>2]|0; //@line 201 "libsodium/src/libsodium/randombytes/randombytes.c"
  $24 = (($21) + 4)|0; //@line 201 "libsodium/src/libsodium/randombytes/randombytes.c"
  $25 = $24; //@line 201 "libsodium/src/libsodium/randombytes/randombytes.c"
  $26 = HEAP32[$25>>2]|0; //@line 201 "libsodium/src/libsodium/randombytes/randombytes.c"
  _randombytes_buf($20,$23); //@line 201 "libsodium/src/libsodium/randombytes/randombytes.c"
  STACKTOP = sp;return; //@line 202 "libsodium/src/libsodium/randombytes/randombytes.c"
 } else {
  ___assert_fail((15203|0),(15223|0),200,(15273|0)); //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
  // unreachable; //@line 200 "libsodium/src/libsodium/randombytes/randombytes.c"
 }
}
function _sodium_memzero($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 94 "libsodium/src/libsodium/sodium/utils.c"
 $4 = $6; //@line 93 "libsodium/src/libsodium/sodium/utils.c"
 $5 = 0; //@line 95 "libsodium/src/libsodium/sodium/utils.c"
 while(1) {
  $7 = $5; //@line 97 "libsodium/src/libsodium/sodium/utils.c"
  $8 = $3; //@line 97 "libsodium/src/libsodium/sodium/utils.c"
  $9 = ($7>>>0)<($8>>>0); //@line 97 "libsodium/src/libsodium/sodium/utils.c"
  if (!($9)) {
   break;
  }
  $10 = $4; //@line 98 "libsodium/src/libsodium/sodium/utils.c"
  $11 = $5; //@line 98 "libsodium/src/libsodium/sodium/utils.c"
  $12 = (($11) + 1)|0; //@line 98 "libsodium/src/libsodium/sodium/utils.c"
  $5 = $12; //@line 98 "libsodium/src/libsodium/sodium/utils.c"
  $13 = (($10) + ($11)|0); //@line 98 "libsodium/src/libsodium/sodium/utils.c"
  HEAP8[$13>>0] = 0; //@line 98 "libsodium/src/libsodium/sodium/utils.c"
 }
 STACKTOP = sp;return; //@line 101 "libsodium/src/libsodium/sodium/utils.c"
}
function _crypto_core_salsa20($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = $4; //@line 101 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $9 = $5; //@line 101 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $10 = $6; //@line 101 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $11 = $7; //@line 101 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _crypto_core_salsa($8,$9,$10,$11,20); //@line 101 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 STACKTOP = sp;return 0; //@line 102 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
}
function _crypto_core_salsa($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $5 = $0;
 $6 = $1;
 $7 = $2;
 $8 = $3;
 $9 = $4;
 $10 = 1634760805; //@line 21 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $26 = 1634760805; //@line 21 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $15 = 857760878; //@line 22 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $31 = 857760878; //@line 22 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $20 = 2036477234; //@line 23 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $36 = 2036477234; //@line 23 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $25 = 1797285236; //@line 24 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $41 = 1797285236; //@line 24 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $43 = $8; //@line 25 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $44 = ($43|0)!=(0|0); //@line 25 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 if ($44) {
  $45 = $8; //@line 26 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $46 = (_load32_le($45)|0); //@line 26 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $10 = $46; //@line 26 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $26 = $46; //@line 26 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $47 = $8; //@line 27 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $48 = ((($47)) + 4|0); //@line 27 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $49 = (_load32_le($48)|0); //@line 27 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $15 = $49; //@line 27 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $31 = $49; //@line 27 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $50 = $8; //@line 28 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $51 = ((($50)) + 8|0); //@line 28 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $52 = (_load32_le($51)|0); //@line 28 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $20 = $52; //@line 28 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $36 = $52; //@line 28 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $53 = $8; //@line 29 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $54 = ((($53)) + 12|0); //@line 29 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $55 = (_load32_le($54)|0); //@line 29 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $25 = $55; //@line 29 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $41 = $55; //@line 29 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 }
 $56 = $7; //@line 31 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $57 = (_load32_le($56)|0); //@line 31 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $11 = $57; //@line 31 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $27 = $57; //@line 31 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $58 = $7; //@line 32 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $59 = ((($58)) + 4|0); //@line 32 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $60 = (_load32_le($59)|0); //@line 32 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $12 = $60; //@line 32 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $28 = $60; //@line 32 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $61 = $7; //@line 33 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $62 = ((($61)) + 8|0); //@line 33 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $63 = (_load32_le($62)|0); //@line 33 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $13 = $63; //@line 33 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $29 = $63; //@line 33 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $64 = $7; //@line 34 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $65 = ((($64)) + 12|0); //@line 34 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $66 = (_load32_le($65)|0); //@line 34 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $14 = $66; //@line 34 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $30 = $66; //@line 34 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $67 = $7; //@line 35 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $68 = ((($67)) + 16|0); //@line 35 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $69 = (_load32_le($68)|0); //@line 35 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $21 = $69; //@line 35 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $37 = $69; //@line 35 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $70 = $7; //@line 36 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $71 = ((($70)) + 20|0); //@line 36 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $72 = (_load32_le($71)|0); //@line 36 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $22 = $72; //@line 36 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $38 = $72; //@line 36 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $73 = $7; //@line 37 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $74 = ((($73)) + 24|0); //@line 37 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $75 = (_load32_le($74)|0); //@line 37 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $23 = $75; //@line 37 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $39 = $75; //@line 37 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $76 = $7; //@line 38 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $77 = ((($76)) + 28|0); //@line 38 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $78 = (_load32_le($77)|0); //@line 38 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $24 = $78; //@line 38 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $40 = $78; //@line 38 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $79 = $6; //@line 40 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $80 = (_load32_le($79)|0); //@line 40 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $16 = $80; //@line 40 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $32 = $80; //@line 40 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $81 = $6; //@line 41 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $82 = ((($81)) + 4|0); //@line 41 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $83 = (_load32_le($82)|0); //@line 41 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $17 = $83; //@line 41 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $33 = $83; //@line 41 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $84 = $6; //@line 42 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $85 = ((($84)) + 8|0); //@line 42 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $86 = (_load32_le($85)|0); //@line 42 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $18 = $86; //@line 42 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $34 = $86; //@line 42 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $87 = $6; //@line 43 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $88 = ((($87)) + 12|0); //@line 43 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $89 = (_load32_le($88)|0); //@line 43 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $19 = $89; //@line 43 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $35 = $89; //@line 43 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $42 = 0; //@line 45 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 while(1) {
  $90 = $42; //@line 45 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $91 = $9; //@line 45 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $92 = ($90|0)<($91|0); //@line 45 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  if (!($92)) {
   break;
  }
  $93 = $10; //@line 46 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $94 = $22; //@line 46 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $95 = (($93) + ($94))|0; //@line 46 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $96 = (_rotl32($95,7)|0); //@line 46 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $97 = $14; //@line 46 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $98 = $97 ^ $96; //@line 46 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $14 = $98; //@line 46 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $99 = $14; //@line 47 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $100 = $10; //@line 47 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $101 = (($99) + ($100))|0; //@line 47 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $102 = (_rotl32($101,9)|0); //@line 47 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $103 = $18; //@line 47 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $104 = $103 ^ $102; //@line 47 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $18 = $104; //@line 47 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $105 = $18; //@line 48 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $106 = $14; //@line 48 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $107 = (($105) + ($106))|0; //@line 48 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $108 = (_rotl32($107,13)|0); //@line 48 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $109 = $22; //@line 48 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $110 = $109 ^ $108; //@line 48 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $22 = $110; //@line 48 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $111 = $22; //@line 49 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $112 = $18; //@line 49 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $113 = (($111) + ($112))|0; //@line 49 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $114 = (_rotl32($113,18)|0); //@line 49 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $115 = $10; //@line 49 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $116 = $115 ^ $114; //@line 49 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $10 = $116; //@line 49 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $117 = $15; //@line 50 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $118 = $11; //@line 50 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $119 = (($117) + ($118))|0; //@line 50 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $120 = (_rotl32($119,7)|0); //@line 50 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $121 = $19; //@line 50 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $122 = $121 ^ $120; //@line 50 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $19 = $122; //@line 50 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $123 = $19; //@line 51 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $124 = $15; //@line 51 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $125 = (($123) + ($124))|0; //@line 51 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $126 = (_rotl32($125,9)|0); //@line 51 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $127 = $23; //@line 51 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $128 = $127 ^ $126; //@line 51 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $23 = $128; //@line 51 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $129 = $23; //@line 52 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $130 = $19; //@line 52 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $131 = (($129) + ($130))|0; //@line 52 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $132 = (_rotl32($131,13)|0); //@line 52 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $133 = $11; //@line 52 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $134 = $133 ^ $132; //@line 52 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $11 = $134; //@line 52 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $135 = $11; //@line 53 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $136 = $23; //@line 53 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $137 = (($135) + ($136))|0; //@line 53 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $138 = (_rotl32($137,18)|0); //@line 53 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $139 = $15; //@line 53 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $140 = $139 ^ $138; //@line 53 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $15 = $140; //@line 53 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $141 = $20; //@line 54 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $142 = $16; //@line 54 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $143 = (($141) + ($142))|0; //@line 54 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $144 = (_rotl32($143,7)|0); //@line 54 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $145 = $24; //@line 54 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $146 = $145 ^ $144; //@line 54 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $24 = $146; //@line 54 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $147 = $24; //@line 55 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $148 = $20; //@line 55 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $149 = (($147) + ($148))|0; //@line 55 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $150 = (_rotl32($149,9)|0); //@line 55 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $151 = $12; //@line 55 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $152 = $151 ^ $150; //@line 55 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $12 = $152; //@line 55 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $153 = $12; //@line 56 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $154 = $24; //@line 56 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $155 = (($153) + ($154))|0; //@line 56 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $156 = (_rotl32($155,13)|0); //@line 56 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $157 = $16; //@line 56 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $158 = $157 ^ $156; //@line 56 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $16 = $158; //@line 56 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $159 = $16; //@line 57 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $160 = $12; //@line 57 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $161 = (($159) + ($160))|0; //@line 57 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $162 = (_rotl32($161,18)|0); //@line 57 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $163 = $20; //@line 57 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $164 = $163 ^ $162; //@line 57 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $20 = $164; //@line 57 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $165 = $25; //@line 58 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $166 = $21; //@line 58 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $167 = (($165) + ($166))|0; //@line 58 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $168 = (_rotl32($167,7)|0); //@line 58 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $169 = $13; //@line 58 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $170 = $169 ^ $168; //@line 58 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $13 = $170; //@line 58 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $171 = $13; //@line 59 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $172 = $25; //@line 59 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $173 = (($171) + ($172))|0; //@line 59 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $174 = (_rotl32($173,9)|0); //@line 59 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $175 = $17; //@line 59 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $176 = $175 ^ $174; //@line 59 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $17 = $176; //@line 59 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $177 = $17; //@line 60 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $178 = $13; //@line 60 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $179 = (($177) + ($178))|0; //@line 60 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $180 = (_rotl32($179,13)|0); //@line 60 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $181 = $21; //@line 60 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $182 = $181 ^ $180; //@line 60 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $21 = $182; //@line 60 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $183 = $21; //@line 61 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $184 = $17; //@line 61 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $185 = (($183) + ($184))|0; //@line 61 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $186 = (_rotl32($185,18)|0); //@line 61 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $187 = $25; //@line 61 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $188 = $187 ^ $186; //@line 61 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $25 = $188; //@line 61 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $189 = $10; //@line 62 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $190 = $13; //@line 62 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $191 = (($189) + ($190))|0; //@line 62 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $192 = (_rotl32($191,7)|0); //@line 62 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $193 = $11; //@line 62 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $194 = $193 ^ $192; //@line 62 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $11 = $194; //@line 62 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $195 = $11; //@line 63 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $196 = $10; //@line 63 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $197 = (($195) + ($196))|0; //@line 63 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $198 = (_rotl32($197,9)|0); //@line 63 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $199 = $12; //@line 63 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $200 = $199 ^ $198; //@line 63 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $12 = $200; //@line 63 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $201 = $12; //@line 64 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $202 = $11; //@line 64 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $203 = (($201) + ($202))|0; //@line 64 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $204 = (_rotl32($203,13)|0); //@line 64 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $205 = $13; //@line 64 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $206 = $205 ^ $204; //@line 64 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $13 = $206; //@line 64 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $207 = $13; //@line 65 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $208 = $12; //@line 65 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $209 = (($207) + ($208))|0; //@line 65 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $210 = (_rotl32($209,18)|0); //@line 65 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $211 = $10; //@line 65 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $212 = $211 ^ $210; //@line 65 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $10 = $212; //@line 65 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $213 = $15; //@line 66 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $214 = $14; //@line 66 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $215 = (($213) + ($214))|0; //@line 66 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $216 = (_rotl32($215,7)|0); //@line 66 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $217 = $16; //@line 66 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $218 = $217 ^ $216; //@line 66 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $16 = $218; //@line 66 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $219 = $16; //@line 67 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $220 = $15; //@line 67 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $221 = (($219) + ($220))|0; //@line 67 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $222 = (_rotl32($221,9)|0); //@line 67 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $223 = $17; //@line 67 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $224 = $223 ^ $222; //@line 67 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $17 = $224; //@line 67 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $225 = $17; //@line 68 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $226 = $16; //@line 68 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $227 = (($225) + ($226))|0; //@line 68 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $228 = (_rotl32($227,13)|0); //@line 68 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $229 = $14; //@line 68 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $230 = $229 ^ $228; //@line 68 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $14 = $230; //@line 68 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $231 = $14; //@line 69 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $232 = $17; //@line 69 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $233 = (($231) + ($232))|0; //@line 69 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $234 = (_rotl32($233,18)|0); //@line 69 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $235 = $15; //@line 69 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $236 = $235 ^ $234; //@line 69 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $15 = $236; //@line 69 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $237 = $20; //@line 70 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $238 = $19; //@line 70 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $239 = (($237) + ($238))|0; //@line 70 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $240 = (_rotl32($239,7)|0); //@line 70 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $241 = $21; //@line 70 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $242 = $241 ^ $240; //@line 70 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $21 = $242; //@line 70 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $243 = $21; //@line 71 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $244 = $20; //@line 71 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $245 = (($243) + ($244))|0; //@line 71 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $246 = (_rotl32($245,9)|0); //@line 71 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $247 = $18; //@line 71 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $248 = $247 ^ $246; //@line 71 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $18 = $248; //@line 71 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $249 = $18; //@line 72 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $250 = $21; //@line 72 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $251 = (($249) + ($250))|0; //@line 72 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $252 = (_rotl32($251,13)|0); //@line 72 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $253 = $19; //@line 72 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $254 = $253 ^ $252; //@line 72 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $19 = $254; //@line 72 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $255 = $19; //@line 73 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $256 = $18; //@line 73 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $257 = (($255) + ($256))|0; //@line 73 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $258 = (_rotl32($257,18)|0); //@line 73 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $259 = $20; //@line 73 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $260 = $259 ^ $258; //@line 73 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $20 = $260; //@line 73 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $261 = $25; //@line 74 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $262 = $24; //@line 74 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $263 = (($261) + ($262))|0; //@line 74 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $264 = (_rotl32($263,7)|0); //@line 74 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $265 = $22; //@line 74 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $266 = $265 ^ $264; //@line 74 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $22 = $266; //@line 74 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $267 = $22; //@line 75 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $268 = $25; //@line 75 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $269 = (($267) + ($268))|0; //@line 75 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $270 = (_rotl32($269,9)|0); //@line 75 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $271 = $23; //@line 75 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $272 = $271 ^ $270; //@line 75 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $23 = $272; //@line 75 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $273 = $23; //@line 76 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $274 = $22; //@line 76 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $275 = (($273) + ($274))|0; //@line 76 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $276 = (_rotl32($275,13)|0); //@line 76 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $277 = $24; //@line 76 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $278 = $277 ^ $276; //@line 76 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $24 = $278; //@line 76 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $279 = $24; //@line 77 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $280 = $23; //@line 77 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $281 = (($279) + ($280))|0; //@line 77 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $282 = (_rotl32($281,18)|0); //@line 77 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $283 = $25; //@line 77 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $284 = $283 ^ $282; //@line 77 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $25 = $284; //@line 77 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $285 = $42; //@line 45 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $286 = (($285) + 2)|0; //@line 45 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
  $42 = $286; //@line 45 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 }
 $287 = $5; //@line 79 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $288 = $10; //@line 79 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $289 = $26; //@line 79 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $290 = (($288) + ($289))|0; //@line 79 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($287,$290); //@line 79 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $291 = $5; //@line 80 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $292 = ((($291)) + 4|0); //@line 80 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $293 = $11; //@line 80 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $294 = $27; //@line 80 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $295 = (($293) + ($294))|0; //@line 80 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($292,$295); //@line 80 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $296 = $5; //@line 81 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $297 = ((($296)) + 8|0); //@line 81 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $298 = $12; //@line 81 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $299 = $28; //@line 81 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $300 = (($298) + ($299))|0; //@line 81 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($297,$300); //@line 81 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $301 = $5; //@line 82 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $302 = ((($301)) + 12|0); //@line 82 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $303 = $13; //@line 82 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $304 = $29; //@line 82 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $305 = (($303) + ($304))|0; //@line 82 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($302,$305); //@line 82 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $306 = $5; //@line 83 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $307 = ((($306)) + 16|0); //@line 83 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $308 = $14; //@line 83 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $309 = $30; //@line 83 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $310 = (($308) + ($309))|0; //@line 83 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($307,$310); //@line 83 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $311 = $5; //@line 84 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $312 = ((($311)) + 20|0); //@line 84 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $313 = $15; //@line 84 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $314 = $31; //@line 84 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $315 = (($313) + ($314))|0; //@line 84 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($312,$315); //@line 84 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $316 = $5; //@line 85 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $317 = ((($316)) + 24|0); //@line 85 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $318 = $16; //@line 85 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $319 = $32; //@line 85 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $320 = (($318) + ($319))|0; //@line 85 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($317,$320); //@line 85 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $321 = $5; //@line 86 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $322 = ((($321)) + 28|0); //@line 86 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $323 = $17; //@line 86 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $324 = $33; //@line 86 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $325 = (($323) + ($324))|0; //@line 86 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($322,$325); //@line 86 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $326 = $5; //@line 87 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $327 = ((($326)) + 32|0); //@line 87 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $328 = $18; //@line 87 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $329 = $34; //@line 87 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $330 = (($328) + ($329))|0; //@line 87 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($327,$330); //@line 87 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $331 = $5; //@line 88 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $332 = ((($331)) + 36|0); //@line 88 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $333 = $19; //@line 88 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $334 = $35; //@line 88 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $335 = (($333) + ($334))|0; //@line 88 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($332,$335); //@line 88 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $336 = $5; //@line 89 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $337 = ((($336)) + 40|0); //@line 89 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $338 = $20; //@line 89 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $339 = $36; //@line 89 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $340 = (($338) + ($339))|0; //@line 89 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($337,$340); //@line 89 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $341 = $5; //@line 90 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $342 = ((($341)) + 44|0); //@line 90 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $343 = $21; //@line 90 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $344 = $37; //@line 90 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $345 = (($343) + ($344))|0; //@line 90 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($342,$345); //@line 90 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $346 = $5; //@line 91 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $347 = ((($346)) + 48|0); //@line 91 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $348 = $22; //@line 91 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $349 = $38; //@line 91 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $350 = (($348) + ($349))|0; //@line 91 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($347,$350); //@line 91 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $351 = $5; //@line 92 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $352 = ((($351)) + 52|0); //@line 92 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $353 = $23; //@line 92 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $354 = $39; //@line 92 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $355 = (($353) + ($354))|0; //@line 92 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($352,$355); //@line 92 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $356 = $5; //@line 93 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $357 = ((($356)) + 56|0); //@line 93 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $358 = $24; //@line 93 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $359 = $40; //@line 93 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $360 = (($358) + ($359))|0; //@line 93 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($357,$360); //@line 93 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $361 = $5; //@line 94 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $362 = ((($361)) + 60|0); //@line 94 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $363 = $25; //@line 94 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $364 = $41; //@line 94 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 $365 = (($363) + ($364))|0; //@line 94 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 _store32_le($362,$365); //@line 94 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
 STACKTOP = sp;return; //@line 95 "libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c"
}
function _load32_le($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 86 "libsodium/src/libsodium/include/sodium/private/common.h"
 $4 = HEAP8[$3>>0]|0; //@line 86 "libsodium/src/libsodium/include/sodium/private/common.h"
 $5 = $4&255; //@line 86 "libsodium/src/libsodium/include/sodium/private/common.h"
 $2 = $5; //@line 86 "libsodium/src/libsodium/include/sodium/private/common.h"
 $6 = $1; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $7 = ((($6)) + 1|0); //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $8 = HEAP8[$7>>0]|0; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $9 = $8&255; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $10 = $9 << 8; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $11 = $2; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $12 = $11 | $10; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $2 = $12; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $13 = $1; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $14 = ((($13)) + 2|0); //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $15 = HEAP8[$14>>0]|0; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $16 = $15&255; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $17 = $16 << 16; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $18 = $2; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $19 = $18 | $17; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $2 = $19; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $20 = $1; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $21 = ((($20)) + 3|0); //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $22 = HEAP8[$21>>0]|0; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $23 = $22&255; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $24 = $23 << 24; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $25 = $2; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $26 = $25 | $24; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $2 = $26; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $27 = $2; //@line 90 "libsodium/src/libsodium/include/sodium/private/common.h"
 STACKTOP = sp;return ($27|0); //@line 90 "libsodium/src/libsodium/include/sodium/private/common.h"
}
function _rotl32($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 14 "libsodium/src/libsodium/include/sodium/private/common.h"
 $5 = $3; //@line 14 "libsodium/src/libsodium/include/sodium/private/common.h"
 $6 = $4 << $5; //@line 14 "libsodium/src/libsodium/include/sodium/private/common.h"
 $7 = $2; //@line 14 "libsodium/src/libsodium/include/sodium/private/common.h"
 $8 = $3; //@line 14 "libsodium/src/libsodium/include/sodium/private/common.h"
 $9 = (32 - ($8))|0; //@line 14 "libsodium/src/libsodium/include/sodium/private/common.h"
 $10 = $7 >>> $9; //@line 14 "libsodium/src/libsodium/include/sodium/private/common.h"
 $11 = $6 | $10; //@line 14 "libsodium/src/libsodium/include/sodium/private/common.h"
 STACKTOP = sp;return ($11|0); //@line 14 "libsodium/src/libsodium/include/sodium/private/common.h"
}
function _store32_le($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $5 = $4&255; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $6 = $2; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 HEAP8[$6>>0] = $5; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $7 = $3; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $8 = $7 >>> 8; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $3 = $8; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $9 = $3; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $10 = $9&255; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $11 = $2; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $12 = ((($11)) + 1|0); //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 HEAP8[$12>>0] = $10; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $13 = $3; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $14 = $13 >>> 8; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $3 = $14; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $15 = $3; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $16 = $15&255; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $17 = $2; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $18 = ((($17)) + 2|0); //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 HEAP8[$18>>0] = $16; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $19 = $3; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $20 = $19 >>> 8; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $3 = $20; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $21 = $3; //@line 104 "libsodium/src/libsodium/include/sodium/private/common.h"
 $22 = $21&255; //@line 104 "libsodium/src/libsodium/include/sodium/private/common.h"
 $23 = $2; //@line 104 "libsodium/src/libsodium/include/sodium/private/common.h"
 $24 = ((($23)) + 3|0); //@line 104 "libsodium/src/libsodium/include/sodium/private/common.h"
 HEAP8[$24>>0] = $22; //@line 104 "libsodium/src/libsodium/include/sodium/private/common.h"
 STACKTOP = sp;return; //@line 106 "libsodium/src/libsodium/include/sodium/private/common.h"
}
function _crypto_onetimeauth_poly1305_donna($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 var sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $7 = sp_a + 88|0;
 $9 = sp_a;
 $5 = $0;
 $6 = $1;
 $10 = $7;
 $11 = $10;
 HEAP32[$11>>2] = $2;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $3;
 $8 = $4;
 $14 = $8; //@line 65 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 _poly1305_init($9,$14); //@line 65 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $15 = $6; //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $16 = $7; //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $17 = $16; //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $18 = HEAP32[$17>>2]|0; //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $19 = (($16) + 4)|0; //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $20 = $19; //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $21 = HEAP32[$20>>2]|0; //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 _poly1305_update($9,$15,$18,$21); //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $22 = $5; //@line 67 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 _poly1305_finish($9,$22); //@line 67 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 STACKTOP = sp;return 0; //@line 69 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
}
function _crypto_onetimeauth_poly1305_donna_verify($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $7 = sp_a;
 $9 = sp_a + 24|0;
 $5 = $0;
 $6 = $1;
 $10 = $7;
 $11 = $10;
 HEAP32[$11>>2] = $2;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $3;
 $8 = $4;
 $14 = $6; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $15 = $7; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $16 = $15; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $17 = HEAP32[$16>>2]|0; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $18 = (($15) + 4)|0; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $19 = $18; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $20 = HEAP32[$19>>2]|0; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $21 = $8; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 (_crypto_onetimeauth_poly1305_donna($9,$14,$17,$20,$21)|0); //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $22 = $5; //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $23 = (_crypto_verify_16($22,$9)|0); //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 STACKTOP = sp;return ($23|0); //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
}
function _crypto_onetimeauth_poly1305_donna_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 78 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $5 = $3; //@line 78 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 _poly1305_init($4,$5); //@line 78 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 STACKTOP = sp;return 0; //@line 80 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
}
function _crypto_onetimeauth_poly1305_donna_update($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $6 = sp_a;
 $4 = $0;
 $5 = $1;
 $7 = $6;
 $8 = $7;
 HEAP32[$8>>2] = $2;
 $9 = (($7) + 4)|0;
 $10 = $9;
 HEAP32[$10>>2] = $3;
 $11 = $4; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $12 = $5; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $13 = $6; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $14 = $13; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $15 = HEAP32[$14>>2]|0; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $16 = (($13) + 4)|0; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $17 = $16; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $18 = HEAP32[$17>>2]|0; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 _poly1305_update($11,$12,$15,$18); //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 STACKTOP = sp;return 0; //@line 90 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
}
function _crypto_onetimeauth_poly1305_donna_final($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 97 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $5 = $3; //@line 97 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 _poly1305_finish($4,$5); //@line 97 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 STACKTOP = sp;return 0; //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
}
function _poly1305_finish($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $15 = sp_a + 8|0;
 $17 = sp_a;
 $2 = $0;
 $3 = $1;
 $18 = $2; //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $19 = ((($18)) + 56|0); //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $20 = $19; //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $21 = $20; //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $22 = HEAP32[$21>>2]|0; //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $23 = (($20) + 4)|0; //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $24 = $23; //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $25 = HEAP32[$24>>2]|0; //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $26 = ($22|0)!=(0); //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $27 = ($25|0)!=(0); //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $28 = $26 | $27; //@line 148 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 if ($28) {
  $29 = $2; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $30 = ((($29)) + 56|0); //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $31 = $30; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $32 = $31; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $33 = HEAP32[$32>>2]|0; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $34 = (($31) + 4)|0; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $35 = $34; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $36 = HEAP32[$35>>2]|0; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $37 = $17; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $38 = $37; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$38>>2] = $33; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $39 = (($37) + 4)|0; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $40 = $39; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$40>>2] = $36; //@line 149 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $41 = $2; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $42 = ((($41)) + 64|0); //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $43 = $17; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $44 = $43; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $45 = HEAP32[$44>>2]|0; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $46 = (($43) + 4)|0; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $47 = $46; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $48 = HEAP32[$47>>2]|0; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $49 = (_i64Add(($45|0),($48|0),1,0)|0); //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $50 = tempRet0; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $51 = $17; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $52 = $51; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$52>>2] = $49; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $53 = (($51) + 4)|0; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $54 = $53; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$54>>2] = $50; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $55 = (($42) + ($45)|0); //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP8[$55>>0] = 1; //@line 151 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  while(1) {
   $56 = $17; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $57 = $56; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $58 = HEAP32[$57>>2]|0; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $59 = (($56) + 4)|0; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $60 = $59; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $61 = HEAP32[$60>>2]|0; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $62 = ($61>>>0)<(0); //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $63 = ($58>>>0)<(16); //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $64 = ($61|0)==(0); //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $65 = $64 & $63; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $66 = $62 | $65; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $67 = $2;
   if (!($66)) {
    break;
   }
   $68 = ((($67)) + 64|0); //@line 153 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $69 = $17; //@line 153 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $70 = $69; //@line 153 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $71 = HEAP32[$70>>2]|0; //@line 153 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $72 = (($69) + 4)|0; //@line 153 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $73 = $72; //@line 153 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $74 = HEAP32[$73>>2]|0; //@line 153 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $75 = (($68) + ($71)|0); //@line 153 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   HEAP8[$75>>0] = 0; //@line 153 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $76 = $17; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $77 = $76; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $78 = HEAP32[$77>>2]|0; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $79 = (($76) + 4)|0; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $80 = $79; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $81 = HEAP32[$80>>2]|0; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $82 = (_i64Add(($78|0),($81|0),1,0)|0); //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $83 = tempRet0; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $84 = $17; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $85 = $84; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   HEAP32[$85>>2] = $82; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $86 = (($84) + 4)|0; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   $87 = $86; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
   HEAP32[$87>>2] = $83; //@line 152 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  }
  $88 = ((($67)) + 80|0); //@line 155 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP8[$88>>0] = 1; //@line 155 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $89 = $2; //@line 156 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $90 = $2; //@line 156 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $91 = ((($90)) + 64|0); //@line 156 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  _poly1305_blocks($89,$91,16,0); //@line 156 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 }
 $92 = $2; //@line 160 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $93 = ((($92)) + 20|0); //@line 160 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $94 = HEAP32[$93>>2]|0; //@line 160 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $4 = $94; //@line 160 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $95 = $2; //@line 161 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $96 = ((($95)) + 20|0); //@line 161 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $97 = ((($96)) + 4|0); //@line 161 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $98 = HEAP32[$97>>2]|0; //@line 161 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $5 = $98; //@line 161 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $99 = $2; //@line 162 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $100 = ((($99)) + 20|0); //@line 162 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $101 = ((($100)) + 8|0); //@line 162 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $102 = HEAP32[$101>>2]|0; //@line 162 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $6 = $102; //@line 162 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $103 = $2; //@line 163 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $104 = ((($103)) + 20|0); //@line 163 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $105 = ((($104)) + 12|0); //@line 163 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $106 = HEAP32[$105>>2]|0; //@line 163 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $7 = $106; //@line 163 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $107 = $2; //@line 164 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $108 = ((($107)) + 20|0); //@line 164 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $109 = ((($108)) + 16|0); //@line 164 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $110 = HEAP32[$109>>2]|0; //@line 164 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $8 = $110; //@line 164 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $111 = $5; //@line 166 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $112 = $111 >>> 26; //@line 166 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = $112; //@line 166 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $113 = $5; //@line 167 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $114 = $113 & 67108863; //@line 167 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $5 = $114; //@line 167 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $115 = $9; //@line 168 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $116 = $6; //@line 168 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $117 = (($116) + ($115))|0; //@line 168 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $6 = $117; //@line 168 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $118 = $6; //@line 169 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $119 = $118 >>> 26; //@line 169 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = $119; //@line 169 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $120 = $6; //@line 170 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $121 = $120 & 67108863; //@line 170 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $6 = $121; //@line 170 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $122 = $9; //@line 171 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $123 = $7; //@line 171 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $124 = (($123) + ($122))|0; //@line 171 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $7 = $124; //@line 171 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $125 = $7; //@line 172 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $126 = $125 >>> 26; //@line 172 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = $126; //@line 172 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $127 = $7; //@line 173 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $128 = $127 & 67108863; //@line 173 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $7 = $128; //@line 173 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $129 = $9; //@line 174 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $130 = $8; //@line 174 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $131 = (($130) + ($129))|0; //@line 174 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $8 = $131; //@line 174 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $132 = $8; //@line 175 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $133 = $132 >>> 26; //@line 175 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = $133; //@line 175 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $134 = $8; //@line 176 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $135 = $134 & 67108863; //@line 176 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $8 = $135; //@line 176 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $136 = $9; //@line 177 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $137 = ($136*5)|0; //@line 177 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $138 = $4; //@line 177 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $139 = (($138) + ($137))|0; //@line 177 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $4 = $139; //@line 177 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $140 = $4; //@line 178 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $141 = $140 >>> 26; //@line 178 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = $141; //@line 178 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $142 = $4; //@line 179 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $143 = $142 & 67108863; //@line 179 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $4 = $143; //@line 179 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $144 = $9; //@line 180 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $145 = $5; //@line 180 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $146 = (($145) + ($144))|0; //@line 180 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $5 = $146; //@line 180 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $147 = $4; //@line 183 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $148 = (($147) + 5)|0; //@line 183 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $10 = $148; //@line 183 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $149 = $10; //@line 184 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $150 = $149 >>> 26; //@line 184 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = $150; //@line 184 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $151 = $10; //@line 185 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $152 = $151 & 67108863; //@line 185 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $10 = $152; //@line 185 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $153 = $5; //@line 186 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $154 = $9; //@line 186 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $155 = (($153) + ($154))|0; //@line 186 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $11 = $155; //@line 186 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $156 = $11; //@line 187 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $157 = $156 >>> 26; //@line 187 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = $157; //@line 187 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $158 = $11; //@line 188 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $159 = $158 & 67108863; //@line 188 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $11 = $159; //@line 188 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $160 = $6; //@line 189 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $161 = $9; //@line 189 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $162 = (($160) + ($161))|0; //@line 189 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $12 = $162; //@line 189 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $163 = $12; //@line 190 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $164 = $163 >>> 26; //@line 190 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = $164; //@line 190 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $165 = $12; //@line 191 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $166 = $165 & 67108863; //@line 191 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $12 = $166; //@line 191 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $167 = $7; //@line 192 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $168 = $9; //@line 192 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $169 = (($167) + ($168))|0; //@line 192 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $13 = $169; //@line 192 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $170 = $13; //@line 193 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $171 = $170 >>> 26; //@line 193 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = $171; //@line 193 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $172 = $13; //@line 194 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $173 = $172 & 67108863; //@line 194 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $13 = $173; //@line 194 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $174 = $8; //@line 195 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $175 = $9; //@line 195 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $176 = (($174) + ($175))|0; //@line 195 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $177 = (($176) - 67108864)|0; //@line 195 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $14 = $177; //@line 195 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $178 = $14; //@line 198 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $179 = $178 >>> 31; //@line 198 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $180 = (($179) - 1)|0; //@line 198 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $16 = $180; //@line 198 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $181 = $16; //@line 199 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $182 = $10; //@line 199 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $183 = $182 & $181; //@line 199 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $10 = $183; //@line 199 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $184 = $16; //@line 200 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $185 = $11; //@line 200 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $186 = $185 & $184; //@line 200 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $11 = $186; //@line 200 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $187 = $16; //@line 201 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $188 = $12; //@line 201 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $189 = $188 & $187; //@line 201 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $12 = $189; //@line 201 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $190 = $16; //@line 202 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $191 = $13; //@line 202 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $192 = $191 & $190; //@line 202 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $13 = $192; //@line 202 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $193 = $16; //@line 203 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $194 = $14; //@line 203 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $195 = $194 & $193; //@line 203 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $14 = $195; //@line 203 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $196 = $16; //@line 204 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $197 = $196 ^ -1; //@line 204 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $16 = $197; //@line 204 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $198 = $4; //@line 206 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $199 = $16; //@line 206 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $200 = $198 & $199; //@line 206 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $201 = $10; //@line 206 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $202 = $200 | $201; //@line 206 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $4 = $202; //@line 206 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $203 = $5; //@line 207 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $204 = $16; //@line 207 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $205 = $203 & $204; //@line 207 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $206 = $11; //@line 207 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $207 = $205 | $206; //@line 207 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $5 = $207; //@line 207 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $208 = $6; //@line 208 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $209 = $16; //@line 208 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $210 = $208 & $209; //@line 208 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $211 = $12; //@line 208 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $212 = $210 | $211; //@line 208 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $6 = $212; //@line 208 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $213 = $7; //@line 209 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $214 = $16; //@line 209 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $215 = $213 & $214; //@line 209 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $216 = $13; //@line 209 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $217 = $215 | $216; //@line 209 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $7 = $217; //@line 209 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $218 = $8; //@line 210 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $219 = $16; //@line 210 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $220 = $218 & $219; //@line 210 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $221 = $14; //@line 210 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $222 = $220 | $221; //@line 210 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $8 = $222; //@line 210 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $223 = $4; //@line 213 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $224 = $5; //@line 213 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $225 = $224 << 26; //@line 213 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $226 = $223 | $225; //@line 213 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $4 = $226; //@line 213 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $227 = $5; //@line 214 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $228 = $227 >>> 6; //@line 214 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $229 = $6; //@line 214 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $230 = $229 << 20; //@line 214 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $231 = $228 | $230; //@line 214 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $5 = $231; //@line 214 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $232 = $6; //@line 215 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $233 = $232 >>> 12; //@line 215 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $234 = $7; //@line 215 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $235 = $234 << 14; //@line 215 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $236 = $233 | $235; //@line 215 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $6 = $236; //@line 215 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $237 = $7; //@line 216 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $238 = $237 >>> 18; //@line 216 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $239 = $8; //@line 216 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $240 = $239 << 8; //@line 216 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $241 = $238 | $240; //@line 216 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $7 = $241; //@line 216 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $242 = $4; //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $243 = $2; //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $244 = ((($243)) + 40|0); //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $245 = HEAP32[$244>>2]|0; //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $246 = (_i64Add(($242|0),0,($245|0),0)|0); //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $247 = tempRet0; //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $248 = $15; //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $249 = $248; //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$249>>2] = $246; //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $250 = (($248) + 4)|0; //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $251 = $250; //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$251>>2] = $247; //@line 219 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $252 = $15; //@line 220 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $253 = $252; //@line 220 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $254 = HEAP32[$253>>2]|0; //@line 220 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $255 = (($252) + 4)|0; //@line 220 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $256 = $255; //@line 220 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $257 = HEAP32[$256>>2]|0; //@line 220 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $4 = $254; //@line 220 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $258 = $5; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $259 = $2; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $260 = ((($259)) + 40|0); //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $261 = ((($260)) + 4|0); //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $262 = HEAP32[$261>>2]|0; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $263 = (_i64Add(($258|0),0,($262|0),0)|0); //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $264 = tempRet0; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $265 = $15; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $266 = $265; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $267 = HEAP32[$266>>2]|0; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $268 = (($265) + 4)|0; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $269 = $268; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $270 = HEAP32[$269>>2]|0; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $271 = (_i64Add(($263|0),($264|0),($270|0),0)|0); //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $272 = tempRet0; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $273 = $15; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $274 = $273; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$274>>2] = $271; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $275 = (($273) + 4)|0; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $276 = $275; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$276>>2] = $272; //@line 221 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $277 = $15; //@line 222 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $278 = $277; //@line 222 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $279 = HEAP32[$278>>2]|0; //@line 222 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $280 = (($277) + 4)|0; //@line 222 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $281 = $280; //@line 222 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $282 = HEAP32[$281>>2]|0; //@line 222 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $5 = $279; //@line 222 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $283 = $6; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $284 = $2; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $285 = ((($284)) + 40|0); //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $286 = ((($285)) + 8|0); //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $287 = HEAP32[$286>>2]|0; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $288 = (_i64Add(($283|0),0,($287|0),0)|0); //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $289 = tempRet0; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $290 = $15; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $291 = $290; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $292 = HEAP32[$291>>2]|0; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $293 = (($290) + 4)|0; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $294 = $293; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $295 = HEAP32[$294>>2]|0; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $296 = (_i64Add(($288|0),($289|0),($295|0),0)|0); //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $297 = tempRet0; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $298 = $15; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $299 = $298; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$299>>2] = $296; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $300 = (($298) + 4)|0; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $301 = $300; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$301>>2] = $297; //@line 223 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $302 = $15; //@line 224 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $303 = $302; //@line 224 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $304 = HEAP32[$303>>2]|0; //@line 224 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $305 = (($302) + 4)|0; //@line 224 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $306 = $305; //@line 224 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $307 = HEAP32[$306>>2]|0; //@line 224 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $6 = $304; //@line 224 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $308 = $7; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $309 = $2; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $310 = ((($309)) + 40|0); //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $311 = ((($310)) + 12|0); //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $312 = HEAP32[$311>>2]|0; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $313 = (_i64Add(($308|0),0,($312|0),0)|0); //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $314 = tempRet0; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $315 = $15; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $316 = $315; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $317 = HEAP32[$316>>2]|0; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $318 = (($315) + 4)|0; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $319 = $318; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $320 = HEAP32[$319>>2]|0; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $321 = (_i64Add(($313|0),($314|0),($320|0),0)|0); //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $322 = tempRet0; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $323 = $15; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $324 = $323; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$324>>2] = $321; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $325 = (($323) + 4)|0; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $326 = $325; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$326>>2] = $322; //@line 225 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $327 = $15; //@line 226 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $328 = $327; //@line 226 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $329 = HEAP32[$328>>2]|0; //@line 226 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $330 = (($327) + 4)|0; //@line 226 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $331 = $330; //@line 226 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $332 = HEAP32[$331>>2]|0; //@line 226 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $7 = $329; //@line 226 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $333 = $3; //@line 228 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $334 = $4; //@line 228 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 _store32_le_1($333,$334); //@line 228 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $335 = $3; //@line 229 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $336 = ((($335)) + 4|0); //@line 229 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $337 = $5; //@line 229 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 _store32_le_1($336,$337); //@line 229 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $338 = $3; //@line 230 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $339 = ((($338)) + 8|0); //@line 230 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $340 = $6; //@line 230 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 _store32_le_1($339,$340); //@line 230 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $341 = $3; //@line 231 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $342 = ((($341)) + 12|0); //@line 231 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $343 = $7; //@line 231 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 _store32_le_1($342,$343); //@line 231 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $344 = $2; //@line 234 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 _sodium_memzero($344,88); //@line 234 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 STACKTOP = sp;return; //@line 235 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
}
function _poly1305_blocks($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0;
 var $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0;
 var $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0;
 var $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0;
 var $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0;
 var $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0;
 var $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 128|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(128|0);
 $6 = sp_a + 40|0;
 $22 = sp_a + 32|0;
 $23 = sp_a + 24|0;
 $24 = sp_a + 16|0;
 $25 = sp_a + 8|0;
 $26 = sp_a;
 $4 = $0;
 $5 = $1;
 $28 = $6;
 $29 = $28;
 HEAP32[$29>>2] = $2;
 $30 = (($28) + 4)|0;
 $31 = $30;
 HEAP32[$31>>2] = $3;
 $32 = $4; //@line 59 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $33 = ((($32)) + 80|0); //@line 59 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $34 = HEAP8[$33>>0]|0; //@line 59 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $35 = $34&255; //@line 59 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $36 = ($35|0)!=(0); //@line 59 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $37 = $36 ? 0 : 16777216; //@line 59 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $7 = $37; //@line 59 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $38 = $4; //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $39 = HEAP32[$38>>2]|0; //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $8 = $39; //@line 66 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $40 = $4; //@line 67 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $41 = ((($40)) + 4|0); //@line 67 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $42 = HEAP32[$41>>2]|0; //@line 67 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = $42; //@line 67 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $43 = $4; //@line 68 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $44 = ((($43)) + 8|0); //@line 68 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $45 = HEAP32[$44>>2]|0; //@line 68 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $10 = $45; //@line 68 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $46 = $4; //@line 69 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $47 = ((($46)) + 12|0); //@line 69 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $48 = HEAP32[$47>>2]|0; //@line 69 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $11 = $48; //@line 69 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $49 = $4; //@line 70 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $50 = ((($49)) + 16|0); //@line 70 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $51 = HEAP32[$50>>2]|0; //@line 70 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $12 = $51; //@line 70 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $52 = $9; //@line 72 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $53 = ($52*5)|0; //@line 72 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $13 = $53; //@line 72 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $54 = $10; //@line 73 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $55 = ($54*5)|0; //@line 73 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $14 = $55; //@line 73 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $56 = $11; //@line 74 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $57 = ($56*5)|0; //@line 74 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $15 = $57; //@line 74 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $58 = $12; //@line 75 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $59 = ($58*5)|0; //@line 75 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $16 = $59; //@line 75 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $60 = $4; //@line 77 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $61 = ((($60)) + 20|0); //@line 77 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $62 = HEAP32[$61>>2]|0; //@line 77 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $17 = $62; //@line 77 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $63 = $4; //@line 78 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $64 = ((($63)) + 20|0); //@line 78 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $65 = ((($64)) + 4|0); //@line 78 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $66 = HEAP32[$65>>2]|0; //@line 78 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $18 = $66; //@line 78 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $67 = $4; //@line 79 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $68 = ((($67)) + 20|0); //@line 79 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $69 = ((($68)) + 8|0); //@line 79 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $70 = HEAP32[$69>>2]|0; //@line 79 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $19 = $70; //@line 79 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $71 = $4; //@line 80 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $72 = ((($71)) + 20|0); //@line 80 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $73 = ((($72)) + 12|0); //@line 80 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $74 = HEAP32[$73>>2]|0; //@line 80 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $20 = $74; //@line 80 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $75 = $4; //@line 81 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $76 = ((($75)) + 20|0); //@line 81 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $77 = ((($76)) + 16|0); //@line 81 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $78 = HEAP32[$77>>2]|0; //@line 81 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $21 = $78; //@line 81 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 while(1) {
  $79 = $6; //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $80 = $79; //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $81 = HEAP32[$80>>2]|0; //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $82 = (($79) + 4)|0; //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $83 = $82; //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $84 = HEAP32[$83>>2]|0; //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $85 = ($84>>>0)>(0); //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $86 = ($81>>>0)>=(16); //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $87 = ($84|0)==(0); //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $88 = $87 & $86; //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $89 = $85 | $88; //@line 83 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  if (!($89)) {
   break;
  }
  $90 = $5; //@line 85 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $91 = (_load32_le_2($90)|0); //@line 85 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $92 = $91 & 67108863; //@line 85 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $93 = $17; //@line 85 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $94 = (($93) + ($92))|0; //@line 85 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $17 = $94; //@line 85 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $95 = $5; //@line 86 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $96 = ((($95)) + 3|0); //@line 86 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $97 = (_load32_le_2($96)|0); //@line 86 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $98 = $97 >>> 2; //@line 86 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $99 = $98 & 67108863; //@line 86 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $100 = $18; //@line 86 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $101 = (($100) + ($99))|0; //@line 86 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $18 = $101; //@line 86 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $102 = $5; //@line 87 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $103 = ((($102)) + 6|0); //@line 87 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $104 = (_load32_le_2($103)|0); //@line 87 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $105 = $104 >>> 4; //@line 87 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $106 = $105 & 67108863; //@line 87 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $107 = $19; //@line 87 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $108 = (($107) + ($106))|0; //@line 87 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $19 = $108; //@line 87 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $109 = $5; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $110 = ((($109)) + 9|0); //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $111 = (_load32_le_2($110)|0); //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $112 = $111 >>> 6; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $113 = $112 & 67108863; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $114 = $20; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $115 = (($114) + ($113))|0; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $20 = $115; //@line 88 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $116 = $5; //@line 89 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $117 = ((($116)) + 12|0); //@line 89 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $118 = (_load32_le_2($117)|0); //@line 89 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $119 = $118 >>> 8; //@line 89 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $120 = $7; //@line 89 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $121 = $119 | $120; //@line 89 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $122 = $21; //@line 89 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $123 = (($122) + ($121))|0; //@line 89 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $21 = $123; //@line 89 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $124 = $17; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $125 = $8; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $126 = (___muldi3(($124|0),0,($125|0),0)|0); //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $127 = tempRet0; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $128 = $18; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $129 = $16; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $130 = (___muldi3(($128|0),0,($129|0),0)|0); //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $131 = tempRet0; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $132 = (_i64Add(($126|0),($127|0),($130|0),($131|0))|0); //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $133 = tempRet0; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $134 = $19; //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $135 = $15; //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $136 = (___muldi3(($134|0),0,($135|0),0)|0); //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $137 = tempRet0; //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $138 = (_i64Add(($132|0),($133|0),($136|0),($137|0))|0); //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $139 = tempRet0; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $140 = $20; //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $141 = $14; //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $142 = (___muldi3(($140|0),0,($141|0),0)|0); //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $143 = tempRet0; //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $144 = (_i64Add(($138|0),($139|0),($142|0),($143|0))|0); //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $145 = tempRet0; //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $146 = $21; //@line 94 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $147 = $13; //@line 94 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $148 = (___muldi3(($146|0),0,($147|0),0)|0); //@line 94 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $149 = tempRet0; //@line 94 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $150 = (_i64Add(($144|0),($145|0),($148|0),($149|0))|0); //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $151 = tempRet0; //@line 93 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $152 = $22; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $153 = $152; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$153>>2] = $150; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $154 = (($152) + 4)|0; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $155 = $154; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$155>>2] = $151; //@line 92 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $156 = $17; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $157 = $9; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $158 = (___muldi3(($156|0),0,($157|0),0)|0); //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $159 = tempRet0; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $160 = $18; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $161 = $8; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $162 = (___muldi3(($160|0),0,($161|0),0)|0); //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $163 = tempRet0; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $164 = (_i64Add(($158|0),($159|0),($162|0),($163|0))|0); //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $165 = tempRet0; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $166 = $19; //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $167 = $16; //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $168 = (___muldi3(($166|0),0,($167|0),0)|0); //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $169 = tempRet0; //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $170 = (_i64Add(($164|0),($165|0),($168|0),($169|0))|0); //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $171 = tempRet0; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $172 = $20; //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $173 = $15; //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $174 = (___muldi3(($172|0),0,($173|0),0)|0); //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $175 = tempRet0; //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $176 = (_i64Add(($170|0),($171|0),($174|0),($175|0))|0); //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $177 = tempRet0; //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $178 = $21; //@line 97 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $179 = $14; //@line 97 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $180 = (___muldi3(($178|0),0,($179|0),0)|0); //@line 97 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $181 = tempRet0; //@line 97 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $182 = (_i64Add(($176|0),($177|0),($180|0),($181|0))|0); //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $183 = tempRet0; //@line 96 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $184 = $23; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $185 = $184; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$185>>2] = $182; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $186 = (($184) + 4)|0; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $187 = $186; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$187>>2] = $183; //@line 95 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $188 = $17; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $189 = $10; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $190 = (___muldi3(($188|0),0,($189|0),0)|0); //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $191 = tempRet0; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $192 = $18; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $193 = $9; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $194 = (___muldi3(($192|0),0,($193|0),0)|0); //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $195 = tempRet0; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $196 = (_i64Add(($190|0),($191|0),($194|0),($195|0))|0); //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $197 = tempRet0; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $198 = $19; //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $199 = $8; //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $200 = (___muldi3(($198|0),0,($199|0),0)|0); //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $201 = tempRet0; //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $202 = (_i64Add(($196|0),($197|0),($200|0),($201|0))|0); //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $203 = tempRet0; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $204 = $20; //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $205 = $16; //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $206 = (___muldi3(($204|0),0,($205|0),0)|0); //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $207 = tempRet0; //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $208 = (_i64Add(($202|0),($203|0),($206|0),($207|0))|0); //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $209 = tempRet0; //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $210 = $21; //@line 100 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $211 = $15; //@line 100 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $212 = (___muldi3(($210|0),0,($211|0),0)|0); //@line 100 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $213 = tempRet0; //@line 100 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $214 = (_i64Add(($208|0),($209|0),($212|0),($213|0))|0); //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $215 = tempRet0; //@line 99 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $216 = $24; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $217 = $216; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$217>>2] = $214; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $218 = (($216) + 4)|0; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $219 = $218; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$219>>2] = $215; //@line 98 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $220 = $17; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $221 = $11; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $222 = (___muldi3(($220|0),0,($221|0),0)|0); //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $223 = tempRet0; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $224 = $18; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $225 = $10; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $226 = (___muldi3(($224|0),0,($225|0),0)|0); //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $227 = tempRet0; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $228 = (_i64Add(($222|0),($223|0),($226|0),($227|0))|0); //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $229 = tempRet0; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $230 = $19; //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $231 = $9; //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $232 = (___muldi3(($230|0),0,($231|0),0)|0); //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $233 = tempRet0; //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $234 = (_i64Add(($228|0),($229|0),($232|0),($233|0))|0); //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $235 = tempRet0; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $236 = $20; //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $237 = $8; //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $238 = (___muldi3(($236|0),0,($237|0),0)|0); //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $239 = tempRet0; //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $240 = (_i64Add(($234|0),($235|0),($238|0),($239|0))|0); //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $241 = tempRet0; //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $242 = $21; //@line 103 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $243 = $16; //@line 103 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $244 = (___muldi3(($242|0),0,($243|0),0)|0); //@line 103 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $245 = tempRet0; //@line 103 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $246 = (_i64Add(($240|0),($241|0),($244|0),($245|0))|0); //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $247 = tempRet0; //@line 102 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $248 = $25; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $249 = $248; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$249>>2] = $246; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $250 = (($248) + 4)|0; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $251 = $250; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$251>>2] = $247; //@line 101 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $252 = $17; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $253 = $12; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $254 = (___muldi3(($252|0),0,($253|0),0)|0); //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $255 = tempRet0; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $256 = $18; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $257 = $11; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $258 = (___muldi3(($256|0),0,($257|0),0)|0); //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $259 = tempRet0; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $260 = (_i64Add(($254|0),($255|0),($258|0),($259|0))|0); //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $261 = tempRet0; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $262 = $19; //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $263 = $10; //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $264 = (___muldi3(($262|0),0,($263|0),0)|0); //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $265 = tempRet0; //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $266 = (_i64Add(($260|0),($261|0),($264|0),($265|0))|0); //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $267 = tempRet0; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $268 = $20; //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $269 = $9; //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $270 = (___muldi3(($268|0),0,($269|0),0)|0); //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $271 = tempRet0; //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $272 = (_i64Add(($266|0),($267|0),($270|0),($271|0))|0); //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $273 = tempRet0; //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $274 = $21; //@line 106 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $275 = $8; //@line 106 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $276 = (___muldi3(($274|0),0,($275|0),0)|0); //@line 106 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $277 = tempRet0; //@line 106 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $278 = (_i64Add(($272|0),($273|0),($276|0),($277|0))|0); //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $279 = tempRet0; //@line 105 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $280 = $26; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $281 = $280; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$281>>2] = $278; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $282 = (($280) + 4)|0; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $283 = $282; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$283>>2] = $279; //@line 104 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $284 = $22; //@line 109 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $285 = $284; //@line 109 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $286 = HEAP32[$285>>2]|0; //@line 109 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $287 = (($284) + 4)|0; //@line 109 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $288 = $287; //@line 109 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $289 = HEAP32[$288>>2]|0; //@line 109 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $290 = (_bitshift64Lshr(($286|0),($289|0),26)|0); //@line 109 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $291 = tempRet0; //@line 109 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $27 = $290; //@line 109 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $292 = $22; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $293 = $292; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $294 = HEAP32[$293>>2]|0; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $295 = (($292) + 4)|0; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $296 = $295; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $297 = HEAP32[$296>>2]|0; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $298 = $294 & 67108863; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $17 = $298; //@line 110 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $299 = $27; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $300 = $23; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $301 = $300; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $302 = HEAP32[$301>>2]|0; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $303 = (($300) + 4)|0; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $304 = $303; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $305 = HEAP32[$304>>2]|0; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $306 = (_i64Add(($302|0),($305|0),($299|0),0)|0); //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $307 = tempRet0; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $308 = $23; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $309 = $308; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$309>>2] = $306; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $310 = (($308) + 4)|0; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $311 = $310; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$311>>2] = $307; //@line 111 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $312 = $23; //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $313 = $312; //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $314 = HEAP32[$313>>2]|0; //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $315 = (($312) + 4)|0; //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $316 = $315; //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $317 = HEAP32[$316>>2]|0; //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $318 = (_bitshift64Lshr(($314|0),($317|0),26)|0); //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $319 = tempRet0; //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $27 = $318; //@line 112 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $320 = $23; //@line 113 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $321 = $320; //@line 113 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $322 = HEAP32[$321>>2]|0; //@line 113 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $323 = (($320) + 4)|0; //@line 113 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $324 = $323; //@line 113 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $325 = HEAP32[$324>>2]|0; //@line 113 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $326 = $322 & 67108863; //@line 113 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $18 = $326; //@line 113 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $327 = $27; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $328 = $24; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $329 = $328; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $330 = HEAP32[$329>>2]|0; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $331 = (($328) + 4)|0; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $332 = $331; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $333 = HEAP32[$332>>2]|0; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $334 = (_i64Add(($330|0),($333|0),($327|0),0)|0); //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $335 = tempRet0; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $336 = $24; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $337 = $336; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$337>>2] = $334; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $338 = (($336) + 4)|0; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $339 = $338; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$339>>2] = $335; //@line 114 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $340 = $24; //@line 115 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $341 = $340; //@line 115 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $342 = HEAP32[$341>>2]|0; //@line 115 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $343 = (($340) + 4)|0; //@line 115 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $344 = $343; //@line 115 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $345 = HEAP32[$344>>2]|0; //@line 115 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $346 = (_bitshift64Lshr(($342|0),($345|0),26)|0); //@line 115 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $347 = tempRet0; //@line 115 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $27 = $346; //@line 115 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $348 = $24; //@line 116 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $349 = $348; //@line 116 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $350 = HEAP32[$349>>2]|0; //@line 116 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $351 = (($348) + 4)|0; //@line 116 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $352 = $351; //@line 116 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $353 = HEAP32[$352>>2]|0; //@line 116 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $354 = $350 & 67108863; //@line 116 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $19 = $354; //@line 116 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $355 = $27; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $356 = $25; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $357 = $356; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $358 = HEAP32[$357>>2]|0; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $359 = (($356) + 4)|0; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $360 = $359; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $361 = HEAP32[$360>>2]|0; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $362 = (_i64Add(($358|0),($361|0),($355|0),0)|0); //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $363 = tempRet0; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $364 = $25; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $365 = $364; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$365>>2] = $362; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $366 = (($364) + 4)|0; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $367 = $366; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$367>>2] = $363; //@line 117 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $368 = $25; //@line 118 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $369 = $368; //@line 118 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $370 = HEAP32[$369>>2]|0; //@line 118 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $371 = (($368) + 4)|0; //@line 118 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $372 = $371; //@line 118 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $373 = HEAP32[$372>>2]|0; //@line 118 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $374 = (_bitshift64Lshr(($370|0),($373|0),26)|0); //@line 118 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $375 = tempRet0; //@line 118 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $27 = $374; //@line 118 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $376 = $25; //@line 119 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $377 = $376; //@line 119 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $378 = HEAP32[$377>>2]|0; //@line 119 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $379 = (($376) + 4)|0; //@line 119 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $380 = $379; //@line 119 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $381 = HEAP32[$380>>2]|0; //@line 119 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $382 = $378 & 67108863; //@line 119 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $20 = $382; //@line 119 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $383 = $27; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $384 = $26; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $385 = $384; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $386 = HEAP32[$385>>2]|0; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $387 = (($384) + 4)|0; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $388 = $387; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $389 = HEAP32[$388>>2]|0; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $390 = (_i64Add(($386|0),($389|0),($383|0),0)|0); //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $391 = tempRet0; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $392 = $26; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $393 = $392; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$393>>2] = $390; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $394 = (($392) + 4)|0; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $395 = $394; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$395>>2] = $391; //@line 120 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $396 = $26; //@line 121 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $397 = $396; //@line 121 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $398 = HEAP32[$397>>2]|0; //@line 121 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $399 = (($396) + 4)|0; //@line 121 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $400 = $399; //@line 121 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $401 = HEAP32[$400>>2]|0; //@line 121 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $402 = (_bitshift64Lshr(($398|0),($401|0),26)|0); //@line 121 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $403 = tempRet0; //@line 121 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $27 = $402; //@line 121 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $404 = $26; //@line 122 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $405 = $404; //@line 122 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $406 = HEAP32[$405>>2]|0; //@line 122 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $407 = (($404) + 4)|0; //@line 122 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $408 = $407; //@line 122 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $409 = HEAP32[$408>>2]|0; //@line 122 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $410 = $406 & 67108863; //@line 122 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $21 = $410; //@line 122 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $411 = $27; //@line 123 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $412 = ($411*5)|0; //@line 123 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $413 = $17; //@line 123 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $414 = (($413) + ($412))|0; //@line 123 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $17 = $414; //@line 123 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $415 = $17; //@line 124 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $416 = $415 >>> 26; //@line 124 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $27 = $416; //@line 124 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $417 = $17; //@line 125 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $418 = $417 & 67108863; //@line 125 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $17 = $418; //@line 125 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $419 = $27; //@line 126 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $420 = $18; //@line 126 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $421 = (($420) + ($419))|0; //@line 126 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $18 = $421; //@line 126 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $422 = $5; //@line 128 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $423 = ((($422)) + 16|0); //@line 128 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $5 = $423; //@line 128 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $424 = $6; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $425 = $424; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $426 = HEAP32[$425>>2]|0; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $427 = (($424) + 4)|0; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $428 = $427; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $429 = HEAP32[$428>>2]|0; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $430 = (_i64Subtract(($426|0),($429|0),16,0)|0); //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $431 = tempRet0; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $432 = $6; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $433 = $432; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$433>>2] = $430; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $434 = (($432) + 4)|0; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  $435 = $434; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
  HEAP32[$435>>2] = $431; //@line 129 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 }
 $436 = $17; //@line 132 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $437 = $4; //@line 132 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $438 = ((($437)) + 20|0); //@line 132 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$438>>2] = $436; //@line 132 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $439 = $18; //@line 133 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $440 = $4; //@line 133 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $441 = ((($440)) + 20|0); //@line 133 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $442 = ((($441)) + 4|0); //@line 133 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$442>>2] = $439; //@line 133 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $443 = $19; //@line 134 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $444 = $4; //@line 134 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $445 = ((($444)) + 20|0); //@line 134 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $446 = ((($445)) + 8|0); //@line 134 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$446>>2] = $443; //@line 134 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $447 = $20; //@line 135 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $448 = $4; //@line 135 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $449 = ((($448)) + 20|0); //@line 135 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $450 = ((($449)) + 12|0); //@line 135 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$450>>2] = $447; //@line 135 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $451 = $21; //@line 136 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $452 = $4; //@line 136 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $453 = ((($452)) + 20|0); //@line 136 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $454 = ((($453)) + 16|0); //@line 136 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$454>>2] = $451; //@line 136 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 STACKTOP = sp;return; //@line 137 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
}
function _store32_le_1($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $5 = $4&255; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $6 = $2; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 HEAP8[$6>>0] = $5; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $7 = $3; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $8 = $7 >>> 8; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $3 = $8; //@line 101 "libsodium/src/libsodium/include/sodium/private/common.h"
 $9 = $3; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $10 = $9&255; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $11 = $2; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $12 = ((($11)) + 1|0); //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 HEAP8[$12>>0] = $10; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $13 = $3; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $14 = $13 >>> 8; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $3 = $14; //@line 102 "libsodium/src/libsodium/include/sodium/private/common.h"
 $15 = $3; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $16 = $15&255; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $17 = $2; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $18 = ((($17)) + 2|0); //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 HEAP8[$18>>0] = $16; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $19 = $3; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $20 = $19 >>> 8; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $3 = $20; //@line 103 "libsodium/src/libsodium/include/sodium/private/common.h"
 $21 = $3; //@line 104 "libsodium/src/libsodium/include/sodium/private/common.h"
 $22 = $21&255; //@line 104 "libsodium/src/libsodium/include/sodium/private/common.h"
 $23 = $2; //@line 104 "libsodium/src/libsodium/include/sodium/private/common.h"
 $24 = ((($23)) + 3|0); //@line 104 "libsodium/src/libsodium/include/sodium/private/common.h"
 HEAP8[$24>>0] = $22; //@line 104 "libsodium/src/libsodium/include/sodium/private/common.h"
 STACKTOP = sp;return; //@line 106 "libsodium/src/libsodium/include/sodium/private/common.h"
}
function _load32_le_2($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = $1; //@line 86 "libsodium/src/libsodium/include/sodium/private/common.h"
 $4 = HEAP8[$3>>0]|0; //@line 86 "libsodium/src/libsodium/include/sodium/private/common.h"
 $5 = $4&255; //@line 86 "libsodium/src/libsodium/include/sodium/private/common.h"
 $2 = $5; //@line 86 "libsodium/src/libsodium/include/sodium/private/common.h"
 $6 = $1; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $7 = ((($6)) + 1|0); //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $8 = HEAP8[$7>>0]|0; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $9 = $8&255; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $10 = $9 << 8; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $11 = $2; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $12 = $11 | $10; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $2 = $12; //@line 87 "libsodium/src/libsodium/include/sodium/private/common.h"
 $13 = $1; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $14 = ((($13)) + 2|0); //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $15 = HEAP8[$14>>0]|0; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $16 = $15&255; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $17 = $16 << 16; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $18 = $2; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $19 = $18 | $17; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $2 = $19; //@line 88 "libsodium/src/libsodium/include/sodium/private/common.h"
 $20 = $1; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $21 = ((($20)) + 3|0); //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $22 = HEAP8[$21>>0]|0; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $23 = $22&255; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $24 = $23 << 24; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $25 = $2; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $26 = $25 | $24; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $2 = $26; //@line 89 "libsodium/src/libsodium/include/sodium/private/common.h"
 $27 = $2; //@line 90 "libsodium/src/libsodium/include/sodium/private/common.h"
 STACKTOP = sp;return ($27|0); //@line 90 "libsodium/src/libsodium/include/sodium/private/common.h"
}
function _poly1305_update($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0;
 var $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0;
 var $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0;
 var $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0;
 var $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0;
 var $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $6 = sp_a + 24|0;
 $7 = sp_a + 16|0;
 $8 = sp_a + 8|0;
 $9 = sp_a;
 $4 = $0;
 $5 = $1;
 $10 = $6;
 $11 = $10;
 HEAP32[$11>>2] = $2;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $3;
 $14 = $4; //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $15 = ((($14)) + 56|0); //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $16 = $15; //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $17 = $16; //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $18 = HEAP32[$17>>2]|0; //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $19 = (($16) + 4)|0; //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $20 = $19; //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $21 = HEAP32[$20>>2]|0; //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $22 = ($18|0)!=(0); //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $23 = ($21|0)!=(0); //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $24 = $22 | $23; //@line 21 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 do {
  if ($24) {
   $25 = $4; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $26 = ((($25)) + 56|0); //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $27 = $26; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $28 = $27; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $29 = HEAP32[$28>>2]|0; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $30 = (($27) + 4)|0; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $31 = $30; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $32 = HEAP32[$31>>2]|0; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $33 = (_i64Subtract(16,0,($29|0),($32|0))|0); //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $34 = tempRet0; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $35 = $8; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $36 = $35; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   HEAP32[$36>>2] = $33; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $37 = (($35) + 4)|0; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $38 = $37; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   HEAP32[$38>>2] = $34; //@line 22 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $39 = $8; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $40 = $39; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $41 = HEAP32[$40>>2]|0; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $42 = (($39) + 4)|0; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $43 = $42; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $44 = HEAP32[$43>>2]|0; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $45 = $6; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $46 = $45; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $47 = HEAP32[$46>>2]|0; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $48 = (($45) + 4)|0; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $49 = $48; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $50 = HEAP32[$49>>2]|0; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $51 = ($44>>>0)>($50>>>0); //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $52 = ($41>>>0)>($47>>>0); //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $53 = ($44|0)==($50|0); //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $54 = $53 & $52; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $55 = $51 | $54; //@line 24 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   if ($55) {
    $56 = $6; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $57 = $56; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $58 = HEAP32[$57>>2]|0; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $59 = (($56) + 4)|0; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $60 = $59; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $61 = HEAP32[$60>>2]|0; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $62 = $8; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $63 = $62; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    HEAP32[$63>>2] = $58; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $64 = (($62) + 4)|0; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $65 = $64; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    HEAP32[$65>>2] = $61; //@line 25 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   }
   $66 = $7; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $67 = $66; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   HEAP32[$67>>2] = 0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $68 = (($66) + 4)|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $69 = $68; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   HEAP32[$69>>2] = 0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   while(1) {
    $70 = $7; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $71 = $70; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $72 = HEAP32[$71>>2]|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $73 = (($70) + 4)|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $74 = $73; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $75 = HEAP32[$74>>2]|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $76 = $8; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $77 = $76; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $78 = HEAP32[$77>>2]|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $79 = (($76) + 4)|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $80 = $79; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $81 = HEAP32[$80>>2]|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $82 = ($75>>>0)<($81>>>0); //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $83 = ($72>>>0)<($78>>>0); //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $84 = ($75|0)==($81|0); //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $85 = $84 & $83; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $86 = $82 | $85; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    if (!($86)) {
     break;
    }
    $87 = $5; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $88 = $7; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $89 = $88; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $90 = HEAP32[$89>>2]|0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $91 = (($88) + 4)|0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $92 = $91; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $93 = HEAP32[$92>>2]|0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $94 = (($87) + ($90)|0); //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $95 = HEAP8[$94>>0]|0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $96 = $4; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $97 = ((($96)) + 64|0); //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $98 = $4; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $99 = ((($98)) + 56|0); //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $100 = $99; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $101 = $100; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $102 = HEAP32[$101>>2]|0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $103 = (($100) + 4)|0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $104 = $103; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $105 = HEAP32[$104>>2]|0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $106 = $7; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $107 = $106; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $108 = HEAP32[$107>>2]|0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $109 = (($106) + 4)|0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $110 = $109; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $111 = HEAP32[$110>>2]|0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $112 = (_i64Add(($102|0),($105|0),($108|0),($111|0))|0); //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $113 = tempRet0; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $114 = (($97) + ($112)|0); //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    HEAP8[$114>>0] = $95; //@line 28 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $115 = $7; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $116 = $115; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $117 = HEAP32[$116>>2]|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $118 = (($115) + 4)|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $119 = $118; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $120 = HEAP32[$119>>2]|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $121 = (_i64Add(($117|0),($120|0),1,0)|0); //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $122 = tempRet0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $123 = $7; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $124 = $123; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    HEAP32[$124>>2] = $121; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $125 = (($123) + 4)|0; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $126 = $125; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    HEAP32[$126>>2] = $122; //@line 27 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   }
   $127 = $8; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $128 = $127; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $129 = HEAP32[$128>>2]|0; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $130 = (($127) + 4)|0; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $131 = $130; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $132 = HEAP32[$131>>2]|0; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $133 = $6; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $134 = $133; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $135 = HEAP32[$134>>2]|0; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $136 = (($133) + 4)|0; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $137 = $136; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $138 = HEAP32[$137>>2]|0; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $139 = (_i64Subtract(($135|0),($138|0),($129|0),($132|0))|0); //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $140 = tempRet0; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $141 = $6; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $142 = $141; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   HEAP32[$142>>2] = $139; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $143 = (($141) + 4)|0; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $144 = $143; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   HEAP32[$144>>2] = $140; //@line 30 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $145 = $8; //@line 31 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $146 = $145; //@line 31 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $147 = HEAP32[$146>>2]|0; //@line 31 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $148 = (($145) + 4)|0; //@line 31 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $149 = $148; //@line 31 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $150 = HEAP32[$149>>2]|0; //@line 31 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $151 = $5; //@line 31 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $152 = (($151) + ($147)|0); //@line 31 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $5 = $152; //@line 31 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $153 = $8; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $154 = $153; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $155 = HEAP32[$154>>2]|0; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $156 = (($153) + 4)|0; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $157 = $156; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $158 = HEAP32[$157>>2]|0; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $159 = $4; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $160 = ((($159)) + 56|0); //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $161 = $160; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $162 = $161; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $163 = HEAP32[$162>>2]|0; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $164 = (($161) + 4)|0; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $165 = $164; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $166 = HEAP32[$165>>2]|0; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $167 = (_i64Add(($163|0),($166|0),($155|0),($158|0))|0); //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $168 = tempRet0; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $169 = $160; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $170 = $169; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   HEAP32[$170>>2] = $167; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $171 = (($169) + 4)|0; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $172 = $171; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   HEAP32[$172>>2] = $168; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $173 = $4; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $174 = ((($173)) + 56|0); //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $175 = $174; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $176 = $175; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $177 = HEAP32[$176>>2]|0; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $178 = (($175) + 4)|0; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $179 = $178; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $180 = HEAP32[$179>>2]|0; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $181 = ($180>>>0)<(0); //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $182 = ($177>>>0)<(16); //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $183 = ($180|0)==(0); //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $184 = $183 & $182; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   $185 = $181 | $184; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   if ($185) {
    STACKTOP = sp;return; //@line 56 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
   } else {
    $186 = $4; //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $187 = $4; //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $188 = ((($187)) + 64|0); //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    _poly1305_blocks($186,$188,16,0); //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $189 = $4; //@line 37 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $190 = ((($189)) + 56|0); //@line 37 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $191 = $190; //@line 37 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $192 = $191; //@line 37 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    HEAP32[$192>>2] = 0; //@line 37 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $193 = (($191) + 4)|0; //@line 37 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    $194 = $193; //@line 37 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    HEAP32[$194>>2] = 0; //@line 37 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
    break;
   }
  }
 } while(0);
 $195 = $6; //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $196 = $195; //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $197 = HEAP32[$196>>2]|0; //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $198 = (($195) + 4)|0; //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $199 = $198; //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $200 = HEAP32[$199>>2]|0; //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $201 = ($200>>>0)>(0); //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $202 = ($197>>>0)>=(16); //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $203 = ($200|0)==(0); //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $204 = $203 & $202; //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $205 = $201 | $204; //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 if ($205) {
  $206 = $6; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $207 = $206; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $208 = HEAP32[$207>>2]|0; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $209 = (($206) + 4)|0; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $210 = $209; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $211 = HEAP32[$210>>2]|0; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $212 = $208 & -16; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $213 = $9; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $214 = $213; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  HEAP32[$214>>2] = $212; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $215 = (($213) + 4)|0; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $216 = $215; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  HEAP32[$216>>2] = $211; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $217 = $4; //@line 44 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $218 = $5; //@line 44 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $219 = $9; //@line 44 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $220 = $219; //@line 44 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $221 = HEAP32[$220>>2]|0; //@line 44 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $222 = (($219) + 4)|0; //@line 44 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $223 = $222; //@line 44 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $224 = HEAP32[$223>>2]|0; //@line 44 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  _poly1305_blocks($217,$218,$221,$224); //@line 44 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $225 = $9; //@line 45 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $226 = $225; //@line 45 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $227 = HEAP32[$226>>2]|0; //@line 45 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $228 = (($225) + 4)|0; //@line 45 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $229 = $228; //@line 45 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $230 = HEAP32[$229>>2]|0; //@line 45 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $231 = $5; //@line 45 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $232 = (($231) + ($227)|0); //@line 45 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $5 = $232; //@line 45 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $233 = $9; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $234 = $233; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $235 = HEAP32[$234>>2]|0; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $236 = (($233) + 4)|0; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $237 = $236; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $238 = HEAP32[$237>>2]|0; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $239 = $6; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $240 = $239; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $241 = HEAP32[$240>>2]|0; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $242 = (($239) + 4)|0; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $243 = $242; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $244 = HEAP32[$243>>2]|0; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $245 = (_i64Subtract(($241|0),($244|0),($235|0),($238|0))|0); //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $246 = tempRet0; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $247 = $6; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $248 = $247; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  HEAP32[$248>>2] = $245; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $249 = (($247) + 4)|0; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $250 = $249; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  HEAP32[$250>>2] = $246; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 }
 $251 = $6; //@line 50 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $252 = $251; //@line 50 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $253 = HEAP32[$252>>2]|0; //@line 50 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $254 = (($251) + 4)|0; //@line 50 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $255 = $254; //@line 50 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $256 = HEAP32[$255>>2]|0; //@line 50 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $257 = ($253|0)!=(0); //@line 50 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $258 = ($256|0)!=(0); //@line 50 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $259 = $257 | $258; //@line 50 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 if (!($259)) {
  STACKTOP = sp;return; //@line 56 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 }
 $260 = $7; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $261 = $260; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 HEAP32[$261>>2] = 0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $262 = (($260) + 4)|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $263 = $262; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 HEAP32[$263>>2] = 0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 while(1) {
  $264 = $7; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $265 = $264; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $266 = HEAP32[$265>>2]|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $267 = (($264) + 4)|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $268 = $267; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $269 = HEAP32[$268>>2]|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $270 = $6; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $271 = $270; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $272 = HEAP32[$271>>2]|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $273 = (($270) + 4)|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $274 = $273; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $275 = HEAP32[$274>>2]|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $276 = ($269>>>0)<($275>>>0); //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $277 = ($266>>>0)<($272>>>0); //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $278 = ($269|0)==($275|0); //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $279 = $278 & $277; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $280 = $276 | $279; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  if (!($280)) {
   break;
  }
  $281 = $5; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $282 = $7; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $283 = $282; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $284 = HEAP32[$283>>2]|0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $285 = (($282) + 4)|0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $286 = $285; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $287 = HEAP32[$286>>2]|0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $288 = (($281) + ($284)|0); //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $289 = HEAP8[$288>>0]|0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $290 = $4; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $291 = ((($290)) + 64|0); //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $292 = $4; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $293 = ((($292)) + 56|0); //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $294 = $293; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $295 = $294; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $296 = HEAP32[$295>>2]|0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $297 = (($294) + 4)|0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $298 = $297; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $299 = HEAP32[$298>>2]|0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $300 = $7; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $301 = $300; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $302 = HEAP32[$301>>2]|0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $303 = (($300) + 4)|0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $304 = $303; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $305 = HEAP32[$304>>2]|0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $306 = (_i64Add(($296|0),($299|0),($302|0),($305|0))|0); //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $307 = tempRet0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $308 = (($291) + ($306)|0); //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  HEAP8[$308>>0] = $289; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $309 = $7; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $310 = $309; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $311 = HEAP32[$310>>2]|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $312 = (($309) + 4)|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $313 = $312; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $314 = HEAP32[$313>>2]|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $315 = (_i64Add(($311|0),($314|0),1,0)|0); //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $316 = tempRet0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $317 = $7; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $318 = $317; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  HEAP32[$318>>2] = $315; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $319 = (($317) + 4)|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  $320 = $319; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
  HEAP32[$320>>2] = $316; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 }
 $321 = $6; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $322 = $321; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $323 = HEAP32[$322>>2]|0; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $324 = (($321) + 4)|0; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $325 = $324; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $326 = HEAP32[$325>>2]|0; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $327 = $4; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $328 = ((($327)) + 56|0); //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $329 = $328; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $330 = $329; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $331 = HEAP32[$330>>2]|0; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $332 = (($329) + 4)|0; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $333 = $332; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $334 = HEAP32[$333>>2]|0; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $335 = (_i64Add(($331|0),($334|0),($323|0),($326|0))|0); //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $336 = tempRet0; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $337 = $328; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $338 = $337; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 HEAP32[$338>>2] = $335; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $339 = (($337) + 4)|0; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 $340 = $339; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 HEAP32[$340>>2] = $336; //@line 54 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
 STACKTOP = sp;return; //@line 56 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c"
}
function _poly1305_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, label = 0;
 var sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $5 = (_load32_le_2($4)|0); //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $6 = $5 & 67108863; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $7 = $2; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$7>>2] = $6; //@line 32 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $8 = $3; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $9 = ((($8)) + 3|0); //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $10 = (_load32_le_2($9)|0); //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $11 = $10 >>> 2; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $12 = $11 & 67108611; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $13 = $2; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $14 = ((($13)) + 4|0); //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$14>>2] = $12; //@line 33 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $15 = $3; //@line 34 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $16 = ((($15)) + 6|0); //@line 34 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $17 = (_load32_le_2($16)|0); //@line 34 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $18 = $17 >>> 4; //@line 34 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $19 = $18 & 67092735; //@line 34 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $20 = $2; //@line 34 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $21 = ((($20)) + 8|0); //@line 34 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$21>>2] = $19; //@line 34 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $22 = $3; //@line 35 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $23 = ((($22)) + 9|0); //@line 35 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $24 = (_load32_le_2($23)|0); //@line 35 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $25 = $24 >>> 6; //@line 35 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $26 = $25 & 66076671; //@line 35 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $27 = $2; //@line 35 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $28 = ((($27)) + 12|0); //@line 35 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$28>>2] = $26; //@line 35 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $29 = $3; //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $30 = ((($29)) + 12|0); //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $31 = (_load32_le_2($30)|0); //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $32 = $31 >>> 8; //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $33 = $32 & 1048575; //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $34 = $2; //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $35 = ((($34)) + 16|0); //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$35>>2] = $33; //@line 36 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $36 = $2; //@line 39 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $37 = ((($36)) + 20|0); //@line 39 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$37>>2] = 0; //@line 39 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $38 = $2; //@line 40 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $39 = ((($38)) + 20|0); //@line 40 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $40 = ((($39)) + 4|0); //@line 40 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$40>>2] = 0; //@line 40 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $41 = $2; //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $42 = ((($41)) + 20|0); //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $43 = ((($42)) + 8|0); //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$43>>2] = 0; //@line 41 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $44 = $2; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $45 = ((($44)) + 20|0); //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $46 = ((($45)) + 12|0); //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$46>>2] = 0; //@line 42 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $47 = $2; //@line 43 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $48 = ((($47)) + 20|0); //@line 43 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $49 = ((($48)) + 16|0); //@line 43 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$49>>2] = 0; //@line 43 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $50 = $3; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $51 = ((($50)) + 16|0); //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $52 = (_load32_le_2($51)|0); //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $53 = $2; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $54 = ((($53)) + 40|0); //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$54>>2] = $52; //@line 46 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $55 = $3; //@line 47 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $56 = ((($55)) + 20|0); //@line 47 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $57 = (_load32_le_2($56)|0); //@line 47 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $58 = $2; //@line 47 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $59 = ((($58)) + 40|0); //@line 47 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $60 = ((($59)) + 4|0); //@line 47 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$60>>2] = $57; //@line 47 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $61 = $3; //@line 48 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $62 = ((($61)) + 24|0); //@line 48 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $63 = (_load32_le_2($62)|0); //@line 48 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $64 = $2; //@line 48 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $65 = ((($64)) + 40|0); //@line 48 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $66 = ((($65)) + 8|0); //@line 48 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$66>>2] = $63; //@line 48 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $67 = $3; //@line 49 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $68 = ((($67)) + 28|0); //@line 49 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $69 = (_load32_le_2($68)|0); //@line 49 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $70 = $2; //@line 49 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $71 = ((($70)) + 40|0); //@line 49 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $72 = ((($71)) + 12|0); //@line 49 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$72>>2] = $69; //@line 49 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $73 = $2; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $74 = ((($73)) + 56|0); //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $75 = $74; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $76 = $75; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$76>>2] = 0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $77 = (($75) + 4)|0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $78 = $77; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP32[$78>>2] = 0; //@line 51 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $79 = $2; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 $80 = ((($79)) + 80|0); //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 HEAP8[$80>>0] = 0; //@line 52 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
 STACKTOP = sp;return; //@line 53 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h"
}
function _crypto_onetimeauth_poly1305($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp_a;
 $5 = $0;
 $6 = $1;
 $9 = $7;
 $10 = $9;
 HEAP32[$10>>2] = $2;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $3;
 $8 = $4;
 $13 = HEAP32[3543]|0; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $14 = HEAP32[$13>>2]|0; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $15 = $5; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $16 = $6; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $17 = $7; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $18 = $17; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $19 = HEAP32[$18>>2]|0; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $20 = (($17) + 4)|0; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $21 = $20; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $22 = HEAP32[$21>>2]|0; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $23 = $8; //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $24 = (FUNCTION_TABLE_iiiiii[$14 & 31]($15,$16,$19,$22,$23)|0); //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 STACKTOP = sp;return ($24|0); //@line 20 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
}
function _crypto_onetimeauth_poly1305_verify($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp_a;
 $5 = $0;
 $6 = $1;
 $9 = $7;
 $10 = $9;
 HEAP32[$10>>2] = $2;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $3;
 $8 = $4;
 $13 = HEAP32[3543]|0; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $14 = ((($13)) + 4|0); //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $15 = HEAP32[$14>>2]|0; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $16 = $5; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $17 = $6; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $18 = $7; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $19 = $18; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $20 = HEAP32[$19>>2]|0; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $21 = (($18) + 4)|0; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $22 = $21; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $23 = HEAP32[$22>>2]|0; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $24 = $8; //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 $25 = (FUNCTION_TABLE_iiiiii[$15 & 31]($16,$17,$20,$23,$24)|0); //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
 STACKTOP = sp;return ($25|0); //@line 29 "libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c"
}
function _stream_ref($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 144|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(144|0);
 $7 = sp_a;
 $10 = sp_a + 128|0;
 $11 = sp_a + 64|0;
 $12 = sp_a + 32|0;
 $6 = $0;
 $15 = $7;
 $16 = $15;
 HEAP32[$16>>2] = $1;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = $2;
 $8 = $3;
 $9 = $4;
 $19 = $7; //@line 28 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $20 = $19; //@line 28 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $21 = HEAP32[$20>>2]|0; //@line 28 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $22 = (($19) + 4)|0; //@line 28 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $23 = $22; //@line 28 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $24 = HEAP32[$23>>2]|0; //@line 28 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $25 = ($21|0)!=(0); //@line 28 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $26 = ($24|0)!=(0); //@line 28 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $27 = $25 | $26; //@line 28 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 if (!($27)) {
  $5 = 0; //@line 29 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $121 = $5; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  STACKTOP = sp;return ($121|0); //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 }
 $13 = 0; //@line 31 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 while(1) {
  $28 = $13; //@line 31 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $29 = ($28>>>0)<(32); //@line 31 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  if (!($29)) {
   break;
  }
  $30 = $9; //@line 32 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $31 = $13; //@line 32 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $32 = (($30) + ($31)|0); //@line 32 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $33 = HEAP8[$32>>0]|0; //@line 32 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $34 = $13; //@line 32 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $35 = (($12) + ($34)|0); //@line 32 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP8[$35>>0] = $33; //@line 32 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $36 = $13; //@line 31 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $37 = (($36) + 1)|0; //@line 31 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $13 = $37; //@line 31 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 }
 $13 = 0; //@line 34 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 while(1) {
  $38 = $13; //@line 34 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $39 = ($38>>>0)<(8); //@line 34 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  if (!($39)) {
   break;
  }
  $40 = $8; //@line 35 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $41 = $13; //@line 35 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $42 = (($40) + ($41)|0); //@line 35 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $43 = HEAP8[$42>>0]|0; //@line 35 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $44 = $13; //@line 35 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $45 = (($10) + ($44)|0); //@line 35 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP8[$45>>0] = $43; //@line 35 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $46 = $13; //@line 34 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $47 = (($46) + 1)|0; //@line 34 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $13 = $47; //@line 34 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 }
 $13 = 8; //@line 37 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 while(1) {
  $48 = $13; //@line 37 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $49 = ($48>>>0)<(16); //@line 37 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  if (!($49)) {
   break;
  }
  $50 = $13; //@line 38 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $51 = (($10) + ($50)|0); //@line 38 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP8[$51>>0] = 0; //@line 38 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $52 = $13; //@line 37 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $53 = (($52) + 1)|0; //@line 37 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $13 = $53; //@line 37 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 }
 while(1) {
  $54 = $7; //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $55 = $54; //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $56 = HEAP32[$55>>2]|0; //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $57 = (($54) + 4)|0; //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $58 = $57; //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $59 = HEAP32[$58>>2]|0; //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $60 = ($59>>>0)>(0); //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $61 = ($56>>>0)>=(64); //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $62 = ($59|0)==(0); //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $63 = $62 & $61; //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $64 = $60 | $63; //@line 40 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  if (!($64)) {
   break;
  }
  $65 = $6; //@line 41 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  (_crypto_core_salsa20($65,$10,$12,0)|0); //@line 41 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $14 = 1; //@line 42 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $13 = 8; //@line 43 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  while(1) {
   $66 = $13; //@line 43 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $67 = ($66>>>0)<(16); //@line 43 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   if (!($67)) {
    break;
   }
   $68 = $13; //@line 44 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $69 = (($10) + ($68)|0); //@line 44 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $70 = HEAP8[$69>>0]|0; //@line 44 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $71 = $70&255; //@line 44 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $72 = $14; //@line 44 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $73 = (($72) + ($71))|0; //@line 44 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $14 = $73; //@line 44 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $74 = $14; //@line 45 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $75 = $74&255; //@line 45 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $76 = $13; //@line 45 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $77 = (($10) + ($76)|0); //@line 45 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   HEAP8[$77>>0] = $75; //@line 45 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $78 = $14; //@line 46 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $79 = $78 >>> 8; //@line 46 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $14 = $79; //@line 46 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $80 = $13; //@line 43 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $81 = (($80) + 1)|0; //@line 43 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $13 = $81; //@line 43 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  }
  $82 = $7; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $83 = $82; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $84 = HEAP32[$83>>2]|0; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $85 = (($82) + 4)|0; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $86 = $85; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $87 = HEAP32[$86>>2]|0; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $88 = (_i64Subtract(($84|0),($87|0),64,0)|0); //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $89 = tempRet0; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $90 = $7; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $91 = $90; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP32[$91>>2] = $88; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $92 = (($90) + 4)|0; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $93 = $92; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP32[$93>>2] = $89; //@line 48 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $94 = $6; //@line 49 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $95 = ((($94)) + 64|0); //@line 49 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $6 = $95; //@line 49 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 }
 $96 = $7; //@line 51 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $97 = $96; //@line 51 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $98 = HEAP32[$97>>2]|0; //@line 51 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $99 = (($96) + 4)|0; //@line 51 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $100 = $99; //@line 51 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $101 = HEAP32[$100>>2]|0; //@line 51 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $102 = ($98|0)!=(0); //@line 51 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $103 = ($101|0)!=(0); //@line 51 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $104 = $102 | $103; //@line 51 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 L24: do {
  if ($104) {
   (_crypto_core_salsa20($11,$10,$12,0)|0); //@line 52 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $13 = 0; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   while(1) {
    $105 = $13; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $106 = $7; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $107 = $106; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $108 = HEAP32[$107>>2]|0; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $109 = (($106) + 4)|0; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $110 = $109; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $111 = HEAP32[$110>>2]|0; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $112 = ($105>>>0)<($108>>>0); //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    if (!($112)) {
     break L24;
    }
    $113 = $13; //@line 54 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $114 = (($11) + ($113)|0); //@line 54 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $115 = HEAP8[$114>>0]|0; //@line 54 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $116 = $6; //@line 54 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $117 = $13; //@line 54 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $118 = (($116) + ($117)|0); //@line 54 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    HEAP8[$118>>0] = $115; //@line 54 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $119 = $13; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $120 = (($119) + 1)|0; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $13 = $120; //@line 53 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   }
  }
 } while(0);
 _sodium_memzero($11,64); //@line 57 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 _sodium_memzero($12,32); //@line 58 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $5 = 0; //@line 60 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $121 = $5; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 STACKTOP = sp;return ($121|0); //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
}
function _stream_ref_xor_ic($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 160|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(160|0);
 $11 = sp_a + 8|0;
 $13 = sp_a;
 $15 = sp_a + 144|0;
 $16 = sp_a + 80|0;
 $17 = sp_a + 48|0;
 $9 = $0;
 $10 = $1;
 $20 = $11;
 $21 = $20;
 HEAP32[$21>>2] = $2;
 $22 = (($20) + 4)|0;
 $23 = $22;
 HEAP32[$23>>2] = $3;
 $12 = $4;
 $24 = $13;
 $25 = $24;
 HEAP32[$25>>2] = $5;
 $26 = (($24) + 4)|0;
 $27 = $26;
 HEAP32[$27>>2] = $6;
 $14 = $7;
 $28 = $11; //@line 74 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $29 = $28; //@line 74 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $30 = HEAP32[$29>>2]|0; //@line 74 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $31 = (($28) + 4)|0; //@line 74 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $32 = $31; //@line 74 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $33 = HEAP32[$32>>2]|0; //@line 74 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $34 = ($30|0)!=(0); //@line 74 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $35 = ($33|0)!=(0); //@line 74 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $36 = $34 | $35; //@line 74 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 if (!($36)) {
  $8 = 0; //@line 75 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $177 = $8; //@line 112 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  STACKTOP = sp;return ($177|0); //@line 112 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 }
 $18 = 0; //@line 77 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 while(1) {
  $37 = $18; //@line 77 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $38 = ($37>>>0)<(32); //@line 77 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  if (!($38)) {
   break;
  }
  $39 = $14; //@line 78 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $40 = $18; //@line 78 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $41 = (($39) + ($40)|0); //@line 78 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $42 = HEAP8[$41>>0]|0; //@line 78 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $43 = $18; //@line 78 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $44 = (($17) + ($43)|0); //@line 78 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP8[$44>>0] = $42; //@line 78 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $45 = $18; //@line 77 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $46 = (($45) + 1)|0; //@line 77 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $18 = $46; //@line 77 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 }
 $18 = 0; //@line 80 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 while(1) {
  $47 = $18; //@line 80 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $48 = ($47>>>0)<(8); //@line 80 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  if (!($48)) {
   break;
  }
  $49 = $12; //@line 81 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $50 = $18; //@line 81 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $51 = (($49) + ($50)|0); //@line 81 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $52 = HEAP8[$51>>0]|0; //@line 81 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $53 = $18; //@line 81 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $54 = (($15) + ($53)|0); //@line 81 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP8[$54>>0] = $52; //@line 81 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $55 = $18; //@line 80 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $56 = (($55) + 1)|0; //@line 80 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $18 = $56; //@line 80 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 }
 $18 = 8; //@line 83 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 while(1) {
  $57 = $18; //@line 83 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $58 = ($57>>>0)<(16); //@line 83 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  if (!($58)) {
   break;
  }
  $59 = $13; //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $60 = $59; //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $61 = HEAP32[$60>>2]|0; //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $62 = (($59) + 4)|0; //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $63 = $62; //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $64 = HEAP32[$63>>2]|0; //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $65 = $61 & 255; //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $66 = $65&255; //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $67 = $18; //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $68 = (($15) + ($67)|0); //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP8[$68>>0] = $66; //@line 84 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $69 = $13; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $70 = $69; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $71 = HEAP32[$70>>2]|0; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $72 = (($69) + 4)|0; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $73 = $72; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $74 = HEAP32[$73>>2]|0; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $75 = (_bitshift64Lshr(($71|0),($74|0),8)|0); //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $76 = tempRet0; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $77 = $13; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $78 = $77; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP32[$78>>2] = $75; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $79 = (($77) + 4)|0; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $80 = $79; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP32[$80>>2] = $76; //@line 85 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $81 = $18; //@line 83 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $82 = (($81) + 1)|0; //@line 83 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $18 = $82; //@line 83 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 }
 while(1) {
  $83 = $11; //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $84 = $83; //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $85 = HEAP32[$84>>2]|0; //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $86 = (($83) + 4)|0; //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $87 = $86; //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $88 = HEAP32[$87>>2]|0; //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $89 = ($88>>>0)>(0); //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $90 = ($85>>>0)>=(64); //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $91 = ($88|0)==(0); //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $92 = $91 & $90; //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $93 = $89 | $92; //@line 87 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  if (!($93)) {
   break;
  }
  (_crypto_core_salsa20($16,$15,$17,0)|0); //@line 88 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $18 = 0; //@line 89 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  while(1) {
   $94 = $18; //@line 89 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $95 = ($94>>>0)<(64); //@line 89 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   if (!($95)) {
    break;
   }
   $96 = $10; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $97 = $18; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $98 = (($96) + ($97)|0); //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $99 = HEAP8[$98>>0]|0; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $100 = $99&255; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $101 = $18; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $102 = (($16) + ($101)|0); //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $103 = HEAP8[$102>>0]|0; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $104 = $103&255; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $105 = $100 ^ $104; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $106 = $105&255; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $107 = $9; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $108 = $18; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $109 = (($107) + ($108)|0); //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   HEAP8[$109>>0] = $106; //@line 90 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $110 = $18; //@line 89 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $111 = (($110) + 1)|0; //@line 89 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $18 = $111; //@line 89 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  }
  $19 = 1; //@line 92 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $18 = 8; //@line 93 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  while(1) {
   $112 = $18; //@line 93 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $113 = ($112>>>0)<(16); //@line 93 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   if (!($113)) {
    break;
   }
   $114 = $18; //@line 94 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $115 = (($15) + ($114)|0); //@line 94 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $116 = HEAP8[$115>>0]|0; //@line 94 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $117 = $116&255; //@line 94 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $118 = $19; //@line 94 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $119 = (($118) + ($117))|0; //@line 94 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $19 = $119; //@line 94 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $120 = $19; //@line 95 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $121 = $120&255; //@line 95 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $122 = $18; //@line 95 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $123 = (($15) + ($122)|0); //@line 95 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   HEAP8[$123>>0] = $121; //@line 95 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $124 = $19; //@line 96 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $125 = $124 >>> 8; //@line 96 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $19 = $125; //@line 96 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $126 = $18; //@line 93 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $127 = (($126) + 1)|0; //@line 93 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $18 = $127; //@line 93 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  }
  $128 = $11; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $129 = $128; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $130 = HEAP32[$129>>2]|0; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $131 = (($128) + 4)|0; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $132 = $131; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $133 = HEAP32[$132>>2]|0; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $134 = (_i64Subtract(($130|0),($133|0),64,0)|0); //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $135 = tempRet0; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $136 = $11; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $137 = $136; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP32[$137>>2] = $134; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $138 = (($136) + 4)|0; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $139 = $138; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  HEAP32[$139>>2] = $135; //@line 98 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $140 = $9; //@line 99 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $141 = ((($140)) + 64|0); //@line 99 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $9 = $141; //@line 99 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $142 = $10; //@line 100 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $143 = ((($142)) + 64|0); //@line 100 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
  $10 = $143; //@line 100 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 }
 $144 = $11; //@line 102 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $145 = $144; //@line 102 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $146 = HEAP32[$145>>2]|0; //@line 102 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $147 = (($144) + 4)|0; //@line 102 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $148 = $147; //@line 102 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $149 = HEAP32[$148>>2]|0; //@line 102 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $150 = ($146|0)!=(0); //@line 102 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $151 = ($149|0)!=(0); //@line 102 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $152 = $150 | $151; //@line 102 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 L28: do {
  if ($152) {
   (_crypto_core_salsa20($16,$15,$17,0)|0); //@line 103 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   $18 = 0; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   while(1) {
    $153 = $18; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $154 = $11; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $155 = $154; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $156 = HEAP32[$155>>2]|0; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $157 = (($154) + 4)|0; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $158 = $157; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $159 = HEAP32[$158>>2]|0; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $160 = ($153>>>0)<($156>>>0); //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    if (!($160)) {
     break L28;
    }
    $161 = $10; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $162 = $18; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $163 = (($161) + ($162)|0); //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $164 = HEAP8[$163>>0]|0; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $165 = $164&255; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $166 = $18; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $167 = (($16) + ($166)|0); //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $168 = HEAP8[$167>>0]|0; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $169 = $168&255; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $170 = $165 ^ $169; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $171 = $170&255; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $172 = $9; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $173 = $18; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $174 = (($172) + ($173)|0); //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    HEAP8[$174>>0] = $171; //@line 105 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $175 = $18; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $176 = (($175) + 1)|0; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
    $18 = $176; //@line 104 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
   }
  }
 } while(0);
 _sodium_memzero($16,64); //@line 108 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 _sodium_memzero($17,32); //@line 109 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $8 = 0; //@line 111 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 $177 = $8; //@line 112 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
 STACKTOP = sp;return ($177|0); //@line 112 "libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c"
}
function _crypto_stream_salsa20_xor($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp_a;
 $6 = $0;
 $7 = $1;
 $11 = $8;
 $12 = $11;
 HEAP32[$12>>2] = $2;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $3;
 $9 = $4;
 $10 = $5;
 $15 = HEAP32[3546]|0; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $16 = ((($15)) + 4|0); //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $17 = HEAP32[$16>>2]|0; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $18 = $6; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $19 = $7; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $20 = $8; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $21 = $20; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $22 = HEAP32[$21>>2]|0; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $23 = (($20) + 4)|0; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $24 = $23; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $25 = HEAP32[$24>>2]|0; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $26 = $9; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $27 = $10; //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 $28 = (FUNCTION_TABLE_iiiiiiiii[$17 & 31]($18,$19,$22,$25,$26,0,0,$27)|0); //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
 STACKTOP = sp;return ($28|0); //@line 61 "libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c"
}
function _crypto_verify_16($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 12 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
 $5 = 0; //@line 15 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
 while(1) {
  $6 = $5; //@line 15 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $7 = ($6|0)<(16); //@line 15 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  if (!($7)) {
   break;
  }
  $8 = $2; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $9 = $5; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $10 = (($8) + ($9)|0); //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $11 = HEAP8[$10>>0]|0; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $12 = $11&255; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $13 = $3; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $14 = $5; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $15 = (($13) + ($14)|0); //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $16 = HEAP8[$15>>0]|0; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $17 = $16&255; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $18 = $12 ^ $17; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $19 = $4; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $20 = $19 | $18; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $4 = $20; //@line 16 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $21 = $5; //@line 15 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $22 = (($21) + 1)|0; //@line 15 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
  $5 = $22; //@line 15 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
 }
 $23 = $4; //@line 18 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
 $24 = (($23) - 1)|0; //@line 18 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
 $25 = $24 >>> 8; //@line 18 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
 $26 = 1 & $25; //@line 18 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
 $27 = (($26) - 1)|0; //@line 18 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
 STACKTOP = sp;return ($27|0); //@line 18 "libsodium/src/libsodium/crypto_verify/sodium/verify.c"
}
function _crypto_hash($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, dest = 0, label = 0, sp = 0, sp_a = 0, src = 0;
 var stop = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 288|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(288|0);
 $6 = sp_a + 200|0;
 $7 = sp_a;
 $8 = sp_a + 216|0;
 $4 = $0;
 $5 = $1;
 $9 = $6;
 $10 = $9;
 HEAP32[$10>>2] = $2;
 $11 = (($9) + 4)|0;
 $12 = $11;
 HEAP32[$12>>2] = $3;
 _memset(($7|0),0,200)|0; //@line 72 "mcbits/Keccak-simple.c"
 while(1) {
  $13 = $6; //@line 74 "mcbits/Keccak-simple.c"
  $14 = $13; //@line 74 "mcbits/Keccak-simple.c"
  $15 = HEAP32[$14>>2]|0; //@line 74 "mcbits/Keccak-simple.c"
  $16 = (($13) + 4)|0; //@line 74 "mcbits/Keccak-simple.c"
  $17 = $16; //@line 74 "mcbits/Keccak-simple.c"
  $18 = HEAP32[$17>>2]|0; //@line 74 "mcbits/Keccak-simple.c"
  $19 = ($18>>>0)>(0); //@line 74 "mcbits/Keccak-simple.c"
  $20 = ($15>>>0)>=(72); //@line 74 "mcbits/Keccak-simple.c"
  $21 = ($18|0)==(0); //@line 74 "mcbits/Keccak-simple.c"
  $22 = $21 & $20; //@line 74 "mcbits/Keccak-simple.c"
  $23 = $19 | $22; //@line 74 "mcbits/Keccak-simple.c"
  if (!($23)) {
   break;
  }
  $24 = $5; //@line 76 "mcbits/Keccak-simple.c"
  _KeccakF($7,$24,9); //@line 76 "mcbits/Keccak-simple.c"
  $25 = $6; //@line 74 "mcbits/Keccak-simple.c"
  $26 = $25; //@line 74 "mcbits/Keccak-simple.c"
  $27 = HEAP32[$26>>2]|0; //@line 74 "mcbits/Keccak-simple.c"
  $28 = (($25) + 4)|0; //@line 74 "mcbits/Keccak-simple.c"
  $29 = $28; //@line 74 "mcbits/Keccak-simple.c"
  $30 = HEAP32[$29>>2]|0; //@line 74 "mcbits/Keccak-simple.c"
  $31 = (_i64Subtract(($27|0),($30|0),72,0)|0); //@line 74 "mcbits/Keccak-simple.c"
  $32 = tempRet0; //@line 74 "mcbits/Keccak-simple.c"
  $33 = $6; //@line 74 "mcbits/Keccak-simple.c"
  $34 = $33; //@line 74 "mcbits/Keccak-simple.c"
  HEAP32[$34>>2] = $31; //@line 74 "mcbits/Keccak-simple.c"
  $35 = (($33) + 4)|0; //@line 74 "mcbits/Keccak-simple.c"
  $36 = $35; //@line 74 "mcbits/Keccak-simple.c"
  HEAP32[$36>>2] = $32; //@line 74 "mcbits/Keccak-simple.c"
  $37 = $5; //@line 74 "mcbits/Keccak-simple.c"
  $38 = ((($37)) + 72|0); //@line 74 "mcbits/Keccak-simple.c"
  $5 = $38; //@line 74 "mcbits/Keccak-simple.c"
 }
 $39 = $5; //@line 80 "mcbits/Keccak-simple.c"
 $40 = $6; //@line 80 "mcbits/Keccak-simple.c"
 $41 = $40; //@line 80 "mcbits/Keccak-simple.c"
 $42 = HEAP32[$41>>2]|0; //@line 80 "mcbits/Keccak-simple.c"
 $43 = (($40) + 4)|0; //@line 80 "mcbits/Keccak-simple.c"
 $44 = $43; //@line 80 "mcbits/Keccak-simple.c"
 $45 = HEAP32[$44>>2]|0; //@line 80 "mcbits/Keccak-simple.c"
 _memcpy(($8|0),($39|0),($42|0))|0; //@line 80 "mcbits/Keccak-simple.c"
 $46 = $6; //@line 81 "mcbits/Keccak-simple.c"
 $47 = $46; //@line 81 "mcbits/Keccak-simple.c"
 $48 = HEAP32[$47>>2]|0; //@line 81 "mcbits/Keccak-simple.c"
 $49 = (($46) + 4)|0; //@line 81 "mcbits/Keccak-simple.c"
 $50 = $49; //@line 81 "mcbits/Keccak-simple.c"
 $51 = HEAP32[$50>>2]|0; //@line 81 "mcbits/Keccak-simple.c"
 $52 = (_i64Add(($48|0),($51|0),1,0)|0); //@line 81 "mcbits/Keccak-simple.c"
 $53 = tempRet0; //@line 81 "mcbits/Keccak-simple.c"
 $54 = $6; //@line 81 "mcbits/Keccak-simple.c"
 $55 = $54; //@line 81 "mcbits/Keccak-simple.c"
 HEAP32[$55>>2] = $52; //@line 81 "mcbits/Keccak-simple.c"
 $56 = (($54) + 4)|0; //@line 81 "mcbits/Keccak-simple.c"
 $57 = $56; //@line 81 "mcbits/Keccak-simple.c"
 HEAP32[$57>>2] = $53; //@line 81 "mcbits/Keccak-simple.c"
 $58 = (($8) + ($48)|0); //@line 81 "mcbits/Keccak-simple.c"
 HEAP8[$58>>0] = 1; //@line 81 "mcbits/Keccak-simple.c"
 $59 = $6; //@line 82 "mcbits/Keccak-simple.c"
 $60 = $59; //@line 82 "mcbits/Keccak-simple.c"
 $61 = HEAP32[$60>>2]|0; //@line 82 "mcbits/Keccak-simple.c"
 $62 = (($59) + 4)|0; //@line 82 "mcbits/Keccak-simple.c"
 $63 = $62; //@line 82 "mcbits/Keccak-simple.c"
 $64 = HEAP32[$63>>2]|0; //@line 82 "mcbits/Keccak-simple.c"
 $65 = (($8) + ($61)|0); //@line 82 "mcbits/Keccak-simple.c"
 $66 = $6; //@line 82 "mcbits/Keccak-simple.c"
 $67 = $66; //@line 82 "mcbits/Keccak-simple.c"
 $68 = HEAP32[$67>>2]|0; //@line 82 "mcbits/Keccak-simple.c"
 $69 = (($66) + 4)|0; //@line 82 "mcbits/Keccak-simple.c"
 $70 = $69; //@line 82 "mcbits/Keccak-simple.c"
 $71 = HEAP32[$70>>2]|0; //@line 82 "mcbits/Keccak-simple.c"
 $72 = (72 - ($68))|0; //@line 82 "mcbits/Keccak-simple.c"
 _memset(($65|0),0,($72|0))|0; //@line 82 "mcbits/Keccak-simple.c"
 $73 = ((($8)) + 71|0); //@line 83 "mcbits/Keccak-simple.c"
 $74 = HEAP8[$73>>0]|0; //@line 83 "mcbits/Keccak-simple.c"
 $75 = $74&255; //@line 83 "mcbits/Keccak-simple.c"
 $76 = $75 | 128; //@line 83 "mcbits/Keccak-simple.c"
 $77 = $76&255; //@line 83 "mcbits/Keccak-simple.c"
 HEAP8[$73>>0] = $77; //@line 83 "mcbits/Keccak-simple.c"
 _KeccakF($7,$8,9); //@line 84 "mcbits/Keccak-simple.c"
 $78 = $4; //@line 85 "mcbits/Keccak-simple.c"
 dest=$78; src=$7; stop=dest+64|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 85 "mcbits/Keccak-simple.c"
 STACKTOP = sp;return 0; //@line 90 "mcbits/Keccak-simple.c"
}
function _KeccakF($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;
 var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;
 var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;
 var $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0;
 var $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0;
 var $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0;
 var $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0;
 var $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0;
 var $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0;
 var $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0;
 var $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0;
 var $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0;
 var $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0;
 var $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0;
 var $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0;
 var $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0;
 var $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0;
 var $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0;
 var $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0;
 var $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0;
 var $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0;
 var $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0;
 var $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0;
 var $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0;
 var $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0;
 var $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0;
 var $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0;
 var $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0;
 var $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0;
 var $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0;
 var $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0;
 var $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0;
 var $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0;
 var $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0;
 var $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0;
 var $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0;
 var $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0;
 var $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0;
 var $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0;
 var $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0;
 var $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0;
 var $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0;
 var $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0;
 var $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0;
 var $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0;
 var $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0;
 var $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0;
 var $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0;
 var $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0;
 var $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0;
 var $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0;
 var $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0;
 var $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0;
 var $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0;
 var $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0;
 var $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0;
 var $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0;
 var $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0;
 var $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0;
 var $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0;
 var $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0;
 var $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0;
 var $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0;
 var $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0;
 var $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0;
 var $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0;
 var $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0;
 var $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0;
 var $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0;
 var $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0;
 var $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0;
 var $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0;
 var $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0, $2313 = 0;
 var $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0, $233 = 0, $2330 = 0, $2331 = 0;
 var $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0, $2348 = 0, $2349 = 0, $235 = 0;
 var $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0, $2366 = 0, $2367 = 0, $2368 = 0;
 var $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0, $2380 = 0, $2381 = 0, $2382 = 0, $2383 = 0, $2384 = 0, $2385 = 0, $2386 = 0;
 var $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0, $2390 = 0, $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0, $2401 = 0, $2402 = 0, $2403 = 0;
 var $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2420 = 0, $2421 = 0;
 var $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0, $2438 = 0, $2439 = 0, $244 = 0;
 var $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0, $2456 = 0, $2457 = 0, $2458 = 0;
 var $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0, $2474 = 0, $2475 = 0, $2476 = 0;
 var $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0, $2492 = 0, $2493 = 0, $2494 = 0;
 var $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0, $251 = 0, $2510 = 0, $2511 = 0;
 var $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0, $2528 = 0, $2529 = 0, $253 = 0;
 var $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2546 = 0, $2547 = 0, $2548 = 0;
 var $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0, $2564 = 0, $2565 = 0, $2566 = 0;
 var $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0, $2582 = 0, $2583 = 0, $2584 = 0;
 var $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0, $2601 = 0;
 var $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0, $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0, $2618 = 0, $2619 = 0, $262 = 0;
 var $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0;
 var $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0, $2654 = 0, $2655 = 0, $2656 = 0;
 var $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0, $2671 = 0, $2672 = 0, $2673 = 0, $2674 = 0;
 var $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0, $2689 = 0, $269 = 0, $2690 = 0, $2691 = 0, $2692 = 0;
 var $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0, $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0, $2708 = 0, $2709 = 0, $271 = 0;
 var $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0, $2723 = 0, $2724 = 0, $2725 = 0, $2726 = 0, $2727 = 0, $2728 = 0;
 var $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0, $2744 = 0, $2745 = 0, $2746 = 0;
 var $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0, $2762 = 0, $2763 = 0, $2764 = 0;
 var $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0, $278 = 0, $2780 = 0, $2781 = 0, $2782 = 0;
 var $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0, $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0, $2797 = 0, $2798 = 0, $2799 = 0, $28 = 0, $280 = 0;
 var $2800 = 0, $2801 = 0, $2802 = 0, $2803 = 0, $2804 = 0, $2805 = 0, $2806 = 0, $2807 = 0, $2808 = 0, $2809 = 0, $281 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2813 = 0, $2814 = 0, $2815 = 0, $2816 = 0, $2817 = 0, $2818 = 0;
 var $2819 = 0, $282 = 0, $2820 = 0, $2821 = 0, $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0, $2826 = 0, $2827 = 0, $2828 = 0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0, $2832 = 0, $2833 = 0, $2834 = 0, $2835 = 0, $2836 = 0;
 var $2837 = 0, $2838 = 0, $2839 = 0, $284 = 0, $2840 = 0, $2841 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0, $2850 = 0, $2851 = 0, $2852 = 0, $2853 = 0, $2854 = 0;
 var $2855 = 0, $2856 = 0, $2857 = 0, $2858 = 0, $2859 = 0, $286 = 0, $2860 = 0, $2861 = 0, $2862 = 0, $2863 = 0, $2864 = 0, $2865 = 0, $2866 = 0, $2867 = 0, $2868 = 0, $2869 = 0, $287 = 0, $2870 = 0, $2871 = 0, $2872 = 0;
 var $2873 = 0, $2874 = 0, $2875 = 0, $2876 = 0, $2877 = 0, $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $2885 = 0, $2886 = 0, $2887 = 0, $2888 = 0, $2889 = 0, $289 = 0, $2890 = 0;
 var $2891 = 0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0, $2896 = 0, $2897 = 0, $2898 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $2902 = 0, $2903 = 0, $2904 = 0, $2905 = 0, $2906 = 0, $2907 = 0, $2908 = 0;
 var $2909 = 0, $291 = 0, $2910 = 0, $2911 = 0, $2912 = 0, $2913 = 0, $2914 = 0, $2915 = 0, $2916 = 0, $2917 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2921 = 0, $2922 = 0, $2923 = 0, $2924 = 0, $2925 = 0, $2926 = 0;
 var $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2934 = 0, $2935 = 0, $2936 = 0, $2937 = 0, $2938 = 0, $2939 = 0, $294 = 0, $2940 = 0, $2941 = 0, $2942 = 0, $2943 = 0, $2944 = 0;
 var $2945 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $2949 = 0, $295 = 0, $2950 = 0, $2951 = 0, $2952 = 0, $2953 = 0, $2954 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $2959 = 0, $296 = 0, $2960 = 0, $2961 = 0, $2962 = 0;
 var $2963 = 0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0, $2968 = 0, $2969 = 0, $297 = 0, $2970 = 0, $2971 = 0, $2972 = 0, $2973 = 0, $2974 = 0, $2975 = 0, $2976 = 0, $2977 = 0, $2978 = 0, $2979 = 0, $298 = 0, $2980 = 0;
 var $2981 = 0, $2982 = 0, $2983 = 0, $2984 = 0, $2985 = 0, $2986 = 0, $2987 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2991 = 0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0, $2996 = 0, $2997 = 0, $2998 = 0, $2999 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $3001 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0, $3013 = 0, $3014 = 0, $3015 = 0;
 var $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0, $3023 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0, $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0, $3031 = 0, $3032 = 0, $3033 = 0;
 var $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0, $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0, $3049 = 0, $305 = 0, $3050 = 0, $3051 = 0;
 var $3052 = 0, $3053 = 0, $3054 = 0, $3055 = 0, $3056 = 0, $3057 = 0, $3058 = 0, $3059 = 0, $306 = 0, $3060 = 0, $3061 = 0, $3062 = 0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0, $3067 = 0, $3068 = 0, $3069 = 0, $307 = 0;
 var $3070 = 0, $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3080 = 0, $3081 = 0, $3082 = 0, $3083 = 0, $3084 = 0, $3085 = 0, $3086 = 0, $3087 = 0, $3088 = 0;
 var $3089 = 0, $309 = 0, $3090 = 0, $3091 = 0, $3092 = 0, $3093 = 0, $3094 = 0, $3095 = 0, $3096 = 0, $3097 = 0, $3098 = 0, $3099 = 0, $31 = 0, $310 = 0, $3100 = 0, $3101 = 0, $3102 = 0, $3103 = 0, $3104 = 0, $3105 = 0;
 var $3106 = 0, $3107 = 0, $3108 = 0, $3109 = 0, $311 = 0, $3110 = 0, $3111 = 0, $3112 = 0, $3113 = 0, $3114 = 0, $3115 = 0, $3116 = 0, $3117 = 0, $3118 = 0, $3119 = 0, $312 = 0, $3120 = 0, $3121 = 0, $3122 = 0, $3123 = 0;
 var $3124 = 0, $3125 = 0, $3126 = 0, $3127 = 0, $3128 = 0, $3129 = 0, $313 = 0, $3130 = 0, $3131 = 0, $3132 = 0, $3133 = 0, $3134 = 0, $3135 = 0, $3136 = 0, $3137 = 0, $3138 = 0, $3139 = 0, $314 = 0, $3140 = 0, $3141 = 0;
 var $3142 = 0, $3143 = 0, $3144 = 0, $3145 = 0, $3146 = 0, $3147 = 0, $3148 = 0, $3149 = 0, $315 = 0, $3150 = 0, $3151 = 0, $3152 = 0, $3153 = 0, $3154 = 0, $3155 = 0, $3156 = 0, $3157 = 0, $3158 = 0, $3159 = 0, $316 = 0;
 var $3160 = 0, $3161 = 0, $3162 = 0, $3163 = 0, $3164 = 0, $3165 = 0, $3166 = 0, $3167 = 0, $3168 = 0, $3169 = 0, $317 = 0, $3170 = 0, $3171 = 0, $3172 = 0, $3173 = 0, $3174 = 0, $3175 = 0, $3176 = 0, $3177 = 0, $3178 = 0;
 var $3179 = 0, $318 = 0, $3180 = 0, $3181 = 0, $3182 = 0, $3183 = 0, $3184 = 0, $3185 = 0, $3186 = 0, $3187 = 0, $3188 = 0, $3189 = 0, $319 = 0, $3190 = 0, $3191 = 0, $3192 = 0, $3193 = 0, $3194 = 0, $3195 = 0, $3196 = 0;
 var $3197 = 0, $3198 = 0, $3199 = 0, $32 = 0, $320 = 0, $3200 = 0, $3201 = 0, $3202 = 0, $3203 = 0, $3204 = 0, $3205 = 0, $3206 = 0, $3207 = 0, $3208 = 0, $3209 = 0, $321 = 0, $3210 = 0, $3211 = 0, $3212 = 0, $3213 = 0;
 var $3214 = 0, $3215 = 0, $3216 = 0, $3217 = 0, $3218 = 0, $3219 = 0, $322 = 0, $3220 = 0, $3221 = 0, $3222 = 0, $3223 = 0, $3224 = 0, $3225 = 0, $3226 = 0, $3227 = 0, $3228 = 0, $3229 = 0, $323 = 0, $3230 = 0, $3231 = 0;
 var $3232 = 0, $3233 = 0, $3234 = 0, $3235 = 0, $3236 = 0, $3237 = 0, $3238 = 0, $3239 = 0, $324 = 0, $3240 = 0, $3241 = 0, $3242 = 0, $3243 = 0, $3244 = 0, $3245 = 0, $3246 = 0, $3247 = 0, $3248 = 0, $3249 = 0, $325 = 0;
 var $3250 = 0, $3251 = 0, $3252 = 0, $3253 = 0, $3254 = 0, $3255 = 0, $3256 = 0, $3257 = 0, $3258 = 0, $3259 = 0, $326 = 0, $3260 = 0, $3261 = 0, $3262 = 0, $3263 = 0, $3264 = 0, $3265 = 0, $3266 = 0, $3267 = 0, $3268 = 0;
 var $3269 = 0, $327 = 0, $3270 = 0, $3271 = 0, $3272 = 0, $3273 = 0, $3274 = 0, $3275 = 0, $3276 = 0, $3277 = 0, $3278 = 0, $3279 = 0, $328 = 0, $3280 = 0, $3281 = 0, $3282 = 0, $3283 = 0, $3284 = 0, $3285 = 0, $3286 = 0;
 var $3287 = 0, $3288 = 0, $3289 = 0, $329 = 0, $3290 = 0, $3291 = 0, $3292 = 0, $3293 = 0, $3294 = 0, $3295 = 0, $3296 = 0, $3297 = 0, $3298 = 0, $3299 = 0, $33 = 0, $330 = 0, $3300 = 0, $3301 = 0, $3302 = 0, $3303 = 0;
 var $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $3309 = 0, $331 = 0, $3310 = 0, $3311 = 0, $3312 = 0, $3313 = 0, $3314 = 0, $3315 = 0, $3316 = 0, $3317 = 0, $3318 = 0, $3319 = 0, $332 = 0, $3320 = 0, $3321 = 0;
 var $3322 = 0, $3323 = 0, $3324 = 0, $3325 = 0, $3326 = 0, $3327 = 0, $3328 = 0, $3329 = 0, $333 = 0, $3330 = 0, $3331 = 0, $3332 = 0, $3333 = 0, $3334 = 0, $3335 = 0, $3336 = 0, $3337 = 0, $3338 = 0, $3339 = 0, $334 = 0;
 var $3340 = 0, $3341 = 0, $3342 = 0, $3343 = 0, $3344 = 0, $3345 = 0, $3346 = 0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0, $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $3354 = 0, $3355 = 0, $3356 = 0, $3357 = 0, $3358 = 0;
 var $3359 = 0, $336 = 0, $3360 = 0, $3361 = 0, $3362 = 0, $3363 = 0, $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0, $3368 = 0, $3369 = 0, $337 = 0, $3370 = 0, $3371 = 0, $3372 = 0, $3373 = 0, $3374 = 0, $3375 = 0, $3376 = 0;
 var $3377 = 0, $3378 = 0, $3379 = 0, $338 = 0, $3380 = 0, $3381 = 0, $3382 = 0, $3383 = 0, $3384 = 0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0, $3389 = 0, $339 = 0, $3390 = 0, $3391 = 0, $3392 = 0, $3393 = 0, $3394 = 0;
 var $3395 = 0, $3396 = 0, $3397 = 0, $3398 = 0, $3399 = 0, $34 = 0, $340 = 0, $3400 = 0, $3401 = 0, $3402 = 0, $3403 = 0, $3404 = 0, $3405 = 0, $3406 = 0, $3407 = 0, $3408 = 0, $3409 = 0, $341 = 0, $3410 = 0, $3411 = 0;
 var $3412 = 0, $3413 = 0, $3414 = 0, $3415 = 0, $3416 = 0, $3417 = 0, $3418 = 0, $3419 = 0, $342 = 0, $3420 = 0, $3421 = 0, $3422 = 0, $3423 = 0, $3424 = 0, $3425 = 0, $3426 = 0, $3427 = 0, $3428 = 0, $3429 = 0, $343 = 0;
 var $3430 = 0, $3431 = 0, $3432 = 0, $3433 = 0, $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0, $3441 = 0, $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0, $3446 = 0, $3447 = 0, $3448 = 0;
 var $3449 = 0, $345 = 0, $3450 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0, $3460 = 0, $3461 = 0, $3462 = 0, $3463 = 0, $3464 = 0, $3465 = 0, $3466 = 0;
 var $3467 = 0, $3468 = 0, $3469 = 0, $347 = 0, $3470 = 0, $3471 = 0, $3472 = 0, $3473 = 0, $3474 = 0, $3475 = 0, $3476 = 0, $3477 = 0, $3478 = 0, $3479 = 0, $348 = 0, $3480 = 0, $3481 = 0, $3482 = 0, $3483 = 0, $3484 = 0;
 var $3485 = 0, $3486 = 0, $3487 = 0, $3488 = 0, $3489 = 0, $349 = 0, $3490 = 0, $3491 = 0, $3492 = 0, $3493 = 0, $3494 = 0, $3495 = 0, $3496 = 0, $3497 = 0, $3498 = 0, $3499 = 0, $35 = 0, $350 = 0, $3500 = 0, $3501 = 0;
 var $3502 = 0, $3503 = 0, $3504 = 0, $3505 = 0, $3506 = 0, $3507 = 0, $3508 = 0, $3509 = 0, $351 = 0, $3510 = 0, $3511 = 0, $3512 = 0, $3513 = 0, $3514 = 0, $3515 = 0, $3516 = 0, $3517 = 0, $3518 = 0, $3519 = 0, $352 = 0;
 var $3520 = 0, $3521 = 0, $3522 = 0, $3523 = 0, $3524 = 0, $3525 = 0, $3526 = 0, $3527 = 0, $3528 = 0, $3529 = 0, $353 = 0, $3530 = 0, $3531 = 0, $3532 = 0, $3533 = 0, $3534 = 0, $3535 = 0, $3536 = 0, $3537 = 0, $3538 = 0;
 var $3539 = 0, $354 = 0, $3540 = 0, $3541 = 0, $3542 = 0, $3543 = 0, $3544 = 0, $3545 = 0, $3546 = 0, $3547 = 0, $3548 = 0, $3549 = 0, $355 = 0, $3550 = 0, $3551 = 0, $3552 = 0, $3553 = 0, $3554 = 0, $3555 = 0, $3556 = 0;
 var $3557 = 0, $3558 = 0, $3559 = 0, $356 = 0, $3560 = 0, $3561 = 0, $3562 = 0, $3563 = 0, $3564 = 0, $3565 = 0, $3566 = 0, $3567 = 0, $3568 = 0, $3569 = 0, $357 = 0, $3570 = 0, $3571 = 0, $3572 = 0, $3573 = 0, $3574 = 0;
 var $3575 = 0, $3576 = 0, $3577 = 0, $3578 = 0, $3579 = 0, $358 = 0, $3580 = 0, $3581 = 0, $3582 = 0, $3583 = 0, $3584 = 0, $3585 = 0, $3586 = 0, $3587 = 0, $3588 = 0, $3589 = 0, $359 = 0, $3590 = 0, $3591 = 0, $3592 = 0;
 var $3593 = 0, $3594 = 0, $3595 = 0, $3596 = 0, $3597 = 0, $3598 = 0, $3599 = 0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0, $3602 = 0, $3603 = 0, $3604 = 0, $3605 = 0, $3606 = 0, $3607 = 0, $3608 = 0, $3609 = 0, $361 = 0;
 var $3610 = 0, $3611 = 0, $3612 = 0, $3613 = 0, $3614 = 0, $3615 = 0, $3616 = 0, $3617 = 0, $3618 = 0, $3619 = 0, $362 = 0, $3620 = 0, $3621 = 0, $3622 = 0, $3623 = 0, $3624 = 0, $3625 = 0, $3626 = 0, $3627 = 0, $3628 = 0;
 var $3629 = 0, $363 = 0, $3630 = 0, $3631 = 0, $3632 = 0, $3633 = 0, $3634 = 0, $3635 = 0, $3636 = 0, $3637 = 0, $3638 = 0, $3639 = 0, $364 = 0, $3640 = 0, $3641 = 0, $3642 = 0, $3643 = 0, $3644 = 0, $3645 = 0, $3646 = 0;
 var $3647 = 0, $3648 = 0, $3649 = 0, $365 = 0, $3650 = 0, $3651 = 0, $3652 = 0, $3653 = 0, $3654 = 0, $3655 = 0, $3656 = 0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0, $3662 = 0, $3663 = 0, $3664 = 0;
 var $3665 = 0, $3666 = 0, $3667 = 0, $3668 = 0, $3669 = 0, $367 = 0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0, $3676 = 0, $3677 = 0, $3678 = 0, $3679 = 0, $368 = 0, $3680 = 0, $3681 = 0, $3682 = 0;
 var $3683 = 0, $3684 = 0, $3685 = 0, $3686 = 0, $3687 = 0, $3688 = 0, $3689 = 0, $369 = 0, $3690 = 0, $3691 = 0, $3692 = 0, $3693 = 0, $3694 = 0, $3695 = 0, $3696 = 0, $3697 = 0, $3698 = 0, $3699 = 0, $37 = 0, $370 = 0;
 var $3700 = 0, $3701 = 0, $3702 = 0, $3703 = 0, $3704 = 0, $3705 = 0, $3706 = 0, $3707 = 0, $3708 = 0, $3709 = 0, $371 = 0, $3710 = 0, $3711 = 0, $3712 = 0, $3713 = 0, $3714 = 0, $3715 = 0, $3716 = 0, $3717 = 0, $3718 = 0;
 var $3719 = 0, $372 = 0, $3720 = 0, $3721 = 0, $3722 = 0, $3723 = 0, $3724 = 0, $3725 = 0, $3726 = 0, $3727 = 0, $3728 = 0, $3729 = 0, $373 = 0, $3730 = 0, $3731 = 0, $3732 = 0, $3733 = 0, $3734 = 0, $3735 = 0, $3736 = 0;
 var $3737 = 0, $3738 = 0, $3739 = 0, $374 = 0, $3740 = 0, $3741 = 0, $3742 = 0, $3743 = 0, $3744 = 0, $3745 = 0, $3746 = 0, $3747 = 0, $3748 = 0, $3749 = 0, $375 = 0, $3750 = 0, $3751 = 0, $3752 = 0, $3753 = 0, $3754 = 0;
 var $3755 = 0, $3756 = 0, $3757 = 0, $3758 = 0, $3759 = 0, $376 = 0, $3760 = 0, $3761 = 0, $3762 = 0, $3763 = 0, $3764 = 0, $3765 = 0, $3766 = 0, $3767 = 0, $3768 = 0, $3769 = 0, $377 = 0, $3770 = 0, $3771 = 0, $3772 = 0;
 var $3773 = 0, $3774 = 0, $3775 = 0, $3776 = 0, $3777 = 0, $3778 = 0, $3779 = 0, $378 = 0, $3780 = 0, $3781 = 0, $3782 = 0, $3783 = 0, $3784 = 0, $3785 = 0, $3786 = 0, $3787 = 0, $3788 = 0, $3789 = 0, $379 = 0, $3790 = 0;
 var $3791 = 0, $3792 = 0, $3793 = 0, $3794 = 0, $3795 = 0, $3796 = 0, $3797 = 0, $3798 = 0, $3799 = 0, $38 = 0, $380 = 0, $3800 = 0, $3801 = 0, $3802 = 0, $3803 = 0, $3804 = 0, $3805 = 0, $3806 = 0, $3807 = 0, $3808 = 0;
 var $3809 = 0, $381 = 0, $3810 = 0, $3811 = 0, $3812 = 0, $3813 = 0, $3814 = 0, $3815 = 0, $3816 = 0, $3817 = 0, $3818 = 0, $3819 = 0, $382 = 0, $3820 = 0, $3821 = 0, $3822 = 0, $3823 = 0, $3824 = 0, $3825 = 0, $3826 = 0;
 var $3827 = 0, $3828 = 0, $3829 = 0, $383 = 0, $3830 = 0, $3831 = 0, $3832 = 0, $3833 = 0, $3834 = 0, $3835 = 0, $3836 = 0, $3837 = 0, $3838 = 0, $3839 = 0, $384 = 0, $3840 = 0, $3841 = 0, $3842 = 0, $3843 = 0, $3844 = 0;
 var $3845 = 0, $3846 = 0, $3847 = 0, $3848 = 0, $3849 = 0, $385 = 0, $3850 = 0, $3851 = 0, $3852 = 0, $3853 = 0, $3854 = 0, $3855 = 0, $3856 = 0, $3857 = 0, $3858 = 0, $3859 = 0, $386 = 0, $3860 = 0, $3861 = 0, $3862 = 0;
 var $3863 = 0, $3864 = 0, $3865 = 0, $3866 = 0, $3867 = 0, $3868 = 0, $3869 = 0, $387 = 0, $3870 = 0, $3871 = 0, $3872 = 0, $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0, $3878 = 0, $3879 = 0, $388 = 0, $3880 = 0;
 var $3881 = 0, $3882 = 0, $3883 = 0, $3884 = 0, $3885 = 0, $3886 = 0, $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0, $3890 = 0, $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0, $3895 = 0, $3896 = 0, $3897 = 0, $3898 = 0, $3899 = 0;
 var $39 = 0, $390 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0, $3909 = 0, $391 = 0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0, $3914 = 0, $3915 = 0, $3916 = 0;
 var $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0, $3920 = 0, $3921 = 0, $3922 = 0, $3923 = 0, $3924 = 0, $3925 = 0, $3926 = 0, $3927 = 0, $3928 = 0, $3929 = 0, $393 = 0, $3930 = 0, $3931 = 0, $3932 = 0, $3933 = 0, $3934 = 0;
 var $3935 = 0, $3936 = 0, $3937 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3940 = 0, $3941 = 0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3946 = 0, $3947 = 0, $3948 = 0, $3949 = 0, $395 = 0, $3950 = 0, $3951 = 0, $3952 = 0;
 var $3953 = 0, $3954 = 0, $3955 = 0, $3956 = 0, $3957 = 0, $3958 = 0, $3959 = 0, $396 = 0, $3960 = 0, $3961 = 0, $3962 = 0, $3963 = 0, $3964 = 0, $3965 = 0, $3966 = 0, $3967 = 0, $3968 = 0, $3969 = 0, $397 = 0, $3970 = 0;
 var $3971 = 0, $3972 = 0, $3973 = 0, $3974 = 0, $3975 = 0, $3976 = 0, $3977 = 0, $3978 = 0, $3979 = 0, $398 = 0, $3980 = 0, $3981 = 0, $3982 = 0, $3983 = 0, $3984 = 0, $3985 = 0, $3986 = 0, $3987 = 0, $3988 = 0, $3989 = 0;
 var $399 = 0, $3990 = 0, $3991 = 0, $3992 = 0, $3993 = 0, $3994 = 0, $3995 = 0, $3996 = 0, $3997 = 0, $3998 = 0, $3999 = 0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0, $4001 = 0, $4002 = 0, $4003 = 0, $4004 = 0, $4005 = 0;
 var $4006 = 0, $4007 = 0, $4008 = 0, $4009 = 0, $401 = 0, $4010 = 0, $4011 = 0, $4012 = 0, $4013 = 0, $4014 = 0, $4015 = 0, $4016 = 0, $4017 = 0, $4018 = 0, $4019 = 0, $402 = 0, $4020 = 0, $4021 = 0, $4022 = 0, $4023 = 0;
 var $4024 = 0, $4025 = 0, $4026 = 0, $4027 = 0, $4028 = 0, $4029 = 0, $403 = 0, $4030 = 0, $4031 = 0, $4032 = 0, $4033 = 0, $4034 = 0, $4035 = 0, $4036 = 0, $4037 = 0, $4038 = 0, $4039 = 0, $404 = 0, $4040 = 0, $4041 = 0;
 var $4042 = 0, $4043 = 0, $4044 = 0, $4045 = 0, $4046 = 0, $4047 = 0, $4048 = 0, $4049 = 0, $405 = 0, $4050 = 0, $4051 = 0, $4052 = 0, $4053 = 0, $4054 = 0, $4055 = 0, $4056 = 0, $4057 = 0, $4058 = 0, $4059 = 0, $406 = 0;
 var $4060 = 0, $4061 = 0, $4062 = 0, $4063 = 0, $4064 = 0, $4065 = 0, $4066 = 0, $4067 = 0, $4068 = 0, $4069 = 0, $407 = 0, $4070 = 0, $4071 = 0, $4072 = 0, $4073 = 0, $4074 = 0, $4075 = 0, $4076 = 0, $4077 = 0, $4078 = 0;
 var $4079 = 0, $408 = 0, $4080 = 0, $4081 = 0, $4082 = 0, $4083 = 0, $4084 = 0, $4085 = 0, $4086 = 0, $4087 = 0, $4088 = 0, $4089 = 0, $409 = 0, $4090 = 0, $4091 = 0, $4092 = 0, $4093 = 0, $4094 = 0, $4095 = 0, $4096 = 0;
 var $4097 = 0, $4098 = 0, $4099 = 0, $41 = 0, $410 = 0, $4100 = 0, $4101 = 0, $4102 = 0, $4103 = 0, $4104 = 0, $4105 = 0, $4106 = 0, $4107 = 0, $4108 = 0, $4109 = 0, $411 = 0, $4110 = 0, $4111 = 0, $4112 = 0, $4113 = 0;
 var $4114 = 0, $4115 = 0, $4116 = 0, $4117 = 0, $4118 = 0, $4119 = 0, $412 = 0, $4120 = 0, $4121 = 0, $4122 = 0, $4123 = 0, $4124 = 0, $4125 = 0, $4126 = 0, $4127 = 0, $4128 = 0, $4129 = 0, $413 = 0, $4130 = 0, $4131 = 0;
 var $4132 = 0, $4133 = 0, $4134 = 0, $4135 = 0, $4136 = 0, $4137 = 0, $4138 = 0, $4139 = 0, $414 = 0, $4140 = 0, $4141 = 0, $4142 = 0, $4143 = 0, $4144 = 0, $4145 = 0, $4146 = 0, $4147 = 0, $4148 = 0, $4149 = 0, $415 = 0;
 var $4150 = 0, $4151 = 0, $4152 = 0, $4153 = 0, $4154 = 0, $4155 = 0, $4156 = 0, $4157 = 0, $4158 = 0, $4159 = 0, $416 = 0, $4160 = 0, $4161 = 0, $4162 = 0, $4163 = 0, $4164 = 0, $4165 = 0, $4166 = 0, $4167 = 0, $4168 = 0;
 var $4169 = 0, $417 = 0, $4170 = 0, $4171 = 0, $4172 = 0, $4173 = 0, $4174 = 0, $4175 = 0, $4176 = 0, $4177 = 0, $4178 = 0, $4179 = 0, $418 = 0, $4180 = 0, $4181 = 0, $4182 = 0, $4183 = 0, $4184 = 0, $4185 = 0, $4186 = 0;
 var $4187 = 0, $4188 = 0, $4189 = 0, $419 = 0, $4190 = 0, $4191 = 0, $4192 = 0, $4193 = 0, $4194 = 0, $4195 = 0, $4196 = 0, $4197 = 0, $4198 = 0, $4199 = 0, $42 = 0, $420 = 0, $4200 = 0, $4201 = 0, $4202 = 0, $4203 = 0;
 var $4204 = 0, $4205 = 0, $4206 = 0, $4207 = 0, $4208 = 0, $4209 = 0, $421 = 0, $4210 = 0, $4211 = 0, $4212 = 0, $4213 = 0, $4214 = 0, $4215 = 0, $4216 = 0, $4217 = 0, $4218 = 0, $4219 = 0, $422 = 0, $4220 = 0, $4221 = 0;
 var $4222 = 0, $4223 = 0, $4224 = 0, $4225 = 0, $4226 = 0, $4227 = 0, $4228 = 0, $4229 = 0, $423 = 0, $4230 = 0, $4231 = 0, $4232 = 0, $4233 = 0, $4234 = 0, $4235 = 0, $4236 = 0, $4237 = 0, $4238 = 0, $4239 = 0, $424 = 0;
 var $4240 = 0, $4241 = 0, $4242 = 0, $4243 = 0, $4244 = 0, $4245 = 0, $4246 = 0, $4247 = 0, $4248 = 0, $4249 = 0, $425 = 0, $4250 = 0, $4251 = 0, $4252 = 0, $4253 = 0, $4254 = 0, $4255 = 0, $4256 = 0, $4257 = 0, $4258 = 0;
 var $4259 = 0, $426 = 0, $4260 = 0, $4261 = 0, $4262 = 0, $4263 = 0, $4264 = 0, $4265 = 0, $4266 = 0, $4267 = 0, $4268 = 0, $4269 = 0, $427 = 0, $4270 = 0, $4271 = 0, $4272 = 0, $4273 = 0, $4274 = 0, $4275 = 0, $4276 = 0;
 var $4277 = 0, $4278 = 0, $4279 = 0, $428 = 0, $4280 = 0, $4281 = 0, $4282 = 0, $4283 = 0, $4284 = 0, $4285 = 0, $4286 = 0, $4287 = 0, $4288 = 0, $4289 = 0, $429 = 0, $4290 = 0, $4291 = 0, $4292 = 0, $4293 = 0, $4294 = 0;
 var $4295 = 0, $4296 = 0, $4297 = 0, $4298 = 0, $4299 = 0, $43 = 0, $430 = 0, $4300 = 0, $4301 = 0, $4302 = 0, $4303 = 0, $4304 = 0, $4305 = 0, $4306 = 0, $4307 = 0, $4308 = 0, $4309 = 0, $431 = 0, $4310 = 0, $4311 = 0;
 var $4312 = 0, $4313 = 0, $4314 = 0, $4315 = 0, $4316 = 0, $4317 = 0, $4318 = 0, $4319 = 0, $432 = 0, $4320 = 0, $4321 = 0, $4322 = 0, $4323 = 0, $4324 = 0, $4325 = 0, $4326 = 0, $4327 = 0, $4328 = 0, $4329 = 0, $433 = 0;
 var $4330 = 0, $4331 = 0, $4332 = 0, $4333 = 0, $4334 = 0, $4335 = 0, $4336 = 0, $4337 = 0, $4338 = 0, $4339 = 0, $434 = 0, $4340 = 0, $4341 = 0, $4342 = 0, $4343 = 0, $4344 = 0, $4345 = 0, $4346 = 0, $4347 = 0, $4348 = 0;
 var $4349 = 0, $435 = 0, $4350 = 0, $4351 = 0, $4352 = 0, $4353 = 0, $4354 = 0, $4355 = 0, $4356 = 0, $4357 = 0, $4358 = 0, $4359 = 0, $436 = 0, $4360 = 0, $4361 = 0, $4362 = 0, $4363 = 0, $4364 = 0, $4365 = 0, $4366 = 0;
 var $4367 = 0, $4368 = 0, $4369 = 0, $437 = 0, $4370 = 0, $4371 = 0, $4372 = 0, $4373 = 0, $4374 = 0, $4375 = 0, $4376 = 0, $4377 = 0, $4378 = 0, $4379 = 0, $438 = 0, $4380 = 0, $4381 = 0, $4382 = 0, $4383 = 0, $4384 = 0;
 var $4385 = 0, $4386 = 0, $4387 = 0, $4388 = 0, $4389 = 0, $439 = 0, $4390 = 0, $4391 = 0, $4392 = 0, $4393 = 0, $4394 = 0, $4395 = 0, $4396 = 0, $4397 = 0, $4398 = 0, $4399 = 0, $44 = 0, $440 = 0, $4400 = 0, $4401 = 0;
 var $4402 = 0, $4403 = 0, $4404 = 0, $4405 = 0, $4406 = 0, $4407 = 0, $4408 = 0, $4409 = 0, $441 = 0, $4410 = 0, $4411 = 0, $4412 = 0, $4413 = 0, $4414 = 0, $4415 = 0, $4416 = 0, $4417 = 0, $4418 = 0, $4419 = 0, $442 = 0;
 var $4420 = 0, $4421 = 0, $4422 = 0, $4423 = 0, $4424 = 0, $4425 = 0, $4426 = 0, $4427 = 0, $4428 = 0, $4429 = 0, $443 = 0, $4430 = 0, $4431 = 0, $4432 = 0, $4433 = 0, $4434 = 0, $4435 = 0, $4436 = 0, $4437 = 0, $4438 = 0;
 var $4439 = 0, $444 = 0, $4440 = 0, $4441 = 0, $4442 = 0, $4443 = 0, $4444 = 0, $4445 = 0, $4446 = 0, $4447 = 0, $4448 = 0, $4449 = 0, $445 = 0, $4450 = 0, $4451 = 0, $4452 = 0, $4453 = 0, $4454 = 0, $4455 = 0, $4456 = 0;
 var $4457 = 0, $4458 = 0, $4459 = 0, $446 = 0, $4460 = 0, $4461 = 0, $4462 = 0, $4463 = 0, $4464 = 0, $4465 = 0, $4466 = 0, $4467 = 0, $4468 = 0, $4469 = 0, $447 = 0, $4470 = 0, $4471 = 0, $4472 = 0, $4473 = 0, $4474 = 0;
 var $4475 = 0, $4476 = 0, $4477 = 0, $4478 = 0, $4479 = 0, $448 = 0, $4480 = 0, $4481 = 0, $4482 = 0, $4483 = 0, $4484 = 0, $4485 = 0, $4486 = 0, $4487 = 0, $4488 = 0, $4489 = 0, $449 = 0, $4490 = 0, $4491 = 0, $4492 = 0;
 var $4493 = 0, $4494 = 0, $4495 = 0, $4496 = 0, $4497 = 0, $4498 = 0, $4499 = 0, $45 = 0, $450 = 0, $4500 = 0, $4501 = 0, $4502 = 0, $4503 = 0, $4504 = 0, $4505 = 0, $4506 = 0, $4507 = 0, $4508 = 0, $4509 = 0, $451 = 0;
 var $4510 = 0, $4511 = 0, $4512 = 0, $4513 = 0, $4514 = 0, $4515 = 0, $4516 = 0, $4517 = 0, $4518 = 0, $4519 = 0, $452 = 0, $4520 = 0, $4521 = 0, $4522 = 0, $4523 = 0, $4524 = 0, $4525 = 0, $4526 = 0, $4527 = 0, $4528 = 0;
 var $4529 = 0, $453 = 0, $4530 = 0, $4531 = 0, $4532 = 0, $4533 = 0, $4534 = 0, $4535 = 0, $4536 = 0, $4537 = 0, $4538 = 0, $4539 = 0, $454 = 0, $4540 = 0, $4541 = 0, $4542 = 0, $4543 = 0, $4544 = 0, $4545 = 0, $4546 = 0;
 var $4547 = 0, $4548 = 0, $4549 = 0, $455 = 0, $4550 = 0, $4551 = 0, $4552 = 0, $4553 = 0, $4554 = 0, $4555 = 0, $4556 = 0, $4557 = 0, $4558 = 0, $4559 = 0, $456 = 0, $4560 = 0, $4561 = 0, $4562 = 0, $4563 = 0, $4564 = 0;
 var $4565 = 0, $4566 = 0, $4567 = 0, $4568 = 0, $4569 = 0, $457 = 0, $4570 = 0, $4571 = 0, $4572 = 0, $4573 = 0, $4574 = 0, $4575 = 0, $4576 = 0, $4577 = 0, $4578 = 0, $4579 = 0, $458 = 0, $4580 = 0, $4581 = 0, $4582 = 0;
 var $4583 = 0, $4584 = 0, $4585 = 0, $4586 = 0, $4587 = 0, $4588 = 0, $4589 = 0, $459 = 0, $4590 = 0, $4591 = 0, $4592 = 0, $4593 = 0, $4594 = 0, $4595 = 0, $4596 = 0, $4597 = 0, $4598 = 0, $4599 = 0, $46 = 0, $460 = 0;
 var $4600 = 0, $4601 = 0, $4602 = 0, $4603 = 0, $4604 = 0, $4605 = 0, $4606 = 0, $4607 = 0, $4608 = 0, $4609 = 0, $461 = 0, $4610 = 0, $4611 = 0, $4612 = 0, $4613 = 0, $4614 = 0, $4615 = 0, $4616 = 0, $4617 = 0, $4618 = 0;
 var $4619 = 0, $462 = 0, $4620 = 0, $4621 = 0, $4622 = 0, $4623 = 0, $4624 = 0, $4625 = 0, $4626 = 0, $4627 = 0, $4628 = 0, $4629 = 0, $463 = 0, $4630 = 0, $4631 = 0, $4632 = 0, $4633 = 0, $4634 = 0, $4635 = 0, $4636 = 0;
 var $4637 = 0, $4638 = 0, $4639 = 0, $464 = 0, $4640 = 0, $4641 = 0, $4642 = 0, $4643 = 0, $4644 = 0, $4645 = 0, $4646 = 0, $4647 = 0, $4648 = 0, $4649 = 0, $465 = 0, $4650 = 0, $4651 = 0, $4652 = 0, $4653 = 0, $4654 = 0;
 var $4655 = 0, $4656 = 0, $4657 = 0, $4658 = 0, $4659 = 0, $466 = 0, $4660 = 0, $4661 = 0, $4662 = 0, $4663 = 0, $4664 = 0, $4665 = 0, $4666 = 0, $4667 = 0, $4668 = 0, $4669 = 0, $467 = 0, $4670 = 0, $4671 = 0, $4672 = 0;
 var $4673 = 0, $4674 = 0, $4675 = 0, $4676 = 0, $4677 = 0, $4678 = 0, $4679 = 0, $468 = 0, $4680 = 0, $4681 = 0, $4682 = 0, $4683 = 0, $4684 = 0, $4685 = 0, $4686 = 0, $4687 = 0, $4688 = 0, $4689 = 0, $469 = 0, $4690 = 0;
 var $4691 = 0, $4692 = 0, $4693 = 0, $4694 = 0, $4695 = 0, $4696 = 0, $4697 = 0, $4698 = 0, $4699 = 0, $47 = 0, $470 = 0, $4700 = 0, $4701 = 0, $4702 = 0, $4703 = 0, $4704 = 0, $4705 = 0, $4706 = 0, $4707 = 0, $4708 = 0;
 var $4709 = 0, $471 = 0, $4710 = 0, $4711 = 0, $4712 = 0, $4713 = 0, $4714 = 0, $4715 = 0, $4716 = 0, $4717 = 0, $4718 = 0, $4719 = 0, $472 = 0, $4720 = 0, $4721 = 0, $4722 = 0, $4723 = 0, $4724 = 0, $4725 = 0, $4726 = 0;
 var $4727 = 0, $4728 = 0, $4729 = 0, $473 = 0, $4730 = 0, $4731 = 0, $4732 = 0, $4733 = 0, $4734 = 0, $4735 = 0, $4736 = 0, $4737 = 0, $4738 = 0, $4739 = 0, $474 = 0, $4740 = 0, $4741 = 0, $4742 = 0, $4743 = 0, $4744 = 0;
 var $4745 = 0, $4746 = 0, $4747 = 0, $4748 = 0, $4749 = 0, $475 = 0, $4750 = 0, $4751 = 0, $4752 = 0, $4753 = 0, $4754 = 0, $4755 = 0, $4756 = 0, $4757 = 0, $4758 = 0, $4759 = 0, $476 = 0, $4760 = 0, $4761 = 0, $4762 = 0;
 var $4763 = 0, $4764 = 0, $4765 = 0, $4766 = 0, $4767 = 0, $4768 = 0, $4769 = 0, $477 = 0, $4770 = 0, $4771 = 0, $4772 = 0, $4773 = 0, $4774 = 0, $4775 = 0, $4776 = 0, $4777 = 0, $4778 = 0, $4779 = 0, $478 = 0, $4780 = 0;
 var $4781 = 0, $4782 = 0, $4783 = 0, $4784 = 0, $4785 = 0, $4786 = 0, $4787 = 0, $4788 = 0, $4789 = 0, $479 = 0, $4790 = 0, $4791 = 0, $4792 = 0, $4793 = 0, $4794 = 0, $4795 = 0, $4796 = 0, $4797 = 0, $4798 = 0, $4799 = 0;
 var $48 = 0, $480 = 0, $4800 = 0, $4801 = 0, $4802 = 0, $4803 = 0, $4804 = 0, $4805 = 0, $4806 = 0, $4807 = 0, $4808 = 0, $4809 = 0, $481 = 0, $4810 = 0, $4811 = 0, $4812 = 0, $4813 = 0, $4814 = 0, $4815 = 0, $4816 = 0;
 var $4817 = 0, $4818 = 0, $4819 = 0, $482 = 0, $4820 = 0, $4821 = 0, $4822 = 0, $4823 = 0, $4824 = 0, $4825 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0;
 var $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0;
 var $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0;
 var $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0;
 var $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0;
 var $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0;
 var $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0;
 var $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0;
 var $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0;
 var $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0;
 var $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0;
 var $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0;
 var $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0;
 var $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0;
 var $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0;
 var $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0;
 var $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0;
 var $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0;
 var $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0;
 var $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0;
 var $997 = 0, $998 = 0, $999 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 496|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(496|0);
 $6 = sp_a + 472|0;
 $7 = sp_a + 464|0;
 $8 = sp_a + 456|0;
 $9 = sp_a + 448|0;
 $10 = sp_a + 440|0;
 $11 = sp_a + 432|0;
 $12 = sp_a + 424|0;
 $13 = sp_a + 416|0;
 $14 = sp_a + 408|0;
 $15 = sp_a + 400|0;
 $16 = sp_a + 392|0;
 $17 = sp_a + 384|0;
 $18 = sp_a + 376|0;
 $19 = sp_a + 368|0;
 $20 = sp_a + 360|0;
 $21 = sp_a + 352|0;
 $22 = sp_a + 344|0;
 $23 = sp_a + 336|0;
 $24 = sp_a + 328|0;
 $25 = sp_a + 320|0;
 $26 = sp_a + 312|0;
 $27 = sp_a + 304|0;
 $28 = sp_a + 296|0;
 $29 = sp_a + 288|0;
 $30 = sp_a + 280|0;
 $31 = sp_a + 272|0;
 $32 = sp_a + 264|0;
 $33 = sp_a + 256|0;
 $34 = sp_a + 248|0;
 $35 = sp_a + 240|0;
 $36 = sp_a + 232|0;
 $37 = sp_a + 224|0;
 $38 = sp_a + 216|0;
 $39 = sp_a + 208|0;
 $40 = sp_a + 200|0;
 $41 = sp_a + 192|0;
 $42 = sp_a + 184|0;
 $43 = sp_a + 176|0;
 $44 = sp_a + 168|0;
 $45 = sp_a + 160|0;
 $46 = sp_a + 152|0;
 $47 = sp_a + 144|0;
 $48 = sp_a + 136|0;
 $49 = sp_a + 128|0;
 $50 = sp_a + 120|0;
 $51 = sp_a + 112|0;
 $52 = sp_a + 104|0;
 $53 = sp_a + 96|0;
 $54 = sp_a + 88|0;
 $55 = sp_a + 80|0;
 $56 = sp_a + 72|0;
 $57 = sp_a + 64|0;
 $58 = sp_a + 56|0;
 $59 = sp_a + 48|0;
 $60 = sp_a + 40|0;
 $61 = sp_a + 32|0;
 $62 = sp_a + 24|0;
 $63 = sp_a + 16|0;
 $64 = sp_a + 8|0;
 $65 = sp_a;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 while(1) {
  $66 = $5; //@line 132 "mcbits/Keccak-simple.c"
  $67 = (($66) + -1)|0; //@line 132 "mcbits/Keccak-simple.c"
  $5 = $67; //@line 132 "mcbits/Keccak-simple.c"
  $68 = ($67|0)>=(0); //@line 132 "mcbits/Keccak-simple.c"
  if (!($68)) {
   break;
  }
  $69 = $4; //@line 134 "mcbits/Keccak-simple.c"
  $70 = $5; //@line 134 "mcbits/Keccak-simple.c"
  $71 = (($69) + ($70<<3)|0); //@line 134 "mcbits/Keccak-simple.c"
  $72 = $71; //@line 134 "mcbits/Keccak-simple.c"
  $73 = $72; //@line 134 "mcbits/Keccak-simple.c"
  $74 = HEAP32[$73>>2]|0; //@line 134 "mcbits/Keccak-simple.c"
  $75 = (($72) + 4)|0; //@line 134 "mcbits/Keccak-simple.c"
  $76 = $75; //@line 134 "mcbits/Keccak-simple.c"
  $77 = HEAP32[$76>>2]|0; //@line 134 "mcbits/Keccak-simple.c"
  $78 = $3; //@line 134 "mcbits/Keccak-simple.c"
  $79 = $5; //@line 134 "mcbits/Keccak-simple.c"
  $80 = (($78) + ($79<<3)|0); //@line 134 "mcbits/Keccak-simple.c"
  $81 = $80; //@line 134 "mcbits/Keccak-simple.c"
  $82 = $81; //@line 134 "mcbits/Keccak-simple.c"
  $83 = HEAP32[$82>>2]|0; //@line 134 "mcbits/Keccak-simple.c"
  $84 = (($81) + 4)|0; //@line 134 "mcbits/Keccak-simple.c"
  $85 = $84; //@line 134 "mcbits/Keccak-simple.c"
  $86 = HEAP32[$85>>2]|0; //@line 134 "mcbits/Keccak-simple.c"
  $87 = $83 ^ $74; //@line 134 "mcbits/Keccak-simple.c"
  $88 = $86 ^ $77; //@line 134 "mcbits/Keccak-simple.c"
  $89 = $80; //@line 134 "mcbits/Keccak-simple.c"
  $90 = $89; //@line 134 "mcbits/Keccak-simple.c"
  HEAP32[$90>>2] = $87; //@line 134 "mcbits/Keccak-simple.c"
  $91 = (($89) + 4)|0; //@line 134 "mcbits/Keccak-simple.c"
  $92 = $91; //@line 134 "mcbits/Keccak-simple.c"
  HEAP32[$92>>2] = $88; //@line 134 "mcbits/Keccak-simple.c"
 }
 $93 = $3; //@line 154 "mcbits/Keccak-simple.c"
 $94 = $93; //@line 154 "mcbits/Keccak-simple.c"
 $95 = $94; //@line 154 "mcbits/Keccak-simple.c"
 $96 = HEAP32[$95>>2]|0; //@line 154 "mcbits/Keccak-simple.c"
 $97 = (($94) + 4)|0; //@line 154 "mcbits/Keccak-simple.c"
 $98 = $97; //@line 154 "mcbits/Keccak-simple.c"
 $99 = HEAP32[$98>>2]|0; //@line 154 "mcbits/Keccak-simple.c"
 $100 = $6; //@line 154 "mcbits/Keccak-simple.c"
 $101 = $100; //@line 154 "mcbits/Keccak-simple.c"
 HEAP32[$101>>2] = $96; //@line 154 "mcbits/Keccak-simple.c"
 $102 = (($100) + 4)|0; //@line 154 "mcbits/Keccak-simple.c"
 $103 = $102; //@line 154 "mcbits/Keccak-simple.c"
 HEAP32[$103>>2] = $99; //@line 154 "mcbits/Keccak-simple.c"
 $104 = $3; //@line 155 "mcbits/Keccak-simple.c"
 $105 = ((($104)) + 8|0); //@line 155 "mcbits/Keccak-simple.c"
 $106 = $105; //@line 155 "mcbits/Keccak-simple.c"
 $107 = $106; //@line 155 "mcbits/Keccak-simple.c"
 $108 = HEAP32[$107>>2]|0; //@line 155 "mcbits/Keccak-simple.c"
 $109 = (($106) + 4)|0; //@line 155 "mcbits/Keccak-simple.c"
 $110 = $109; //@line 155 "mcbits/Keccak-simple.c"
 $111 = HEAP32[$110>>2]|0; //@line 155 "mcbits/Keccak-simple.c"
 $112 = $7; //@line 155 "mcbits/Keccak-simple.c"
 $113 = $112; //@line 155 "mcbits/Keccak-simple.c"
 HEAP32[$113>>2] = $108; //@line 155 "mcbits/Keccak-simple.c"
 $114 = (($112) + 4)|0; //@line 155 "mcbits/Keccak-simple.c"
 $115 = $114; //@line 155 "mcbits/Keccak-simple.c"
 HEAP32[$115>>2] = $111; //@line 155 "mcbits/Keccak-simple.c"
 $116 = $3; //@line 156 "mcbits/Keccak-simple.c"
 $117 = ((($116)) + 16|0); //@line 156 "mcbits/Keccak-simple.c"
 $118 = $117; //@line 156 "mcbits/Keccak-simple.c"
 $119 = $118; //@line 156 "mcbits/Keccak-simple.c"
 $120 = HEAP32[$119>>2]|0; //@line 156 "mcbits/Keccak-simple.c"
 $121 = (($118) + 4)|0; //@line 156 "mcbits/Keccak-simple.c"
 $122 = $121; //@line 156 "mcbits/Keccak-simple.c"
 $123 = HEAP32[$122>>2]|0; //@line 156 "mcbits/Keccak-simple.c"
 $124 = $8; //@line 156 "mcbits/Keccak-simple.c"
 $125 = $124; //@line 156 "mcbits/Keccak-simple.c"
 HEAP32[$125>>2] = $120; //@line 156 "mcbits/Keccak-simple.c"
 $126 = (($124) + 4)|0; //@line 156 "mcbits/Keccak-simple.c"
 $127 = $126; //@line 156 "mcbits/Keccak-simple.c"
 HEAP32[$127>>2] = $123; //@line 156 "mcbits/Keccak-simple.c"
 $128 = $3; //@line 157 "mcbits/Keccak-simple.c"
 $129 = ((($128)) + 24|0); //@line 157 "mcbits/Keccak-simple.c"
 $130 = $129; //@line 157 "mcbits/Keccak-simple.c"
 $131 = $130; //@line 157 "mcbits/Keccak-simple.c"
 $132 = HEAP32[$131>>2]|0; //@line 157 "mcbits/Keccak-simple.c"
 $133 = (($130) + 4)|0; //@line 157 "mcbits/Keccak-simple.c"
 $134 = $133; //@line 157 "mcbits/Keccak-simple.c"
 $135 = HEAP32[$134>>2]|0; //@line 157 "mcbits/Keccak-simple.c"
 $136 = $9; //@line 157 "mcbits/Keccak-simple.c"
 $137 = $136; //@line 157 "mcbits/Keccak-simple.c"
 HEAP32[$137>>2] = $132; //@line 157 "mcbits/Keccak-simple.c"
 $138 = (($136) + 4)|0; //@line 157 "mcbits/Keccak-simple.c"
 $139 = $138; //@line 157 "mcbits/Keccak-simple.c"
 HEAP32[$139>>2] = $135; //@line 157 "mcbits/Keccak-simple.c"
 $140 = $3; //@line 158 "mcbits/Keccak-simple.c"
 $141 = ((($140)) + 32|0); //@line 158 "mcbits/Keccak-simple.c"
 $142 = $141; //@line 158 "mcbits/Keccak-simple.c"
 $143 = $142; //@line 158 "mcbits/Keccak-simple.c"
 $144 = HEAP32[$143>>2]|0; //@line 158 "mcbits/Keccak-simple.c"
 $145 = (($142) + 4)|0; //@line 158 "mcbits/Keccak-simple.c"
 $146 = $145; //@line 158 "mcbits/Keccak-simple.c"
 $147 = HEAP32[$146>>2]|0; //@line 158 "mcbits/Keccak-simple.c"
 $148 = $10; //@line 158 "mcbits/Keccak-simple.c"
 $149 = $148; //@line 158 "mcbits/Keccak-simple.c"
 HEAP32[$149>>2] = $144; //@line 158 "mcbits/Keccak-simple.c"
 $150 = (($148) + 4)|0; //@line 158 "mcbits/Keccak-simple.c"
 $151 = $150; //@line 158 "mcbits/Keccak-simple.c"
 HEAP32[$151>>2] = $147; //@line 158 "mcbits/Keccak-simple.c"
 $152 = $3; //@line 159 "mcbits/Keccak-simple.c"
 $153 = ((($152)) + 40|0); //@line 159 "mcbits/Keccak-simple.c"
 $154 = $153; //@line 159 "mcbits/Keccak-simple.c"
 $155 = $154; //@line 159 "mcbits/Keccak-simple.c"
 $156 = HEAP32[$155>>2]|0; //@line 159 "mcbits/Keccak-simple.c"
 $157 = (($154) + 4)|0; //@line 159 "mcbits/Keccak-simple.c"
 $158 = $157; //@line 159 "mcbits/Keccak-simple.c"
 $159 = HEAP32[$158>>2]|0; //@line 159 "mcbits/Keccak-simple.c"
 $160 = $11; //@line 159 "mcbits/Keccak-simple.c"
 $161 = $160; //@line 159 "mcbits/Keccak-simple.c"
 HEAP32[$161>>2] = $156; //@line 159 "mcbits/Keccak-simple.c"
 $162 = (($160) + 4)|0; //@line 159 "mcbits/Keccak-simple.c"
 $163 = $162; //@line 159 "mcbits/Keccak-simple.c"
 HEAP32[$163>>2] = $159; //@line 159 "mcbits/Keccak-simple.c"
 $164 = $3; //@line 160 "mcbits/Keccak-simple.c"
 $165 = ((($164)) + 48|0); //@line 160 "mcbits/Keccak-simple.c"
 $166 = $165; //@line 160 "mcbits/Keccak-simple.c"
 $167 = $166; //@line 160 "mcbits/Keccak-simple.c"
 $168 = HEAP32[$167>>2]|0; //@line 160 "mcbits/Keccak-simple.c"
 $169 = (($166) + 4)|0; //@line 160 "mcbits/Keccak-simple.c"
 $170 = $169; //@line 160 "mcbits/Keccak-simple.c"
 $171 = HEAP32[$170>>2]|0; //@line 160 "mcbits/Keccak-simple.c"
 $172 = $12; //@line 160 "mcbits/Keccak-simple.c"
 $173 = $172; //@line 160 "mcbits/Keccak-simple.c"
 HEAP32[$173>>2] = $168; //@line 160 "mcbits/Keccak-simple.c"
 $174 = (($172) + 4)|0; //@line 160 "mcbits/Keccak-simple.c"
 $175 = $174; //@line 160 "mcbits/Keccak-simple.c"
 HEAP32[$175>>2] = $171; //@line 160 "mcbits/Keccak-simple.c"
 $176 = $3; //@line 161 "mcbits/Keccak-simple.c"
 $177 = ((($176)) + 56|0); //@line 161 "mcbits/Keccak-simple.c"
 $178 = $177; //@line 161 "mcbits/Keccak-simple.c"
 $179 = $178; //@line 161 "mcbits/Keccak-simple.c"
 $180 = HEAP32[$179>>2]|0; //@line 161 "mcbits/Keccak-simple.c"
 $181 = (($178) + 4)|0; //@line 161 "mcbits/Keccak-simple.c"
 $182 = $181; //@line 161 "mcbits/Keccak-simple.c"
 $183 = HEAP32[$182>>2]|0; //@line 161 "mcbits/Keccak-simple.c"
 $184 = $13; //@line 161 "mcbits/Keccak-simple.c"
 $185 = $184; //@line 161 "mcbits/Keccak-simple.c"
 HEAP32[$185>>2] = $180; //@line 161 "mcbits/Keccak-simple.c"
 $186 = (($184) + 4)|0; //@line 161 "mcbits/Keccak-simple.c"
 $187 = $186; //@line 161 "mcbits/Keccak-simple.c"
 HEAP32[$187>>2] = $183; //@line 161 "mcbits/Keccak-simple.c"
 $188 = $3; //@line 162 "mcbits/Keccak-simple.c"
 $189 = ((($188)) + 64|0); //@line 162 "mcbits/Keccak-simple.c"
 $190 = $189; //@line 162 "mcbits/Keccak-simple.c"
 $191 = $190; //@line 162 "mcbits/Keccak-simple.c"
 $192 = HEAP32[$191>>2]|0; //@line 162 "mcbits/Keccak-simple.c"
 $193 = (($190) + 4)|0; //@line 162 "mcbits/Keccak-simple.c"
 $194 = $193; //@line 162 "mcbits/Keccak-simple.c"
 $195 = HEAP32[$194>>2]|0; //@line 162 "mcbits/Keccak-simple.c"
 $196 = $14; //@line 162 "mcbits/Keccak-simple.c"
 $197 = $196; //@line 162 "mcbits/Keccak-simple.c"
 HEAP32[$197>>2] = $192; //@line 162 "mcbits/Keccak-simple.c"
 $198 = (($196) + 4)|0; //@line 162 "mcbits/Keccak-simple.c"
 $199 = $198; //@line 162 "mcbits/Keccak-simple.c"
 HEAP32[$199>>2] = $195; //@line 162 "mcbits/Keccak-simple.c"
 $200 = $3; //@line 163 "mcbits/Keccak-simple.c"
 $201 = ((($200)) + 72|0); //@line 163 "mcbits/Keccak-simple.c"
 $202 = $201; //@line 163 "mcbits/Keccak-simple.c"
 $203 = $202; //@line 163 "mcbits/Keccak-simple.c"
 $204 = HEAP32[$203>>2]|0; //@line 163 "mcbits/Keccak-simple.c"
 $205 = (($202) + 4)|0; //@line 163 "mcbits/Keccak-simple.c"
 $206 = $205; //@line 163 "mcbits/Keccak-simple.c"
 $207 = HEAP32[$206>>2]|0; //@line 163 "mcbits/Keccak-simple.c"
 $208 = $15; //@line 163 "mcbits/Keccak-simple.c"
 $209 = $208; //@line 163 "mcbits/Keccak-simple.c"
 HEAP32[$209>>2] = $204; //@line 163 "mcbits/Keccak-simple.c"
 $210 = (($208) + 4)|0; //@line 163 "mcbits/Keccak-simple.c"
 $211 = $210; //@line 163 "mcbits/Keccak-simple.c"
 HEAP32[$211>>2] = $207; //@line 163 "mcbits/Keccak-simple.c"
 $212 = $3; //@line 164 "mcbits/Keccak-simple.c"
 $213 = ((($212)) + 80|0); //@line 164 "mcbits/Keccak-simple.c"
 $214 = $213; //@line 164 "mcbits/Keccak-simple.c"
 $215 = $214; //@line 164 "mcbits/Keccak-simple.c"
 $216 = HEAP32[$215>>2]|0; //@line 164 "mcbits/Keccak-simple.c"
 $217 = (($214) + 4)|0; //@line 164 "mcbits/Keccak-simple.c"
 $218 = $217; //@line 164 "mcbits/Keccak-simple.c"
 $219 = HEAP32[$218>>2]|0; //@line 164 "mcbits/Keccak-simple.c"
 $220 = $16; //@line 164 "mcbits/Keccak-simple.c"
 $221 = $220; //@line 164 "mcbits/Keccak-simple.c"
 HEAP32[$221>>2] = $216; //@line 164 "mcbits/Keccak-simple.c"
 $222 = (($220) + 4)|0; //@line 164 "mcbits/Keccak-simple.c"
 $223 = $222; //@line 164 "mcbits/Keccak-simple.c"
 HEAP32[$223>>2] = $219; //@line 164 "mcbits/Keccak-simple.c"
 $224 = $3; //@line 165 "mcbits/Keccak-simple.c"
 $225 = ((($224)) + 88|0); //@line 165 "mcbits/Keccak-simple.c"
 $226 = $225; //@line 165 "mcbits/Keccak-simple.c"
 $227 = $226; //@line 165 "mcbits/Keccak-simple.c"
 $228 = HEAP32[$227>>2]|0; //@line 165 "mcbits/Keccak-simple.c"
 $229 = (($226) + 4)|0; //@line 165 "mcbits/Keccak-simple.c"
 $230 = $229; //@line 165 "mcbits/Keccak-simple.c"
 $231 = HEAP32[$230>>2]|0; //@line 165 "mcbits/Keccak-simple.c"
 $232 = $17; //@line 165 "mcbits/Keccak-simple.c"
 $233 = $232; //@line 165 "mcbits/Keccak-simple.c"
 HEAP32[$233>>2] = $228; //@line 165 "mcbits/Keccak-simple.c"
 $234 = (($232) + 4)|0; //@line 165 "mcbits/Keccak-simple.c"
 $235 = $234; //@line 165 "mcbits/Keccak-simple.c"
 HEAP32[$235>>2] = $231; //@line 165 "mcbits/Keccak-simple.c"
 $236 = $3; //@line 166 "mcbits/Keccak-simple.c"
 $237 = ((($236)) + 96|0); //@line 166 "mcbits/Keccak-simple.c"
 $238 = $237; //@line 166 "mcbits/Keccak-simple.c"
 $239 = $238; //@line 166 "mcbits/Keccak-simple.c"
 $240 = HEAP32[$239>>2]|0; //@line 166 "mcbits/Keccak-simple.c"
 $241 = (($238) + 4)|0; //@line 166 "mcbits/Keccak-simple.c"
 $242 = $241; //@line 166 "mcbits/Keccak-simple.c"
 $243 = HEAP32[$242>>2]|0; //@line 166 "mcbits/Keccak-simple.c"
 $244 = $18; //@line 166 "mcbits/Keccak-simple.c"
 $245 = $244; //@line 166 "mcbits/Keccak-simple.c"
 HEAP32[$245>>2] = $240; //@line 166 "mcbits/Keccak-simple.c"
 $246 = (($244) + 4)|0; //@line 166 "mcbits/Keccak-simple.c"
 $247 = $246; //@line 166 "mcbits/Keccak-simple.c"
 HEAP32[$247>>2] = $243; //@line 166 "mcbits/Keccak-simple.c"
 $248 = $3; //@line 167 "mcbits/Keccak-simple.c"
 $249 = ((($248)) + 104|0); //@line 167 "mcbits/Keccak-simple.c"
 $250 = $249; //@line 167 "mcbits/Keccak-simple.c"
 $251 = $250; //@line 167 "mcbits/Keccak-simple.c"
 $252 = HEAP32[$251>>2]|0; //@line 167 "mcbits/Keccak-simple.c"
 $253 = (($250) + 4)|0; //@line 167 "mcbits/Keccak-simple.c"
 $254 = $253; //@line 167 "mcbits/Keccak-simple.c"
 $255 = HEAP32[$254>>2]|0; //@line 167 "mcbits/Keccak-simple.c"
 $256 = $19; //@line 167 "mcbits/Keccak-simple.c"
 $257 = $256; //@line 167 "mcbits/Keccak-simple.c"
 HEAP32[$257>>2] = $252; //@line 167 "mcbits/Keccak-simple.c"
 $258 = (($256) + 4)|0; //@line 167 "mcbits/Keccak-simple.c"
 $259 = $258; //@line 167 "mcbits/Keccak-simple.c"
 HEAP32[$259>>2] = $255; //@line 167 "mcbits/Keccak-simple.c"
 $260 = $3; //@line 168 "mcbits/Keccak-simple.c"
 $261 = ((($260)) + 112|0); //@line 168 "mcbits/Keccak-simple.c"
 $262 = $261; //@line 168 "mcbits/Keccak-simple.c"
 $263 = $262; //@line 168 "mcbits/Keccak-simple.c"
 $264 = HEAP32[$263>>2]|0; //@line 168 "mcbits/Keccak-simple.c"
 $265 = (($262) + 4)|0; //@line 168 "mcbits/Keccak-simple.c"
 $266 = $265; //@line 168 "mcbits/Keccak-simple.c"
 $267 = HEAP32[$266>>2]|0; //@line 168 "mcbits/Keccak-simple.c"
 $268 = $20; //@line 168 "mcbits/Keccak-simple.c"
 $269 = $268; //@line 168 "mcbits/Keccak-simple.c"
 HEAP32[$269>>2] = $264; //@line 168 "mcbits/Keccak-simple.c"
 $270 = (($268) + 4)|0; //@line 168 "mcbits/Keccak-simple.c"
 $271 = $270; //@line 168 "mcbits/Keccak-simple.c"
 HEAP32[$271>>2] = $267; //@line 168 "mcbits/Keccak-simple.c"
 $272 = $3; //@line 169 "mcbits/Keccak-simple.c"
 $273 = ((($272)) + 120|0); //@line 169 "mcbits/Keccak-simple.c"
 $274 = $273; //@line 169 "mcbits/Keccak-simple.c"
 $275 = $274; //@line 169 "mcbits/Keccak-simple.c"
 $276 = HEAP32[$275>>2]|0; //@line 169 "mcbits/Keccak-simple.c"
 $277 = (($274) + 4)|0; //@line 169 "mcbits/Keccak-simple.c"
 $278 = $277; //@line 169 "mcbits/Keccak-simple.c"
 $279 = HEAP32[$278>>2]|0; //@line 169 "mcbits/Keccak-simple.c"
 $280 = $21; //@line 169 "mcbits/Keccak-simple.c"
 $281 = $280; //@line 169 "mcbits/Keccak-simple.c"
 HEAP32[$281>>2] = $276; //@line 169 "mcbits/Keccak-simple.c"
 $282 = (($280) + 4)|0; //@line 169 "mcbits/Keccak-simple.c"
 $283 = $282; //@line 169 "mcbits/Keccak-simple.c"
 HEAP32[$283>>2] = $279; //@line 169 "mcbits/Keccak-simple.c"
 $284 = $3; //@line 170 "mcbits/Keccak-simple.c"
 $285 = ((($284)) + 128|0); //@line 170 "mcbits/Keccak-simple.c"
 $286 = $285; //@line 170 "mcbits/Keccak-simple.c"
 $287 = $286; //@line 170 "mcbits/Keccak-simple.c"
 $288 = HEAP32[$287>>2]|0; //@line 170 "mcbits/Keccak-simple.c"
 $289 = (($286) + 4)|0; //@line 170 "mcbits/Keccak-simple.c"
 $290 = $289; //@line 170 "mcbits/Keccak-simple.c"
 $291 = HEAP32[$290>>2]|0; //@line 170 "mcbits/Keccak-simple.c"
 $292 = $22; //@line 170 "mcbits/Keccak-simple.c"
 $293 = $292; //@line 170 "mcbits/Keccak-simple.c"
 HEAP32[$293>>2] = $288; //@line 170 "mcbits/Keccak-simple.c"
 $294 = (($292) + 4)|0; //@line 170 "mcbits/Keccak-simple.c"
 $295 = $294; //@line 170 "mcbits/Keccak-simple.c"
 HEAP32[$295>>2] = $291; //@line 170 "mcbits/Keccak-simple.c"
 $296 = $3; //@line 171 "mcbits/Keccak-simple.c"
 $297 = ((($296)) + 136|0); //@line 171 "mcbits/Keccak-simple.c"
 $298 = $297; //@line 171 "mcbits/Keccak-simple.c"
 $299 = $298; //@line 171 "mcbits/Keccak-simple.c"
 $300 = HEAP32[$299>>2]|0; //@line 171 "mcbits/Keccak-simple.c"
 $301 = (($298) + 4)|0; //@line 171 "mcbits/Keccak-simple.c"
 $302 = $301; //@line 171 "mcbits/Keccak-simple.c"
 $303 = HEAP32[$302>>2]|0; //@line 171 "mcbits/Keccak-simple.c"
 $304 = $23; //@line 171 "mcbits/Keccak-simple.c"
 $305 = $304; //@line 171 "mcbits/Keccak-simple.c"
 HEAP32[$305>>2] = $300; //@line 171 "mcbits/Keccak-simple.c"
 $306 = (($304) + 4)|0; //@line 171 "mcbits/Keccak-simple.c"
 $307 = $306; //@line 171 "mcbits/Keccak-simple.c"
 HEAP32[$307>>2] = $303; //@line 171 "mcbits/Keccak-simple.c"
 $308 = $3; //@line 172 "mcbits/Keccak-simple.c"
 $309 = ((($308)) + 144|0); //@line 172 "mcbits/Keccak-simple.c"
 $310 = $309; //@line 172 "mcbits/Keccak-simple.c"
 $311 = $310; //@line 172 "mcbits/Keccak-simple.c"
 $312 = HEAP32[$311>>2]|0; //@line 172 "mcbits/Keccak-simple.c"
 $313 = (($310) + 4)|0; //@line 172 "mcbits/Keccak-simple.c"
 $314 = $313; //@line 172 "mcbits/Keccak-simple.c"
 $315 = HEAP32[$314>>2]|0; //@line 172 "mcbits/Keccak-simple.c"
 $316 = $24; //@line 172 "mcbits/Keccak-simple.c"
 $317 = $316; //@line 172 "mcbits/Keccak-simple.c"
 HEAP32[$317>>2] = $312; //@line 172 "mcbits/Keccak-simple.c"
 $318 = (($316) + 4)|0; //@line 172 "mcbits/Keccak-simple.c"
 $319 = $318; //@line 172 "mcbits/Keccak-simple.c"
 HEAP32[$319>>2] = $315; //@line 172 "mcbits/Keccak-simple.c"
 $320 = $3; //@line 173 "mcbits/Keccak-simple.c"
 $321 = ((($320)) + 152|0); //@line 173 "mcbits/Keccak-simple.c"
 $322 = $321; //@line 173 "mcbits/Keccak-simple.c"
 $323 = $322; //@line 173 "mcbits/Keccak-simple.c"
 $324 = HEAP32[$323>>2]|0; //@line 173 "mcbits/Keccak-simple.c"
 $325 = (($322) + 4)|0; //@line 173 "mcbits/Keccak-simple.c"
 $326 = $325; //@line 173 "mcbits/Keccak-simple.c"
 $327 = HEAP32[$326>>2]|0; //@line 173 "mcbits/Keccak-simple.c"
 $328 = $25; //@line 173 "mcbits/Keccak-simple.c"
 $329 = $328; //@line 173 "mcbits/Keccak-simple.c"
 HEAP32[$329>>2] = $324; //@line 173 "mcbits/Keccak-simple.c"
 $330 = (($328) + 4)|0; //@line 173 "mcbits/Keccak-simple.c"
 $331 = $330; //@line 173 "mcbits/Keccak-simple.c"
 HEAP32[$331>>2] = $327; //@line 173 "mcbits/Keccak-simple.c"
 $332 = $3; //@line 174 "mcbits/Keccak-simple.c"
 $333 = ((($332)) + 160|0); //@line 174 "mcbits/Keccak-simple.c"
 $334 = $333; //@line 174 "mcbits/Keccak-simple.c"
 $335 = $334; //@line 174 "mcbits/Keccak-simple.c"
 $336 = HEAP32[$335>>2]|0; //@line 174 "mcbits/Keccak-simple.c"
 $337 = (($334) + 4)|0; //@line 174 "mcbits/Keccak-simple.c"
 $338 = $337; //@line 174 "mcbits/Keccak-simple.c"
 $339 = HEAP32[$338>>2]|0; //@line 174 "mcbits/Keccak-simple.c"
 $340 = $26; //@line 174 "mcbits/Keccak-simple.c"
 $341 = $340; //@line 174 "mcbits/Keccak-simple.c"
 HEAP32[$341>>2] = $336; //@line 174 "mcbits/Keccak-simple.c"
 $342 = (($340) + 4)|0; //@line 174 "mcbits/Keccak-simple.c"
 $343 = $342; //@line 174 "mcbits/Keccak-simple.c"
 HEAP32[$343>>2] = $339; //@line 174 "mcbits/Keccak-simple.c"
 $344 = $3; //@line 175 "mcbits/Keccak-simple.c"
 $345 = ((($344)) + 168|0); //@line 175 "mcbits/Keccak-simple.c"
 $346 = $345; //@line 175 "mcbits/Keccak-simple.c"
 $347 = $346; //@line 175 "mcbits/Keccak-simple.c"
 $348 = HEAP32[$347>>2]|0; //@line 175 "mcbits/Keccak-simple.c"
 $349 = (($346) + 4)|0; //@line 175 "mcbits/Keccak-simple.c"
 $350 = $349; //@line 175 "mcbits/Keccak-simple.c"
 $351 = HEAP32[$350>>2]|0; //@line 175 "mcbits/Keccak-simple.c"
 $352 = $27; //@line 175 "mcbits/Keccak-simple.c"
 $353 = $352; //@line 175 "mcbits/Keccak-simple.c"
 HEAP32[$353>>2] = $348; //@line 175 "mcbits/Keccak-simple.c"
 $354 = (($352) + 4)|0; //@line 175 "mcbits/Keccak-simple.c"
 $355 = $354; //@line 175 "mcbits/Keccak-simple.c"
 HEAP32[$355>>2] = $351; //@line 175 "mcbits/Keccak-simple.c"
 $356 = $3; //@line 176 "mcbits/Keccak-simple.c"
 $357 = ((($356)) + 176|0); //@line 176 "mcbits/Keccak-simple.c"
 $358 = $357; //@line 176 "mcbits/Keccak-simple.c"
 $359 = $358; //@line 176 "mcbits/Keccak-simple.c"
 $360 = HEAP32[$359>>2]|0; //@line 176 "mcbits/Keccak-simple.c"
 $361 = (($358) + 4)|0; //@line 176 "mcbits/Keccak-simple.c"
 $362 = $361; //@line 176 "mcbits/Keccak-simple.c"
 $363 = HEAP32[$362>>2]|0; //@line 176 "mcbits/Keccak-simple.c"
 $364 = $28; //@line 176 "mcbits/Keccak-simple.c"
 $365 = $364; //@line 176 "mcbits/Keccak-simple.c"
 HEAP32[$365>>2] = $360; //@line 176 "mcbits/Keccak-simple.c"
 $366 = (($364) + 4)|0; //@line 176 "mcbits/Keccak-simple.c"
 $367 = $366; //@line 176 "mcbits/Keccak-simple.c"
 HEAP32[$367>>2] = $363; //@line 176 "mcbits/Keccak-simple.c"
 $368 = $3; //@line 177 "mcbits/Keccak-simple.c"
 $369 = ((($368)) + 184|0); //@line 177 "mcbits/Keccak-simple.c"
 $370 = $369; //@line 177 "mcbits/Keccak-simple.c"
 $371 = $370; //@line 177 "mcbits/Keccak-simple.c"
 $372 = HEAP32[$371>>2]|0; //@line 177 "mcbits/Keccak-simple.c"
 $373 = (($370) + 4)|0; //@line 177 "mcbits/Keccak-simple.c"
 $374 = $373; //@line 177 "mcbits/Keccak-simple.c"
 $375 = HEAP32[$374>>2]|0; //@line 177 "mcbits/Keccak-simple.c"
 $376 = $29; //@line 177 "mcbits/Keccak-simple.c"
 $377 = $376; //@line 177 "mcbits/Keccak-simple.c"
 HEAP32[$377>>2] = $372; //@line 177 "mcbits/Keccak-simple.c"
 $378 = (($376) + 4)|0; //@line 177 "mcbits/Keccak-simple.c"
 $379 = $378; //@line 177 "mcbits/Keccak-simple.c"
 HEAP32[$379>>2] = $375; //@line 177 "mcbits/Keccak-simple.c"
 $380 = $3; //@line 178 "mcbits/Keccak-simple.c"
 $381 = ((($380)) + 192|0); //@line 178 "mcbits/Keccak-simple.c"
 $382 = $381; //@line 178 "mcbits/Keccak-simple.c"
 $383 = $382; //@line 178 "mcbits/Keccak-simple.c"
 $384 = HEAP32[$383>>2]|0; //@line 178 "mcbits/Keccak-simple.c"
 $385 = (($382) + 4)|0; //@line 178 "mcbits/Keccak-simple.c"
 $386 = $385; //@line 178 "mcbits/Keccak-simple.c"
 $387 = HEAP32[$386>>2]|0; //@line 178 "mcbits/Keccak-simple.c"
 $388 = $30; //@line 178 "mcbits/Keccak-simple.c"
 $389 = $388; //@line 178 "mcbits/Keccak-simple.c"
 HEAP32[$389>>2] = $384; //@line 178 "mcbits/Keccak-simple.c"
 $390 = (($388) + 4)|0; //@line 178 "mcbits/Keccak-simple.c"
 $391 = $390; //@line 178 "mcbits/Keccak-simple.c"
 HEAP32[$391>>2] = $387; //@line 178 "mcbits/Keccak-simple.c"
 $5 = 0; //@line 180 "mcbits/Keccak-simple.c"
 while(1) {
  $392 = $5; //@line 180 "mcbits/Keccak-simple.c"
  $393 = ($392|0)<(24); //@line 180 "mcbits/Keccak-simple.c"
  $394 = $6;
  $395 = $394;
  $396 = HEAP32[$395>>2]|0;
  $397 = (($394) + 4)|0;
  $398 = $397;
  $399 = HEAP32[$398>>2]|0;
  if (!($393)) {
   break;
  }
  $400 = $11; //@line 183 "mcbits/Keccak-simple.c"
  $401 = $400; //@line 183 "mcbits/Keccak-simple.c"
  $402 = HEAP32[$401>>2]|0; //@line 183 "mcbits/Keccak-simple.c"
  $403 = (($400) + 4)|0; //@line 183 "mcbits/Keccak-simple.c"
  $404 = $403; //@line 183 "mcbits/Keccak-simple.c"
  $405 = HEAP32[$404>>2]|0; //@line 183 "mcbits/Keccak-simple.c"
  $406 = $396 ^ $402; //@line 183 "mcbits/Keccak-simple.c"
  $407 = $399 ^ $405; //@line 183 "mcbits/Keccak-simple.c"
  $408 = $16; //@line 183 "mcbits/Keccak-simple.c"
  $409 = $408; //@line 183 "mcbits/Keccak-simple.c"
  $410 = HEAP32[$409>>2]|0; //@line 183 "mcbits/Keccak-simple.c"
  $411 = (($408) + 4)|0; //@line 183 "mcbits/Keccak-simple.c"
  $412 = $411; //@line 183 "mcbits/Keccak-simple.c"
  $413 = HEAP32[$412>>2]|0; //@line 183 "mcbits/Keccak-simple.c"
  $414 = $406 ^ $410; //@line 183 "mcbits/Keccak-simple.c"
  $415 = $407 ^ $413; //@line 183 "mcbits/Keccak-simple.c"
  $416 = $21; //@line 183 "mcbits/Keccak-simple.c"
  $417 = $416; //@line 183 "mcbits/Keccak-simple.c"
  $418 = HEAP32[$417>>2]|0; //@line 183 "mcbits/Keccak-simple.c"
  $419 = (($416) + 4)|0; //@line 183 "mcbits/Keccak-simple.c"
  $420 = $419; //@line 183 "mcbits/Keccak-simple.c"
  $421 = HEAP32[$420>>2]|0; //@line 183 "mcbits/Keccak-simple.c"
  $422 = $414 ^ $418; //@line 183 "mcbits/Keccak-simple.c"
  $423 = $415 ^ $421; //@line 183 "mcbits/Keccak-simple.c"
  $424 = $26; //@line 183 "mcbits/Keccak-simple.c"
  $425 = $424; //@line 183 "mcbits/Keccak-simple.c"
  $426 = HEAP32[$425>>2]|0; //@line 183 "mcbits/Keccak-simple.c"
  $427 = (($424) + 4)|0; //@line 183 "mcbits/Keccak-simple.c"
  $428 = $427; //@line 183 "mcbits/Keccak-simple.c"
  $429 = HEAP32[$428>>2]|0; //@line 183 "mcbits/Keccak-simple.c"
  $430 = $422 ^ $426; //@line 183 "mcbits/Keccak-simple.c"
  $431 = $423 ^ $429; //@line 183 "mcbits/Keccak-simple.c"
  $432 = $31; //@line 183 "mcbits/Keccak-simple.c"
  $433 = $432; //@line 183 "mcbits/Keccak-simple.c"
  HEAP32[$433>>2] = $430; //@line 183 "mcbits/Keccak-simple.c"
  $434 = (($432) + 4)|0; //@line 183 "mcbits/Keccak-simple.c"
  $435 = $434; //@line 183 "mcbits/Keccak-simple.c"
  HEAP32[$435>>2] = $431; //@line 183 "mcbits/Keccak-simple.c"
  $436 = $7; //@line 184 "mcbits/Keccak-simple.c"
  $437 = $436; //@line 184 "mcbits/Keccak-simple.c"
  $438 = HEAP32[$437>>2]|0; //@line 184 "mcbits/Keccak-simple.c"
  $439 = (($436) + 4)|0; //@line 184 "mcbits/Keccak-simple.c"
  $440 = $439; //@line 184 "mcbits/Keccak-simple.c"
  $441 = HEAP32[$440>>2]|0; //@line 184 "mcbits/Keccak-simple.c"
  $442 = $12; //@line 184 "mcbits/Keccak-simple.c"
  $443 = $442; //@line 184 "mcbits/Keccak-simple.c"
  $444 = HEAP32[$443>>2]|0; //@line 184 "mcbits/Keccak-simple.c"
  $445 = (($442) + 4)|0; //@line 184 "mcbits/Keccak-simple.c"
  $446 = $445; //@line 184 "mcbits/Keccak-simple.c"
  $447 = HEAP32[$446>>2]|0; //@line 184 "mcbits/Keccak-simple.c"
  $448 = $438 ^ $444; //@line 184 "mcbits/Keccak-simple.c"
  $449 = $441 ^ $447; //@line 184 "mcbits/Keccak-simple.c"
  $450 = $17; //@line 184 "mcbits/Keccak-simple.c"
  $451 = $450; //@line 184 "mcbits/Keccak-simple.c"
  $452 = HEAP32[$451>>2]|0; //@line 184 "mcbits/Keccak-simple.c"
  $453 = (($450) + 4)|0; //@line 184 "mcbits/Keccak-simple.c"
  $454 = $453; //@line 184 "mcbits/Keccak-simple.c"
  $455 = HEAP32[$454>>2]|0; //@line 184 "mcbits/Keccak-simple.c"
  $456 = $448 ^ $452; //@line 184 "mcbits/Keccak-simple.c"
  $457 = $449 ^ $455; //@line 184 "mcbits/Keccak-simple.c"
  $458 = $22; //@line 184 "mcbits/Keccak-simple.c"
  $459 = $458; //@line 184 "mcbits/Keccak-simple.c"
  $460 = HEAP32[$459>>2]|0; //@line 184 "mcbits/Keccak-simple.c"
  $461 = (($458) + 4)|0; //@line 184 "mcbits/Keccak-simple.c"
  $462 = $461; //@line 184 "mcbits/Keccak-simple.c"
  $463 = HEAP32[$462>>2]|0; //@line 184 "mcbits/Keccak-simple.c"
  $464 = $456 ^ $460; //@line 184 "mcbits/Keccak-simple.c"
  $465 = $457 ^ $463; //@line 184 "mcbits/Keccak-simple.c"
  $466 = $27; //@line 184 "mcbits/Keccak-simple.c"
  $467 = $466; //@line 184 "mcbits/Keccak-simple.c"
  $468 = HEAP32[$467>>2]|0; //@line 184 "mcbits/Keccak-simple.c"
  $469 = (($466) + 4)|0; //@line 184 "mcbits/Keccak-simple.c"
  $470 = $469; //@line 184 "mcbits/Keccak-simple.c"
  $471 = HEAP32[$470>>2]|0; //@line 184 "mcbits/Keccak-simple.c"
  $472 = $464 ^ $468; //@line 184 "mcbits/Keccak-simple.c"
  $473 = $465 ^ $471; //@line 184 "mcbits/Keccak-simple.c"
  $474 = $32; //@line 184 "mcbits/Keccak-simple.c"
  $475 = $474; //@line 184 "mcbits/Keccak-simple.c"
  HEAP32[$475>>2] = $472; //@line 184 "mcbits/Keccak-simple.c"
  $476 = (($474) + 4)|0; //@line 184 "mcbits/Keccak-simple.c"
  $477 = $476; //@line 184 "mcbits/Keccak-simple.c"
  HEAP32[$477>>2] = $473; //@line 184 "mcbits/Keccak-simple.c"
  $478 = $8; //@line 185 "mcbits/Keccak-simple.c"
  $479 = $478; //@line 185 "mcbits/Keccak-simple.c"
  $480 = HEAP32[$479>>2]|0; //@line 185 "mcbits/Keccak-simple.c"
  $481 = (($478) + 4)|0; //@line 185 "mcbits/Keccak-simple.c"
  $482 = $481; //@line 185 "mcbits/Keccak-simple.c"
  $483 = HEAP32[$482>>2]|0; //@line 185 "mcbits/Keccak-simple.c"
  $484 = $13; //@line 185 "mcbits/Keccak-simple.c"
  $485 = $484; //@line 185 "mcbits/Keccak-simple.c"
  $486 = HEAP32[$485>>2]|0; //@line 185 "mcbits/Keccak-simple.c"
  $487 = (($484) + 4)|0; //@line 185 "mcbits/Keccak-simple.c"
  $488 = $487; //@line 185 "mcbits/Keccak-simple.c"
  $489 = HEAP32[$488>>2]|0; //@line 185 "mcbits/Keccak-simple.c"
  $490 = $480 ^ $486; //@line 185 "mcbits/Keccak-simple.c"
  $491 = $483 ^ $489; //@line 185 "mcbits/Keccak-simple.c"
  $492 = $18; //@line 185 "mcbits/Keccak-simple.c"
  $493 = $492; //@line 185 "mcbits/Keccak-simple.c"
  $494 = HEAP32[$493>>2]|0; //@line 185 "mcbits/Keccak-simple.c"
  $495 = (($492) + 4)|0; //@line 185 "mcbits/Keccak-simple.c"
  $496 = $495; //@line 185 "mcbits/Keccak-simple.c"
  $497 = HEAP32[$496>>2]|0; //@line 185 "mcbits/Keccak-simple.c"
  $498 = $490 ^ $494; //@line 185 "mcbits/Keccak-simple.c"
  $499 = $491 ^ $497; //@line 185 "mcbits/Keccak-simple.c"
  $500 = $23; //@line 185 "mcbits/Keccak-simple.c"
  $501 = $500; //@line 185 "mcbits/Keccak-simple.c"
  $502 = HEAP32[$501>>2]|0; //@line 185 "mcbits/Keccak-simple.c"
  $503 = (($500) + 4)|0; //@line 185 "mcbits/Keccak-simple.c"
  $504 = $503; //@line 185 "mcbits/Keccak-simple.c"
  $505 = HEAP32[$504>>2]|0; //@line 185 "mcbits/Keccak-simple.c"
  $506 = $498 ^ $502; //@line 185 "mcbits/Keccak-simple.c"
  $507 = $499 ^ $505; //@line 185 "mcbits/Keccak-simple.c"
  $508 = $28; //@line 185 "mcbits/Keccak-simple.c"
  $509 = $508; //@line 185 "mcbits/Keccak-simple.c"
  $510 = HEAP32[$509>>2]|0; //@line 185 "mcbits/Keccak-simple.c"
  $511 = (($508) + 4)|0; //@line 185 "mcbits/Keccak-simple.c"
  $512 = $511; //@line 185 "mcbits/Keccak-simple.c"
  $513 = HEAP32[$512>>2]|0; //@line 185 "mcbits/Keccak-simple.c"
  $514 = $506 ^ $510; //@line 185 "mcbits/Keccak-simple.c"
  $515 = $507 ^ $513; //@line 185 "mcbits/Keccak-simple.c"
  $516 = $33; //@line 185 "mcbits/Keccak-simple.c"
  $517 = $516; //@line 185 "mcbits/Keccak-simple.c"
  HEAP32[$517>>2] = $514; //@line 185 "mcbits/Keccak-simple.c"
  $518 = (($516) + 4)|0; //@line 185 "mcbits/Keccak-simple.c"
  $519 = $518; //@line 185 "mcbits/Keccak-simple.c"
  HEAP32[$519>>2] = $515; //@line 185 "mcbits/Keccak-simple.c"
  $520 = $9; //@line 186 "mcbits/Keccak-simple.c"
  $521 = $520; //@line 186 "mcbits/Keccak-simple.c"
  $522 = HEAP32[$521>>2]|0; //@line 186 "mcbits/Keccak-simple.c"
  $523 = (($520) + 4)|0; //@line 186 "mcbits/Keccak-simple.c"
  $524 = $523; //@line 186 "mcbits/Keccak-simple.c"
  $525 = HEAP32[$524>>2]|0; //@line 186 "mcbits/Keccak-simple.c"
  $526 = $14; //@line 186 "mcbits/Keccak-simple.c"
  $527 = $526; //@line 186 "mcbits/Keccak-simple.c"
  $528 = HEAP32[$527>>2]|0; //@line 186 "mcbits/Keccak-simple.c"
  $529 = (($526) + 4)|0; //@line 186 "mcbits/Keccak-simple.c"
  $530 = $529; //@line 186 "mcbits/Keccak-simple.c"
  $531 = HEAP32[$530>>2]|0; //@line 186 "mcbits/Keccak-simple.c"
  $532 = $522 ^ $528; //@line 186 "mcbits/Keccak-simple.c"
  $533 = $525 ^ $531; //@line 186 "mcbits/Keccak-simple.c"
  $534 = $19; //@line 186 "mcbits/Keccak-simple.c"
  $535 = $534; //@line 186 "mcbits/Keccak-simple.c"
  $536 = HEAP32[$535>>2]|0; //@line 186 "mcbits/Keccak-simple.c"
  $537 = (($534) + 4)|0; //@line 186 "mcbits/Keccak-simple.c"
  $538 = $537; //@line 186 "mcbits/Keccak-simple.c"
  $539 = HEAP32[$538>>2]|0; //@line 186 "mcbits/Keccak-simple.c"
  $540 = $532 ^ $536; //@line 186 "mcbits/Keccak-simple.c"
  $541 = $533 ^ $539; //@line 186 "mcbits/Keccak-simple.c"
  $542 = $24; //@line 186 "mcbits/Keccak-simple.c"
  $543 = $542; //@line 186 "mcbits/Keccak-simple.c"
  $544 = HEAP32[$543>>2]|0; //@line 186 "mcbits/Keccak-simple.c"
  $545 = (($542) + 4)|0; //@line 186 "mcbits/Keccak-simple.c"
  $546 = $545; //@line 186 "mcbits/Keccak-simple.c"
  $547 = HEAP32[$546>>2]|0; //@line 186 "mcbits/Keccak-simple.c"
  $548 = $540 ^ $544; //@line 186 "mcbits/Keccak-simple.c"
  $549 = $541 ^ $547; //@line 186 "mcbits/Keccak-simple.c"
  $550 = $29; //@line 186 "mcbits/Keccak-simple.c"
  $551 = $550; //@line 186 "mcbits/Keccak-simple.c"
  $552 = HEAP32[$551>>2]|0; //@line 186 "mcbits/Keccak-simple.c"
  $553 = (($550) + 4)|0; //@line 186 "mcbits/Keccak-simple.c"
  $554 = $553; //@line 186 "mcbits/Keccak-simple.c"
  $555 = HEAP32[$554>>2]|0; //@line 186 "mcbits/Keccak-simple.c"
  $556 = $548 ^ $552; //@line 186 "mcbits/Keccak-simple.c"
  $557 = $549 ^ $555; //@line 186 "mcbits/Keccak-simple.c"
  $558 = $34; //@line 186 "mcbits/Keccak-simple.c"
  $559 = $558; //@line 186 "mcbits/Keccak-simple.c"
  HEAP32[$559>>2] = $556; //@line 186 "mcbits/Keccak-simple.c"
  $560 = (($558) + 4)|0; //@line 186 "mcbits/Keccak-simple.c"
  $561 = $560; //@line 186 "mcbits/Keccak-simple.c"
  HEAP32[$561>>2] = $557; //@line 186 "mcbits/Keccak-simple.c"
  $562 = $10; //@line 187 "mcbits/Keccak-simple.c"
  $563 = $562; //@line 187 "mcbits/Keccak-simple.c"
  $564 = HEAP32[$563>>2]|0; //@line 187 "mcbits/Keccak-simple.c"
  $565 = (($562) + 4)|0; //@line 187 "mcbits/Keccak-simple.c"
  $566 = $565; //@line 187 "mcbits/Keccak-simple.c"
  $567 = HEAP32[$566>>2]|0; //@line 187 "mcbits/Keccak-simple.c"
  $568 = $15; //@line 187 "mcbits/Keccak-simple.c"
  $569 = $568; //@line 187 "mcbits/Keccak-simple.c"
  $570 = HEAP32[$569>>2]|0; //@line 187 "mcbits/Keccak-simple.c"
  $571 = (($568) + 4)|0; //@line 187 "mcbits/Keccak-simple.c"
  $572 = $571; //@line 187 "mcbits/Keccak-simple.c"
  $573 = HEAP32[$572>>2]|0; //@line 187 "mcbits/Keccak-simple.c"
  $574 = $564 ^ $570; //@line 187 "mcbits/Keccak-simple.c"
  $575 = $567 ^ $573; //@line 187 "mcbits/Keccak-simple.c"
  $576 = $20; //@line 187 "mcbits/Keccak-simple.c"
  $577 = $576; //@line 187 "mcbits/Keccak-simple.c"
  $578 = HEAP32[$577>>2]|0; //@line 187 "mcbits/Keccak-simple.c"
  $579 = (($576) + 4)|0; //@line 187 "mcbits/Keccak-simple.c"
  $580 = $579; //@line 187 "mcbits/Keccak-simple.c"
  $581 = HEAP32[$580>>2]|0; //@line 187 "mcbits/Keccak-simple.c"
  $582 = $574 ^ $578; //@line 187 "mcbits/Keccak-simple.c"
  $583 = $575 ^ $581; //@line 187 "mcbits/Keccak-simple.c"
  $584 = $25; //@line 187 "mcbits/Keccak-simple.c"
  $585 = $584; //@line 187 "mcbits/Keccak-simple.c"
  $586 = HEAP32[$585>>2]|0; //@line 187 "mcbits/Keccak-simple.c"
  $587 = (($584) + 4)|0; //@line 187 "mcbits/Keccak-simple.c"
  $588 = $587; //@line 187 "mcbits/Keccak-simple.c"
  $589 = HEAP32[$588>>2]|0; //@line 187 "mcbits/Keccak-simple.c"
  $590 = $582 ^ $586; //@line 187 "mcbits/Keccak-simple.c"
  $591 = $583 ^ $589; //@line 187 "mcbits/Keccak-simple.c"
  $592 = $30; //@line 187 "mcbits/Keccak-simple.c"
  $593 = $592; //@line 187 "mcbits/Keccak-simple.c"
  $594 = HEAP32[$593>>2]|0; //@line 187 "mcbits/Keccak-simple.c"
  $595 = (($592) + 4)|0; //@line 187 "mcbits/Keccak-simple.c"
  $596 = $595; //@line 187 "mcbits/Keccak-simple.c"
  $597 = HEAP32[$596>>2]|0; //@line 187 "mcbits/Keccak-simple.c"
  $598 = $590 ^ $594; //@line 187 "mcbits/Keccak-simple.c"
  $599 = $591 ^ $597; //@line 187 "mcbits/Keccak-simple.c"
  $600 = $35; //@line 187 "mcbits/Keccak-simple.c"
  $601 = $600; //@line 187 "mcbits/Keccak-simple.c"
  HEAP32[$601>>2] = $598; //@line 187 "mcbits/Keccak-simple.c"
  $602 = (($600) + 4)|0; //@line 187 "mcbits/Keccak-simple.c"
  $603 = $602; //@line 187 "mcbits/Keccak-simple.c"
  HEAP32[$603>>2] = $599; //@line 187 "mcbits/Keccak-simple.c"
  $604 = $35; //@line 190 "mcbits/Keccak-simple.c"
  $605 = $604; //@line 190 "mcbits/Keccak-simple.c"
  $606 = HEAP32[$605>>2]|0; //@line 190 "mcbits/Keccak-simple.c"
  $607 = (($604) + 4)|0; //@line 190 "mcbits/Keccak-simple.c"
  $608 = $607; //@line 190 "mcbits/Keccak-simple.c"
  $609 = HEAP32[$608>>2]|0; //@line 190 "mcbits/Keccak-simple.c"
  $610 = $32; //@line 190 "mcbits/Keccak-simple.c"
  $611 = $610; //@line 190 "mcbits/Keccak-simple.c"
  $612 = HEAP32[$611>>2]|0; //@line 190 "mcbits/Keccak-simple.c"
  $613 = (($610) + 4)|0; //@line 190 "mcbits/Keccak-simple.c"
  $614 = $613; //@line 190 "mcbits/Keccak-simple.c"
  $615 = HEAP32[$614>>2]|0; //@line 190 "mcbits/Keccak-simple.c"
  $616 = (_bitshift64Shl(($612|0),($615|0),1)|0); //@line 190 "mcbits/Keccak-simple.c"
  $617 = tempRet0; //@line 190 "mcbits/Keccak-simple.c"
  $618 = $32; //@line 190 "mcbits/Keccak-simple.c"
  $619 = $618; //@line 190 "mcbits/Keccak-simple.c"
  $620 = HEAP32[$619>>2]|0; //@line 190 "mcbits/Keccak-simple.c"
  $621 = (($618) + 4)|0; //@line 190 "mcbits/Keccak-simple.c"
  $622 = $621; //@line 190 "mcbits/Keccak-simple.c"
  $623 = HEAP32[$622>>2]|0; //@line 190 "mcbits/Keccak-simple.c"
  $624 = (_bitshift64Lshr(($620|0),($623|0),63)|0); //@line 190 "mcbits/Keccak-simple.c"
  $625 = tempRet0; //@line 190 "mcbits/Keccak-simple.c"
  $626 = $616 ^ $624; //@line 190 "mcbits/Keccak-simple.c"
  $627 = $617 ^ $625; //@line 190 "mcbits/Keccak-simple.c"
  $628 = $606 ^ $626; //@line 190 "mcbits/Keccak-simple.c"
  $629 = $609 ^ $627; //@line 190 "mcbits/Keccak-simple.c"
  $630 = $36; //@line 190 "mcbits/Keccak-simple.c"
  $631 = $630; //@line 190 "mcbits/Keccak-simple.c"
  HEAP32[$631>>2] = $628; //@line 190 "mcbits/Keccak-simple.c"
  $632 = (($630) + 4)|0; //@line 190 "mcbits/Keccak-simple.c"
  $633 = $632; //@line 190 "mcbits/Keccak-simple.c"
  HEAP32[$633>>2] = $629; //@line 190 "mcbits/Keccak-simple.c"
  $634 = $31; //@line 191 "mcbits/Keccak-simple.c"
  $635 = $634; //@line 191 "mcbits/Keccak-simple.c"
  $636 = HEAP32[$635>>2]|0; //@line 191 "mcbits/Keccak-simple.c"
  $637 = (($634) + 4)|0; //@line 191 "mcbits/Keccak-simple.c"
  $638 = $637; //@line 191 "mcbits/Keccak-simple.c"
  $639 = HEAP32[$638>>2]|0; //@line 191 "mcbits/Keccak-simple.c"
  $640 = $33; //@line 191 "mcbits/Keccak-simple.c"
  $641 = $640; //@line 191 "mcbits/Keccak-simple.c"
  $642 = HEAP32[$641>>2]|0; //@line 191 "mcbits/Keccak-simple.c"
  $643 = (($640) + 4)|0; //@line 191 "mcbits/Keccak-simple.c"
  $644 = $643; //@line 191 "mcbits/Keccak-simple.c"
  $645 = HEAP32[$644>>2]|0; //@line 191 "mcbits/Keccak-simple.c"
  $646 = (_bitshift64Shl(($642|0),($645|0),1)|0); //@line 191 "mcbits/Keccak-simple.c"
  $647 = tempRet0; //@line 191 "mcbits/Keccak-simple.c"
  $648 = $33; //@line 191 "mcbits/Keccak-simple.c"
  $649 = $648; //@line 191 "mcbits/Keccak-simple.c"
  $650 = HEAP32[$649>>2]|0; //@line 191 "mcbits/Keccak-simple.c"
  $651 = (($648) + 4)|0; //@line 191 "mcbits/Keccak-simple.c"
  $652 = $651; //@line 191 "mcbits/Keccak-simple.c"
  $653 = HEAP32[$652>>2]|0; //@line 191 "mcbits/Keccak-simple.c"
  $654 = (_bitshift64Lshr(($650|0),($653|0),63)|0); //@line 191 "mcbits/Keccak-simple.c"
  $655 = tempRet0; //@line 191 "mcbits/Keccak-simple.c"
  $656 = $646 ^ $654; //@line 191 "mcbits/Keccak-simple.c"
  $657 = $647 ^ $655; //@line 191 "mcbits/Keccak-simple.c"
  $658 = $636 ^ $656; //@line 191 "mcbits/Keccak-simple.c"
  $659 = $639 ^ $657; //@line 191 "mcbits/Keccak-simple.c"
  $660 = $37; //@line 191 "mcbits/Keccak-simple.c"
  $661 = $660; //@line 191 "mcbits/Keccak-simple.c"
  HEAP32[$661>>2] = $658; //@line 191 "mcbits/Keccak-simple.c"
  $662 = (($660) + 4)|0; //@line 191 "mcbits/Keccak-simple.c"
  $663 = $662; //@line 191 "mcbits/Keccak-simple.c"
  HEAP32[$663>>2] = $659; //@line 191 "mcbits/Keccak-simple.c"
  $664 = $32; //@line 192 "mcbits/Keccak-simple.c"
  $665 = $664; //@line 192 "mcbits/Keccak-simple.c"
  $666 = HEAP32[$665>>2]|0; //@line 192 "mcbits/Keccak-simple.c"
  $667 = (($664) + 4)|0; //@line 192 "mcbits/Keccak-simple.c"
  $668 = $667; //@line 192 "mcbits/Keccak-simple.c"
  $669 = HEAP32[$668>>2]|0; //@line 192 "mcbits/Keccak-simple.c"
  $670 = $34; //@line 192 "mcbits/Keccak-simple.c"
  $671 = $670; //@line 192 "mcbits/Keccak-simple.c"
  $672 = HEAP32[$671>>2]|0; //@line 192 "mcbits/Keccak-simple.c"
  $673 = (($670) + 4)|0; //@line 192 "mcbits/Keccak-simple.c"
  $674 = $673; //@line 192 "mcbits/Keccak-simple.c"
  $675 = HEAP32[$674>>2]|0; //@line 192 "mcbits/Keccak-simple.c"
  $676 = (_bitshift64Shl(($672|0),($675|0),1)|0); //@line 192 "mcbits/Keccak-simple.c"
  $677 = tempRet0; //@line 192 "mcbits/Keccak-simple.c"
  $678 = $34; //@line 192 "mcbits/Keccak-simple.c"
  $679 = $678; //@line 192 "mcbits/Keccak-simple.c"
  $680 = HEAP32[$679>>2]|0; //@line 192 "mcbits/Keccak-simple.c"
  $681 = (($678) + 4)|0; //@line 192 "mcbits/Keccak-simple.c"
  $682 = $681; //@line 192 "mcbits/Keccak-simple.c"
  $683 = HEAP32[$682>>2]|0; //@line 192 "mcbits/Keccak-simple.c"
  $684 = (_bitshift64Lshr(($680|0),($683|0),63)|0); //@line 192 "mcbits/Keccak-simple.c"
  $685 = tempRet0; //@line 192 "mcbits/Keccak-simple.c"
  $686 = $676 ^ $684; //@line 192 "mcbits/Keccak-simple.c"
  $687 = $677 ^ $685; //@line 192 "mcbits/Keccak-simple.c"
  $688 = $666 ^ $686; //@line 192 "mcbits/Keccak-simple.c"
  $689 = $669 ^ $687; //@line 192 "mcbits/Keccak-simple.c"
  $690 = $38; //@line 192 "mcbits/Keccak-simple.c"
  $691 = $690; //@line 192 "mcbits/Keccak-simple.c"
  HEAP32[$691>>2] = $688; //@line 192 "mcbits/Keccak-simple.c"
  $692 = (($690) + 4)|0; //@line 192 "mcbits/Keccak-simple.c"
  $693 = $692; //@line 192 "mcbits/Keccak-simple.c"
  HEAP32[$693>>2] = $689; //@line 192 "mcbits/Keccak-simple.c"
  $694 = $33; //@line 193 "mcbits/Keccak-simple.c"
  $695 = $694; //@line 193 "mcbits/Keccak-simple.c"
  $696 = HEAP32[$695>>2]|0; //@line 193 "mcbits/Keccak-simple.c"
  $697 = (($694) + 4)|0; //@line 193 "mcbits/Keccak-simple.c"
  $698 = $697; //@line 193 "mcbits/Keccak-simple.c"
  $699 = HEAP32[$698>>2]|0; //@line 193 "mcbits/Keccak-simple.c"
  $700 = $35; //@line 193 "mcbits/Keccak-simple.c"
  $701 = $700; //@line 193 "mcbits/Keccak-simple.c"
  $702 = HEAP32[$701>>2]|0; //@line 193 "mcbits/Keccak-simple.c"
  $703 = (($700) + 4)|0; //@line 193 "mcbits/Keccak-simple.c"
  $704 = $703; //@line 193 "mcbits/Keccak-simple.c"
  $705 = HEAP32[$704>>2]|0; //@line 193 "mcbits/Keccak-simple.c"
  $706 = (_bitshift64Shl(($702|0),($705|0),1)|0); //@line 193 "mcbits/Keccak-simple.c"
  $707 = tempRet0; //@line 193 "mcbits/Keccak-simple.c"
  $708 = $35; //@line 193 "mcbits/Keccak-simple.c"
  $709 = $708; //@line 193 "mcbits/Keccak-simple.c"
  $710 = HEAP32[$709>>2]|0; //@line 193 "mcbits/Keccak-simple.c"
  $711 = (($708) + 4)|0; //@line 193 "mcbits/Keccak-simple.c"
  $712 = $711; //@line 193 "mcbits/Keccak-simple.c"
  $713 = HEAP32[$712>>2]|0; //@line 193 "mcbits/Keccak-simple.c"
  $714 = (_bitshift64Lshr(($710|0),($713|0),63)|0); //@line 193 "mcbits/Keccak-simple.c"
  $715 = tempRet0; //@line 193 "mcbits/Keccak-simple.c"
  $716 = $706 ^ $714; //@line 193 "mcbits/Keccak-simple.c"
  $717 = $707 ^ $715; //@line 193 "mcbits/Keccak-simple.c"
  $718 = $696 ^ $716; //@line 193 "mcbits/Keccak-simple.c"
  $719 = $699 ^ $717; //@line 193 "mcbits/Keccak-simple.c"
  $720 = $39; //@line 193 "mcbits/Keccak-simple.c"
  $721 = $720; //@line 193 "mcbits/Keccak-simple.c"
  HEAP32[$721>>2] = $718; //@line 193 "mcbits/Keccak-simple.c"
  $722 = (($720) + 4)|0; //@line 193 "mcbits/Keccak-simple.c"
  $723 = $722; //@line 193 "mcbits/Keccak-simple.c"
  HEAP32[$723>>2] = $719; //@line 193 "mcbits/Keccak-simple.c"
  $724 = $34; //@line 194 "mcbits/Keccak-simple.c"
  $725 = $724; //@line 194 "mcbits/Keccak-simple.c"
  $726 = HEAP32[$725>>2]|0; //@line 194 "mcbits/Keccak-simple.c"
  $727 = (($724) + 4)|0; //@line 194 "mcbits/Keccak-simple.c"
  $728 = $727; //@line 194 "mcbits/Keccak-simple.c"
  $729 = HEAP32[$728>>2]|0; //@line 194 "mcbits/Keccak-simple.c"
  $730 = $31; //@line 194 "mcbits/Keccak-simple.c"
  $731 = $730; //@line 194 "mcbits/Keccak-simple.c"
  $732 = HEAP32[$731>>2]|0; //@line 194 "mcbits/Keccak-simple.c"
  $733 = (($730) + 4)|0; //@line 194 "mcbits/Keccak-simple.c"
  $734 = $733; //@line 194 "mcbits/Keccak-simple.c"
  $735 = HEAP32[$734>>2]|0; //@line 194 "mcbits/Keccak-simple.c"
  $736 = (_bitshift64Shl(($732|0),($735|0),1)|0); //@line 194 "mcbits/Keccak-simple.c"
  $737 = tempRet0; //@line 194 "mcbits/Keccak-simple.c"
  $738 = $31; //@line 194 "mcbits/Keccak-simple.c"
  $739 = $738; //@line 194 "mcbits/Keccak-simple.c"
  $740 = HEAP32[$739>>2]|0; //@line 194 "mcbits/Keccak-simple.c"
  $741 = (($738) + 4)|0; //@line 194 "mcbits/Keccak-simple.c"
  $742 = $741; //@line 194 "mcbits/Keccak-simple.c"
  $743 = HEAP32[$742>>2]|0; //@line 194 "mcbits/Keccak-simple.c"
  $744 = (_bitshift64Lshr(($740|0),($743|0),63)|0); //@line 194 "mcbits/Keccak-simple.c"
  $745 = tempRet0; //@line 194 "mcbits/Keccak-simple.c"
  $746 = $736 ^ $744; //@line 194 "mcbits/Keccak-simple.c"
  $747 = $737 ^ $745; //@line 194 "mcbits/Keccak-simple.c"
  $748 = $726 ^ $746; //@line 194 "mcbits/Keccak-simple.c"
  $749 = $729 ^ $747; //@line 194 "mcbits/Keccak-simple.c"
  $750 = $40; //@line 194 "mcbits/Keccak-simple.c"
  $751 = $750; //@line 194 "mcbits/Keccak-simple.c"
  HEAP32[$751>>2] = $748; //@line 194 "mcbits/Keccak-simple.c"
  $752 = (($750) + 4)|0; //@line 194 "mcbits/Keccak-simple.c"
  $753 = $752; //@line 194 "mcbits/Keccak-simple.c"
  HEAP32[$753>>2] = $749; //@line 194 "mcbits/Keccak-simple.c"
  $754 = $36; //@line 196 "mcbits/Keccak-simple.c"
  $755 = $754; //@line 196 "mcbits/Keccak-simple.c"
  $756 = HEAP32[$755>>2]|0; //@line 196 "mcbits/Keccak-simple.c"
  $757 = (($754) + 4)|0; //@line 196 "mcbits/Keccak-simple.c"
  $758 = $757; //@line 196 "mcbits/Keccak-simple.c"
  $759 = HEAP32[$758>>2]|0; //@line 196 "mcbits/Keccak-simple.c"
  $760 = $6; //@line 196 "mcbits/Keccak-simple.c"
  $761 = $760; //@line 196 "mcbits/Keccak-simple.c"
  $762 = HEAP32[$761>>2]|0; //@line 196 "mcbits/Keccak-simple.c"
  $763 = (($760) + 4)|0; //@line 196 "mcbits/Keccak-simple.c"
  $764 = $763; //@line 196 "mcbits/Keccak-simple.c"
  $765 = HEAP32[$764>>2]|0; //@line 196 "mcbits/Keccak-simple.c"
  $766 = $762 ^ $756; //@line 196 "mcbits/Keccak-simple.c"
  $767 = $765 ^ $759; //@line 196 "mcbits/Keccak-simple.c"
  $768 = $6; //@line 196 "mcbits/Keccak-simple.c"
  $769 = $768; //@line 196 "mcbits/Keccak-simple.c"
  HEAP32[$769>>2] = $766; //@line 196 "mcbits/Keccak-simple.c"
  $770 = (($768) + 4)|0; //@line 196 "mcbits/Keccak-simple.c"
  $771 = $770; //@line 196 "mcbits/Keccak-simple.c"
  HEAP32[$771>>2] = $767; //@line 196 "mcbits/Keccak-simple.c"
  $772 = $6; //@line 197 "mcbits/Keccak-simple.c"
  $773 = $772; //@line 197 "mcbits/Keccak-simple.c"
  $774 = HEAP32[$773>>2]|0; //@line 197 "mcbits/Keccak-simple.c"
  $775 = (($772) + 4)|0; //@line 197 "mcbits/Keccak-simple.c"
  $776 = $775; //@line 197 "mcbits/Keccak-simple.c"
  $777 = HEAP32[$776>>2]|0; //@line 197 "mcbits/Keccak-simple.c"
  $778 = $31; //@line 197 "mcbits/Keccak-simple.c"
  $779 = $778; //@line 197 "mcbits/Keccak-simple.c"
  HEAP32[$779>>2] = $774; //@line 197 "mcbits/Keccak-simple.c"
  $780 = (($778) + 4)|0; //@line 197 "mcbits/Keccak-simple.c"
  $781 = $780; //@line 197 "mcbits/Keccak-simple.c"
  HEAP32[$781>>2] = $777; //@line 197 "mcbits/Keccak-simple.c"
  $782 = $37; //@line 198 "mcbits/Keccak-simple.c"
  $783 = $782; //@line 198 "mcbits/Keccak-simple.c"
  $784 = HEAP32[$783>>2]|0; //@line 198 "mcbits/Keccak-simple.c"
  $785 = (($782) + 4)|0; //@line 198 "mcbits/Keccak-simple.c"
  $786 = $785; //@line 198 "mcbits/Keccak-simple.c"
  $787 = HEAP32[$786>>2]|0; //@line 198 "mcbits/Keccak-simple.c"
  $788 = $12; //@line 198 "mcbits/Keccak-simple.c"
  $789 = $788; //@line 198 "mcbits/Keccak-simple.c"
  $790 = HEAP32[$789>>2]|0; //@line 198 "mcbits/Keccak-simple.c"
  $791 = (($788) + 4)|0; //@line 198 "mcbits/Keccak-simple.c"
  $792 = $791; //@line 198 "mcbits/Keccak-simple.c"
  $793 = HEAP32[$792>>2]|0; //@line 198 "mcbits/Keccak-simple.c"
  $794 = $790 ^ $784; //@line 198 "mcbits/Keccak-simple.c"
  $795 = $793 ^ $787; //@line 198 "mcbits/Keccak-simple.c"
  $796 = $12; //@line 198 "mcbits/Keccak-simple.c"
  $797 = $796; //@line 198 "mcbits/Keccak-simple.c"
  HEAP32[$797>>2] = $794; //@line 198 "mcbits/Keccak-simple.c"
  $798 = (($796) + 4)|0; //@line 198 "mcbits/Keccak-simple.c"
  $799 = $798; //@line 198 "mcbits/Keccak-simple.c"
  HEAP32[$799>>2] = $795; //@line 198 "mcbits/Keccak-simple.c"
  $800 = $12; //@line 199 "mcbits/Keccak-simple.c"
  $801 = $800; //@line 199 "mcbits/Keccak-simple.c"
  $802 = HEAP32[$801>>2]|0; //@line 199 "mcbits/Keccak-simple.c"
  $803 = (($800) + 4)|0; //@line 199 "mcbits/Keccak-simple.c"
  $804 = $803; //@line 199 "mcbits/Keccak-simple.c"
  $805 = HEAP32[$804>>2]|0; //@line 199 "mcbits/Keccak-simple.c"
  $806 = (_bitshift64Shl(($802|0),($805|0),44)|0); //@line 199 "mcbits/Keccak-simple.c"
  $807 = tempRet0; //@line 199 "mcbits/Keccak-simple.c"
  $808 = $12; //@line 199 "mcbits/Keccak-simple.c"
  $809 = $808; //@line 199 "mcbits/Keccak-simple.c"
  $810 = HEAP32[$809>>2]|0; //@line 199 "mcbits/Keccak-simple.c"
  $811 = (($808) + 4)|0; //@line 199 "mcbits/Keccak-simple.c"
  $812 = $811; //@line 199 "mcbits/Keccak-simple.c"
  $813 = HEAP32[$812>>2]|0; //@line 199 "mcbits/Keccak-simple.c"
  $814 = (_bitshift64Lshr(($810|0),($813|0),20)|0); //@line 199 "mcbits/Keccak-simple.c"
  $815 = tempRet0; //@line 199 "mcbits/Keccak-simple.c"
  $816 = $806 ^ $814; //@line 199 "mcbits/Keccak-simple.c"
  $817 = $807 ^ $815; //@line 199 "mcbits/Keccak-simple.c"
  $818 = $32; //@line 199 "mcbits/Keccak-simple.c"
  $819 = $818; //@line 199 "mcbits/Keccak-simple.c"
  HEAP32[$819>>2] = $816; //@line 199 "mcbits/Keccak-simple.c"
  $820 = (($818) + 4)|0; //@line 199 "mcbits/Keccak-simple.c"
  $821 = $820; //@line 199 "mcbits/Keccak-simple.c"
  HEAP32[$821>>2] = $817; //@line 199 "mcbits/Keccak-simple.c"
  $822 = $38; //@line 200 "mcbits/Keccak-simple.c"
  $823 = $822; //@line 200 "mcbits/Keccak-simple.c"
  $824 = HEAP32[$823>>2]|0; //@line 200 "mcbits/Keccak-simple.c"
  $825 = (($822) + 4)|0; //@line 200 "mcbits/Keccak-simple.c"
  $826 = $825; //@line 200 "mcbits/Keccak-simple.c"
  $827 = HEAP32[$826>>2]|0; //@line 200 "mcbits/Keccak-simple.c"
  $828 = $18; //@line 200 "mcbits/Keccak-simple.c"
  $829 = $828; //@line 200 "mcbits/Keccak-simple.c"
  $830 = HEAP32[$829>>2]|0; //@line 200 "mcbits/Keccak-simple.c"
  $831 = (($828) + 4)|0; //@line 200 "mcbits/Keccak-simple.c"
  $832 = $831; //@line 200 "mcbits/Keccak-simple.c"
  $833 = HEAP32[$832>>2]|0; //@line 200 "mcbits/Keccak-simple.c"
  $834 = $830 ^ $824; //@line 200 "mcbits/Keccak-simple.c"
  $835 = $833 ^ $827; //@line 200 "mcbits/Keccak-simple.c"
  $836 = $18; //@line 200 "mcbits/Keccak-simple.c"
  $837 = $836; //@line 200 "mcbits/Keccak-simple.c"
  HEAP32[$837>>2] = $834; //@line 200 "mcbits/Keccak-simple.c"
  $838 = (($836) + 4)|0; //@line 200 "mcbits/Keccak-simple.c"
  $839 = $838; //@line 200 "mcbits/Keccak-simple.c"
  HEAP32[$839>>2] = $835; //@line 200 "mcbits/Keccak-simple.c"
  $840 = $18; //@line 201 "mcbits/Keccak-simple.c"
  $841 = $840; //@line 201 "mcbits/Keccak-simple.c"
  $842 = HEAP32[$841>>2]|0; //@line 201 "mcbits/Keccak-simple.c"
  $843 = (($840) + 4)|0; //@line 201 "mcbits/Keccak-simple.c"
  $844 = $843; //@line 201 "mcbits/Keccak-simple.c"
  $845 = HEAP32[$844>>2]|0; //@line 201 "mcbits/Keccak-simple.c"
  $846 = (_bitshift64Shl(($842|0),($845|0),43)|0); //@line 201 "mcbits/Keccak-simple.c"
  $847 = tempRet0; //@line 201 "mcbits/Keccak-simple.c"
  $848 = $18; //@line 201 "mcbits/Keccak-simple.c"
  $849 = $848; //@line 201 "mcbits/Keccak-simple.c"
  $850 = HEAP32[$849>>2]|0; //@line 201 "mcbits/Keccak-simple.c"
  $851 = (($848) + 4)|0; //@line 201 "mcbits/Keccak-simple.c"
  $852 = $851; //@line 201 "mcbits/Keccak-simple.c"
  $853 = HEAP32[$852>>2]|0; //@line 201 "mcbits/Keccak-simple.c"
  $854 = (_bitshift64Lshr(($850|0),($853|0),21)|0); //@line 201 "mcbits/Keccak-simple.c"
  $855 = tempRet0; //@line 201 "mcbits/Keccak-simple.c"
  $856 = $846 ^ $854; //@line 201 "mcbits/Keccak-simple.c"
  $857 = $847 ^ $855; //@line 201 "mcbits/Keccak-simple.c"
  $858 = $33; //@line 201 "mcbits/Keccak-simple.c"
  $859 = $858; //@line 201 "mcbits/Keccak-simple.c"
  HEAP32[$859>>2] = $856; //@line 201 "mcbits/Keccak-simple.c"
  $860 = (($858) + 4)|0; //@line 201 "mcbits/Keccak-simple.c"
  $861 = $860; //@line 201 "mcbits/Keccak-simple.c"
  HEAP32[$861>>2] = $857; //@line 201 "mcbits/Keccak-simple.c"
  $862 = $39; //@line 202 "mcbits/Keccak-simple.c"
  $863 = $862; //@line 202 "mcbits/Keccak-simple.c"
  $864 = HEAP32[$863>>2]|0; //@line 202 "mcbits/Keccak-simple.c"
  $865 = (($862) + 4)|0; //@line 202 "mcbits/Keccak-simple.c"
  $866 = $865; //@line 202 "mcbits/Keccak-simple.c"
  $867 = HEAP32[$866>>2]|0; //@line 202 "mcbits/Keccak-simple.c"
  $868 = $24; //@line 202 "mcbits/Keccak-simple.c"
  $869 = $868; //@line 202 "mcbits/Keccak-simple.c"
  $870 = HEAP32[$869>>2]|0; //@line 202 "mcbits/Keccak-simple.c"
  $871 = (($868) + 4)|0; //@line 202 "mcbits/Keccak-simple.c"
  $872 = $871; //@line 202 "mcbits/Keccak-simple.c"
  $873 = HEAP32[$872>>2]|0; //@line 202 "mcbits/Keccak-simple.c"
  $874 = $870 ^ $864; //@line 202 "mcbits/Keccak-simple.c"
  $875 = $873 ^ $867; //@line 202 "mcbits/Keccak-simple.c"
  $876 = $24; //@line 202 "mcbits/Keccak-simple.c"
  $877 = $876; //@line 202 "mcbits/Keccak-simple.c"
  HEAP32[$877>>2] = $874; //@line 202 "mcbits/Keccak-simple.c"
  $878 = (($876) + 4)|0; //@line 202 "mcbits/Keccak-simple.c"
  $879 = $878; //@line 202 "mcbits/Keccak-simple.c"
  HEAP32[$879>>2] = $875; //@line 202 "mcbits/Keccak-simple.c"
  $880 = $24; //@line 203 "mcbits/Keccak-simple.c"
  $881 = $880; //@line 203 "mcbits/Keccak-simple.c"
  $882 = HEAP32[$881>>2]|0; //@line 203 "mcbits/Keccak-simple.c"
  $883 = (($880) + 4)|0; //@line 203 "mcbits/Keccak-simple.c"
  $884 = $883; //@line 203 "mcbits/Keccak-simple.c"
  $885 = HEAP32[$884>>2]|0; //@line 203 "mcbits/Keccak-simple.c"
  $886 = (_bitshift64Shl(($882|0),($885|0),21)|0); //@line 203 "mcbits/Keccak-simple.c"
  $887 = tempRet0; //@line 203 "mcbits/Keccak-simple.c"
  $888 = $24; //@line 203 "mcbits/Keccak-simple.c"
  $889 = $888; //@line 203 "mcbits/Keccak-simple.c"
  $890 = HEAP32[$889>>2]|0; //@line 203 "mcbits/Keccak-simple.c"
  $891 = (($888) + 4)|0; //@line 203 "mcbits/Keccak-simple.c"
  $892 = $891; //@line 203 "mcbits/Keccak-simple.c"
  $893 = HEAP32[$892>>2]|0; //@line 203 "mcbits/Keccak-simple.c"
  $894 = (_bitshift64Lshr(($890|0),($893|0),43)|0); //@line 203 "mcbits/Keccak-simple.c"
  $895 = tempRet0; //@line 203 "mcbits/Keccak-simple.c"
  $896 = $886 ^ $894; //@line 203 "mcbits/Keccak-simple.c"
  $897 = $887 ^ $895; //@line 203 "mcbits/Keccak-simple.c"
  $898 = $34; //@line 203 "mcbits/Keccak-simple.c"
  $899 = $898; //@line 203 "mcbits/Keccak-simple.c"
  HEAP32[$899>>2] = $896; //@line 203 "mcbits/Keccak-simple.c"
  $900 = (($898) + 4)|0; //@line 203 "mcbits/Keccak-simple.c"
  $901 = $900; //@line 203 "mcbits/Keccak-simple.c"
  HEAP32[$901>>2] = $897; //@line 203 "mcbits/Keccak-simple.c"
  $902 = $40; //@line 204 "mcbits/Keccak-simple.c"
  $903 = $902; //@line 204 "mcbits/Keccak-simple.c"
  $904 = HEAP32[$903>>2]|0; //@line 204 "mcbits/Keccak-simple.c"
  $905 = (($902) + 4)|0; //@line 204 "mcbits/Keccak-simple.c"
  $906 = $905; //@line 204 "mcbits/Keccak-simple.c"
  $907 = HEAP32[$906>>2]|0; //@line 204 "mcbits/Keccak-simple.c"
  $908 = $30; //@line 204 "mcbits/Keccak-simple.c"
  $909 = $908; //@line 204 "mcbits/Keccak-simple.c"
  $910 = HEAP32[$909>>2]|0; //@line 204 "mcbits/Keccak-simple.c"
  $911 = (($908) + 4)|0; //@line 204 "mcbits/Keccak-simple.c"
  $912 = $911; //@line 204 "mcbits/Keccak-simple.c"
  $913 = HEAP32[$912>>2]|0; //@line 204 "mcbits/Keccak-simple.c"
  $914 = $910 ^ $904; //@line 204 "mcbits/Keccak-simple.c"
  $915 = $913 ^ $907; //@line 204 "mcbits/Keccak-simple.c"
  $916 = $30; //@line 204 "mcbits/Keccak-simple.c"
  $917 = $916; //@line 204 "mcbits/Keccak-simple.c"
  HEAP32[$917>>2] = $914; //@line 204 "mcbits/Keccak-simple.c"
  $918 = (($916) + 4)|0; //@line 204 "mcbits/Keccak-simple.c"
  $919 = $918; //@line 204 "mcbits/Keccak-simple.c"
  HEAP32[$919>>2] = $915; //@line 204 "mcbits/Keccak-simple.c"
  $920 = $30; //@line 205 "mcbits/Keccak-simple.c"
  $921 = $920; //@line 205 "mcbits/Keccak-simple.c"
  $922 = HEAP32[$921>>2]|0; //@line 205 "mcbits/Keccak-simple.c"
  $923 = (($920) + 4)|0; //@line 205 "mcbits/Keccak-simple.c"
  $924 = $923; //@line 205 "mcbits/Keccak-simple.c"
  $925 = HEAP32[$924>>2]|0; //@line 205 "mcbits/Keccak-simple.c"
  $926 = (_bitshift64Shl(($922|0),($925|0),14)|0); //@line 205 "mcbits/Keccak-simple.c"
  $927 = tempRet0; //@line 205 "mcbits/Keccak-simple.c"
  $928 = $30; //@line 205 "mcbits/Keccak-simple.c"
  $929 = $928; //@line 205 "mcbits/Keccak-simple.c"
  $930 = HEAP32[$929>>2]|0; //@line 205 "mcbits/Keccak-simple.c"
  $931 = (($928) + 4)|0; //@line 205 "mcbits/Keccak-simple.c"
  $932 = $931; //@line 205 "mcbits/Keccak-simple.c"
  $933 = HEAP32[$932>>2]|0; //@line 205 "mcbits/Keccak-simple.c"
  $934 = (_bitshift64Lshr(($930|0),($933|0),50)|0); //@line 205 "mcbits/Keccak-simple.c"
  $935 = tempRet0; //@line 205 "mcbits/Keccak-simple.c"
  $936 = $926 ^ $934; //@line 205 "mcbits/Keccak-simple.c"
  $937 = $927 ^ $935; //@line 205 "mcbits/Keccak-simple.c"
  $938 = $35; //@line 205 "mcbits/Keccak-simple.c"
  $939 = $938; //@line 205 "mcbits/Keccak-simple.c"
  HEAP32[$939>>2] = $936; //@line 205 "mcbits/Keccak-simple.c"
  $940 = (($938) + 4)|0; //@line 205 "mcbits/Keccak-simple.c"
  $941 = $940; //@line 205 "mcbits/Keccak-simple.c"
  HEAP32[$941>>2] = $937; //@line 205 "mcbits/Keccak-simple.c"
  $942 = $31; //@line 206 "mcbits/Keccak-simple.c"
  $943 = $942; //@line 206 "mcbits/Keccak-simple.c"
  $944 = HEAP32[$943>>2]|0; //@line 206 "mcbits/Keccak-simple.c"
  $945 = (($942) + 4)|0; //@line 206 "mcbits/Keccak-simple.c"
  $946 = $945; //@line 206 "mcbits/Keccak-simple.c"
  $947 = HEAP32[$946>>2]|0; //@line 206 "mcbits/Keccak-simple.c"
  $948 = $32; //@line 206 "mcbits/Keccak-simple.c"
  $949 = $948; //@line 206 "mcbits/Keccak-simple.c"
  $950 = HEAP32[$949>>2]|0; //@line 206 "mcbits/Keccak-simple.c"
  $951 = (($948) + 4)|0; //@line 206 "mcbits/Keccak-simple.c"
  $952 = $951; //@line 206 "mcbits/Keccak-simple.c"
  $953 = HEAP32[$952>>2]|0; //@line 206 "mcbits/Keccak-simple.c"
  $954 = $950 ^ -1; //@line 206 "mcbits/Keccak-simple.c"
  $955 = $953 ^ -1; //@line 206 "mcbits/Keccak-simple.c"
  $956 = $33; //@line 206 "mcbits/Keccak-simple.c"
  $957 = $956; //@line 206 "mcbits/Keccak-simple.c"
  $958 = HEAP32[$957>>2]|0; //@line 206 "mcbits/Keccak-simple.c"
  $959 = (($956) + 4)|0; //@line 206 "mcbits/Keccak-simple.c"
  $960 = $959; //@line 206 "mcbits/Keccak-simple.c"
  $961 = HEAP32[$960>>2]|0; //@line 206 "mcbits/Keccak-simple.c"
  $962 = $954 & $958; //@line 206 "mcbits/Keccak-simple.c"
  $963 = $955 & $961; //@line 206 "mcbits/Keccak-simple.c"
  $964 = $944 ^ $962; //@line 206 "mcbits/Keccak-simple.c"
  $965 = $947 ^ $963; //@line 206 "mcbits/Keccak-simple.c"
  $966 = $41; //@line 206 "mcbits/Keccak-simple.c"
  $967 = $966; //@line 206 "mcbits/Keccak-simple.c"
  HEAP32[$967>>2] = $964; //@line 206 "mcbits/Keccak-simple.c"
  $968 = (($966) + 4)|0; //@line 206 "mcbits/Keccak-simple.c"
  $969 = $968; //@line 206 "mcbits/Keccak-simple.c"
  HEAP32[$969>>2] = $965; //@line 206 "mcbits/Keccak-simple.c"
  $970 = $5; //@line 207 "mcbits/Keccak-simple.c"
  $971 = (8 + ($970<<3)|0); //@line 207 "mcbits/Keccak-simple.c"
  $972 = $971; //@line 207 "mcbits/Keccak-simple.c"
  $973 = $972; //@line 207 "mcbits/Keccak-simple.c"
  $974 = HEAP32[$973>>2]|0; //@line 207 "mcbits/Keccak-simple.c"
  $975 = (($972) + 4)|0; //@line 207 "mcbits/Keccak-simple.c"
  $976 = $975; //@line 207 "mcbits/Keccak-simple.c"
  $977 = HEAP32[$976>>2]|0; //@line 207 "mcbits/Keccak-simple.c"
  $978 = $41; //@line 207 "mcbits/Keccak-simple.c"
  $979 = $978; //@line 207 "mcbits/Keccak-simple.c"
  $980 = HEAP32[$979>>2]|0; //@line 207 "mcbits/Keccak-simple.c"
  $981 = (($978) + 4)|0; //@line 207 "mcbits/Keccak-simple.c"
  $982 = $981; //@line 207 "mcbits/Keccak-simple.c"
  $983 = HEAP32[$982>>2]|0; //@line 207 "mcbits/Keccak-simple.c"
  $984 = $980 ^ $974; //@line 207 "mcbits/Keccak-simple.c"
  $985 = $983 ^ $977; //@line 207 "mcbits/Keccak-simple.c"
  $986 = $41; //@line 207 "mcbits/Keccak-simple.c"
  $987 = $986; //@line 207 "mcbits/Keccak-simple.c"
  HEAP32[$987>>2] = $984; //@line 207 "mcbits/Keccak-simple.c"
  $988 = (($986) + 4)|0; //@line 207 "mcbits/Keccak-simple.c"
  $989 = $988; //@line 207 "mcbits/Keccak-simple.c"
  HEAP32[$989>>2] = $985; //@line 207 "mcbits/Keccak-simple.c"
  $990 = $32; //@line 208 "mcbits/Keccak-simple.c"
  $991 = $990; //@line 208 "mcbits/Keccak-simple.c"
  $992 = HEAP32[$991>>2]|0; //@line 208 "mcbits/Keccak-simple.c"
  $993 = (($990) + 4)|0; //@line 208 "mcbits/Keccak-simple.c"
  $994 = $993; //@line 208 "mcbits/Keccak-simple.c"
  $995 = HEAP32[$994>>2]|0; //@line 208 "mcbits/Keccak-simple.c"
  $996 = $33; //@line 208 "mcbits/Keccak-simple.c"
  $997 = $996; //@line 208 "mcbits/Keccak-simple.c"
  $998 = HEAP32[$997>>2]|0; //@line 208 "mcbits/Keccak-simple.c"
  $999 = (($996) + 4)|0; //@line 208 "mcbits/Keccak-simple.c"
  $1000 = $999; //@line 208 "mcbits/Keccak-simple.c"
  $1001 = HEAP32[$1000>>2]|0; //@line 208 "mcbits/Keccak-simple.c"
  $1002 = $998 ^ -1; //@line 208 "mcbits/Keccak-simple.c"
  $1003 = $1001 ^ -1; //@line 208 "mcbits/Keccak-simple.c"
  $1004 = $34; //@line 208 "mcbits/Keccak-simple.c"
  $1005 = $1004; //@line 208 "mcbits/Keccak-simple.c"
  $1006 = HEAP32[$1005>>2]|0; //@line 208 "mcbits/Keccak-simple.c"
  $1007 = (($1004) + 4)|0; //@line 208 "mcbits/Keccak-simple.c"
  $1008 = $1007; //@line 208 "mcbits/Keccak-simple.c"
  $1009 = HEAP32[$1008>>2]|0; //@line 208 "mcbits/Keccak-simple.c"
  $1010 = $1002 & $1006; //@line 208 "mcbits/Keccak-simple.c"
  $1011 = $1003 & $1009; //@line 208 "mcbits/Keccak-simple.c"
  $1012 = $992 ^ $1010; //@line 208 "mcbits/Keccak-simple.c"
  $1013 = $995 ^ $1011; //@line 208 "mcbits/Keccak-simple.c"
  $1014 = $42; //@line 208 "mcbits/Keccak-simple.c"
  $1015 = $1014; //@line 208 "mcbits/Keccak-simple.c"
  HEAP32[$1015>>2] = $1012; //@line 208 "mcbits/Keccak-simple.c"
  $1016 = (($1014) + 4)|0; //@line 208 "mcbits/Keccak-simple.c"
  $1017 = $1016; //@line 208 "mcbits/Keccak-simple.c"
  HEAP32[$1017>>2] = $1013; //@line 208 "mcbits/Keccak-simple.c"
  $1018 = $33; //@line 209 "mcbits/Keccak-simple.c"
  $1019 = $1018; //@line 209 "mcbits/Keccak-simple.c"
  $1020 = HEAP32[$1019>>2]|0; //@line 209 "mcbits/Keccak-simple.c"
  $1021 = (($1018) + 4)|0; //@line 209 "mcbits/Keccak-simple.c"
  $1022 = $1021; //@line 209 "mcbits/Keccak-simple.c"
  $1023 = HEAP32[$1022>>2]|0; //@line 209 "mcbits/Keccak-simple.c"
  $1024 = $34; //@line 209 "mcbits/Keccak-simple.c"
  $1025 = $1024; //@line 209 "mcbits/Keccak-simple.c"
  $1026 = HEAP32[$1025>>2]|0; //@line 209 "mcbits/Keccak-simple.c"
  $1027 = (($1024) + 4)|0; //@line 209 "mcbits/Keccak-simple.c"
  $1028 = $1027; //@line 209 "mcbits/Keccak-simple.c"
  $1029 = HEAP32[$1028>>2]|0; //@line 209 "mcbits/Keccak-simple.c"
  $1030 = $1026 ^ -1; //@line 209 "mcbits/Keccak-simple.c"
  $1031 = $1029 ^ -1; //@line 209 "mcbits/Keccak-simple.c"
  $1032 = $35; //@line 209 "mcbits/Keccak-simple.c"
  $1033 = $1032; //@line 209 "mcbits/Keccak-simple.c"
  $1034 = HEAP32[$1033>>2]|0; //@line 209 "mcbits/Keccak-simple.c"
  $1035 = (($1032) + 4)|0; //@line 209 "mcbits/Keccak-simple.c"
  $1036 = $1035; //@line 209 "mcbits/Keccak-simple.c"
  $1037 = HEAP32[$1036>>2]|0; //@line 209 "mcbits/Keccak-simple.c"
  $1038 = $1030 & $1034; //@line 209 "mcbits/Keccak-simple.c"
  $1039 = $1031 & $1037; //@line 209 "mcbits/Keccak-simple.c"
  $1040 = $1020 ^ $1038; //@line 209 "mcbits/Keccak-simple.c"
  $1041 = $1023 ^ $1039; //@line 209 "mcbits/Keccak-simple.c"
  $1042 = $43; //@line 209 "mcbits/Keccak-simple.c"
  $1043 = $1042; //@line 209 "mcbits/Keccak-simple.c"
  HEAP32[$1043>>2] = $1040; //@line 209 "mcbits/Keccak-simple.c"
  $1044 = (($1042) + 4)|0; //@line 209 "mcbits/Keccak-simple.c"
  $1045 = $1044; //@line 209 "mcbits/Keccak-simple.c"
  HEAP32[$1045>>2] = $1041; //@line 209 "mcbits/Keccak-simple.c"
  $1046 = $34; //@line 210 "mcbits/Keccak-simple.c"
  $1047 = $1046; //@line 210 "mcbits/Keccak-simple.c"
  $1048 = HEAP32[$1047>>2]|0; //@line 210 "mcbits/Keccak-simple.c"
  $1049 = (($1046) + 4)|0; //@line 210 "mcbits/Keccak-simple.c"
  $1050 = $1049; //@line 210 "mcbits/Keccak-simple.c"
  $1051 = HEAP32[$1050>>2]|0; //@line 210 "mcbits/Keccak-simple.c"
  $1052 = $35; //@line 210 "mcbits/Keccak-simple.c"
  $1053 = $1052; //@line 210 "mcbits/Keccak-simple.c"
  $1054 = HEAP32[$1053>>2]|0; //@line 210 "mcbits/Keccak-simple.c"
  $1055 = (($1052) + 4)|0; //@line 210 "mcbits/Keccak-simple.c"
  $1056 = $1055; //@line 210 "mcbits/Keccak-simple.c"
  $1057 = HEAP32[$1056>>2]|0; //@line 210 "mcbits/Keccak-simple.c"
  $1058 = $1054 ^ -1; //@line 210 "mcbits/Keccak-simple.c"
  $1059 = $1057 ^ -1; //@line 210 "mcbits/Keccak-simple.c"
  $1060 = $31; //@line 210 "mcbits/Keccak-simple.c"
  $1061 = $1060; //@line 210 "mcbits/Keccak-simple.c"
  $1062 = HEAP32[$1061>>2]|0; //@line 210 "mcbits/Keccak-simple.c"
  $1063 = (($1060) + 4)|0; //@line 210 "mcbits/Keccak-simple.c"
  $1064 = $1063; //@line 210 "mcbits/Keccak-simple.c"
  $1065 = HEAP32[$1064>>2]|0; //@line 210 "mcbits/Keccak-simple.c"
  $1066 = $1058 & $1062; //@line 210 "mcbits/Keccak-simple.c"
  $1067 = $1059 & $1065; //@line 210 "mcbits/Keccak-simple.c"
  $1068 = $1048 ^ $1066; //@line 210 "mcbits/Keccak-simple.c"
  $1069 = $1051 ^ $1067; //@line 210 "mcbits/Keccak-simple.c"
  $1070 = $44; //@line 210 "mcbits/Keccak-simple.c"
  $1071 = $1070; //@line 210 "mcbits/Keccak-simple.c"
  HEAP32[$1071>>2] = $1068; //@line 210 "mcbits/Keccak-simple.c"
  $1072 = (($1070) + 4)|0; //@line 210 "mcbits/Keccak-simple.c"
  $1073 = $1072; //@line 210 "mcbits/Keccak-simple.c"
  HEAP32[$1073>>2] = $1069; //@line 210 "mcbits/Keccak-simple.c"
  $1074 = $35; //@line 211 "mcbits/Keccak-simple.c"
  $1075 = $1074; //@line 211 "mcbits/Keccak-simple.c"
  $1076 = HEAP32[$1075>>2]|0; //@line 211 "mcbits/Keccak-simple.c"
  $1077 = (($1074) + 4)|0; //@line 211 "mcbits/Keccak-simple.c"
  $1078 = $1077; //@line 211 "mcbits/Keccak-simple.c"
  $1079 = HEAP32[$1078>>2]|0; //@line 211 "mcbits/Keccak-simple.c"
  $1080 = $31; //@line 211 "mcbits/Keccak-simple.c"
  $1081 = $1080; //@line 211 "mcbits/Keccak-simple.c"
  $1082 = HEAP32[$1081>>2]|0; //@line 211 "mcbits/Keccak-simple.c"
  $1083 = (($1080) + 4)|0; //@line 211 "mcbits/Keccak-simple.c"
  $1084 = $1083; //@line 211 "mcbits/Keccak-simple.c"
  $1085 = HEAP32[$1084>>2]|0; //@line 211 "mcbits/Keccak-simple.c"
  $1086 = $1082 ^ -1; //@line 211 "mcbits/Keccak-simple.c"
  $1087 = $1085 ^ -1; //@line 211 "mcbits/Keccak-simple.c"
  $1088 = $32; //@line 211 "mcbits/Keccak-simple.c"
  $1089 = $1088; //@line 211 "mcbits/Keccak-simple.c"
  $1090 = HEAP32[$1089>>2]|0; //@line 211 "mcbits/Keccak-simple.c"
  $1091 = (($1088) + 4)|0; //@line 211 "mcbits/Keccak-simple.c"
  $1092 = $1091; //@line 211 "mcbits/Keccak-simple.c"
  $1093 = HEAP32[$1092>>2]|0; //@line 211 "mcbits/Keccak-simple.c"
  $1094 = $1086 & $1090; //@line 211 "mcbits/Keccak-simple.c"
  $1095 = $1087 & $1093; //@line 211 "mcbits/Keccak-simple.c"
  $1096 = $1076 ^ $1094; //@line 211 "mcbits/Keccak-simple.c"
  $1097 = $1079 ^ $1095; //@line 211 "mcbits/Keccak-simple.c"
  $1098 = $45; //@line 211 "mcbits/Keccak-simple.c"
  $1099 = $1098; //@line 211 "mcbits/Keccak-simple.c"
  HEAP32[$1099>>2] = $1096; //@line 211 "mcbits/Keccak-simple.c"
  $1100 = (($1098) + 4)|0; //@line 211 "mcbits/Keccak-simple.c"
  $1101 = $1100; //@line 211 "mcbits/Keccak-simple.c"
  HEAP32[$1101>>2] = $1097; //@line 211 "mcbits/Keccak-simple.c"
  $1102 = $39; //@line 213 "mcbits/Keccak-simple.c"
  $1103 = $1102; //@line 213 "mcbits/Keccak-simple.c"
  $1104 = HEAP32[$1103>>2]|0; //@line 213 "mcbits/Keccak-simple.c"
  $1105 = (($1102) + 4)|0; //@line 213 "mcbits/Keccak-simple.c"
  $1106 = $1105; //@line 213 "mcbits/Keccak-simple.c"
  $1107 = HEAP32[$1106>>2]|0; //@line 213 "mcbits/Keccak-simple.c"
  $1108 = $9; //@line 213 "mcbits/Keccak-simple.c"
  $1109 = $1108; //@line 213 "mcbits/Keccak-simple.c"
  $1110 = HEAP32[$1109>>2]|0; //@line 213 "mcbits/Keccak-simple.c"
  $1111 = (($1108) + 4)|0; //@line 213 "mcbits/Keccak-simple.c"
  $1112 = $1111; //@line 213 "mcbits/Keccak-simple.c"
  $1113 = HEAP32[$1112>>2]|0; //@line 213 "mcbits/Keccak-simple.c"
  $1114 = $1110 ^ $1104; //@line 213 "mcbits/Keccak-simple.c"
  $1115 = $1113 ^ $1107; //@line 213 "mcbits/Keccak-simple.c"
  $1116 = $9; //@line 213 "mcbits/Keccak-simple.c"
  $1117 = $1116; //@line 213 "mcbits/Keccak-simple.c"
  HEAP32[$1117>>2] = $1114; //@line 213 "mcbits/Keccak-simple.c"
  $1118 = (($1116) + 4)|0; //@line 213 "mcbits/Keccak-simple.c"
  $1119 = $1118; //@line 213 "mcbits/Keccak-simple.c"
  HEAP32[$1119>>2] = $1115; //@line 213 "mcbits/Keccak-simple.c"
  $1120 = $9; //@line 214 "mcbits/Keccak-simple.c"
  $1121 = $1120; //@line 214 "mcbits/Keccak-simple.c"
  $1122 = HEAP32[$1121>>2]|0; //@line 214 "mcbits/Keccak-simple.c"
  $1123 = (($1120) + 4)|0; //@line 214 "mcbits/Keccak-simple.c"
  $1124 = $1123; //@line 214 "mcbits/Keccak-simple.c"
  $1125 = HEAP32[$1124>>2]|0; //@line 214 "mcbits/Keccak-simple.c"
  $1126 = (_bitshift64Shl(($1122|0),($1125|0),28)|0); //@line 214 "mcbits/Keccak-simple.c"
  $1127 = tempRet0; //@line 214 "mcbits/Keccak-simple.c"
  $1128 = $9; //@line 214 "mcbits/Keccak-simple.c"
  $1129 = $1128; //@line 214 "mcbits/Keccak-simple.c"
  $1130 = HEAP32[$1129>>2]|0; //@line 214 "mcbits/Keccak-simple.c"
  $1131 = (($1128) + 4)|0; //@line 214 "mcbits/Keccak-simple.c"
  $1132 = $1131; //@line 214 "mcbits/Keccak-simple.c"
  $1133 = HEAP32[$1132>>2]|0; //@line 214 "mcbits/Keccak-simple.c"
  $1134 = (_bitshift64Lshr(($1130|0),($1133|0),36)|0); //@line 214 "mcbits/Keccak-simple.c"
  $1135 = tempRet0; //@line 214 "mcbits/Keccak-simple.c"
  $1136 = $1126 ^ $1134; //@line 214 "mcbits/Keccak-simple.c"
  $1137 = $1127 ^ $1135; //@line 214 "mcbits/Keccak-simple.c"
  $1138 = $31; //@line 214 "mcbits/Keccak-simple.c"
  $1139 = $1138; //@line 214 "mcbits/Keccak-simple.c"
  HEAP32[$1139>>2] = $1136; //@line 214 "mcbits/Keccak-simple.c"
  $1140 = (($1138) + 4)|0; //@line 214 "mcbits/Keccak-simple.c"
  $1141 = $1140; //@line 214 "mcbits/Keccak-simple.c"
  HEAP32[$1141>>2] = $1137; //@line 214 "mcbits/Keccak-simple.c"
  $1142 = $40; //@line 215 "mcbits/Keccak-simple.c"
  $1143 = $1142; //@line 215 "mcbits/Keccak-simple.c"
  $1144 = HEAP32[$1143>>2]|0; //@line 215 "mcbits/Keccak-simple.c"
  $1145 = (($1142) + 4)|0; //@line 215 "mcbits/Keccak-simple.c"
  $1146 = $1145; //@line 215 "mcbits/Keccak-simple.c"
  $1147 = HEAP32[$1146>>2]|0; //@line 215 "mcbits/Keccak-simple.c"
  $1148 = $15; //@line 215 "mcbits/Keccak-simple.c"
  $1149 = $1148; //@line 215 "mcbits/Keccak-simple.c"
  $1150 = HEAP32[$1149>>2]|0; //@line 215 "mcbits/Keccak-simple.c"
  $1151 = (($1148) + 4)|0; //@line 215 "mcbits/Keccak-simple.c"
  $1152 = $1151; //@line 215 "mcbits/Keccak-simple.c"
  $1153 = HEAP32[$1152>>2]|0; //@line 215 "mcbits/Keccak-simple.c"
  $1154 = $1150 ^ $1144; //@line 215 "mcbits/Keccak-simple.c"
  $1155 = $1153 ^ $1147; //@line 215 "mcbits/Keccak-simple.c"
  $1156 = $15; //@line 215 "mcbits/Keccak-simple.c"
  $1157 = $1156; //@line 215 "mcbits/Keccak-simple.c"
  HEAP32[$1157>>2] = $1154; //@line 215 "mcbits/Keccak-simple.c"
  $1158 = (($1156) + 4)|0; //@line 215 "mcbits/Keccak-simple.c"
  $1159 = $1158; //@line 215 "mcbits/Keccak-simple.c"
  HEAP32[$1159>>2] = $1155; //@line 215 "mcbits/Keccak-simple.c"
  $1160 = $15; //@line 216 "mcbits/Keccak-simple.c"
  $1161 = $1160; //@line 216 "mcbits/Keccak-simple.c"
  $1162 = HEAP32[$1161>>2]|0; //@line 216 "mcbits/Keccak-simple.c"
  $1163 = (($1160) + 4)|0; //@line 216 "mcbits/Keccak-simple.c"
  $1164 = $1163; //@line 216 "mcbits/Keccak-simple.c"
  $1165 = HEAP32[$1164>>2]|0; //@line 216 "mcbits/Keccak-simple.c"
  $1166 = (_bitshift64Shl(($1162|0),($1165|0),20)|0); //@line 216 "mcbits/Keccak-simple.c"
  $1167 = tempRet0; //@line 216 "mcbits/Keccak-simple.c"
  $1168 = $15; //@line 216 "mcbits/Keccak-simple.c"
  $1169 = $1168; //@line 216 "mcbits/Keccak-simple.c"
  $1170 = HEAP32[$1169>>2]|0; //@line 216 "mcbits/Keccak-simple.c"
  $1171 = (($1168) + 4)|0; //@line 216 "mcbits/Keccak-simple.c"
  $1172 = $1171; //@line 216 "mcbits/Keccak-simple.c"
  $1173 = HEAP32[$1172>>2]|0; //@line 216 "mcbits/Keccak-simple.c"
  $1174 = (_bitshift64Lshr(($1170|0),($1173|0),44)|0); //@line 216 "mcbits/Keccak-simple.c"
  $1175 = tempRet0; //@line 216 "mcbits/Keccak-simple.c"
  $1176 = $1166 ^ $1174; //@line 216 "mcbits/Keccak-simple.c"
  $1177 = $1167 ^ $1175; //@line 216 "mcbits/Keccak-simple.c"
  $1178 = $32; //@line 216 "mcbits/Keccak-simple.c"
  $1179 = $1178; //@line 216 "mcbits/Keccak-simple.c"
  HEAP32[$1179>>2] = $1176; //@line 216 "mcbits/Keccak-simple.c"
  $1180 = (($1178) + 4)|0; //@line 216 "mcbits/Keccak-simple.c"
  $1181 = $1180; //@line 216 "mcbits/Keccak-simple.c"
  HEAP32[$1181>>2] = $1177; //@line 216 "mcbits/Keccak-simple.c"
  $1182 = $36; //@line 217 "mcbits/Keccak-simple.c"
  $1183 = $1182; //@line 217 "mcbits/Keccak-simple.c"
  $1184 = HEAP32[$1183>>2]|0; //@line 217 "mcbits/Keccak-simple.c"
  $1185 = (($1182) + 4)|0; //@line 217 "mcbits/Keccak-simple.c"
  $1186 = $1185; //@line 217 "mcbits/Keccak-simple.c"
  $1187 = HEAP32[$1186>>2]|0; //@line 217 "mcbits/Keccak-simple.c"
  $1188 = $16; //@line 217 "mcbits/Keccak-simple.c"
  $1189 = $1188; //@line 217 "mcbits/Keccak-simple.c"
  $1190 = HEAP32[$1189>>2]|0; //@line 217 "mcbits/Keccak-simple.c"
  $1191 = (($1188) + 4)|0; //@line 217 "mcbits/Keccak-simple.c"
  $1192 = $1191; //@line 217 "mcbits/Keccak-simple.c"
  $1193 = HEAP32[$1192>>2]|0; //@line 217 "mcbits/Keccak-simple.c"
  $1194 = $1190 ^ $1184; //@line 217 "mcbits/Keccak-simple.c"
  $1195 = $1193 ^ $1187; //@line 217 "mcbits/Keccak-simple.c"
  $1196 = $16; //@line 217 "mcbits/Keccak-simple.c"
  $1197 = $1196; //@line 217 "mcbits/Keccak-simple.c"
  HEAP32[$1197>>2] = $1194; //@line 217 "mcbits/Keccak-simple.c"
  $1198 = (($1196) + 4)|0; //@line 217 "mcbits/Keccak-simple.c"
  $1199 = $1198; //@line 217 "mcbits/Keccak-simple.c"
  HEAP32[$1199>>2] = $1195; //@line 217 "mcbits/Keccak-simple.c"
  $1200 = $16; //@line 218 "mcbits/Keccak-simple.c"
  $1201 = $1200; //@line 218 "mcbits/Keccak-simple.c"
  $1202 = HEAP32[$1201>>2]|0; //@line 218 "mcbits/Keccak-simple.c"
  $1203 = (($1200) + 4)|0; //@line 218 "mcbits/Keccak-simple.c"
  $1204 = $1203; //@line 218 "mcbits/Keccak-simple.c"
  $1205 = HEAP32[$1204>>2]|0; //@line 218 "mcbits/Keccak-simple.c"
  $1206 = (_bitshift64Shl(($1202|0),($1205|0),3)|0); //@line 218 "mcbits/Keccak-simple.c"
  $1207 = tempRet0; //@line 218 "mcbits/Keccak-simple.c"
  $1208 = $16; //@line 218 "mcbits/Keccak-simple.c"
  $1209 = $1208; //@line 218 "mcbits/Keccak-simple.c"
  $1210 = HEAP32[$1209>>2]|0; //@line 218 "mcbits/Keccak-simple.c"
  $1211 = (($1208) + 4)|0; //@line 218 "mcbits/Keccak-simple.c"
  $1212 = $1211; //@line 218 "mcbits/Keccak-simple.c"
  $1213 = HEAP32[$1212>>2]|0; //@line 218 "mcbits/Keccak-simple.c"
  $1214 = (_bitshift64Lshr(($1210|0),($1213|0),61)|0); //@line 218 "mcbits/Keccak-simple.c"
  $1215 = tempRet0; //@line 218 "mcbits/Keccak-simple.c"
  $1216 = $1206 ^ $1214; //@line 218 "mcbits/Keccak-simple.c"
  $1217 = $1207 ^ $1215; //@line 218 "mcbits/Keccak-simple.c"
  $1218 = $33; //@line 218 "mcbits/Keccak-simple.c"
  $1219 = $1218; //@line 218 "mcbits/Keccak-simple.c"
  HEAP32[$1219>>2] = $1216; //@line 218 "mcbits/Keccak-simple.c"
  $1220 = (($1218) + 4)|0; //@line 218 "mcbits/Keccak-simple.c"
  $1221 = $1220; //@line 218 "mcbits/Keccak-simple.c"
  HEAP32[$1221>>2] = $1217; //@line 218 "mcbits/Keccak-simple.c"
  $1222 = $37; //@line 219 "mcbits/Keccak-simple.c"
  $1223 = $1222; //@line 219 "mcbits/Keccak-simple.c"
  $1224 = HEAP32[$1223>>2]|0; //@line 219 "mcbits/Keccak-simple.c"
  $1225 = (($1222) + 4)|0; //@line 219 "mcbits/Keccak-simple.c"
  $1226 = $1225; //@line 219 "mcbits/Keccak-simple.c"
  $1227 = HEAP32[$1226>>2]|0; //@line 219 "mcbits/Keccak-simple.c"
  $1228 = $22; //@line 219 "mcbits/Keccak-simple.c"
  $1229 = $1228; //@line 219 "mcbits/Keccak-simple.c"
  $1230 = HEAP32[$1229>>2]|0; //@line 219 "mcbits/Keccak-simple.c"
  $1231 = (($1228) + 4)|0; //@line 219 "mcbits/Keccak-simple.c"
  $1232 = $1231; //@line 219 "mcbits/Keccak-simple.c"
  $1233 = HEAP32[$1232>>2]|0; //@line 219 "mcbits/Keccak-simple.c"
  $1234 = $1230 ^ $1224; //@line 219 "mcbits/Keccak-simple.c"
  $1235 = $1233 ^ $1227; //@line 219 "mcbits/Keccak-simple.c"
  $1236 = $22; //@line 219 "mcbits/Keccak-simple.c"
  $1237 = $1236; //@line 219 "mcbits/Keccak-simple.c"
  HEAP32[$1237>>2] = $1234; //@line 219 "mcbits/Keccak-simple.c"
  $1238 = (($1236) + 4)|0; //@line 219 "mcbits/Keccak-simple.c"
  $1239 = $1238; //@line 219 "mcbits/Keccak-simple.c"
  HEAP32[$1239>>2] = $1235; //@line 219 "mcbits/Keccak-simple.c"
  $1240 = $22; //@line 220 "mcbits/Keccak-simple.c"
  $1241 = $1240; //@line 220 "mcbits/Keccak-simple.c"
  $1242 = HEAP32[$1241>>2]|0; //@line 220 "mcbits/Keccak-simple.c"
  $1243 = (($1240) + 4)|0; //@line 220 "mcbits/Keccak-simple.c"
  $1244 = $1243; //@line 220 "mcbits/Keccak-simple.c"
  $1245 = HEAP32[$1244>>2]|0; //@line 220 "mcbits/Keccak-simple.c"
  $1246 = (_bitshift64Shl(($1242|0),($1245|0),45)|0); //@line 220 "mcbits/Keccak-simple.c"
  $1247 = tempRet0; //@line 220 "mcbits/Keccak-simple.c"
  $1248 = $22; //@line 220 "mcbits/Keccak-simple.c"
  $1249 = $1248; //@line 220 "mcbits/Keccak-simple.c"
  $1250 = HEAP32[$1249>>2]|0; //@line 220 "mcbits/Keccak-simple.c"
  $1251 = (($1248) + 4)|0; //@line 220 "mcbits/Keccak-simple.c"
  $1252 = $1251; //@line 220 "mcbits/Keccak-simple.c"
  $1253 = HEAP32[$1252>>2]|0; //@line 220 "mcbits/Keccak-simple.c"
  $1254 = (_bitshift64Lshr(($1250|0),($1253|0),19)|0); //@line 220 "mcbits/Keccak-simple.c"
  $1255 = tempRet0; //@line 220 "mcbits/Keccak-simple.c"
  $1256 = $1246 ^ $1254; //@line 220 "mcbits/Keccak-simple.c"
  $1257 = $1247 ^ $1255; //@line 220 "mcbits/Keccak-simple.c"
  $1258 = $34; //@line 220 "mcbits/Keccak-simple.c"
  $1259 = $1258; //@line 220 "mcbits/Keccak-simple.c"
  HEAP32[$1259>>2] = $1256; //@line 220 "mcbits/Keccak-simple.c"
  $1260 = (($1258) + 4)|0; //@line 220 "mcbits/Keccak-simple.c"
  $1261 = $1260; //@line 220 "mcbits/Keccak-simple.c"
  HEAP32[$1261>>2] = $1257; //@line 220 "mcbits/Keccak-simple.c"
  $1262 = $38; //@line 221 "mcbits/Keccak-simple.c"
  $1263 = $1262; //@line 221 "mcbits/Keccak-simple.c"
  $1264 = HEAP32[$1263>>2]|0; //@line 221 "mcbits/Keccak-simple.c"
  $1265 = (($1262) + 4)|0; //@line 221 "mcbits/Keccak-simple.c"
  $1266 = $1265; //@line 221 "mcbits/Keccak-simple.c"
  $1267 = HEAP32[$1266>>2]|0; //@line 221 "mcbits/Keccak-simple.c"
  $1268 = $28; //@line 221 "mcbits/Keccak-simple.c"
  $1269 = $1268; //@line 221 "mcbits/Keccak-simple.c"
  $1270 = HEAP32[$1269>>2]|0; //@line 221 "mcbits/Keccak-simple.c"
  $1271 = (($1268) + 4)|0; //@line 221 "mcbits/Keccak-simple.c"
  $1272 = $1271; //@line 221 "mcbits/Keccak-simple.c"
  $1273 = HEAP32[$1272>>2]|0; //@line 221 "mcbits/Keccak-simple.c"
  $1274 = $1270 ^ $1264; //@line 221 "mcbits/Keccak-simple.c"
  $1275 = $1273 ^ $1267; //@line 221 "mcbits/Keccak-simple.c"
  $1276 = $28; //@line 221 "mcbits/Keccak-simple.c"
  $1277 = $1276; //@line 221 "mcbits/Keccak-simple.c"
  HEAP32[$1277>>2] = $1274; //@line 221 "mcbits/Keccak-simple.c"
  $1278 = (($1276) + 4)|0; //@line 221 "mcbits/Keccak-simple.c"
  $1279 = $1278; //@line 221 "mcbits/Keccak-simple.c"
  HEAP32[$1279>>2] = $1275; //@line 221 "mcbits/Keccak-simple.c"
  $1280 = $28; //@line 222 "mcbits/Keccak-simple.c"
  $1281 = $1280; //@line 222 "mcbits/Keccak-simple.c"
  $1282 = HEAP32[$1281>>2]|0; //@line 222 "mcbits/Keccak-simple.c"
  $1283 = (($1280) + 4)|0; //@line 222 "mcbits/Keccak-simple.c"
  $1284 = $1283; //@line 222 "mcbits/Keccak-simple.c"
  $1285 = HEAP32[$1284>>2]|0; //@line 222 "mcbits/Keccak-simple.c"
  $1286 = (_bitshift64Shl(($1282|0),($1285|0),61)|0); //@line 222 "mcbits/Keccak-simple.c"
  $1287 = tempRet0; //@line 222 "mcbits/Keccak-simple.c"
  $1288 = $28; //@line 222 "mcbits/Keccak-simple.c"
  $1289 = $1288; //@line 222 "mcbits/Keccak-simple.c"
  $1290 = HEAP32[$1289>>2]|0; //@line 222 "mcbits/Keccak-simple.c"
  $1291 = (($1288) + 4)|0; //@line 222 "mcbits/Keccak-simple.c"
  $1292 = $1291; //@line 222 "mcbits/Keccak-simple.c"
  $1293 = HEAP32[$1292>>2]|0; //@line 222 "mcbits/Keccak-simple.c"
  $1294 = (_bitshift64Lshr(($1290|0),($1293|0),3)|0); //@line 222 "mcbits/Keccak-simple.c"
  $1295 = tempRet0; //@line 222 "mcbits/Keccak-simple.c"
  $1296 = $1286 ^ $1294; //@line 222 "mcbits/Keccak-simple.c"
  $1297 = $1287 ^ $1295; //@line 222 "mcbits/Keccak-simple.c"
  $1298 = $35; //@line 222 "mcbits/Keccak-simple.c"
  $1299 = $1298; //@line 222 "mcbits/Keccak-simple.c"
  HEAP32[$1299>>2] = $1296; //@line 222 "mcbits/Keccak-simple.c"
  $1300 = (($1298) + 4)|0; //@line 222 "mcbits/Keccak-simple.c"
  $1301 = $1300; //@line 222 "mcbits/Keccak-simple.c"
  HEAP32[$1301>>2] = $1297; //@line 222 "mcbits/Keccak-simple.c"
  $1302 = $31; //@line 223 "mcbits/Keccak-simple.c"
  $1303 = $1302; //@line 223 "mcbits/Keccak-simple.c"
  $1304 = HEAP32[$1303>>2]|0; //@line 223 "mcbits/Keccak-simple.c"
  $1305 = (($1302) + 4)|0; //@line 223 "mcbits/Keccak-simple.c"
  $1306 = $1305; //@line 223 "mcbits/Keccak-simple.c"
  $1307 = HEAP32[$1306>>2]|0; //@line 223 "mcbits/Keccak-simple.c"
  $1308 = $32; //@line 223 "mcbits/Keccak-simple.c"
  $1309 = $1308; //@line 223 "mcbits/Keccak-simple.c"
  $1310 = HEAP32[$1309>>2]|0; //@line 223 "mcbits/Keccak-simple.c"
  $1311 = (($1308) + 4)|0; //@line 223 "mcbits/Keccak-simple.c"
  $1312 = $1311; //@line 223 "mcbits/Keccak-simple.c"
  $1313 = HEAP32[$1312>>2]|0; //@line 223 "mcbits/Keccak-simple.c"
  $1314 = $1310 ^ -1; //@line 223 "mcbits/Keccak-simple.c"
  $1315 = $1313 ^ -1; //@line 223 "mcbits/Keccak-simple.c"
  $1316 = $33; //@line 223 "mcbits/Keccak-simple.c"
  $1317 = $1316; //@line 223 "mcbits/Keccak-simple.c"
  $1318 = HEAP32[$1317>>2]|0; //@line 223 "mcbits/Keccak-simple.c"
  $1319 = (($1316) + 4)|0; //@line 223 "mcbits/Keccak-simple.c"
  $1320 = $1319; //@line 223 "mcbits/Keccak-simple.c"
  $1321 = HEAP32[$1320>>2]|0; //@line 223 "mcbits/Keccak-simple.c"
  $1322 = $1314 & $1318; //@line 223 "mcbits/Keccak-simple.c"
  $1323 = $1315 & $1321; //@line 223 "mcbits/Keccak-simple.c"
  $1324 = $1304 ^ $1322; //@line 223 "mcbits/Keccak-simple.c"
  $1325 = $1307 ^ $1323; //@line 223 "mcbits/Keccak-simple.c"
  $1326 = $46; //@line 223 "mcbits/Keccak-simple.c"
  $1327 = $1326; //@line 223 "mcbits/Keccak-simple.c"
  HEAP32[$1327>>2] = $1324; //@line 223 "mcbits/Keccak-simple.c"
  $1328 = (($1326) + 4)|0; //@line 223 "mcbits/Keccak-simple.c"
  $1329 = $1328; //@line 223 "mcbits/Keccak-simple.c"
  HEAP32[$1329>>2] = $1325; //@line 223 "mcbits/Keccak-simple.c"
  $1330 = $32; //@line 224 "mcbits/Keccak-simple.c"
  $1331 = $1330; //@line 224 "mcbits/Keccak-simple.c"
  $1332 = HEAP32[$1331>>2]|0; //@line 224 "mcbits/Keccak-simple.c"
  $1333 = (($1330) + 4)|0; //@line 224 "mcbits/Keccak-simple.c"
  $1334 = $1333; //@line 224 "mcbits/Keccak-simple.c"
  $1335 = HEAP32[$1334>>2]|0; //@line 224 "mcbits/Keccak-simple.c"
  $1336 = $33; //@line 224 "mcbits/Keccak-simple.c"
  $1337 = $1336; //@line 224 "mcbits/Keccak-simple.c"
  $1338 = HEAP32[$1337>>2]|0; //@line 224 "mcbits/Keccak-simple.c"
  $1339 = (($1336) + 4)|0; //@line 224 "mcbits/Keccak-simple.c"
  $1340 = $1339; //@line 224 "mcbits/Keccak-simple.c"
  $1341 = HEAP32[$1340>>2]|0; //@line 224 "mcbits/Keccak-simple.c"
  $1342 = $1338 ^ -1; //@line 224 "mcbits/Keccak-simple.c"
  $1343 = $1341 ^ -1; //@line 224 "mcbits/Keccak-simple.c"
  $1344 = $34; //@line 224 "mcbits/Keccak-simple.c"
  $1345 = $1344; //@line 224 "mcbits/Keccak-simple.c"
  $1346 = HEAP32[$1345>>2]|0; //@line 224 "mcbits/Keccak-simple.c"
  $1347 = (($1344) + 4)|0; //@line 224 "mcbits/Keccak-simple.c"
  $1348 = $1347; //@line 224 "mcbits/Keccak-simple.c"
  $1349 = HEAP32[$1348>>2]|0; //@line 224 "mcbits/Keccak-simple.c"
  $1350 = $1342 & $1346; //@line 224 "mcbits/Keccak-simple.c"
  $1351 = $1343 & $1349; //@line 224 "mcbits/Keccak-simple.c"
  $1352 = $1332 ^ $1350; //@line 224 "mcbits/Keccak-simple.c"
  $1353 = $1335 ^ $1351; //@line 224 "mcbits/Keccak-simple.c"
  $1354 = $47; //@line 224 "mcbits/Keccak-simple.c"
  $1355 = $1354; //@line 224 "mcbits/Keccak-simple.c"
  HEAP32[$1355>>2] = $1352; //@line 224 "mcbits/Keccak-simple.c"
  $1356 = (($1354) + 4)|0; //@line 224 "mcbits/Keccak-simple.c"
  $1357 = $1356; //@line 224 "mcbits/Keccak-simple.c"
  HEAP32[$1357>>2] = $1353; //@line 224 "mcbits/Keccak-simple.c"
  $1358 = $33; //@line 225 "mcbits/Keccak-simple.c"
  $1359 = $1358; //@line 225 "mcbits/Keccak-simple.c"
  $1360 = HEAP32[$1359>>2]|0; //@line 225 "mcbits/Keccak-simple.c"
  $1361 = (($1358) + 4)|0; //@line 225 "mcbits/Keccak-simple.c"
  $1362 = $1361; //@line 225 "mcbits/Keccak-simple.c"
  $1363 = HEAP32[$1362>>2]|0; //@line 225 "mcbits/Keccak-simple.c"
  $1364 = $34; //@line 225 "mcbits/Keccak-simple.c"
  $1365 = $1364; //@line 225 "mcbits/Keccak-simple.c"
  $1366 = HEAP32[$1365>>2]|0; //@line 225 "mcbits/Keccak-simple.c"
  $1367 = (($1364) + 4)|0; //@line 225 "mcbits/Keccak-simple.c"
  $1368 = $1367; //@line 225 "mcbits/Keccak-simple.c"
  $1369 = HEAP32[$1368>>2]|0; //@line 225 "mcbits/Keccak-simple.c"
  $1370 = $1366 ^ -1; //@line 225 "mcbits/Keccak-simple.c"
  $1371 = $1369 ^ -1; //@line 225 "mcbits/Keccak-simple.c"
  $1372 = $35; //@line 225 "mcbits/Keccak-simple.c"
  $1373 = $1372; //@line 225 "mcbits/Keccak-simple.c"
  $1374 = HEAP32[$1373>>2]|0; //@line 225 "mcbits/Keccak-simple.c"
  $1375 = (($1372) + 4)|0; //@line 225 "mcbits/Keccak-simple.c"
  $1376 = $1375; //@line 225 "mcbits/Keccak-simple.c"
  $1377 = HEAP32[$1376>>2]|0; //@line 225 "mcbits/Keccak-simple.c"
  $1378 = $1370 & $1374; //@line 225 "mcbits/Keccak-simple.c"
  $1379 = $1371 & $1377; //@line 225 "mcbits/Keccak-simple.c"
  $1380 = $1360 ^ $1378; //@line 225 "mcbits/Keccak-simple.c"
  $1381 = $1363 ^ $1379; //@line 225 "mcbits/Keccak-simple.c"
  $1382 = $48; //@line 225 "mcbits/Keccak-simple.c"
  $1383 = $1382; //@line 225 "mcbits/Keccak-simple.c"
  HEAP32[$1383>>2] = $1380; //@line 225 "mcbits/Keccak-simple.c"
  $1384 = (($1382) + 4)|0; //@line 225 "mcbits/Keccak-simple.c"
  $1385 = $1384; //@line 225 "mcbits/Keccak-simple.c"
  HEAP32[$1385>>2] = $1381; //@line 225 "mcbits/Keccak-simple.c"
  $1386 = $34; //@line 226 "mcbits/Keccak-simple.c"
  $1387 = $1386; //@line 226 "mcbits/Keccak-simple.c"
  $1388 = HEAP32[$1387>>2]|0; //@line 226 "mcbits/Keccak-simple.c"
  $1389 = (($1386) + 4)|0; //@line 226 "mcbits/Keccak-simple.c"
  $1390 = $1389; //@line 226 "mcbits/Keccak-simple.c"
  $1391 = HEAP32[$1390>>2]|0; //@line 226 "mcbits/Keccak-simple.c"
  $1392 = $35; //@line 226 "mcbits/Keccak-simple.c"
  $1393 = $1392; //@line 226 "mcbits/Keccak-simple.c"
  $1394 = HEAP32[$1393>>2]|0; //@line 226 "mcbits/Keccak-simple.c"
  $1395 = (($1392) + 4)|0; //@line 226 "mcbits/Keccak-simple.c"
  $1396 = $1395; //@line 226 "mcbits/Keccak-simple.c"
  $1397 = HEAP32[$1396>>2]|0; //@line 226 "mcbits/Keccak-simple.c"
  $1398 = $1394 ^ -1; //@line 226 "mcbits/Keccak-simple.c"
  $1399 = $1397 ^ -1; //@line 226 "mcbits/Keccak-simple.c"
  $1400 = $31; //@line 226 "mcbits/Keccak-simple.c"
  $1401 = $1400; //@line 226 "mcbits/Keccak-simple.c"
  $1402 = HEAP32[$1401>>2]|0; //@line 226 "mcbits/Keccak-simple.c"
  $1403 = (($1400) + 4)|0; //@line 226 "mcbits/Keccak-simple.c"
  $1404 = $1403; //@line 226 "mcbits/Keccak-simple.c"
  $1405 = HEAP32[$1404>>2]|0; //@line 226 "mcbits/Keccak-simple.c"
  $1406 = $1398 & $1402; //@line 226 "mcbits/Keccak-simple.c"
  $1407 = $1399 & $1405; //@line 226 "mcbits/Keccak-simple.c"
  $1408 = $1388 ^ $1406; //@line 226 "mcbits/Keccak-simple.c"
  $1409 = $1391 ^ $1407; //@line 226 "mcbits/Keccak-simple.c"
  $1410 = $49; //@line 226 "mcbits/Keccak-simple.c"
  $1411 = $1410; //@line 226 "mcbits/Keccak-simple.c"
  HEAP32[$1411>>2] = $1408; //@line 226 "mcbits/Keccak-simple.c"
  $1412 = (($1410) + 4)|0; //@line 226 "mcbits/Keccak-simple.c"
  $1413 = $1412; //@line 226 "mcbits/Keccak-simple.c"
  HEAP32[$1413>>2] = $1409; //@line 226 "mcbits/Keccak-simple.c"
  $1414 = $35; //@line 227 "mcbits/Keccak-simple.c"
  $1415 = $1414; //@line 227 "mcbits/Keccak-simple.c"
  $1416 = HEAP32[$1415>>2]|0; //@line 227 "mcbits/Keccak-simple.c"
  $1417 = (($1414) + 4)|0; //@line 227 "mcbits/Keccak-simple.c"
  $1418 = $1417; //@line 227 "mcbits/Keccak-simple.c"
  $1419 = HEAP32[$1418>>2]|0; //@line 227 "mcbits/Keccak-simple.c"
  $1420 = $31; //@line 227 "mcbits/Keccak-simple.c"
  $1421 = $1420; //@line 227 "mcbits/Keccak-simple.c"
  $1422 = HEAP32[$1421>>2]|0; //@line 227 "mcbits/Keccak-simple.c"
  $1423 = (($1420) + 4)|0; //@line 227 "mcbits/Keccak-simple.c"
  $1424 = $1423; //@line 227 "mcbits/Keccak-simple.c"
  $1425 = HEAP32[$1424>>2]|0; //@line 227 "mcbits/Keccak-simple.c"
  $1426 = $1422 ^ -1; //@line 227 "mcbits/Keccak-simple.c"
  $1427 = $1425 ^ -1; //@line 227 "mcbits/Keccak-simple.c"
  $1428 = $32; //@line 227 "mcbits/Keccak-simple.c"
  $1429 = $1428; //@line 227 "mcbits/Keccak-simple.c"
  $1430 = HEAP32[$1429>>2]|0; //@line 227 "mcbits/Keccak-simple.c"
  $1431 = (($1428) + 4)|0; //@line 227 "mcbits/Keccak-simple.c"
  $1432 = $1431; //@line 227 "mcbits/Keccak-simple.c"
  $1433 = HEAP32[$1432>>2]|0; //@line 227 "mcbits/Keccak-simple.c"
  $1434 = $1426 & $1430; //@line 227 "mcbits/Keccak-simple.c"
  $1435 = $1427 & $1433; //@line 227 "mcbits/Keccak-simple.c"
  $1436 = $1416 ^ $1434; //@line 227 "mcbits/Keccak-simple.c"
  $1437 = $1419 ^ $1435; //@line 227 "mcbits/Keccak-simple.c"
  $1438 = $50; //@line 227 "mcbits/Keccak-simple.c"
  $1439 = $1438; //@line 227 "mcbits/Keccak-simple.c"
  HEAP32[$1439>>2] = $1436; //@line 227 "mcbits/Keccak-simple.c"
  $1440 = (($1438) + 4)|0; //@line 227 "mcbits/Keccak-simple.c"
  $1441 = $1440; //@line 227 "mcbits/Keccak-simple.c"
  HEAP32[$1441>>2] = $1437; //@line 227 "mcbits/Keccak-simple.c"
  $1442 = $37; //@line 229 "mcbits/Keccak-simple.c"
  $1443 = $1442; //@line 229 "mcbits/Keccak-simple.c"
  $1444 = HEAP32[$1443>>2]|0; //@line 229 "mcbits/Keccak-simple.c"
  $1445 = (($1442) + 4)|0; //@line 229 "mcbits/Keccak-simple.c"
  $1446 = $1445; //@line 229 "mcbits/Keccak-simple.c"
  $1447 = HEAP32[$1446>>2]|0; //@line 229 "mcbits/Keccak-simple.c"
  $1448 = $7; //@line 229 "mcbits/Keccak-simple.c"
  $1449 = $1448; //@line 229 "mcbits/Keccak-simple.c"
  $1450 = HEAP32[$1449>>2]|0; //@line 229 "mcbits/Keccak-simple.c"
  $1451 = (($1448) + 4)|0; //@line 229 "mcbits/Keccak-simple.c"
  $1452 = $1451; //@line 229 "mcbits/Keccak-simple.c"
  $1453 = HEAP32[$1452>>2]|0; //@line 229 "mcbits/Keccak-simple.c"
  $1454 = $1450 ^ $1444; //@line 229 "mcbits/Keccak-simple.c"
  $1455 = $1453 ^ $1447; //@line 229 "mcbits/Keccak-simple.c"
  $1456 = $7; //@line 229 "mcbits/Keccak-simple.c"
  $1457 = $1456; //@line 229 "mcbits/Keccak-simple.c"
  HEAP32[$1457>>2] = $1454; //@line 229 "mcbits/Keccak-simple.c"
  $1458 = (($1456) + 4)|0; //@line 229 "mcbits/Keccak-simple.c"
  $1459 = $1458; //@line 229 "mcbits/Keccak-simple.c"
  HEAP32[$1459>>2] = $1455; //@line 229 "mcbits/Keccak-simple.c"
  $1460 = $7; //@line 230 "mcbits/Keccak-simple.c"
  $1461 = $1460; //@line 230 "mcbits/Keccak-simple.c"
  $1462 = HEAP32[$1461>>2]|0; //@line 230 "mcbits/Keccak-simple.c"
  $1463 = (($1460) + 4)|0; //@line 230 "mcbits/Keccak-simple.c"
  $1464 = $1463; //@line 230 "mcbits/Keccak-simple.c"
  $1465 = HEAP32[$1464>>2]|0; //@line 230 "mcbits/Keccak-simple.c"
  $1466 = (_bitshift64Shl(($1462|0),($1465|0),1)|0); //@line 230 "mcbits/Keccak-simple.c"
  $1467 = tempRet0; //@line 230 "mcbits/Keccak-simple.c"
  $1468 = $7; //@line 230 "mcbits/Keccak-simple.c"
  $1469 = $1468; //@line 230 "mcbits/Keccak-simple.c"
  $1470 = HEAP32[$1469>>2]|0; //@line 230 "mcbits/Keccak-simple.c"
  $1471 = (($1468) + 4)|0; //@line 230 "mcbits/Keccak-simple.c"
  $1472 = $1471; //@line 230 "mcbits/Keccak-simple.c"
  $1473 = HEAP32[$1472>>2]|0; //@line 230 "mcbits/Keccak-simple.c"
  $1474 = (_bitshift64Lshr(($1470|0),($1473|0),63)|0); //@line 230 "mcbits/Keccak-simple.c"
  $1475 = tempRet0; //@line 230 "mcbits/Keccak-simple.c"
  $1476 = $1466 ^ $1474; //@line 230 "mcbits/Keccak-simple.c"
  $1477 = $1467 ^ $1475; //@line 230 "mcbits/Keccak-simple.c"
  $1478 = $31; //@line 230 "mcbits/Keccak-simple.c"
  $1479 = $1478; //@line 230 "mcbits/Keccak-simple.c"
  HEAP32[$1479>>2] = $1476; //@line 230 "mcbits/Keccak-simple.c"
  $1480 = (($1478) + 4)|0; //@line 230 "mcbits/Keccak-simple.c"
  $1481 = $1480; //@line 230 "mcbits/Keccak-simple.c"
  HEAP32[$1481>>2] = $1477; //@line 230 "mcbits/Keccak-simple.c"
  $1482 = $38; //@line 231 "mcbits/Keccak-simple.c"
  $1483 = $1482; //@line 231 "mcbits/Keccak-simple.c"
  $1484 = HEAP32[$1483>>2]|0; //@line 231 "mcbits/Keccak-simple.c"
  $1485 = (($1482) + 4)|0; //@line 231 "mcbits/Keccak-simple.c"
  $1486 = $1485; //@line 231 "mcbits/Keccak-simple.c"
  $1487 = HEAP32[$1486>>2]|0; //@line 231 "mcbits/Keccak-simple.c"
  $1488 = $13; //@line 231 "mcbits/Keccak-simple.c"
  $1489 = $1488; //@line 231 "mcbits/Keccak-simple.c"
  $1490 = HEAP32[$1489>>2]|0; //@line 231 "mcbits/Keccak-simple.c"
  $1491 = (($1488) + 4)|0; //@line 231 "mcbits/Keccak-simple.c"
  $1492 = $1491; //@line 231 "mcbits/Keccak-simple.c"
  $1493 = HEAP32[$1492>>2]|0; //@line 231 "mcbits/Keccak-simple.c"
  $1494 = $1490 ^ $1484; //@line 231 "mcbits/Keccak-simple.c"
  $1495 = $1493 ^ $1487; //@line 231 "mcbits/Keccak-simple.c"
  $1496 = $13; //@line 231 "mcbits/Keccak-simple.c"
  $1497 = $1496; //@line 231 "mcbits/Keccak-simple.c"
  HEAP32[$1497>>2] = $1494; //@line 231 "mcbits/Keccak-simple.c"
  $1498 = (($1496) + 4)|0; //@line 231 "mcbits/Keccak-simple.c"
  $1499 = $1498; //@line 231 "mcbits/Keccak-simple.c"
  HEAP32[$1499>>2] = $1495; //@line 231 "mcbits/Keccak-simple.c"
  $1500 = $13; //@line 232 "mcbits/Keccak-simple.c"
  $1501 = $1500; //@line 232 "mcbits/Keccak-simple.c"
  $1502 = HEAP32[$1501>>2]|0; //@line 232 "mcbits/Keccak-simple.c"
  $1503 = (($1500) + 4)|0; //@line 232 "mcbits/Keccak-simple.c"
  $1504 = $1503; //@line 232 "mcbits/Keccak-simple.c"
  $1505 = HEAP32[$1504>>2]|0; //@line 232 "mcbits/Keccak-simple.c"
  $1506 = (_bitshift64Shl(($1502|0),($1505|0),6)|0); //@line 232 "mcbits/Keccak-simple.c"
  $1507 = tempRet0; //@line 232 "mcbits/Keccak-simple.c"
  $1508 = $13; //@line 232 "mcbits/Keccak-simple.c"
  $1509 = $1508; //@line 232 "mcbits/Keccak-simple.c"
  $1510 = HEAP32[$1509>>2]|0; //@line 232 "mcbits/Keccak-simple.c"
  $1511 = (($1508) + 4)|0; //@line 232 "mcbits/Keccak-simple.c"
  $1512 = $1511; //@line 232 "mcbits/Keccak-simple.c"
  $1513 = HEAP32[$1512>>2]|0; //@line 232 "mcbits/Keccak-simple.c"
  $1514 = (_bitshift64Lshr(($1510|0),($1513|0),58)|0); //@line 232 "mcbits/Keccak-simple.c"
  $1515 = tempRet0; //@line 232 "mcbits/Keccak-simple.c"
  $1516 = $1506 ^ $1514; //@line 232 "mcbits/Keccak-simple.c"
  $1517 = $1507 ^ $1515; //@line 232 "mcbits/Keccak-simple.c"
  $1518 = $32; //@line 232 "mcbits/Keccak-simple.c"
  $1519 = $1518; //@line 232 "mcbits/Keccak-simple.c"
  HEAP32[$1519>>2] = $1516; //@line 232 "mcbits/Keccak-simple.c"
  $1520 = (($1518) + 4)|0; //@line 232 "mcbits/Keccak-simple.c"
  $1521 = $1520; //@line 232 "mcbits/Keccak-simple.c"
  HEAP32[$1521>>2] = $1517; //@line 232 "mcbits/Keccak-simple.c"
  $1522 = $39; //@line 233 "mcbits/Keccak-simple.c"
  $1523 = $1522; //@line 233 "mcbits/Keccak-simple.c"
  $1524 = HEAP32[$1523>>2]|0; //@line 233 "mcbits/Keccak-simple.c"
  $1525 = (($1522) + 4)|0; //@line 233 "mcbits/Keccak-simple.c"
  $1526 = $1525; //@line 233 "mcbits/Keccak-simple.c"
  $1527 = HEAP32[$1526>>2]|0; //@line 233 "mcbits/Keccak-simple.c"
  $1528 = $19; //@line 233 "mcbits/Keccak-simple.c"
  $1529 = $1528; //@line 233 "mcbits/Keccak-simple.c"
  $1530 = HEAP32[$1529>>2]|0; //@line 233 "mcbits/Keccak-simple.c"
  $1531 = (($1528) + 4)|0; //@line 233 "mcbits/Keccak-simple.c"
  $1532 = $1531; //@line 233 "mcbits/Keccak-simple.c"
  $1533 = HEAP32[$1532>>2]|0; //@line 233 "mcbits/Keccak-simple.c"
  $1534 = $1530 ^ $1524; //@line 233 "mcbits/Keccak-simple.c"
  $1535 = $1533 ^ $1527; //@line 233 "mcbits/Keccak-simple.c"
  $1536 = $19; //@line 233 "mcbits/Keccak-simple.c"
  $1537 = $1536; //@line 233 "mcbits/Keccak-simple.c"
  HEAP32[$1537>>2] = $1534; //@line 233 "mcbits/Keccak-simple.c"
  $1538 = (($1536) + 4)|0; //@line 233 "mcbits/Keccak-simple.c"
  $1539 = $1538; //@line 233 "mcbits/Keccak-simple.c"
  HEAP32[$1539>>2] = $1535; //@line 233 "mcbits/Keccak-simple.c"
  $1540 = $19; //@line 234 "mcbits/Keccak-simple.c"
  $1541 = $1540; //@line 234 "mcbits/Keccak-simple.c"
  $1542 = HEAP32[$1541>>2]|0; //@line 234 "mcbits/Keccak-simple.c"
  $1543 = (($1540) + 4)|0; //@line 234 "mcbits/Keccak-simple.c"
  $1544 = $1543; //@line 234 "mcbits/Keccak-simple.c"
  $1545 = HEAP32[$1544>>2]|0; //@line 234 "mcbits/Keccak-simple.c"
  $1546 = (_bitshift64Shl(($1542|0),($1545|0),25)|0); //@line 234 "mcbits/Keccak-simple.c"
  $1547 = tempRet0; //@line 234 "mcbits/Keccak-simple.c"
  $1548 = $19; //@line 234 "mcbits/Keccak-simple.c"
  $1549 = $1548; //@line 234 "mcbits/Keccak-simple.c"
  $1550 = HEAP32[$1549>>2]|0; //@line 234 "mcbits/Keccak-simple.c"
  $1551 = (($1548) + 4)|0; //@line 234 "mcbits/Keccak-simple.c"
  $1552 = $1551; //@line 234 "mcbits/Keccak-simple.c"
  $1553 = HEAP32[$1552>>2]|0; //@line 234 "mcbits/Keccak-simple.c"
  $1554 = (_bitshift64Lshr(($1550|0),($1553|0),39)|0); //@line 234 "mcbits/Keccak-simple.c"
  $1555 = tempRet0; //@line 234 "mcbits/Keccak-simple.c"
  $1556 = $1546 ^ $1554; //@line 234 "mcbits/Keccak-simple.c"
  $1557 = $1547 ^ $1555; //@line 234 "mcbits/Keccak-simple.c"
  $1558 = $33; //@line 234 "mcbits/Keccak-simple.c"
  $1559 = $1558; //@line 234 "mcbits/Keccak-simple.c"
  HEAP32[$1559>>2] = $1556; //@line 234 "mcbits/Keccak-simple.c"
  $1560 = (($1558) + 4)|0; //@line 234 "mcbits/Keccak-simple.c"
  $1561 = $1560; //@line 234 "mcbits/Keccak-simple.c"
  HEAP32[$1561>>2] = $1557; //@line 234 "mcbits/Keccak-simple.c"
  $1562 = $40; //@line 235 "mcbits/Keccak-simple.c"
  $1563 = $1562; //@line 235 "mcbits/Keccak-simple.c"
  $1564 = HEAP32[$1563>>2]|0; //@line 235 "mcbits/Keccak-simple.c"
  $1565 = (($1562) + 4)|0; //@line 235 "mcbits/Keccak-simple.c"
  $1566 = $1565; //@line 235 "mcbits/Keccak-simple.c"
  $1567 = HEAP32[$1566>>2]|0; //@line 235 "mcbits/Keccak-simple.c"
  $1568 = $25; //@line 235 "mcbits/Keccak-simple.c"
  $1569 = $1568; //@line 235 "mcbits/Keccak-simple.c"
  $1570 = HEAP32[$1569>>2]|0; //@line 235 "mcbits/Keccak-simple.c"
  $1571 = (($1568) + 4)|0; //@line 235 "mcbits/Keccak-simple.c"
  $1572 = $1571; //@line 235 "mcbits/Keccak-simple.c"
  $1573 = HEAP32[$1572>>2]|0; //@line 235 "mcbits/Keccak-simple.c"
  $1574 = $1570 ^ $1564; //@line 235 "mcbits/Keccak-simple.c"
  $1575 = $1573 ^ $1567; //@line 235 "mcbits/Keccak-simple.c"
  $1576 = $25; //@line 235 "mcbits/Keccak-simple.c"
  $1577 = $1576; //@line 235 "mcbits/Keccak-simple.c"
  HEAP32[$1577>>2] = $1574; //@line 235 "mcbits/Keccak-simple.c"
  $1578 = (($1576) + 4)|0; //@line 235 "mcbits/Keccak-simple.c"
  $1579 = $1578; //@line 235 "mcbits/Keccak-simple.c"
  HEAP32[$1579>>2] = $1575; //@line 235 "mcbits/Keccak-simple.c"
  $1580 = $25; //@line 236 "mcbits/Keccak-simple.c"
  $1581 = $1580; //@line 236 "mcbits/Keccak-simple.c"
  $1582 = HEAP32[$1581>>2]|0; //@line 236 "mcbits/Keccak-simple.c"
  $1583 = (($1580) + 4)|0; //@line 236 "mcbits/Keccak-simple.c"
  $1584 = $1583; //@line 236 "mcbits/Keccak-simple.c"
  $1585 = HEAP32[$1584>>2]|0; //@line 236 "mcbits/Keccak-simple.c"
  $1586 = (_bitshift64Shl(($1582|0),($1585|0),8)|0); //@line 236 "mcbits/Keccak-simple.c"
  $1587 = tempRet0; //@line 236 "mcbits/Keccak-simple.c"
  $1588 = $25; //@line 236 "mcbits/Keccak-simple.c"
  $1589 = $1588; //@line 236 "mcbits/Keccak-simple.c"
  $1590 = HEAP32[$1589>>2]|0; //@line 236 "mcbits/Keccak-simple.c"
  $1591 = (($1588) + 4)|0; //@line 236 "mcbits/Keccak-simple.c"
  $1592 = $1591; //@line 236 "mcbits/Keccak-simple.c"
  $1593 = HEAP32[$1592>>2]|0; //@line 236 "mcbits/Keccak-simple.c"
  $1594 = (_bitshift64Lshr(($1590|0),($1593|0),56)|0); //@line 236 "mcbits/Keccak-simple.c"
  $1595 = tempRet0; //@line 236 "mcbits/Keccak-simple.c"
  $1596 = $1586 ^ $1594; //@line 236 "mcbits/Keccak-simple.c"
  $1597 = $1587 ^ $1595; //@line 236 "mcbits/Keccak-simple.c"
  $1598 = $34; //@line 236 "mcbits/Keccak-simple.c"
  $1599 = $1598; //@line 236 "mcbits/Keccak-simple.c"
  HEAP32[$1599>>2] = $1596; //@line 236 "mcbits/Keccak-simple.c"
  $1600 = (($1598) + 4)|0; //@line 236 "mcbits/Keccak-simple.c"
  $1601 = $1600; //@line 236 "mcbits/Keccak-simple.c"
  HEAP32[$1601>>2] = $1597; //@line 236 "mcbits/Keccak-simple.c"
  $1602 = $36; //@line 237 "mcbits/Keccak-simple.c"
  $1603 = $1602; //@line 237 "mcbits/Keccak-simple.c"
  $1604 = HEAP32[$1603>>2]|0; //@line 237 "mcbits/Keccak-simple.c"
  $1605 = (($1602) + 4)|0; //@line 237 "mcbits/Keccak-simple.c"
  $1606 = $1605; //@line 237 "mcbits/Keccak-simple.c"
  $1607 = HEAP32[$1606>>2]|0; //@line 237 "mcbits/Keccak-simple.c"
  $1608 = $26; //@line 237 "mcbits/Keccak-simple.c"
  $1609 = $1608; //@line 237 "mcbits/Keccak-simple.c"
  $1610 = HEAP32[$1609>>2]|0; //@line 237 "mcbits/Keccak-simple.c"
  $1611 = (($1608) + 4)|0; //@line 237 "mcbits/Keccak-simple.c"
  $1612 = $1611; //@line 237 "mcbits/Keccak-simple.c"
  $1613 = HEAP32[$1612>>2]|0; //@line 237 "mcbits/Keccak-simple.c"
  $1614 = $1610 ^ $1604; //@line 237 "mcbits/Keccak-simple.c"
  $1615 = $1613 ^ $1607; //@line 237 "mcbits/Keccak-simple.c"
  $1616 = $26; //@line 237 "mcbits/Keccak-simple.c"
  $1617 = $1616; //@line 237 "mcbits/Keccak-simple.c"
  HEAP32[$1617>>2] = $1614; //@line 237 "mcbits/Keccak-simple.c"
  $1618 = (($1616) + 4)|0; //@line 237 "mcbits/Keccak-simple.c"
  $1619 = $1618; //@line 237 "mcbits/Keccak-simple.c"
  HEAP32[$1619>>2] = $1615; //@line 237 "mcbits/Keccak-simple.c"
  $1620 = $26; //@line 238 "mcbits/Keccak-simple.c"
  $1621 = $1620; //@line 238 "mcbits/Keccak-simple.c"
  $1622 = HEAP32[$1621>>2]|0; //@line 238 "mcbits/Keccak-simple.c"
  $1623 = (($1620) + 4)|0; //@line 238 "mcbits/Keccak-simple.c"
  $1624 = $1623; //@line 238 "mcbits/Keccak-simple.c"
  $1625 = HEAP32[$1624>>2]|0; //@line 238 "mcbits/Keccak-simple.c"
  $1626 = (_bitshift64Shl(($1622|0),($1625|0),18)|0); //@line 238 "mcbits/Keccak-simple.c"
  $1627 = tempRet0; //@line 238 "mcbits/Keccak-simple.c"
  $1628 = $26; //@line 238 "mcbits/Keccak-simple.c"
  $1629 = $1628; //@line 238 "mcbits/Keccak-simple.c"
  $1630 = HEAP32[$1629>>2]|0; //@line 238 "mcbits/Keccak-simple.c"
  $1631 = (($1628) + 4)|0; //@line 238 "mcbits/Keccak-simple.c"
  $1632 = $1631; //@line 238 "mcbits/Keccak-simple.c"
  $1633 = HEAP32[$1632>>2]|0; //@line 238 "mcbits/Keccak-simple.c"
  $1634 = (_bitshift64Lshr(($1630|0),($1633|0),46)|0); //@line 238 "mcbits/Keccak-simple.c"
  $1635 = tempRet0; //@line 238 "mcbits/Keccak-simple.c"
  $1636 = $1626 ^ $1634; //@line 238 "mcbits/Keccak-simple.c"
  $1637 = $1627 ^ $1635; //@line 238 "mcbits/Keccak-simple.c"
  $1638 = $35; //@line 238 "mcbits/Keccak-simple.c"
  $1639 = $1638; //@line 238 "mcbits/Keccak-simple.c"
  HEAP32[$1639>>2] = $1636; //@line 238 "mcbits/Keccak-simple.c"
  $1640 = (($1638) + 4)|0; //@line 238 "mcbits/Keccak-simple.c"
  $1641 = $1640; //@line 238 "mcbits/Keccak-simple.c"
  HEAP32[$1641>>2] = $1637; //@line 238 "mcbits/Keccak-simple.c"
  $1642 = $31; //@line 239 "mcbits/Keccak-simple.c"
  $1643 = $1642; //@line 239 "mcbits/Keccak-simple.c"
  $1644 = HEAP32[$1643>>2]|0; //@line 239 "mcbits/Keccak-simple.c"
  $1645 = (($1642) + 4)|0; //@line 239 "mcbits/Keccak-simple.c"
  $1646 = $1645; //@line 239 "mcbits/Keccak-simple.c"
  $1647 = HEAP32[$1646>>2]|0; //@line 239 "mcbits/Keccak-simple.c"
  $1648 = $32; //@line 239 "mcbits/Keccak-simple.c"
  $1649 = $1648; //@line 239 "mcbits/Keccak-simple.c"
  $1650 = HEAP32[$1649>>2]|0; //@line 239 "mcbits/Keccak-simple.c"
  $1651 = (($1648) + 4)|0; //@line 239 "mcbits/Keccak-simple.c"
  $1652 = $1651; //@line 239 "mcbits/Keccak-simple.c"
  $1653 = HEAP32[$1652>>2]|0; //@line 239 "mcbits/Keccak-simple.c"
  $1654 = $1650 ^ -1; //@line 239 "mcbits/Keccak-simple.c"
  $1655 = $1653 ^ -1; //@line 239 "mcbits/Keccak-simple.c"
  $1656 = $33; //@line 239 "mcbits/Keccak-simple.c"
  $1657 = $1656; //@line 239 "mcbits/Keccak-simple.c"
  $1658 = HEAP32[$1657>>2]|0; //@line 239 "mcbits/Keccak-simple.c"
  $1659 = (($1656) + 4)|0; //@line 239 "mcbits/Keccak-simple.c"
  $1660 = $1659; //@line 239 "mcbits/Keccak-simple.c"
  $1661 = HEAP32[$1660>>2]|0; //@line 239 "mcbits/Keccak-simple.c"
  $1662 = $1654 & $1658; //@line 239 "mcbits/Keccak-simple.c"
  $1663 = $1655 & $1661; //@line 239 "mcbits/Keccak-simple.c"
  $1664 = $1644 ^ $1662; //@line 239 "mcbits/Keccak-simple.c"
  $1665 = $1647 ^ $1663; //@line 239 "mcbits/Keccak-simple.c"
  $1666 = $51; //@line 239 "mcbits/Keccak-simple.c"
  $1667 = $1666; //@line 239 "mcbits/Keccak-simple.c"
  HEAP32[$1667>>2] = $1664; //@line 239 "mcbits/Keccak-simple.c"
  $1668 = (($1666) + 4)|0; //@line 239 "mcbits/Keccak-simple.c"
  $1669 = $1668; //@line 239 "mcbits/Keccak-simple.c"
  HEAP32[$1669>>2] = $1665; //@line 239 "mcbits/Keccak-simple.c"
  $1670 = $32; //@line 240 "mcbits/Keccak-simple.c"
  $1671 = $1670; //@line 240 "mcbits/Keccak-simple.c"
  $1672 = HEAP32[$1671>>2]|0; //@line 240 "mcbits/Keccak-simple.c"
  $1673 = (($1670) + 4)|0; //@line 240 "mcbits/Keccak-simple.c"
  $1674 = $1673; //@line 240 "mcbits/Keccak-simple.c"
  $1675 = HEAP32[$1674>>2]|0; //@line 240 "mcbits/Keccak-simple.c"
  $1676 = $33; //@line 240 "mcbits/Keccak-simple.c"
  $1677 = $1676; //@line 240 "mcbits/Keccak-simple.c"
  $1678 = HEAP32[$1677>>2]|0; //@line 240 "mcbits/Keccak-simple.c"
  $1679 = (($1676) + 4)|0; //@line 240 "mcbits/Keccak-simple.c"
  $1680 = $1679; //@line 240 "mcbits/Keccak-simple.c"
  $1681 = HEAP32[$1680>>2]|0; //@line 240 "mcbits/Keccak-simple.c"
  $1682 = $1678 ^ -1; //@line 240 "mcbits/Keccak-simple.c"
  $1683 = $1681 ^ -1; //@line 240 "mcbits/Keccak-simple.c"
  $1684 = $34; //@line 240 "mcbits/Keccak-simple.c"
  $1685 = $1684; //@line 240 "mcbits/Keccak-simple.c"
  $1686 = HEAP32[$1685>>2]|0; //@line 240 "mcbits/Keccak-simple.c"
  $1687 = (($1684) + 4)|0; //@line 240 "mcbits/Keccak-simple.c"
  $1688 = $1687; //@line 240 "mcbits/Keccak-simple.c"
  $1689 = HEAP32[$1688>>2]|0; //@line 240 "mcbits/Keccak-simple.c"
  $1690 = $1682 & $1686; //@line 240 "mcbits/Keccak-simple.c"
  $1691 = $1683 & $1689; //@line 240 "mcbits/Keccak-simple.c"
  $1692 = $1672 ^ $1690; //@line 240 "mcbits/Keccak-simple.c"
  $1693 = $1675 ^ $1691; //@line 240 "mcbits/Keccak-simple.c"
  $1694 = $52; //@line 240 "mcbits/Keccak-simple.c"
  $1695 = $1694; //@line 240 "mcbits/Keccak-simple.c"
  HEAP32[$1695>>2] = $1692; //@line 240 "mcbits/Keccak-simple.c"
  $1696 = (($1694) + 4)|0; //@line 240 "mcbits/Keccak-simple.c"
  $1697 = $1696; //@line 240 "mcbits/Keccak-simple.c"
  HEAP32[$1697>>2] = $1693; //@line 240 "mcbits/Keccak-simple.c"
  $1698 = $33; //@line 241 "mcbits/Keccak-simple.c"
  $1699 = $1698; //@line 241 "mcbits/Keccak-simple.c"
  $1700 = HEAP32[$1699>>2]|0; //@line 241 "mcbits/Keccak-simple.c"
  $1701 = (($1698) + 4)|0; //@line 241 "mcbits/Keccak-simple.c"
  $1702 = $1701; //@line 241 "mcbits/Keccak-simple.c"
  $1703 = HEAP32[$1702>>2]|0; //@line 241 "mcbits/Keccak-simple.c"
  $1704 = $34; //@line 241 "mcbits/Keccak-simple.c"
  $1705 = $1704; //@line 241 "mcbits/Keccak-simple.c"
  $1706 = HEAP32[$1705>>2]|0; //@line 241 "mcbits/Keccak-simple.c"
  $1707 = (($1704) + 4)|0; //@line 241 "mcbits/Keccak-simple.c"
  $1708 = $1707; //@line 241 "mcbits/Keccak-simple.c"
  $1709 = HEAP32[$1708>>2]|0; //@line 241 "mcbits/Keccak-simple.c"
  $1710 = $1706 ^ -1; //@line 241 "mcbits/Keccak-simple.c"
  $1711 = $1709 ^ -1; //@line 241 "mcbits/Keccak-simple.c"
  $1712 = $35; //@line 241 "mcbits/Keccak-simple.c"
  $1713 = $1712; //@line 241 "mcbits/Keccak-simple.c"
  $1714 = HEAP32[$1713>>2]|0; //@line 241 "mcbits/Keccak-simple.c"
  $1715 = (($1712) + 4)|0; //@line 241 "mcbits/Keccak-simple.c"
  $1716 = $1715; //@line 241 "mcbits/Keccak-simple.c"
  $1717 = HEAP32[$1716>>2]|0; //@line 241 "mcbits/Keccak-simple.c"
  $1718 = $1710 & $1714; //@line 241 "mcbits/Keccak-simple.c"
  $1719 = $1711 & $1717; //@line 241 "mcbits/Keccak-simple.c"
  $1720 = $1700 ^ $1718; //@line 241 "mcbits/Keccak-simple.c"
  $1721 = $1703 ^ $1719; //@line 241 "mcbits/Keccak-simple.c"
  $1722 = $53; //@line 241 "mcbits/Keccak-simple.c"
  $1723 = $1722; //@line 241 "mcbits/Keccak-simple.c"
  HEAP32[$1723>>2] = $1720; //@line 241 "mcbits/Keccak-simple.c"
  $1724 = (($1722) + 4)|0; //@line 241 "mcbits/Keccak-simple.c"
  $1725 = $1724; //@line 241 "mcbits/Keccak-simple.c"
  HEAP32[$1725>>2] = $1721; //@line 241 "mcbits/Keccak-simple.c"
  $1726 = $34; //@line 242 "mcbits/Keccak-simple.c"
  $1727 = $1726; //@line 242 "mcbits/Keccak-simple.c"
  $1728 = HEAP32[$1727>>2]|0; //@line 242 "mcbits/Keccak-simple.c"
  $1729 = (($1726) + 4)|0; //@line 242 "mcbits/Keccak-simple.c"
  $1730 = $1729; //@line 242 "mcbits/Keccak-simple.c"
  $1731 = HEAP32[$1730>>2]|0; //@line 242 "mcbits/Keccak-simple.c"
  $1732 = $35; //@line 242 "mcbits/Keccak-simple.c"
  $1733 = $1732; //@line 242 "mcbits/Keccak-simple.c"
  $1734 = HEAP32[$1733>>2]|0; //@line 242 "mcbits/Keccak-simple.c"
  $1735 = (($1732) + 4)|0; //@line 242 "mcbits/Keccak-simple.c"
  $1736 = $1735; //@line 242 "mcbits/Keccak-simple.c"
  $1737 = HEAP32[$1736>>2]|0; //@line 242 "mcbits/Keccak-simple.c"
  $1738 = $1734 ^ -1; //@line 242 "mcbits/Keccak-simple.c"
  $1739 = $1737 ^ -1; //@line 242 "mcbits/Keccak-simple.c"
  $1740 = $31; //@line 242 "mcbits/Keccak-simple.c"
  $1741 = $1740; //@line 242 "mcbits/Keccak-simple.c"
  $1742 = HEAP32[$1741>>2]|0; //@line 242 "mcbits/Keccak-simple.c"
  $1743 = (($1740) + 4)|0; //@line 242 "mcbits/Keccak-simple.c"
  $1744 = $1743; //@line 242 "mcbits/Keccak-simple.c"
  $1745 = HEAP32[$1744>>2]|0; //@line 242 "mcbits/Keccak-simple.c"
  $1746 = $1738 & $1742; //@line 242 "mcbits/Keccak-simple.c"
  $1747 = $1739 & $1745; //@line 242 "mcbits/Keccak-simple.c"
  $1748 = $1728 ^ $1746; //@line 242 "mcbits/Keccak-simple.c"
  $1749 = $1731 ^ $1747; //@line 242 "mcbits/Keccak-simple.c"
  $1750 = $54; //@line 242 "mcbits/Keccak-simple.c"
  $1751 = $1750; //@line 242 "mcbits/Keccak-simple.c"
  HEAP32[$1751>>2] = $1748; //@line 242 "mcbits/Keccak-simple.c"
  $1752 = (($1750) + 4)|0; //@line 242 "mcbits/Keccak-simple.c"
  $1753 = $1752; //@line 242 "mcbits/Keccak-simple.c"
  HEAP32[$1753>>2] = $1749; //@line 242 "mcbits/Keccak-simple.c"
  $1754 = $35; //@line 243 "mcbits/Keccak-simple.c"
  $1755 = $1754; //@line 243 "mcbits/Keccak-simple.c"
  $1756 = HEAP32[$1755>>2]|0; //@line 243 "mcbits/Keccak-simple.c"
  $1757 = (($1754) + 4)|0; //@line 243 "mcbits/Keccak-simple.c"
  $1758 = $1757; //@line 243 "mcbits/Keccak-simple.c"
  $1759 = HEAP32[$1758>>2]|0; //@line 243 "mcbits/Keccak-simple.c"
  $1760 = $31; //@line 243 "mcbits/Keccak-simple.c"
  $1761 = $1760; //@line 243 "mcbits/Keccak-simple.c"
  $1762 = HEAP32[$1761>>2]|0; //@line 243 "mcbits/Keccak-simple.c"
  $1763 = (($1760) + 4)|0; //@line 243 "mcbits/Keccak-simple.c"
  $1764 = $1763; //@line 243 "mcbits/Keccak-simple.c"
  $1765 = HEAP32[$1764>>2]|0; //@line 243 "mcbits/Keccak-simple.c"
  $1766 = $1762 ^ -1; //@line 243 "mcbits/Keccak-simple.c"
  $1767 = $1765 ^ -1; //@line 243 "mcbits/Keccak-simple.c"
  $1768 = $32; //@line 243 "mcbits/Keccak-simple.c"
  $1769 = $1768; //@line 243 "mcbits/Keccak-simple.c"
  $1770 = HEAP32[$1769>>2]|0; //@line 243 "mcbits/Keccak-simple.c"
  $1771 = (($1768) + 4)|0; //@line 243 "mcbits/Keccak-simple.c"
  $1772 = $1771; //@line 243 "mcbits/Keccak-simple.c"
  $1773 = HEAP32[$1772>>2]|0; //@line 243 "mcbits/Keccak-simple.c"
  $1774 = $1766 & $1770; //@line 243 "mcbits/Keccak-simple.c"
  $1775 = $1767 & $1773; //@line 243 "mcbits/Keccak-simple.c"
  $1776 = $1756 ^ $1774; //@line 243 "mcbits/Keccak-simple.c"
  $1777 = $1759 ^ $1775; //@line 243 "mcbits/Keccak-simple.c"
  $1778 = $55; //@line 243 "mcbits/Keccak-simple.c"
  $1779 = $1778; //@line 243 "mcbits/Keccak-simple.c"
  HEAP32[$1779>>2] = $1776; //@line 243 "mcbits/Keccak-simple.c"
  $1780 = (($1778) + 4)|0; //@line 243 "mcbits/Keccak-simple.c"
  $1781 = $1780; //@line 243 "mcbits/Keccak-simple.c"
  HEAP32[$1781>>2] = $1777; //@line 243 "mcbits/Keccak-simple.c"
  $1782 = $40; //@line 245 "mcbits/Keccak-simple.c"
  $1783 = $1782; //@line 245 "mcbits/Keccak-simple.c"
  $1784 = HEAP32[$1783>>2]|0; //@line 245 "mcbits/Keccak-simple.c"
  $1785 = (($1782) + 4)|0; //@line 245 "mcbits/Keccak-simple.c"
  $1786 = $1785; //@line 245 "mcbits/Keccak-simple.c"
  $1787 = HEAP32[$1786>>2]|0; //@line 245 "mcbits/Keccak-simple.c"
  $1788 = $10; //@line 245 "mcbits/Keccak-simple.c"
  $1789 = $1788; //@line 245 "mcbits/Keccak-simple.c"
  $1790 = HEAP32[$1789>>2]|0; //@line 245 "mcbits/Keccak-simple.c"
  $1791 = (($1788) + 4)|0; //@line 245 "mcbits/Keccak-simple.c"
  $1792 = $1791; //@line 245 "mcbits/Keccak-simple.c"
  $1793 = HEAP32[$1792>>2]|0; //@line 245 "mcbits/Keccak-simple.c"
  $1794 = $1790 ^ $1784; //@line 245 "mcbits/Keccak-simple.c"
  $1795 = $1793 ^ $1787; //@line 245 "mcbits/Keccak-simple.c"
  $1796 = $10; //@line 245 "mcbits/Keccak-simple.c"
  $1797 = $1796; //@line 245 "mcbits/Keccak-simple.c"
  HEAP32[$1797>>2] = $1794; //@line 245 "mcbits/Keccak-simple.c"
  $1798 = (($1796) + 4)|0; //@line 245 "mcbits/Keccak-simple.c"
  $1799 = $1798; //@line 245 "mcbits/Keccak-simple.c"
  HEAP32[$1799>>2] = $1795; //@line 245 "mcbits/Keccak-simple.c"
  $1800 = $10; //@line 246 "mcbits/Keccak-simple.c"
  $1801 = $1800; //@line 246 "mcbits/Keccak-simple.c"
  $1802 = HEAP32[$1801>>2]|0; //@line 246 "mcbits/Keccak-simple.c"
  $1803 = (($1800) + 4)|0; //@line 246 "mcbits/Keccak-simple.c"
  $1804 = $1803; //@line 246 "mcbits/Keccak-simple.c"
  $1805 = HEAP32[$1804>>2]|0; //@line 246 "mcbits/Keccak-simple.c"
  $1806 = (_bitshift64Shl(($1802|0),($1805|0),27)|0); //@line 246 "mcbits/Keccak-simple.c"
  $1807 = tempRet0; //@line 246 "mcbits/Keccak-simple.c"
  $1808 = $10; //@line 246 "mcbits/Keccak-simple.c"
  $1809 = $1808; //@line 246 "mcbits/Keccak-simple.c"
  $1810 = HEAP32[$1809>>2]|0; //@line 246 "mcbits/Keccak-simple.c"
  $1811 = (($1808) + 4)|0; //@line 246 "mcbits/Keccak-simple.c"
  $1812 = $1811; //@line 246 "mcbits/Keccak-simple.c"
  $1813 = HEAP32[$1812>>2]|0; //@line 246 "mcbits/Keccak-simple.c"
  $1814 = (_bitshift64Lshr(($1810|0),($1813|0),37)|0); //@line 246 "mcbits/Keccak-simple.c"
  $1815 = tempRet0; //@line 246 "mcbits/Keccak-simple.c"
  $1816 = $1806 ^ $1814; //@line 246 "mcbits/Keccak-simple.c"
  $1817 = $1807 ^ $1815; //@line 246 "mcbits/Keccak-simple.c"
  $1818 = $31; //@line 246 "mcbits/Keccak-simple.c"
  $1819 = $1818; //@line 246 "mcbits/Keccak-simple.c"
  HEAP32[$1819>>2] = $1816; //@line 246 "mcbits/Keccak-simple.c"
  $1820 = (($1818) + 4)|0; //@line 246 "mcbits/Keccak-simple.c"
  $1821 = $1820; //@line 246 "mcbits/Keccak-simple.c"
  HEAP32[$1821>>2] = $1817; //@line 246 "mcbits/Keccak-simple.c"
  $1822 = $36; //@line 247 "mcbits/Keccak-simple.c"
  $1823 = $1822; //@line 247 "mcbits/Keccak-simple.c"
  $1824 = HEAP32[$1823>>2]|0; //@line 247 "mcbits/Keccak-simple.c"
  $1825 = (($1822) + 4)|0; //@line 247 "mcbits/Keccak-simple.c"
  $1826 = $1825; //@line 247 "mcbits/Keccak-simple.c"
  $1827 = HEAP32[$1826>>2]|0; //@line 247 "mcbits/Keccak-simple.c"
  $1828 = $11; //@line 247 "mcbits/Keccak-simple.c"
  $1829 = $1828; //@line 247 "mcbits/Keccak-simple.c"
  $1830 = HEAP32[$1829>>2]|0; //@line 247 "mcbits/Keccak-simple.c"
  $1831 = (($1828) + 4)|0; //@line 247 "mcbits/Keccak-simple.c"
  $1832 = $1831; //@line 247 "mcbits/Keccak-simple.c"
  $1833 = HEAP32[$1832>>2]|0; //@line 247 "mcbits/Keccak-simple.c"
  $1834 = $1830 ^ $1824; //@line 247 "mcbits/Keccak-simple.c"
  $1835 = $1833 ^ $1827; //@line 247 "mcbits/Keccak-simple.c"
  $1836 = $11; //@line 247 "mcbits/Keccak-simple.c"
  $1837 = $1836; //@line 247 "mcbits/Keccak-simple.c"
  HEAP32[$1837>>2] = $1834; //@line 247 "mcbits/Keccak-simple.c"
  $1838 = (($1836) + 4)|0; //@line 247 "mcbits/Keccak-simple.c"
  $1839 = $1838; //@line 247 "mcbits/Keccak-simple.c"
  HEAP32[$1839>>2] = $1835; //@line 247 "mcbits/Keccak-simple.c"
  $1840 = $11; //@line 248 "mcbits/Keccak-simple.c"
  $1841 = $1840; //@line 248 "mcbits/Keccak-simple.c"
  $1842 = HEAP32[$1841>>2]|0; //@line 248 "mcbits/Keccak-simple.c"
  $1843 = (($1840) + 4)|0; //@line 248 "mcbits/Keccak-simple.c"
  $1844 = $1843; //@line 248 "mcbits/Keccak-simple.c"
  $1845 = HEAP32[$1844>>2]|0; //@line 248 "mcbits/Keccak-simple.c"
  $1846 = (_bitshift64Shl(($1842|0),($1845|0),36)|0); //@line 248 "mcbits/Keccak-simple.c"
  $1847 = tempRet0; //@line 248 "mcbits/Keccak-simple.c"
  $1848 = $11; //@line 248 "mcbits/Keccak-simple.c"
  $1849 = $1848; //@line 248 "mcbits/Keccak-simple.c"
  $1850 = HEAP32[$1849>>2]|0; //@line 248 "mcbits/Keccak-simple.c"
  $1851 = (($1848) + 4)|0; //@line 248 "mcbits/Keccak-simple.c"
  $1852 = $1851; //@line 248 "mcbits/Keccak-simple.c"
  $1853 = HEAP32[$1852>>2]|0; //@line 248 "mcbits/Keccak-simple.c"
  $1854 = (_bitshift64Lshr(($1850|0),($1853|0),28)|0); //@line 248 "mcbits/Keccak-simple.c"
  $1855 = tempRet0; //@line 248 "mcbits/Keccak-simple.c"
  $1856 = $1846 ^ $1854; //@line 248 "mcbits/Keccak-simple.c"
  $1857 = $1847 ^ $1855; //@line 248 "mcbits/Keccak-simple.c"
  $1858 = $32; //@line 248 "mcbits/Keccak-simple.c"
  $1859 = $1858; //@line 248 "mcbits/Keccak-simple.c"
  HEAP32[$1859>>2] = $1856; //@line 248 "mcbits/Keccak-simple.c"
  $1860 = (($1858) + 4)|0; //@line 248 "mcbits/Keccak-simple.c"
  $1861 = $1860; //@line 248 "mcbits/Keccak-simple.c"
  HEAP32[$1861>>2] = $1857; //@line 248 "mcbits/Keccak-simple.c"
  $1862 = $37; //@line 249 "mcbits/Keccak-simple.c"
  $1863 = $1862; //@line 249 "mcbits/Keccak-simple.c"
  $1864 = HEAP32[$1863>>2]|0; //@line 249 "mcbits/Keccak-simple.c"
  $1865 = (($1862) + 4)|0; //@line 249 "mcbits/Keccak-simple.c"
  $1866 = $1865; //@line 249 "mcbits/Keccak-simple.c"
  $1867 = HEAP32[$1866>>2]|0; //@line 249 "mcbits/Keccak-simple.c"
  $1868 = $17; //@line 249 "mcbits/Keccak-simple.c"
  $1869 = $1868; //@line 249 "mcbits/Keccak-simple.c"
  $1870 = HEAP32[$1869>>2]|0; //@line 249 "mcbits/Keccak-simple.c"
  $1871 = (($1868) + 4)|0; //@line 249 "mcbits/Keccak-simple.c"
  $1872 = $1871; //@line 249 "mcbits/Keccak-simple.c"
  $1873 = HEAP32[$1872>>2]|0; //@line 249 "mcbits/Keccak-simple.c"
  $1874 = $1870 ^ $1864; //@line 249 "mcbits/Keccak-simple.c"
  $1875 = $1873 ^ $1867; //@line 249 "mcbits/Keccak-simple.c"
  $1876 = $17; //@line 249 "mcbits/Keccak-simple.c"
  $1877 = $1876; //@line 249 "mcbits/Keccak-simple.c"
  HEAP32[$1877>>2] = $1874; //@line 249 "mcbits/Keccak-simple.c"
  $1878 = (($1876) + 4)|0; //@line 249 "mcbits/Keccak-simple.c"
  $1879 = $1878; //@line 249 "mcbits/Keccak-simple.c"
  HEAP32[$1879>>2] = $1875; //@line 249 "mcbits/Keccak-simple.c"
  $1880 = $17; //@line 250 "mcbits/Keccak-simple.c"
  $1881 = $1880; //@line 250 "mcbits/Keccak-simple.c"
  $1882 = HEAP32[$1881>>2]|0; //@line 250 "mcbits/Keccak-simple.c"
  $1883 = (($1880) + 4)|0; //@line 250 "mcbits/Keccak-simple.c"
  $1884 = $1883; //@line 250 "mcbits/Keccak-simple.c"
  $1885 = HEAP32[$1884>>2]|0; //@line 250 "mcbits/Keccak-simple.c"
  $1886 = (_bitshift64Shl(($1882|0),($1885|0),10)|0); //@line 250 "mcbits/Keccak-simple.c"
  $1887 = tempRet0; //@line 250 "mcbits/Keccak-simple.c"
  $1888 = $17; //@line 250 "mcbits/Keccak-simple.c"
  $1889 = $1888; //@line 250 "mcbits/Keccak-simple.c"
  $1890 = HEAP32[$1889>>2]|0; //@line 250 "mcbits/Keccak-simple.c"
  $1891 = (($1888) + 4)|0; //@line 250 "mcbits/Keccak-simple.c"
  $1892 = $1891; //@line 250 "mcbits/Keccak-simple.c"
  $1893 = HEAP32[$1892>>2]|0; //@line 250 "mcbits/Keccak-simple.c"
  $1894 = (_bitshift64Lshr(($1890|0),($1893|0),54)|0); //@line 250 "mcbits/Keccak-simple.c"
  $1895 = tempRet0; //@line 250 "mcbits/Keccak-simple.c"
  $1896 = $1886 ^ $1894; //@line 250 "mcbits/Keccak-simple.c"
  $1897 = $1887 ^ $1895; //@line 250 "mcbits/Keccak-simple.c"
  $1898 = $33; //@line 250 "mcbits/Keccak-simple.c"
  $1899 = $1898; //@line 250 "mcbits/Keccak-simple.c"
  HEAP32[$1899>>2] = $1896; //@line 250 "mcbits/Keccak-simple.c"
  $1900 = (($1898) + 4)|0; //@line 250 "mcbits/Keccak-simple.c"
  $1901 = $1900; //@line 250 "mcbits/Keccak-simple.c"
  HEAP32[$1901>>2] = $1897; //@line 250 "mcbits/Keccak-simple.c"
  $1902 = $38; //@line 251 "mcbits/Keccak-simple.c"
  $1903 = $1902; //@line 251 "mcbits/Keccak-simple.c"
  $1904 = HEAP32[$1903>>2]|0; //@line 251 "mcbits/Keccak-simple.c"
  $1905 = (($1902) + 4)|0; //@line 251 "mcbits/Keccak-simple.c"
  $1906 = $1905; //@line 251 "mcbits/Keccak-simple.c"
  $1907 = HEAP32[$1906>>2]|0; //@line 251 "mcbits/Keccak-simple.c"
  $1908 = $23; //@line 251 "mcbits/Keccak-simple.c"
  $1909 = $1908; //@line 251 "mcbits/Keccak-simple.c"
  $1910 = HEAP32[$1909>>2]|0; //@line 251 "mcbits/Keccak-simple.c"
  $1911 = (($1908) + 4)|0; //@line 251 "mcbits/Keccak-simple.c"
  $1912 = $1911; //@line 251 "mcbits/Keccak-simple.c"
  $1913 = HEAP32[$1912>>2]|0; //@line 251 "mcbits/Keccak-simple.c"
  $1914 = $1910 ^ $1904; //@line 251 "mcbits/Keccak-simple.c"
  $1915 = $1913 ^ $1907; //@line 251 "mcbits/Keccak-simple.c"
  $1916 = $23; //@line 251 "mcbits/Keccak-simple.c"
  $1917 = $1916; //@line 251 "mcbits/Keccak-simple.c"
  HEAP32[$1917>>2] = $1914; //@line 251 "mcbits/Keccak-simple.c"
  $1918 = (($1916) + 4)|0; //@line 251 "mcbits/Keccak-simple.c"
  $1919 = $1918; //@line 251 "mcbits/Keccak-simple.c"
  HEAP32[$1919>>2] = $1915; //@line 251 "mcbits/Keccak-simple.c"
  $1920 = $23; //@line 252 "mcbits/Keccak-simple.c"
  $1921 = $1920; //@line 252 "mcbits/Keccak-simple.c"
  $1922 = HEAP32[$1921>>2]|0; //@line 252 "mcbits/Keccak-simple.c"
  $1923 = (($1920) + 4)|0; //@line 252 "mcbits/Keccak-simple.c"
  $1924 = $1923; //@line 252 "mcbits/Keccak-simple.c"
  $1925 = HEAP32[$1924>>2]|0; //@line 252 "mcbits/Keccak-simple.c"
  $1926 = (_bitshift64Shl(($1922|0),($1925|0),15)|0); //@line 252 "mcbits/Keccak-simple.c"
  $1927 = tempRet0; //@line 252 "mcbits/Keccak-simple.c"
  $1928 = $23; //@line 252 "mcbits/Keccak-simple.c"
  $1929 = $1928; //@line 252 "mcbits/Keccak-simple.c"
  $1930 = HEAP32[$1929>>2]|0; //@line 252 "mcbits/Keccak-simple.c"
  $1931 = (($1928) + 4)|0; //@line 252 "mcbits/Keccak-simple.c"
  $1932 = $1931; //@line 252 "mcbits/Keccak-simple.c"
  $1933 = HEAP32[$1932>>2]|0; //@line 252 "mcbits/Keccak-simple.c"
  $1934 = (_bitshift64Lshr(($1930|0),($1933|0),49)|0); //@line 252 "mcbits/Keccak-simple.c"
  $1935 = tempRet0; //@line 252 "mcbits/Keccak-simple.c"
  $1936 = $1926 ^ $1934; //@line 252 "mcbits/Keccak-simple.c"
  $1937 = $1927 ^ $1935; //@line 252 "mcbits/Keccak-simple.c"
  $1938 = $34; //@line 252 "mcbits/Keccak-simple.c"
  $1939 = $1938; //@line 252 "mcbits/Keccak-simple.c"
  HEAP32[$1939>>2] = $1936; //@line 252 "mcbits/Keccak-simple.c"
  $1940 = (($1938) + 4)|0; //@line 252 "mcbits/Keccak-simple.c"
  $1941 = $1940; //@line 252 "mcbits/Keccak-simple.c"
  HEAP32[$1941>>2] = $1937; //@line 252 "mcbits/Keccak-simple.c"
  $1942 = $39; //@line 253 "mcbits/Keccak-simple.c"
  $1943 = $1942; //@line 253 "mcbits/Keccak-simple.c"
  $1944 = HEAP32[$1943>>2]|0; //@line 253 "mcbits/Keccak-simple.c"
  $1945 = (($1942) + 4)|0; //@line 253 "mcbits/Keccak-simple.c"
  $1946 = $1945; //@line 253 "mcbits/Keccak-simple.c"
  $1947 = HEAP32[$1946>>2]|0; //@line 253 "mcbits/Keccak-simple.c"
  $1948 = $29; //@line 253 "mcbits/Keccak-simple.c"
  $1949 = $1948; //@line 253 "mcbits/Keccak-simple.c"
  $1950 = HEAP32[$1949>>2]|0; //@line 253 "mcbits/Keccak-simple.c"
  $1951 = (($1948) + 4)|0; //@line 253 "mcbits/Keccak-simple.c"
  $1952 = $1951; //@line 253 "mcbits/Keccak-simple.c"
  $1953 = HEAP32[$1952>>2]|0; //@line 253 "mcbits/Keccak-simple.c"
  $1954 = $1950 ^ $1944; //@line 253 "mcbits/Keccak-simple.c"
  $1955 = $1953 ^ $1947; //@line 253 "mcbits/Keccak-simple.c"
  $1956 = $29; //@line 253 "mcbits/Keccak-simple.c"
  $1957 = $1956; //@line 253 "mcbits/Keccak-simple.c"
  HEAP32[$1957>>2] = $1954; //@line 253 "mcbits/Keccak-simple.c"
  $1958 = (($1956) + 4)|0; //@line 253 "mcbits/Keccak-simple.c"
  $1959 = $1958; //@line 253 "mcbits/Keccak-simple.c"
  HEAP32[$1959>>2] = $1955; //@line 253 "mcbits/Keccak-simple.c"
  $1960 = $29; //@line 254 "mcbits/Keccak-simple.c"
  $1961 = $1960; //@line 254 "mcbits/Keccak-simple.c"
  $1962 = HEAP32[$1961>>2]|0; //@line 254 "mcbits/Keccak-simple.c"
  $1963 = (($1960) + 4)|0; //@line 254 "mcbits/Keccak-simple.c"
  $1964 = $1963; //@line 254 "mcbits/Keccak-simple.c"
  $1965 = HEAP32[$1964>>2]|0; //@line 254 "mcbits/Keccak-simple.c"
  $1966 = (_bitshift64Shl(($1962|0),($1965|0),56)|0); //@line 254 "mcbits/Keccak-simple.c"
  $1967 = tempRet0; //@line 254 "mcbits/Keccak-simple.c"
  $1968 = $29; //@line 254 "mcbits/Keccak-simple.c"
  $1969 = $1968; //@line 254 "mcbits/Keccak-simple.c"
  $1970 = HEAP32[$1969>>2]|0; //@line 254 "mcbits/Keccak-simple.c"
  $1971 = (($1968) + 4)|0; //@line 254 "mcbits/Keccak-simple.c"
  $1972 = $1971; //@line 254 "mcbits/Keccak-simple.c"
  $1973 = HEAP32[$1972>>2]|0; //@line 254 "mcbits/Keccak-simple.c"
  $1974 = (_bitshift64Lshr(($1970|0),($1973|0),8)|0); //@line 254 "mcbits/Keccak-simple.c"
  $1975 = tempRet0; //@line 254 "mcbits/Keccak-simple.c"
  $1976 = $1966 ^ $1974; //@line 254 "mcbits/Keccak-simple.c"
  $1977 = $1967 ^ $1975; //@line 254 "mcbits/Keccak-simple.c"
  $1978 = $35; //@line 254 "mcbits/Keccak-simple.c"
  $1979 = $1978; //@line 254 "mcbits/Keccak-simple.c"
  HEAP32[$1979>>2] = $1976; //@line 254 "mcbits/Keccak-simple.c"
  $1980 = (($1978) + 4)|0; //@line 254 "mcbits/Keccak-simple.c"
  $1981 = $1980; //@line 254 "mcbits/Keccak-simple.c"
  HEAP32[$1981>>2] = $1977; //@line 254 "mcbits/Keccak-simple.c"
  $1982 = $31; //@line 255 "mcbits/Keccak-simple.c"
  $1983 = $1982; //@line 255 "mcbits/Keccak-simple.c"
  $1984 = HEAP32[$1983>>2]|0; //@line 255 "mcbits/Keccak-simple.c"
  $1985 = (($1982) + 4)|0; //@line 255 "mcbits/Keccak-simple.c"
  $1986 = $1985; //@line 255 "mcbits/Keccak-simple.c"
  $1987 = HEAP32[$1986>>2]|0; //@line 255 "mcbits/Keccak-simple.c"
  $1988 = $32; //@line 255 "mcbits/Keccak-simple.c"
  $1989 = $1988; //@line 255 "mcbits/Keccak-simple.c"
  $1990 = HEAP32[$1989>>2]|0; //@line 255 "mcbits/Keccak-simple.c"
  $1991 = (($1988) + 4)|0; //@line 255 "mcbits/Keccak-simple.c"
  $1992 = $1991; //@line 255 "mcbits/Keccak-simple.c"
  $1993 = HEAP32[$1992>>2]|0; //@line 255 "mcbits/Keccak-simple.c"
  $1994 = $1990 ^ -1; //@line 255 "mcbits/Keccak-simple.c"
  $1995 = $1993 ^ -1; //@line 255 "mcbits/Keccak-simple.c"
  $1996 = $33; //@line 255 "mcbits/Keccak-simple.c"
  $1997 = $1996; //@line 255 "mcbits/Keccak-simple.c"
  $1998 = HEAP32[$1997>>2]|0; //@line 255 "mcbits/Keccak-simple.c"
  $1999 = (($1996) + 4)|0; //@line 255 "mcbits/Keccak-simple.c"
  $2000 = $1999; //@line 255 "mcbits/Keccak-simple.c"
  $2001 = HEAP32[$2000>>2]|0; //@line 255 "mcbits/Keccak-simple.c"
  $2002 = $1994 & $1998; //@line 255 "mcbits/Keccak-simple.c"
  $2003 = $1995 & $2001; //@line 255 "mcbits/Keccak-simple.c"
  $2004 = $1984 ^ $2002; //@line 255 "mcbits/Keccak-simple.c"
  $2005 = $1987 ^ $2003; //@line 255 "mcbits/Keccak-simple.c"
  $2006 = $56; //@line 255 "mcbits/Keccak-simple.c"
  $2007 = $2006; //@line 255 "mcbits/Keccak-simple.c"
  HEAP32[$2007>>2] = $2004; //@line 255 "mcbits/Keccak-simple.c"
  $2008 = (($2006) + 4)|0; //@line 255 "mcbits/Keccak-simple.c"
  $2009 = $2008; //@line 255 "mcbits/Keccak-simple.c"
  HEAP32[$2009>>2] = $2005; //@line 255 "mcbits/Keccak-simple.c"
  $2010 = $32; //@line 256 "mcbits/Keccak-simple.c"
  $2011 = $2010; //@line 256 "mcbits/Keccak-simple.c"
  $2012 = HEAP32[$2011>>2]|0; //@line 256 "mcbits/Keccak-simple.c"
  $2013 = (($2010) + 4)|0; //@line 256 "mcbits/Keccak-simple.c"
  $2014 = $2013; //@line 256 "mcbits/Keccak-simple.c"
  $2015 = HEAP32[$2014>>2]|0; //@line 256 "mcbits/Keccak-simple.c"
  $2016 = $33; //@line 256 "mcbits/Keccak-simple.c"
  $2017 = $2016; //@line 256 "mcbits/Keccak-simple.c"
  $2018 = HEAP32[$2017>>2]|0; //@line 256 "mcbits/Keccak-simple.c"
  $2019 = (($2016) + 4)|0; //@line 256 "mcbits/Keccak-simple.c"
  $2020 = $2019; //@line 256 "mcbits/Keccak-simple.c"
  $2021 = HEAP32[$2020>>2]|0; //@line 256 "mcbits/Keccak-simple.c"
  $2022 = $2018 ^ -1; //@line 256 "mcbits/Keccak-simple.c"
  $2023 = $2021 ^ -1; //@line 256 "mcbits/Keccak-simple.c"
  $2024 = $34; //@line 256 "mcbits/Keccak-simple.c"
  $2025 = $2024; //@line 256 "mcbits/Keccak-simple.c"
  $2026 = HEAP32[$2025>>2]|0; //@line 256 "mcbits/Keccak-simple.c"
  $2027 = (($2024) + 4)|0; //@line 256 "mcbits/Keccak-simple.c"
  $2028 = $2027; //@line 256 "mcbits/Keccak-simple.c"
  $2029 = HEAP32[$2028>>2]|0; //@line 256 "mcbits/Keccak-simple.c"
  $2030 = $2022 & $2026; //@line 256 "mcbits/Keccak-simple.c"
  $2031 = $2023 & $2029; //@line 256 "mcbits/Keccak-simple.c"
  $2032 = $2012 ^ $2030; //@line 256 "mcbits/Keccak-simple.c"
  $2033 = $2015 ^ $2031; //@line 256 "mcbits/Keccak-simple.c"
  $2034 = $57; //@line 256 "mcbits/Keccak-simple.c"
  $2035 = $2034; //@line 256 "mcbits/Keccak-simple.c"
  HEAP32[$2035>>2] = $2032; //@line 256 "mcbits/Keccak-simple.c"
  $2036 = (($2034) + 4)|0; //@line 256 "mcbits/Keccak-simple.c"
  $2037 = $2036; //@line 256 "mcbits/Keccak-simple.c"
  HEAP32[$2037>>2] = $2033; //@line 256 "mcbits/Keccak-simple.c"
  $2038 = $33; //@line 257 "mcbits/Keccak-simple.c"
  $2039 = $2038; //@line 257 "mcbits/Keccak-simple.c"
  $2040 = HEAP32[$2039>>2]|0; //@line 257 "mcbits/Keccak-simple.c"
  $2041 = (($2038) + 4)|0; //@line 257 "mcbits/Keccak-simple.c"
  $2042 = $2041; //@line 257 "mcbits/Keccak-simple.c"
  $2043 = HEAP32[$2042>>2]|0; //@line 257 "mcbits/Keccak-simple.c"
  $2044 = $34; //@line 257 "mcbits/Keccak-simple.c"
  $2045 = $2044; //@line 257 "mcbits/Keccak-simple.c"
  $2046 = HEAP32[$2045>>2]|0; //@line 257 "mcbits/Keccak-simple.c"
  $2047 = (($2044) + 4)|0; //@line 257 "mcbits/Keccak-simple.c"
  $2048 = $2047; //@line 257 "mcbits/Keccak-simple.c"
  $2049 = HEAP32[$2048>>2]|0; //@line 257 "mcbits/Keccak-simple.c"
  $2050 = $2046 ^ -1; //@line 257 "mcbits/Keccak-simple.c"
  $2051 = $2049 ^ -1; //@line 257 "mcbits/Keccak-simple.c"
  $2052 = $35; //@line 257 "mcbits/Keccak-simple.c"
  $2053 = $2052; //@line 257 "mcbits/Keccak-simple.c"
  $2054 = HEAP32[$2053>>2]|0; //@line 257 "mcbits/Keccak-simple.c"
  $2055 = (($2052) + 4)|0; //@line 257 "mcbits/Keccak-simple.c"
  $2056 = $2055; //@line 257 "mcbits/Keccak-simple.c"
  $2057 = HEAP32[$2056>>2]|0; //@line 257 "mcbits/Keccak-simple.c"
  $2058 = $2050 & $2054; //@line 257 "mcbits/Keccak-simple.c"
  $2059 = $2051 & $2057; //@line 257 "mcbits/Keccak-simple.c"
  $2060 = $2040 ^ $2058; //@line 257 "mcbits/Keccak-simple.c"
  $2061 = $2043 ^ $2059; //@line 257 "mcbits/Keccak-simple.c"
  $2062 = $58; //@line 257 "mcbits/Keccak-simple.c"
  $2063 = $2062; //@line 257 "mcbits/Keccak-simple.c"
  HEAP32[$2063>>2] = $2060; //@line 257 "mcbits/Keccak-simple.c"
  $2064 = (($2062) + 4)|0; //@line 257 "mcbits/Keccak-simple.c"
  $2065 = $2064; //@line 257 "mcbits/Keccak-simple.c"
  HEAP32[$2065>>2] = $2061; //@line 257 "mcbits/Keccak-simple.c"
  $2066 = $34; //@line 258 "mcbits/Keccak-simple.c"
  $2067 = $2066; //@line 258 "mcbits/Keccak-simple.c"
  $2068 = HEAP32[$2067>>2]|0; //@line 258 "mcbits/Keccak-simple.c"
  $2069 = (($2066) + 4)|0; //@line 258 "mcbits/Keccak-simple.c"
  $2070 = $2069; //@line 258 "mcbits/Keccak-simple.c"
  $2071 = HEAP32[$2070>>2]|0; //@line 258 "mcbits/Keccak-simple.c"
  $2072 = $35; //@line 258 "mcbits/Keccak-simple.c"
  $2073 = $2072; //@line 258 "mcbits/Keccak-simple.c"
  $2074 = HEAP32[$2073>>2]|0; //@line 258 "mcbits/Keccak-simple.c"
  $2075 = (($2072) + 4)|0; //@line 258 "mcbits/Keccak-simple.c"
  $2076 = $2075; //@line 258 "mcbits/Keccak-simple.c"
  $2077 = HEAP32[$2076>>2]|0; //@line 258 "mcbits/Keccak-simple.c"
  $2078 = $2074 ^ -1; //@line 258 "mcbits/Keccak-simple.c"
  $2079 = $2077 ^ -1; //@line 258 "mcbits/Keccak-simple.c"
  $2080 = $31; //@line 258 "mcbits/Keccak-simple.c"
  $2081 = $2080; //@line 258 "mcbits/Keccak-simple.c"
  $2082 = HEAP32[$2081>>2]|0; //@line 258 "mcbits/Keccak-simple.c"
  $2083 = (($2080) + 4)|0; //@line 258 "mcbits/Keccak-simple.c"
  $2084 = $2083; //@line 258 "mcbits/Keccak-simple.c"
  $2085 = HEAP32[$2084>>2]|0; //@line 258 "mcbits/Keccak-simple.c"
  $2086 = $2078 & $2082; //@line 258 "mcbits/Keccak-simple.c"
  $2087 = $2079 & $2085; //@line 258 "mcbits/Keccak-simple.c"
  $2088 = $2068 ^ $2086; //@line 258 "mcbits/Keccak-simple.c"
  $2089 = $2071 ^ $2087; //@line 258 "mcbits/Keccak-simple.c"
  $2090 = $59; //@line 258 "mcbits/Keccak-simple.c"
  $2091 = $2090; //@line 258 "mcbits/Keccak-simple.c"
  HEAP32[$2091>>2] = $2088; //@line 258 "mcbits/Keccak-simple.c"
  $2092 = (($2090) + 4)|0; //@line 258 "mcbits/Keccak-simple.c"
  $2093 = $2092; //@line 258 "mcbits/Keccak-simple.c"
  HEAP32[$2093>>2] = $2089; //@line 258 "mcbits/Keccak-simple.c"
  $2094 = $35; //@line 259 "mcbits/Keccak-simple.c"
  $2095 = $2094; //@line 259 "mcbits/Keccak-simple.c"
  $2096 = HEAP32[$2095>>2]|0; //@line 259 "mcbits/Keccak-simple.c"
  $2097 = (($2094) + 4)|0; //@line 259 "mcbits/Keccak-simple.c"
  $2098 = $2097; //@line 259 "mcbits/Keccak-simple.c"
  $2099 = HEAP32[$2098>>2]|0; //@line 259 "mcbits/Keccak-simple.c"
  $2100 = $31; //@line 259 "mcbits/Keccak-simple.c"
  $2101 = $2100; //@line 259 "mcbits/Keccak-simple.c"
  $2102 = HEAP32[$2101>>2]|0; //@line 259 "mcbits/Keccak-simple.c"
  $2103 = (($2100) + 4)|0; //@line 259 "mcbits/Keccak-simple.c"
  $2104 = $2103; //@line 259 "mcbits/Keccak-simple.c"
  $2105 = HEAP32[$2104>>2]|0; //@line 259 "mcbits/Keccak-simple.c"
  $2106 = $2102 ^ -1; //@line 259 "mcbits/Keccak-simple.c"
  $2107 = $2105 ^ -1; //@line 259 "mcbits/Keccak-simple.c"
  $2108 = $32; //@line 259 "mcbits/Keccak-simple.c"
  $2109 = $2108; //@line 259 "mcbits/Keccak-simple.c"
  $2110 = HEAP32[$2109>>2]|0; //@line 259 "mcbits/Keccak-simple.c"
  $2111 = (($2108) + 4)|0; //@line 259 "mcbits/Keccak-simple.c"
  $2112 = $2111; //@line 259 "mcbits/Keccak-simple.c"
  $2113 = HEAP32[$2112>>2]|0; //@line 259 "mcbits/Keccak-simple.c"
  $2114 = $2106 & $2110; //@line 259 "mcbits/Keccak-simple.c"
  $2115 = $2107 & $2113; //@line 259 "mcbits/Keccak-simple.c"
  $2116 = $2096 ^ $2114; //@line 259 "mcbits/Keccak-simple.c"
  $2117 = $2099 ^ $2115; //@line 259 "mcbits/Keccak-simple.c"
  $2118 = $60; //@line 259 "mcbits/Keccak-simple.c"
  $2119 = $2118; //@line 259 "mcbits/Keccak-simple.c"
  HEAP32[$2119>>2] = $2116; //@line 259 "mcbits/Keccak-simple.c"
  $2120 = (($2118) + 4)|0; //@line 259 "mcbits/Keccak-simple.c"
  $2121 = $2120; //@line 259 "mcbits/Keccak-simple.c"
  HEAP32[$2121>>2] = $2117; //@line 259 "mcbits/Keccak-simple.c"
  $2122 = $38; //@line 261 "mcbits/Keccak-simple.c"
  $2123 = $2122; //@line 261 "mcbits/Keccak-simple.c"
  $2124 = HEAP32[$2123>>2]|0; //@line 261 "mcbits/Keccak-simple.c"
  $2125 = (($2122) + 4)|0; //@line 261 "mcbits/Keccak-simple.c"
  $2126 = $2125; //@line 261 "mcbits/Keccak-simple.c"
  $2127 = HEAP32[$2126>>2]|0; //@line 261 "mcbits/Keccak-simple.c"
  $2128 = $8; //@line 261 "mcbits/Keccak-simple.c"
  $2129 = $2128; //@line 261 "mcbits/Keccak-simple.c"
  $2130 = HEAP32[$2129>>2]|0; //@line 261 "mcbits/Keccak-simple.c"
  $2131 = (($2128) + 4)|0; //@line 261 "mcbits/Keccak-simple.c"
  $2132 = $2131; //@line 261 "mcbits/Keccak-simple.c"
  $2133 = HEAP32[$2132>>2]|0; //@line 261 "mcbits/Keccak-simple.c"
  $2134 = $2130 ^ $2124; //@line 261 "mcbits/Keccak-simple.c"
  $2135 = $2133 ^ $2127; //@line 261 "mcbits/Keccak-simple.c"
  $2136 = $8; //@line 261 "mcbits/Keccak-simple.c"
  $2137 = $2136; //@line 261 "mcbits/Keccak-simple.c"
  HEAP32[$2137>>2] = $2134; //@line 261 "mcbits/Keccak-simple.c"
  $2138 = (($2136) + 4)|0; //@line 261 "mcbits/Keccak-simple.c"
  $2139 = $2138; //@line 261 "mcbits/Keccak-simple.c"
  HEAP32[$2139>>2] = $2135; //@line 261 "mcbits/Keccak-simple.c"
  $2140 = $8; //@line 262 "mcbits/Keccak-simple.c"
  $2141 = $2140; //@line 262 "mcbits/Keccak-simple.c"
  $2142 = HEAP32[$2141>>2]|0; //@line 262 "mcbits/Keccak-simple.c"
  $2143 = (($2140) + 4)|0; //@line 262 "mcbits/Keccak-simple.c"
  $2144 = $2143; //@line 262 "mcbits/Keccak-simple.c"
  $2145 = HEAP32[$2144>>2]|0; //@line 262 "mcbits/Keccak-simple.c"
  $2146 = (_bitshift64Shl(($2142|0),($2145|0),62)|0); //@line 262 "mcbits/Keccak-simple.c"
  $2147 = tempRet0; //@line 262 "mcbits/Keccak-simple.c"
  $2148 = $8; //@line 262 "mcbits/Keccak-simple.c"
  $2149 = $2148; //@line 262 "mcbits/Keccak-simple.c"
  $2150 = HEAP32[$2149>>2]|0; //@line 262 "mcbits/Keccak-simple.c"
  $2151 = (($2148) + 4)|0; //@line 262 "mcbits/Keccak-simple.c"
  $2152 = $2151; //@line 262 "mcbits/Keccak-simple.c"
  $2153 = HEAP32[$2152>>2]|0; //@line 262 "mcbits/Keccak-simple.c"
  $2154 = (_bitshift64Lshr(($2150|0),($2153|0),2)|0); //@line 262 "mcbits/Keccak-simple.c"
  $2155 = tempRet0; //@line 262 "mcbits/Keccak-simple.c"
  $2156 = $2146 ^ $2154; //@line 262 "mcbits/Keccak-simple.c"
  $2157 = $2147 ^ $2155; //@line 262 "mcbits/Keccak-simple.c"
  $2158 = $31; //@line 262 "mcbits/Keccak-simple.c"
  $2159 = $2158; //@line 262 "mcbits/Keccak-simple.c"
  HEAP32[$2159>>2] = $2156; //@line 262 "mcbits/Keccak-simple.c"
  $2160 = (($2158) + 4)|0; //@line 262 "mcbits/Keccak-simple.c"
  $2161 = $2160; //@line 262 "mcbits/Keccak-simple.c"
  HEAP32[$2161>>2] = $2157; //@line 262 "mcbits/Keccak-simple.c"
  $2162 = $39; //@line 263 "mcbits/Keccak-simple.c"
  $2163 = $2162; //@line 263 "mcbits/Keccak-simple.c"
  $2164 = HEAP32[$2163>>2]|0; //@line 263 "mcbits/Keccak-simple.c"
  $2165 = (($2162) + 4)|0; //@line 263 "mcbits/Keccak-simple.c"
  $2166 = $2165; //@line 263 "mcbits/Keccak-simple.c"
  $2167 = HEAP32[$2166>>2]|0; //@line 263 "mcbits/Keccak-simple.c"
  $2168 = $14; //@line 263 "mcbits/Keccak-simple.c"
  $2169 = $2168; //@line 263 "mcbits/Keccak-simple.c"
  $2170 = HEAP32[$2169>>2]|0; //@line 263 "mcbits/Keccak-simple.c"
  $2171 = (($2168) + 4)|0; //@line 263 "mcbits/Keccak-simple.c"
  $2172 = $2171; //@line 263 "mcbits/Keccak-simple.c"
  $2173 = HEAP32[$2172>>2]|0; //@line 263 "mcbits/Keccak-simple.c"
  $2174 = $2170 ^ $2164; //@line 263 "mcbits/Keccak-simple.c"
  $2175 = $2173 ^ $2167; //@line 263 "mcbits/Keccak-simple.c"
  $2176 = $14; //@line 263 "mcbits/Keccak-simple.c"
  $2177 = $2176; //@line 263 "mcbits/Keccak-simple.c"
  HEAP32[$2177>>2] = $2174; //@line 263 "mcbits/Keccak-simple.c"
  $2178 = (($2176) + 4)|0; //@line 263 "mcbits/Keccak-simple.c"
  $2179 = $2178; //@line 263 "mcbits/Keccak-simple.c"
  HEAP32[$2179>>2] = $2175; //@line 263 "mcbits/Keccak-simple.c"
  $2180 = $14; //@line 264 "mcbits/Keccak-simple.c"
  $2181 = $2180; //@line 264 "mcbits/Keccak-simple.c"
  $2182 = HEAP32[$2181>>2]|0; //@line 264 "mcbits/Keccak-simple.c"
  $2183 = (($2180) + 4)|0; //@line 264 "mcbits/Keccak-simple.c"
  $2184 = $2183; //@line 264 "mcbits/Keccak-simple.c"
  $2185 = HEAP32[$2184>>2]|0; //@line 264 "mcbits/Keccak-simple.c"
  $2186 = (_bitshift64Shl(($2182|0),($2185|0),55)|0); //@line 264 "mcbits/Keccak-simple.c"
  $2187 = tempRet0; //@line 264 "mcbits/Keccak-simple.c"
  $2188 = $14; //@line 264 "mcbits/Keccak-simple.c"
  $2189 = $2188; //@line 264 "mcbits/Keccak-simple.c"
  $2190 = HEAP32[$2189>>2]|0; //@line 264 "mcbits/Keccak-simple.c"
  $2191 = (($2188) + 4)|0; //@line 264 "mcbits/Keccak-simple.c"
  $2192 = $2191; //@line 264 "mcbits/Keccak-simple.c"
  $2193 = HEAP32[$2192>>2]|0; //@line 264 "mcbits/Keccak-simple.c"
  $2194 = (_bitshift64Lshr(($2190|0),($2193|0),9)|0); //@line 264 "mcbits/Keccak-simple.c"
  $2195 = tempRet0; //@line 264 "mcbits/Keccak-simple.c"
  $2196 = $2186 ^ $2194; //@line 264 "mcbits/Keccak-simple.c"
  $2197 = $2187 ^ $2195; //@line 264 "mcbits/Keccak-simple.c"
  $2198 = $32; //@line 264 "mcbits/Keccak-simple.c"
  $2199 = $2198; //@line 264 "mcbits/Keccak-simple.c"
  HEAP32[$2199>>2] = $2196; //@line 264 "mcbits/Keccak-simple.c"
  $2200 = (($2198) + 4)|0; //@line 264 "mcbits/Keccak-simple.c"
  $2201 = $2200; //@line 264 "mcbits/Keccak-simple.c"
  HEAP32[$2201>>2] = $2197; //@line 264 "mcbits/Keccak-simple.c"
  $2202 = $40; //@line 265 "mcbits/Keccak-simple.c"
  $2203 = $2202; //@line 265 "mcbits/Keccak-simple.c"
  $2204 = HEAP32[$2203>>2]|0; //@line 265 "mcbits/Keccak-simple.c"
  $2205 = (($2202) + 4)|0; //@line 265 "mcbits/Keccak-simple.c"
  $2206 = $2205; //@line 265 "mcbits/Keccak-simple.c"
  $2207 = HEAP32[$2206>>2]|0; //@line 265 "mcbits/Keccak-simple.c"
  $2208 = $20; //@line 265 "mcbits/Keccak-simple.c"
  $2209 = $2208; //@line 265 "mcbits/Keccak-simple.c"
  $2210 = HEAP32[$2209>>2]|0; //@line 265 "mcbits/Keccak-simple.c"
  $2211 = (($2208) + 4)|0; //@line 265 "mcbits/Keccak-simple.c"
  $2212 = $2211; //@line 265 "mcbits/Keccak-simple.c"
  $2213 = HEAP32[$2212>>2]|0; //@line 265 "mcbits/Keccak-simple.c"
  $2214 = $2210 ^ $2204; //@line 265 "mcbits/Keccak-simple.c"
  $2215 = $2213 ^ $2207; //@line 265 "mcbits/Keccak-simple.c"
  $2216 = $20; //@line 265 "mcbits/Keccak-simple.c"
  $2217 = $2216; //@line 265 "mcbits/Keccak-simple.c"
  HEAP32[$2217>>2] = $2214; //@line 265 "mcbits/Keccak-simple.c"
  $2218 = (($2216) + 4)|0; //@line 265 "mcbits/Keccak-simple.c"
  $2219 = $2218; //@line 265 "mcbits/Keccak-simple.c"
  HEAP32[$2219>>2] = $2215; //@line 265 "mcbits/Keccak-simple.c"
  $2220 = $20; //@line 266 "mcbits/Keccak-simple.c"
  $2221 = $2220; //@line 266 "mcbits/Keccak-simple.c"
  $2222 = HEAP32[$2221>>2]|0; //@line 266 "mcbits/Keccak-simple.c"
  $2223 = (($2220) + 4)|0; //@line 266 "mcbits/Keccak-simple.c"
  $2224 = $2223; //@line 266 "mcbits/Keccak-simple.c"
  $2225 = HEAP32[$2224>>2]|0; //@line 266 "mcbits/Keccak-simple.c"
  $2226 = (_bitshift64Shl(($2222|0),($2225|0),39)|0); //@line 266 "mcbits/Keccak-simple.c"
  $2227 = tempRet0; //@line 266 "mcbits/Keccak-simple.c"
  $2228 = $20; //@line 266 "mcbits/Keccak-simple.c"
  $2229 = $2228; //@line 266 "mcbits/Keccak-simple.c"
  $2230 = HEAP32[$2229>>2]|0; //@line 266 "mcbits/Keccak-simple.c"
  $2231 = (($2228) + 4)|0; //@line 266 "mcbits/Keccak-simple.c"
  $2232 = $2231; //@line 266 "mcbits/Keccak-simple.c"
  $2233 = HEAP32[$2232>>2]|0; //@line 266 "mcbits/Keccak-simple.c"
  $2234 = (_bitshift64Lshr(($2230|0),($2233|0),25)|0); //@line 266 "mcbits/Keccak-simple.c"
  $2235 = tempRet0; //@line 266 "mcbits/Keccak-simple.c"
  $2236 = $2226 ^ $2234; //@line 266 "mcbits/Keccak-simple.c"
  $2237 = $2227 ^ $2235; //@line 266 "mcbits/Keccak-simple.c"
  $2238 = $33; //@line 266 "mcbits/Keccak-simple.c"
  $2239 = $2238; //@line 266 "mcbits/Keccak-simple.c"
  HEAP32[$2239>>2] = $2236; //@line 266 "mcbits/Keccak-simple.c"
  $2240 = (($2238) + 4)|0; //@line 266 "mcbits/Keccak-simple.c"
  $2241 = $2240; //@line 266 "mcbits/Keccak-simple.c"
  HEAP32[$2241>>2] = $2237; //@line 266 "mcbits/Keccak-simple.c"
  $2242 = $36; //@line 267 "mcbits/Keccak-simple.c"
  $2243 = $2242; //@line 267 "mcbits/Keccak-simple.c"
  $2244 = HEAP32[$2243>>2]|0; //@line 267 "mcbits/Keccak-simple.c"
  $2245 = (($2242) + 4)|0; //@line 267 "mcbits/Keccak-simple.c"
  $2246 = $2245; //@line 267 "mcbits/Keccak-simple.c"
  $2247 = HEAP32[$2246>>2]|0; //@line 267 "mcbits/Keccak-simple.c"
  $2248 = $21; //@line 267 "mcbits/Keccak-simple.c"
  $2249 = $2248; //@line 267 "mcbits/Keccak-simple.c"
  $2250 = HEAP32[$2249>>2]|0; //@line 267 "mcbits/Keccak-simple.c"
  $2251 = (($2248) + 4)|0; //@line 267 "mcbits/Keccak-simple.c"
  $2252 = $2251; //@line 267 "mcbits/Keccak-simple.c"
  $2253 = HEAP32[$2252>>2]|0; //@line 267 "mcbits/Keccak-simple.c"
  $2254 = $2250 ^ $2244; //@line 267 "mcbits/Keccak-simple.c"
  $2255 = $2253 ^ $2247; //@line 267 "mcbits/Keccak-simple.c"
  $2256 = $21; //@line 267 "mcbits/Keccak-simple.c"
  $2257 = $2256; //@line 267 "mcbits/Keccak-simple.c"
  HEAP32[$2257>>2] = $2254; //@line 267 "mcbits/Keccak-simple.c"
  $2258 = (($2256) + 4)|0; //@line 267 "mcbits/Keccak-simple.c"
  $2259 = $2258; //@line 267 "mcbits/Keccak-simple.c"
  HEAP32[$2259>>2] = $2255; //@line 267 "mcbits/Keccak-simple.c"
  $2260 = $21; //@line 268 "mcbits/Keccak-simple.c"
  $2261 = $2260; //@line 268 "mcbits/Keccak-simple.c"
  $2262 = HEAP32[$2261>>2]|0; //@line 268 "mcbits/Keccak-simple.c"
  $2263 = (($2260) + 4)|0; //@line 268 "mcbits/Keccak-simple.c"
  $2264 = $2263; //@line 268 "mcbits/Keccak-simple.c"
  $2265 = HEAP32[$2264>>2]|0; //@line 268 "mcbits/Keccak-simple.c"
  $2266 = (_bitshift64Shl(($2262|0),($2265|0),41)|0); //@line 268 "mcbits/Keccak-simple.c"
  $2267 = tempRet0; //@line 268 "mcbits/Keccak-simple.c"
  $2268 = $21; //@line 268 "mcbits/Keccak-simple.c"
  $2269 = $2268; //@line 268 "mcbits/Keccak-simple.c"
  $2270 = HEAP32[$2269>>2]|0; //@line 268 "mcbits/Keccak-simple.c"
  $2271 = (($2268) + 4)|0; //@line 268 "mcbits/Keccak-simple.c"
  $2272 = $2271; //@line 268 "mcbits/Keccak-simple.c"
  $2273 = HEAP32[$2272>>2]|0; //@line 268 "mcbits/Keccak-simple.c"
  $2274 = (_bitshift64Lshr(($2270|0),($2273|0),23)|0); //@line 268 "mcbits/Keccak-simple.c"
  $2275 = tempRet0; //@line 268 "mcbits/Keccak-simple.c"
  $2276 = $2266 ^ $2274; //@line 268 "mcbits/Keccak-simple.c"
  $2277 = $2267 ^ $2275; //@line 268 "mcbits/Keccak-simple.c"
  $2278 = $34; //@line 268 "mcbits/Keccak-simple.c"
  $2279 = $2278; //@line 268 "mcbits/Keccak-simple.c"
  HEAP32[$2279>>2] = $2276; //@line 268 "mcbits/Keccak-simple.c"
  $2280 = (($2278) + 4)|0; //@line 268 "mcbits/Keccak-simple.c"
  $2281 = $2280; //@line 268 "mcbits/Keccak-simple.c"
  HEAP32[$2281>>2] = $2277; //@line 268 "mcbits/Keccak-simple.c"
  $2282 = $37; //@line 269 "mcbits/Keccak-simple.c"
  $2283 = $2282; //@line 269 "mcbits/Keccak-simple.c"
  $2284 = HEAP32[$2283>>2]|0; //@line 269 "mcbits/Keccak-simple.c"
  $2285 = (($2282) + 4)|0; //@line 269 "mcbits/Keccak-simple.c"
  $2286 = $2285; //@line 269 "mcbits/Keccak-simple.c"
  $2287 = HEAP32[$2286>>2]|0; //@line 269 "mcbits/Keccak-simple.c"
  $2288 = $27; //@line 269 "mcbits/Keccak-simple.c"
  $2289 = $2288; //@line 269 "mcbits/Keccak-simple.c"
  $2290 = HEAP32[$2289>>2]|0; //@line 269 "mcbits/Keccak-simple.c"
  $2291 = (($2288) + 4)|0; //@line 269 "mcbits/Keccak-simple.c"
  $2292 = $2291; //@line 269 "mcbits/Keccak-simple.c"
  $2293 = HEAP32[$2292>>2]|0; //@line 269 "mcbits/Keccak-simple.c"
  $2294 = $2290 ^ $2284; //@line 269 "mcbits/Keccak-simple.c"
  $2295 = $2293 ^ $2287; //@line 269 "mcbits/Keccak-simple.c"
  $2296 = $27; //@line 269 "mcbits/Keccak-simple.c"
  $2297 = $2296; //@line 269 "mcbits/Keccak-simple.c"
  HEAP32[$2297>>2] = $2294; //@line 269 "mcbits/Keccak-simple.c"
  $2298 = (($2296) + 4)|0; //@line 269 "mcbits/Keccak-simple.c"
  $2299 = $2298; //@line 269 "mcbits/Keccak-simple.c"
  HEAP32[$2299>>2] = $2295; //@line 269 "mcbits/Keccak-simple.c"
  $2300 = $27; //@line 270 "mcbits/Keccak-simple.c"
  $2301 = $2300; //@line 270 "mcbits/Keccak-simple.c"
  $2302 = HEAP32[$2301>>2]|0; //@line 270 "mcbits/Keccak-simple.c"
  $2303 = (($2300) + 4)|0; //@line 270 "mcbits/Keccak-simple.c"
  $2304 = $2303; //@line 270 "mcbits/Keccak-simple.c"
  $2305 = HEAP32[$2304>>2]|0; //@line 270 "mcbits/Keccak-simple.c"
  $2306 = (_bitshift64Shl(($2302|0),($2305|0),2)|0); //@line 270 "mcbits/Keccak-simple.c"
  $2307 = tempRet0; //@line 270 "mcbits/Keccak-simple.c"
  $2308 = $27; //@line 270 "mcbits/Keccak-simple.c"
  $2309 = $2308; //@line 270 "mcbits/Keccak-simple.c"
  $2310 = HEAP32[$2309>>2]|0; //@line 270 "mcbits/Keccak-simple.c"
  $2311 = (($2308) + 4)|0; //@line 270 "mcbits/Keccak-simple.c"
  $2312 = $2311; //@line 270 "mcbits/Keccak-simple.c"
  $2313 = HEAP32[$2312>>2]|0; //@line 270 "mcbits/Keccak-simple.c"
  $2314 = (_bitshift64Lshr(($2310|0),($2313|0),62)|0); //@line 270 "mcbits/Keccak-simple.c"
  $2315 = tempRet0; //@line 270 "mcbits/Keccak-simple.c"
  $2316 = $2306 ^ $2314; //@line 270 "mcbits/Keccak-simple.c"
  $2317 = $2307 ^ $2315; //@line 270 "mcbits/Keccak-simple.c"
  $2318 = $35; //@line 270 "mcbits/Keccak-simple.c"
  $2319 = $2318; //@line 270 "mcbits/Keccak-simple.c"
  HEAP32[$2319>>2] = $2316; //@line 270 "mcbits/Keccak-simple.c"
  $2320 = (($2318) + 4)|0; //@line 270 "mcbits/Keccak-simple.c"
  $2321 = $2320; //@line 270 "mcbits/Keccak-simple.c"
  HEAP32[$2321>>2] = $2317; //@line 270 "mcbits/Keccak-simple.c"
  $2322 = $31; //@line 271 "mcbits/Keccak-simple.c"
  $2323 = $2322; //@line 271 "mcbits/Keccak-simple.c"
  $2324 = HEAP32[$2323>>2]|0; //@line 271 "mcbits/Keccak-simple.c"
  $2325 = (($2322) + 4)|0; //@line 271 "mcbits/Keccak-simple.c"
  $2326 = $2325; //@line 271 "mcbits/Keccak-simple.c"
  $2327 = HEAP32[$2326>>2]|0; //@line 271 "mcbits/Keccak-simple.c"
  $2328 = $32; //@line 271 "mcbits/Keccak-simple.c"
  $2329 = $2328; //@line 271 "mcbits/Keccak-simple.c"
  $2330 = HEAP32[$2329>>2]|0; //@line 271 "mcbits/Keccak-simple.c"
  $2331 = (($2328) + 4)|0; //@line 271 "mcbits/Keccak-simple.c"
  $2332 = $2331; //@line 271 "mcbits/Keccak-simple.c"
  $2333 = HEAP32[$2332>>2]|0; //@line 271 "mcbits/Keccak-simple.c"
  $2334 = $2330 ^ -1; //@line 271 "mcbits/Keccak-simple.c"
  $2335 = $2333 ^ -1; //@line 271 "mcbits/Keccak-simple.c"
  $2336 = $33; //@line 271 "mcbits/Keccak-simple.c"
  $2337 = $2336; //@line 271 "mcbits/Keccak-simple.c"
  $2338 = HEAP32[$2337>>2]|0; //@line 271 "mcbits/Keccak-simple.c"
  $2339 = (($2336) + 4)|0; //@line 271 "mcbits/Keccak-simple.c"
  $2340 = $2339; //@line 271 "mcbits/Keccak-simple.c"
  $2341 = HEAP32[$2340>>2]|0; //@line 271 "mcbits/Keccak-simple.c"
  $2342 = $2334 & $2338; //@line 271 "mcbits/Keccak-simple.c"
  $2343 = $2335 & $2341; //@line 271 "mcbits/Keccak-simple.c"
  $2344 = $2324 ^ $2342; //@line 271 "mcbits/Keccak-simple.c"
  $2345 = $2327 ^ $2343; //@line 271 "mcbits/Keccak-simple.c"
  $2346 = $61; //@line 271 "mcbits/Keccak-simple.c"
  $2347 = $2346; //@line 271 "mcbits/Keccak-simple.c"
  HEAP32[$2347>>2] = $2344; //@line 271 "mcbits/Keccak-simple.c"
  $2348 = (($2346) + 4)|0; //@line 271 "mcbits/Keccak-simple.c"
  $2349 = $2348; //@line 271 "mcbits/Keccak-simple.c"
  HEAP32[$2349>>2] = $2345; //@line 271 "mcbits/Keccak-simple.c"
  $2350 = $32; //@line 272 "mcbits/Keccak-simple.c"
  $2351 = $2350; //@line 272 "mcbits/Keccak-simple.c"
  $2352 = HEAP32[$2351>>2]|0; //@line 272 "mcbits/Keccak-simple.c"
  $2353 = (($2350) + 4)|0; //@line 272 "mcbits/Keccak-simple.c"
  $2354 = $2353; //@line 272 "mcbits/Keccak-simple.c"
  $2355 = HEAP32[$2354>>2]|0; //@line 272 "mcbits/Keccak-simple.c"
  $2356 = $33; //@line 272 "mcbits/Keccak-simple.c"
  $2357 = $2356; //@line 272 "mcbits/Keccak-simple.c"
  $2358 = HEAP32[$2357>>2]|0; //@line 272 "mcbits/Keccak-simple.c"
  $2359 = (($2356) + 4)|0; //@line 272 "mcbits/Keccak-simple.c"
  $2360 = $2359; //@line 272 "mcbits/Keccak-simple.c"
  $2361 = HEAP32[$2360>>2]|0; //@line 272 "mcbits/Keccak-simple.c"
  $2362 = $2358 ^ -1; //@line 272 "mcbits/Keccak-simple.c"
  $2363 = $2361 ^ -1; //@line 272 "mcbits/Keccak-simple.c"
  $2364 = $34; //@line 272 "mcbits/Keccak-simple.c"
  $2365 = $2364; //@line 272 "mcbits/Keccak-simple.c"
  $2366 = HEAP32[$2365>>2]|0; //@line 272 "mcbits/Keccak-simple.c"
  $2367 = (($2364) + 4)|0; //@line 272 "mcbits/Keccak-simple.c"
  $2368 = $2367; //@line 272 "mcbits/Keccak-simple.c"
  $2369 = HEAP32[$2368>>2]|0; //@line 272 "mcbits/Keccak-simple.c"
  $2370 = $2362 & $2366; //@line 272 "mcbits/Keccak-simple.c"
  $2371 = $2363 & $2369; //@line 272 "mcbits/Keccak-simple.c"
  $2372 = $2352 ^ $2370; //@line 272 "mcbits/Keccak-simple.c"
  $2373 = $2355 ^ $2371; //@line 272 "mcbits/Keccak-simple.c"
  $2374 = $62; //@line 272 "mcbits/Keccak-simple.c"
  $2375 = $2374; //@line 272 "mcbits/Keccak-simple.c"
  HEAP32[$2375>>2] = $2372; //@line 272 "mcbits/Keccak-simple.c"
  $2376 = (($2374) + 4)|0; //@line 272 "mcbits/Keccak-simple.c"
  $2377 = $2376; //@line 272 "mcbits/Keccak-simple.c"
  HEAP32[$2377>>2] = $2373; //@line 272 "mcbits/Keccak-simple.c"
  $2378 = $33; //@line 273 "mcbits/Keccak-simple.c"
  $2379 = $2378; //@line 273 "mcbits/Keccak-simple.c"
  $2380 = HEAP32[$2379>>2]|0; //@line 273 "mcbits/Keccak-simple.c"
  $2381 = (($2378) + 4)|0; //@line 273 "mcbits/Keccak-simple.c"
  $2382 = $2381; //@line 273 "mcbits/Keccak-simple.c"
  $2383 = HEAP32[$2382>>2]|0; //@line 273 "mcbits/Keccak-simple.c"
  $2384 = $34; //@line 273 "mcbits/Keccak-simple.c"
  $2385 = $2384; //@line 273 "mcbits/Keccak-simple.c"
  $2386 = HEAP32[$2385>>2]|0; //@line 273 "mcbits/Keccak-simple.c"
  $2387 = (($2384) + 4)|0; //@line 273 "mcbits/Keccak-simple.c"
  $2388 = $2387; //@line 273 "mcbits/Keccak-simple.c"
  $2389 = HEAP32[$2388>>2]|0; //@line 273 "mcbits/Keccak-simple.c"
  $2390 = $2386 ^ -1; //@line 273 "mcbits/Keccak-simple.c"
  $2391 = $2389 ^ -1; //@line 273 "mcbits/Keccak-simple.c"
  $2392 = $35; //@line 273 "mcbits/Keccak-simple.c"
  $2393 = $2392; //@line 273 "mcbits/Keccak-simple.c"
  $2394 = HEAP32[$2393>>2]|0; //@line 273 "mcbits/Keccak-simple.c"
  $2395 = (($2392) + 4)|0; //@line 273 "mcbits/Keccak-simple.c"
  $2396 = $2395; //@line 273 "mcbits/Keccak-simple.c"
  $2397 = HEAP32[$2396>>2]|0; //@line 273 "mcbits/Keccak-simple.c"
  $2398 = $2390 & $2394; //@line 273 "mcbits/Keccak-simple.c"
  $2399 = $2391 & $2397; //@line 273 "mcbits/Keccak-simple.c"
  $2400 = $2380 ^ $2398; //@line 273 "mcbits/Keccak-simple.c"
  $2401 = $2383 ^ $2399; //@line 273 "mcbits/Keccak-simple.c"
  $2402 = $63; //@line 273 "mcbits/Keccak-simple.c"
  $2403 = $2402; //@line 273 "mcbits/Keccak-simple.c"
  HEAP32[$2403>>2] = $2400; //@line 273 "mcbits/Keccak-simple.c"
  $2404 = (($2402) + 4)|0; //@line 273 "mcbits/Keccak-simple.c"
  $2405 = $2404; //@line 273 "mcbits/Keccak-simple.c"
  HEAP32[$2405>>2] = $2401; //@line 273 "mcbits/Keccak-simple.c"
  $2406 = $34; //@line 274 "mcbits/Keccak-simple.c"
  $2407 = $2406; //@line 274 "mcbits/Keccak-simple.c"
  $2408 = HEAP32[$2407>>2]|0; //@line 274 "mcbits/Keccak-simple.c"
  $2409 = (($2406) + 4)|0; //@line 274 "mcbits/Keccak-simple.c"
  $2410 = $2409; //@line 274 "mcbits/Keccak-simple.c"
  $2411 = HEAP32[$2410>>2]|0; //@line 274 "mcbits/Keccak-simple.c"
  $2412 = $35; //@line 274 "mcbits/Keccak-simple.c"
  $2413 = $2412; //@line 274 "mcbits/Keccak-simple.c"
  $2414 = HEAP32[$2413>>2]|0; //@line 274 "mcbits/Keccak-simple.c"
  $2415 = (($2412) + 4)|0; //@line 274 "mcbits/Keccak-simple.c"
  $2416 = $2415; //@line 274 "mcbits/Keccak-simple.c"
  $2417 = HEAP32[$2416>>2]|0; //@line 274 "mcbits/Keccak-simple.c"
  $2418 = $2414 ^ -1; //@line 274 "mcbits/Keccak-simple.c"
  $2419 = $2417 ^ -1; //@line 274 "mcbits/Keccak-simple.c"
  $2420 = $31; //@line 274 "mcbits/Keccak-simple.c"
  $2421 = $2420; //@line 274 "mcbits/Keccak-simple.c"
  $2422 = HEAP32[$2421>>2]|0; //@line 274 "mcbits/Keccak-simple.c"
  $2423 = (($2420) + 4)|0; //@line 274 "mcbits/Keccak-simple.c"
  $2424 = $2423; //@line 274 "mcbits/Keccak-simple.c"
  $2425 = HEAP32[$2424>>2]|0; //@line 274 "mcbits/Keccak-simple.c"
  $2426 = $2418 & $2422; //@line 274 "mcbits/Keccak-simple.c"
  $2427 = $2419 & $2425; //@line 274 "mcbits/Keccak-simple.c"
  $2428 = $2408 ^ $2426; //@line 274 "mcbits/Keccak-simple.c"
  $2429 = $2411 ^ $2427; //@line 274 "mcbits/Keccak-simple.c"
  $2430 = $64; //@line 274 "mcbits/Keccak-simple.c"
  $2431 = $2430; //@line 274 "mcbits/Keccak-simple.c"
  HEAP32[$2431>>2] = $2428; //@line 274 "mcbits/Keccak-simple.c"
  $2432 = (($2430) + 4)|0; //@line 274 "mcbits/Keccak-simple.c"
  $2433 = $2432; //@line 274 "mcbits/Keccak-simple.c"
  HEAP32[$2433>>2] = $2429; //@line 274 "mcbits/Keccak-simple.c"
  $2434 = $35; //@line 275 "mcbits/Keccak-simple.c"
  $2435 = $2434; //@line 275 "mcbits/Keccak-simple.c"
  $2436 = HEAP32[$2435>>2]|0; //@line 275 "mcbits/Keccak-simple.c"
  $2437 = (($2434) + 4)|0; //@line 275 "mcbits/Keccak-simple.c"
  $2438 = $2437; //@line 275 "mcbits/Keccak-simple.c"
  $2439 = HEAP32[$2438>>2]|0; //@line 275 "mcbits/Keccak-simple.c"
  $2440 = $31; //@line 275 "mcbits/Keccak-simple.c"
  $2441 = $2440; //@line 275 "mcbits/Keccak-simple.c"
  $2442 = HEAP32[$2441>>2]|0; //@line 275 "mcbits/Keccak-simple.c"
  $2443 = (($2440) + 4)|0; //@line 275 "mcbits/Keccak-simple.c"
  $2444 = $2443; //@line 275 "mcbits/Keccak-simple.c"
  $2445 = HEAP32[$2444>>2]|0; //@line 275 "mcbits/Keccak-simple.c"
  $2446 = $2442 ^ -1; //@line 275 "mcbits/Keccak-simple.c"
  $2447 = $2445 ^ -1; //@line 275 "mcbits/Keccak-simple.c"
  $2448 = $32; //@line 275 "mcbits/Keccak-simple.c"
  $2449 = $2448; //@line 275 "mcbits/Keccak-simple.c"
  $2450 = HEAP32[$2449>>2]|0; //@line 275 "mcbits/Keccak-simple.c"
  $2451 = (($2448) + 4)|0; //@line 275 "mcbits/Keccak-simple.c"
  $2452 = $2451; //@line 275 "mcbits/Keccak-simple.c"
  $2453 = HEAP32[$2452>>2]|0; //@line 275 "mcbits/Keccak-simple.c"
  $2454 = $2446 & $2450; //@line 275 "mcbits/Keccak-simple.c"
  $2455 = $2447 & $2453; //@line 275 "mcbits/Keccak-simple.c"
  $2456 = $2436 ^ $2454; //@line 275 "mcbits/Keccak-simple.c"
  $2457 = $2439 ^ $2455; //@line 275 "mcbits/Keccak-simple.c"
  $2458 = $65; //@line 275 "mcbits/Keccak-simple.c"
  $2459 = $2458; //@line 275 "mcbits/Keccak-simple.c"
  HEAP32[$2459>>2] = $2456; //@line 275 "mcbits/Keccak-simple.c"
  $2460 = (($2458) + 4)|0; //@line 275 "mcbits/Keccak-simple.c"
  $2461 = $2460; //@line 275 "mcbits/Keccak-simple.c"
  HEAP32[$2461>>2] = $2457; //@line 275 "mcbits/Keccak-simple.c"
  $2462 = $41; //@line 278 "mcbits/Keccak-simple.c"
  $2463 = $2462; //@line 278 "mcbits/Keccak-simple.c"
  $2464 = HEAP32[$2463>>2]|0; //@line 278 "mcbits/Keccak-simple.c"
  $2465 = (($2462) + 4)|0; //@line 278 "mcbits/Keccak-simple.c"
  $2466 = $2465; //@line 278 "mcbits/Keccak-simple.c"
  $2467 = HEAP32[$2466>>2]|0; //@line 278 "mcbits/Keccak-simple.c"
  $2468 = $46; //@line 278 "mcbits/Keccak-simple.c"
  $2469 = $2468; //@line 278 "mcbits/Keccak-simple.c"
  $2470 = HEAP32[$2469>>2]|0; //@line 278 "mcbits/Keccak-simple.c"
  $2471 = (($2468) + 4)|0; //@line 278 "mcbits/Keccak-simple.c"
  $2472 = $2471; //@line 278 "mcbits/Keccak-simple.c"
  $2473 = HEAP32[$2472>>2]|0; //@line 278 "mcbits/Keccak-simple.c"
  $2474 = $2464 ^ $2470; //@line 278 "mcbits/Keccak-simple.c"
  $2475 = $2467 ^ $2473; //@line 278 "mcbits/Keccak-simple.c"
  $2476 = $51; //@line 278 "mcbits/Keccak-simple.c"
  $2477 = $2476; //@line 278 "mcbits/Keccak-simple.c"
  $2478 = HEAP32[$2477>>2]|0; //@line 278 "mcbits/Keccak-simple.c"
  $2479 = (($2476) + 4)|0; //@line 278 "mcbits/Keccak-simple.c"
  $2480 = $2479; //@line 278 "mcbits/Keccak-simple.c"
  $2481 = HEAP32[$2480>>2]|0; //@line 278 "mcbits/Keccak-simple.c"
  $2482 = $2474 ^ $2478; //@line 278 "mcbits/Keccak-simple.c"
  $2483 = $2475 ^ $2481; //@line 278 "mcbits/Keccak-simple.c"
  $2484 = $56; //@line 278 "mcbits/Keccak-simple.c"
  $2485 = $2484; //@line 278 "mcbits/Keccak-simple.c"
  $2486 = HEAP32[$2485>>2]|0; //@line 278 "mcbits/Keccak-simple.c"
  $2487 = (($2484) + 4)|0; //@line 278 "mcbits/Keccak-simple.c"
  $2488 = $2487; //@line 278 "mcbits/Keccak-simple.c"
  $2489 = HEAP32[$2488>>2]|0; //@line 278 "mcbits/Keccak-simple.c"
  $2490 = $2482 ^ $2486; //@line 278 "mcbits/Keccak-simple.c"
  $2491 = $2483 ^ $2489; //@line 278 "mcbits/Keccak-simple.c"
  $2492 = $61; //@line 278 "mcbits/Keccak-simple.c"
  $2493 = $2492; //@line 278 "mcbits/Keccak-simple.c"
  $2494 = HEAP32[$2493>>2]|0; //@line 278 "mcbits/Keccak-simple.c"
  $2495 = (($2492) + 4)|0; //@line 278 "mcbits/Keccak-simple.c"
  $2496 = $2495; //@line 278 "mcbits/Keccak-simple.c"
  $2497 = HEAP32[$2496>>2]|0; //@line 278 "mcbits/Keccak-simple.c"
  $2498 = $2490 ^ $2494; //@line 278 "mcbits/Keccak-simple.c"
  $2499 = $2491 ^ $2497; //@line 278 "mcbits/Keccak-simple.c"
  $2500 = $31; //@line 278 "mcbits/Keccak-simple.c"
  $2501 = $2500; //@line 278 "mcbits/Keccak-simple.c"
  HEAP32[$2501>>2] = $2498; //@line 278 "mcbits/Keccak-simple.c"
  $2502 = (($2500) + 4)|0; //@line 278 "mcbits/Keccak-simple.c"
  $2503 = $2502; //@line 278 "mcbits/Keccak-simple.c"
  HEAP32[$2503>>2] = $2499; //@line 278 "mcbits/Keccak-simple.c"
  $2504 = $42; //@line 279 "mcbits/Keccak-simple.c"
  $2505 = $2504; //@line 279 "mcbits/Keccak-simple.c"
  $2506 = HEAP32[$2505>>2]|0; //@line 279 "mcbits/Keccak-simple.c"
  $2507 = (($2504) + 4)|0; //@line 279 "mcbits/Keccak-simple.c"
  $2508 = $2507; //@line 279 "mcbits/Keccak-simple.c"
  $2509 = HEAP32[$2508>>2]|0; //@line 279 "mcbits/Keccak-simple.c"
  $2510 = $47; //@line 279 "mcbits/Keccak-simple.c"
  $2511 = $2510; //@line 279 "mcbits/Keccak-simple.c"
  $2512 = HEAP32[$2511>>2]|0; //@line 279 "mcbits/Keccak-simple.c"
  $2513 = (($2510) + 4)|0; //@line 279 "mcbits/Keccak-simple.c"
  $2514 = $2513; //@line 279 "mcbits/Keccak-simple.c"
  $2515 = HEAP32[$2514>>2]|0; //@line 279 "mcbits/Keccak-simple.c"
  $2516 = $2506 ^ $2512; //@line 279 "mcbits/Keccak-simple.c"
  $2517 = $2509 ^ $2515; //@line 279 "mcbits/Keccak-simple.c"
  $2518 = $52; //@line 279 "mcbits/Keccak-simple.c"
  $2519 = $2518; //@line 279 "mcbits/Keccak-simple.c"
  $2520 = HEAP32[$2519>>2]|0; //@line 279 "mcbits/Keccak-simple.c"
  $2521 = (($2518) + 4)|0; //@line 279 "mcbits/Keccak-simple.c"
  $2522 = $2521; //@line 279 "mcbits/Keccak-simple.c"
  $2523 = HEAP32[$2522>>2]|0; //@line 279 "mcbits/Keccak-simple.c"
  $2524 = $2516 ^ $2520; //@line 279 "mcbits/Keccak-simple.c"
  $2525 = $2517 ^ $2523; //@line 279 "mcbits/Keccak-simple.c"
  $2526 = $57; //@line 279 "mcbits/Keccak-simple.c"
  $2527 = $2526; //@line 279 "mcbits/Keccak-simple.c"
  $2528 = HEAP32[$2527>>2]|0; //@line 279 "mcbits/Keccak-simple.c"
  $2529 = (($2526) + 4)|0; //@line 279 "mcbits/Keccak-simple.c"
  $2530 = $2529; //@line 279 "mcbits/Keccak-simple.c"
  $2531 = HEAP32[$2530>>2]|0; //@line 279 "mcbits/Keccak-simple.c"
  $2532 = $2524 ^ $2528; //@line 279 "mcbits/Keccak-simple.c"
  $2533 = $2525 ^ $2531; //@line 279 "mcbits/Keccak-simple.c"
  $2534 = $62; //@line 279 "mcbits/Keccak-simple.c"
  $2535 = $2534; //@line 279 "mcbits/Keccak-simple.c"
  $2536 = HEAP32[$2535>>2]|0; //@line 279 "mcbits/Keccak-simple.c"
  $2537 = (($2534) + 4)|0; //@line 279 "mcbits/Keccak-simple.c"
  $2538 = $2537; //@line 279 "mcbits/Keccak-simple.c"
  $2539 = HEAP32[$2538>>2]|0; //@line 279 "mcbits/Keccak-simple.c"
  $2540 = $2532 ^ $2536; //@line 279 "mcbits/Keccak-simple.c"
  $2541 = $2533 ^ $2539; //@line 279 "mcbits/Keccak-simple.c"
  $2542 = $32; //@line 279 "mcbits/Keccak-simple.c"
  $2543 = $2542; //@line 279 "mcbits/Keccak-simple.c"
  HEAP32[$2543>>2] = $2540; //@line 279 "mcbits/Keccak-simple.c"
  $2544 = (($2542) + 4)|0; //@line 279 "mcbits/Keccak-simple.c"
  $2545 = $2544; //@line 279 "mcbits/Keccak-simple.c"
  HEAP32[$2545>>2] = $2541; //@line 279 "mcbits/Keccak-simple.c"
  $2546 = $43; //@line 280 "mcbits/Keccak-simple.c"
  $2547 = $2546; //@line 280 "mcbits/Keccak-simple.c"
  $2548 = HEAP32[$2547>>2]|0; //@line 280 "mcbits/Keccak-simple.c"
  $2549 = (($2546) + 4)|0; //@line 280 "mcbits/Keccak-simple.c"
  $2550 = $2549; //@line 280 "mcbits/Keccak-simple.c"
  $2551 = HEAP32[$2550>>2]|0; //@line 280 "mcbits/Keccak-simple.c"
  $2552 = $48; //@line 280 "mcbits/Keccak-simple.c"
  $2553 = $2552; //@line 280 "mcbits/Keccak-simple.c"
  $2554 = HEAP32[$2553>>2]|0; //@line 280 "mcbits/Keccak-simple.c"
  $2555 = (($2552) + 4)|0; //@line 280 "mcbits/Keccak-simple.c"
  $2556 = $2555; //@line 280 "mcbits/Keccak-simple.c"
  $2557 = HEAP32[$2556>>2]|0; //@line 280 "mcbits/Keccak-simple.c"
  $2558 = $2548 ^ $2554; //@line 280 "mcbits/Keccak-simple.c"
  $2559 = $2551 ^ $2557; //@line 280 "mcbits/Keccak-simple.c"
  $2560 = $53; //@line 280 "mcbits/Keccak-simple.c"
  $2561 = $2560; //@line 280 "mcbits/Keccak-simple.c"
  $2562 = HEAP32[$2561>>2]|0; //@line 280 "mcbits/Keccak-simple.c"
  $2563 = (($2560) + 4)|0; //@line 280 "mcbits/Keccak-simple.c"
  $2564 = $2563; //@line 280 "mcbits/Keccak-simple.c"
  $2565 = HEAP32[$2564>>2]|0; //@line 280 "mcbits/Keccak-simple.c"
  $2566 = $2558 ^ $2562; //@line 280 "mcbits/Keccak-simple.c"
  $2567 = $2559 ^ $2565; //@line 280 "mcbits/Keccak-simple.c"
  $2568 = $58; //@line 280 "mcbits/Keccak-simple.c"
  $2569 = $2568; //@line 280 "mcbits/Keccak-simple.c"
  $2570 = HEAP32[$2569>>2]|0; //@line 280 "mcbits/Keccak-simple.c"
  $2571 = (($2568) + 4)|0; //@line 280 "mcbits/Keccak-simple.c"
  $2572 = $2571; //@line 280 "mcbits/Keccak-simple.c"
  $2573 = HEAP32[$2572>>2]|0; //@line 280 "mcbits/Keccak-simple.c"
  $2574 = $2566 ^ $2570; //@line 280 "mcbits/Keccak-simple.c"
  $2575 = $2567 ^ $2573; //@line 280 "mcbits/Keccak-simple.c"
  $2576 = $63; //@line 280 "mcbits/Keccak-simple.c"
  $2577 = $2576; //@line 280 "mcbits/Keccak-simple.c"
  $2578 = HEAP32[$2577>>2]|0; //@line 280 "mcbits/Keccak-simple.c"
  $2579 = (($2576) + 4)|0; //@line 280 "mcbits/Keccak-simple.c"
  $2580 = $2579; //@line 280 "mcbits/Keccak-simple.c"
  $2581 = HEAP32[$2580>>2]|0; //@line 280 "mcbits/Keccak-simple.c"
  $2582 = $2574 ^ $2578; //@line 280 "mcbits/Keccak-simple.c"
  $2583 = $2575 ^ $2581; //@line 280 "mcbits/Keccak-simple.c"
  $2584 = $33; //@line 280 "mcbits/Keccak-simple.c"
  $2585 = $2584; //@line 280 "mcbits/Keccak-simple.c"
  HEAP32[$2585>>2] = $2582; //@line 280 "mcbits/Keccak-simple.c"
  $2586 = (($2584) + 4)|0; //@line 280 "mcbits/Keccak-simple.c"
  $2587 = $2586; //@line 280 "mcbits/Keccak-simple.c"
  HEAP32[$2587>>2] = $2583; //@line 280 "mcbits/Keccak-simple.c"
  $2588 = $44; //@line 281 "mcbits/Keccak-simple.c"
  $2589 = $2588; //@line 281 "mcbits/Keccak-simple.c"
  $2590 = HEAP32[$2589>>2]|0; //@line 281 "mcbits/Keccak-simple.c"
  $2591 = (($2588) + 4)|0; //@line 281 "mcbits/Keccak-simple.c"
  $2592 = $2591; //@line 281 "mcbits/Keccak-simple.c"
  $2593 = HEAP32[$2592>>2]|0; //@line 281 "mcbits/Keccak-simple.c"
  $2594 = $49; //@line 281 "mcbits/Keccak-simple.c"
  $2595 = $2594; //@line 281 "mcbits/Keccak-simple.c"
  $2596 = HEAP32[$2595>>2]|0; //@line 281 "mcbits/Keccak-simple.c"
  $2597 = (($2594) + 4)|0; //@line 281 "mcbits/Keccak-simple.c"
  $2598 = $2597; //@line 281 "mcbits/Keccak-simple.c"
  $2599 = HEAP32[$2598>>2]|0; //@line 281 "mcbits/Keccak-simple.c"
  $2600 = $2590 ^ $2596; //@line 281 "mcbits/Keccak-simple.c"
  $2601 = $2593 ^ $2599; //@line 281 "mcbits/Keccak-simple.c"
  $2602 = $54; //@line 281 "mcbits/Keccak-simple.c"
  $2603 = $2602; //@line 281 "mcbits/Keccak-simple.c"
  $2604 = HEAP32[$2603>>2]|0; //@line 281 "mcbits/Keccak-simple.c"
  $2605 = (($2602) + 4)|0; //@line 281 "mcbits/Keccak-simple.c"
  $2606 = $2605; //@line 281 "mcbits/Keccak-simple.c"
  $2607 = HEAP32[$2606>>2]|0; //@line 281 "mcbits/Keccak-simple.c"
  $2608 = $2600 ^ $2604; //@line 281 "mcbits/Keccak-simple.c"
  $2609 = $2601 ^ $2607; //@line 281 "mcbits/Keccak-simple.c"
  $2610 = $59; //@line 281 "mcbits/Keccak-simple.c"
  $2611 = $2610; //@line 281 "mcbits/Keccak-simple.c"
  $2612 = HEAP32[$2611>>2]|0; //@line 281 "mcbits/Keccak-simple.c"
  $2613 = (($2610) + 4)|0; //@line 281 "mcbits/Keccak-simple.c"
  $2614 = $2613; //@line 281 "mcbits/Keccak-simple.c"
  $2615 = HEAP32[$2614>>2]|0; //@line 281 "mcbits/Keccak-simple.c"
  $2616 = $2608 ^ $2612; //@line 281 "mcbits/Keccak-simple.c"
  $2617 = $2609 ^ $2615; //@line 281 "mcbits/Keccak-simple.c"
  $2618 = $64; //@line 281 "mcbits/Keccak-simple.c"
  $2619 = $2618; //@line 281 "mcbits/Keccak-simple.c"
  $2620 = HEAP32[$2619>>2]|0; //@line 281 "mcbits/Keccak-simple.c"
  $2621 = (($2618) + 4)|0; //@line 281 "mcbits/Keccak-simple.c"
  $2622 = $2621; //@line 281 "mcbits/Keccak-simple.c"
  $2623 = HEAP32[$2622>>2]|0; //@line 281 "mcbits/Keccak-simple.c"
  $2624 = $2616 ^ $2620; //@line 281 "mcbits/Keccak-simple.c"
  $2625 = $2617 ^ $2623; //@line 281 "mcbits/Keccak-simple.c"
  $2626 = $34; //@line 281 "mcbits/Keccak-simple.c"
  $2627 = $2626; //@line 281 "mcbits/Keccak-simple.c"
  HEAP32[$2627>>2] = $2624; //@line 281 "mcbits/Keccak-simple.c"
  $2628 = (($2626) + 4)|0; //@line 281 "mcbits/Keccak-simple.c"
  $2629 = $2628; //@line 281 "mcbits/Keccak-simple.c"
  HEAP32[$2629>>2] = $2625; //@line 281 "mcbits/Keccak-simple.c"
  $2630 = $45; //@line 282 "mcbits/Keccak-simple.c"
  $2631 = $2630; //@line 282 "mcbits/Keccak-simple.c"
  $2632 = HEAP32[$2631>>2]|0; //@line 282 "mcbits/Keccak-simple.c"
  $2633 = (($2630) + 4)|0; //@line 282 "mcbits/Keccak-simple.c"
  $2634 = $2633; //@line 282 "mcbits/Keccak-simple.c"
  $2635 = HEAP32[$2634>>2]|0; //@line 282 "mcbits/Keccak-simple.c"
  $2636 = $50; //@line 282 "mcbits/Keccak-simple.c"
  $2637 = $2636; //@line 282 "mcbits/Keccak-simple.c"
  $2638 = HEAP32[$2637>>2]|0; //@line 282 "mcbits/Keccak-simple.c"
  $2639 = (($2636) + 4)|0; //@line 282 "mcbits/Keccak-simple.c"
  $2640 = $2639; //@line 282 "mcbits/Keccak-simple.c"
  $2641 = HEAP32[$2640>>2]|0; //@line 282 "mcbits/Keccak-simple.c"
  $2642 = $2632 ^ $2638; //@line 282 "mcbits/Keccak-simple.c"
  $2643 = $2635 ^ $2641; //@line 282 "mcbits/Keccak-simple.c"
  $2644 = $55; //@line 282 "mcbits/Keccak-simple.c"
  $2645 = $2644; //@line 282 "mcbits/Keccak-simple.c"
  $2646 = HEAP32[$2645>>2]|0; //@line 282 "mcbits/Keccak-simple.c"
  $2647 = (($2644) + 4)|0; //@line 282 "mcbits/Keccak-simple.c"
  $2648 = $2647; //@line 282 "mcbits/Keccak-simple.c"
  $2649 = HEAP32[$2648>>2]|0; //@line 282 "mcbits/Keccak-simple.c"
  $2650 = $2642 ^ $2646; //@line 282 "mcbits/Keccak-simple.c"
  $2651 = $2643 ^ $2649; //@line 282 "mcbits/Keccak-simple.c"
  $2652 = $60; //@line 282 "mcbits/Keccak-simple.c"
  $2653 = $2652; //@line 282 "mcbits/Keccak-simple.c"
  $2654 = HEAP32[$2653>>2]|0; //@line 282 "mcbits/Keccak-simple.c"
  $2655 = (($2652) + 4)|0; //@line 282 "mcbits/Keccak-simple.c"
  $2656 = $2655; //@line 282 "mcbits/Keccak-simple.c"
  $2657 = HEAP32[$2656>>2]|0; //@line 282 "mcbits/Keccak-simple.c"
  $2658 = $2650 ^ $2654; //@line 282 "mcbits/Keccak-simple.c"
  $2659 = $2651 ^ $2657; //@line 282 "mcbits/Keccak-simple.c"
  $2660 = $65; //@line 282 "mcbits/Keccak-simple.c"
  $2661 = $2660; //@line 282 "mcbits/Keccak-simple.c"
  $2662 = HEAP32[$2661>>2]|0; //@line 282 "mcbits/Keccak-simple.c"
  $2663 = (($2660) + 4)|0; //@line 282 "mcbits/Keccak-simple.c"
  $2664 = $2663; //@line 282 "mcbits/Keccak-simple.c"
  $2665 = HEAP32[$2664>>2]|0; //@line 282 "mcbits/Keccak-simple.c"
  $2666 = $2658 ^ $2662; //@line 282 "mcbits/Keccak-simple.c"
  $2667 = $2659 ^ $2665; //@line 282 "mcbits/Keccak-simple.c"
  $2668 = $35; //@line 282 "mcbits/Keccak-simple.c"
  $2669 = $2668; //@line 282 "mcbits/Keccak-simple.c"
  HEAP32[$2669>>2] = $2666; //@line 282 "mcbits/Keccak-simple.c"
  $2670 = (($2668) + 4)|0; //@line 282 "mcbits/Keccak-simple.c"
  $2671 = $2670; //@line 282 "mcbits/Keccak-simple.c"
  HEAP32[$2671>>2] = $2667; //@line 282 "mcbits/Keccak-simple.c"
  $2672 = $35; //@line 285 "mcbits/Keccak-simple.c"
  $2673 = $2672; //@line 285 "mcbits/Keccak-simple.c"
  $2674 = HEAP32[$2673>>2]|0; //@line 285 "mcbits/Keccak-simple.c"
  $2675 = (($2672) + 4)|0; //@line 285 "mcbits/Keccak-simple.c"
  $2676 = $2675; //@line 285 "mcbits/Keccak-simple.c"
  $2677 = HEAP32[$2676>>2]|0; //@line 285 "mcbits/Keccak-simple.c"
  $2678 = $32; //@line 285 "mcbits/Keccak-simple.c"
  $2679 = $2678; //@line 285 "mcbits/Keccak-simple.c"
  $2680 = HEAP32[$2679>>2]|0; //@line 285 "mcbits/Keccak-simple.c"
  $2681 = (($2678) + 4)|0; //@line 285 "mcbits/Keccak-simple.c"
  $2682 = $2681; //@line 285 "mcbits/Keccak-simple.c"
  $2683 = HEAP32[$2682>>2]|0; //@line 285 "mcbits/Keccak-simple.c"
  $2684 = (_bitshift64Shl(($2680|0),($2683|0),1)|0); //@line 285 "mcbits/Keccak-simple.c"
  $2685 = tempRet0; //@line 285 "mcbits/Keccak-simple.c"
  $2686 = $32; //@line 285 "mcbits/Keccak-simple.c"
  $2687 = $2686; //@line 285 "mcbits/Keccak-simple.c"
  $2688 = HEAP32[$2687>>2]|0; //@line 285 "mcbits/Keccak-simple.c"
  $2689 = (($2686) + 4)|0; //@line 285 "mcbits/Keccak-simple.c"
  $2690 = $2689; //@line 285 "mcbits/Keccak-simple.c"
  $2691 = HEAP32[$2690>>2]|0; //@line 285 "mcbits/Keccak-simple.c"
  $2692 = (_bitshift64Lshr(($2688|0),($2691|0),63)|0); //@line 285 "mcbits/Keccak-simple.c"
  $2693 = tempRet0; //@line 285 "mcbits/Keccak-simple.c"
  $2694 = $2684 ^ $2692; //@line 285 "mcbits/Keccak-simple.c"
  $2695 = $2685 ^ $2693; //@line 285 "mcbits/Keccak-simple.c"
  $2696 = $2674 ^ $2694; //@line 285 "mcbits/Keccak-simple.c"
  $2697 = $2677 ^ $2695; //@line 285 "mcbits/Keccak-simple.c"
  $2698 = $36; //@line 285 "mcbits/Keccak-simple.c"
  $2699 = $2698; //@line 285 "mcbits/Keccak-simple.c"
  HEAP32[$2699>>2] = $2696; //@line 285 "mcbits/Keccak-simple.c"
  $2700 = (($2698) + 4)|0; //@line 285 "mcbits/Keccak-simple.c"
  $2701 = $2700; //@line 285 "mcbits/Keccak-simple.c"
  HEAP32[$2701>>2] = $2697; //@line 285 "mcbits/Keccak-simple.c"
  $2702 = $31; //@line 286 "mcbits/Keccak-simple.c"
  $2703 = $2702; //@line 286 "mcbits/Keccak-simple.c"
  $2704 = HEAP32[$2703>>2]|0; //@line 286 "mcbits/Keccak-simple.c"
  $2705 = (($2702) + 4)|0; //@line 286 "mcbits/Keccak-simple.c"
  $2706 = $2705; //@line 286 "mcbits/Keccak-simple.c"
  $2707 = HEAP32[$2706>>2]|0; //@line 286 "mcbits/Keccak-simple.c"
  $2708 = $33; //@line 286 "mcbits/Keccak-simple.c"
  $2709 = $2708; //@line 286 "mcbits/Keccak-simple.c"
  $2710 = HEAP32[$2709>>2]|0; //@line 286 "mcbits/Keccak-simple.c"
  $2711 = (($2708) + 4)|0; //@line 286 "mcbits/Keccak-simple.c"
  $2712 = $2711; //@line 286 "mcbits/Keccak-simple.c"
  $2713 = HEAP32[$2712>>2]|0; //@line 286 "mcbits/Keccak-simple.c"
  $2714 = (_bitshift64Shl(($2710|0),($2713|0),1)|0); //@line 286 "mcbits/Keccak-simple.c"
  $2715 = tempRet0; //@line 286 "mcbits/Keccak-simple.c"
  $2716 = $33; //@line 286 "mcbits/Keccak-simple.c"
  $2717 = $2716; //@line 286 "mcbits/Keccak-simple.c"
  $2718 = HEAP32[$2717>>2]|0; //@line 286 "mcbits/Keccak-simple.c"
  $2719 = (($2716) + 4)|0; //@line 286 "mcbits/Keccak-simple.c"
  $2720 = $2719; //@line 286 "mcbits/Keccak-simple.c"
  $2721 = HEAP32[$2720>>2]|0; //@line 286 "mcbits/Keccak-simple.c"
  $2722 = (_bitshift64Lshr(($2718|0),($2721|0),63)|0); //@line 286 "mcbits/Keccak-simple.c"
  $2723 = tempRet0; //@line 286 "mcbits/Keccak-simple.c"
  $2724 = $2714 ^ $2722; //@line 286 "mcbits/Keccak-simple.c"
  $2725 = $2715 ^ $2723; //@line 286 "mcbits/Keccak-simple.c"
  $2726 = $2704 ^ $2724; //@line 286 "mcbits/Keccak-simple.c"
  $2727 = $2707 ^ $2725; //@line 286 "mcbits/Keccak-simple.c"
  $2728 = $37; //@line 286 "mcbits/Keccak-simple.c"
  $2729 = $2728; //@line 286 "mcbits/Keccak-simple.c"
  HEAP32[$2729>>2] = $2726; //@line 286 "mcbits/Keccak-simple.c"
  $2730 = (($2728) + 4)|0; //@line 286 "mcbits/Keccak-simple.c"
  $2731 = $2730; //@line 286 "mcbits/Keccak-simple.c"
  HEAP32[$2731>>2] = $2727; //@line 286 "mcbits/Keccak-simple.c"
  $2732 = $32; //@line 287 "mcbits/Keccak-simple.c"
  $2733 = $2732; //@line 287 "mcbits/Keccak-simple.c"
  $2734 = HEAP32[$2733>>2]|0; //@line 287 "mcbits/Keccak-simple.c"
  $2735 = (($2732) + 4)|0; //@line 287 "mcbits/Keccak-simple.c"
  $2736 = $2735; //@line 287 "mcbits/Keccak-simple.c"
  $2737 = HEAP32[$2736>>2]|0; //@line 287 "mcbits/Keccak-simple.c"
  $2738 = $34; //@line 287 "mcbits/Keccak-simple.c"
  $2739 = $2738; //@line 287 "mcbits/Keccak-simple.c"
  $2740 = HEAP32[$2739>>2]|0; //@line 287 "mcbits/Keccak-simple.c"
  $2741 = (($2738) + 4)|0; //@line 287 "mcbits/Keccak-simple.c"
  $2742 = $2741; //@line 287 "mcbits/Keccak-simple.c"
  $2743 = HEAP32[$2742>>2]|0; //@line 287 "mcbits/Keccak-simple.c"
  $2744 = (_bitshift64Shl(($2740|0),($2743|0),1)|0); //@line 287 "mcbits/Keccak-simple.c"
  $2745 = tempRet0; //@line 287 "mcbits/Keccak-simple.c"
  $2746 = $34; //@line 287 "mcbits/Keccak-simple.c"
  $2747 = $2746; //@line 287 "mcbits/Keccak-simple.c"
  $2748 = HEAP32[$2747>>2]|0; //@line 287 "mcbits/Keccak-simple.c"
  $2749 = (($2746) + 4)|0; //@line 287 "mcbits/Keccak-simple.c"
  $2750 = $2749; //@line 287 "mcbits/Keccak-simple.c"
  $2751 = HEAP32[$2750>>2]|0; //@line 287 "mcbits/Keccak-simple.c"
  $2752 = (_bitshift64Lshr(($2748|0),($2751|0),63)|0); //@line 287 "mcbits/Keccak-simple.c"
  $2753 = tempRet0; //@line 287 "mcbits/Keccak-simple.c"
  $2754 = $2744 ^ $2752; //@line 287 "mcbits/Keccak-simple.c"
  $2755 = $2745 ^ $2753; //@line 287 "mcbits/Keccak-simple.c"
  $2756 = $2734 ^ $2754; //@line 287 "mcbits/Keccak-simple.c"
  $2757 = $2737 ^ $2755; //@line 287 "mcbits/Keccak-simple.c"
  $2758 = $38; //@line 287 "mcbits/Keccak-simple.c"
  $2759 = $2758; //@line 287 "mcbits/Keccak-simple.c"
  HEAP32[$2759>>2] = $2756; //@line 287 "mcbits/Keccak-simple.c"
  $2760 = (($2758) + 4)|0; //@line 287 "mcbits/Keccak-simple.c"
  $2761 = $2760; //@line 287 "mcbits/Keccak-simple.c"
  HEAP32[$2761>>2] = $2757; //@line 287 "mcbits/Keccak-simple.c"
  $2762 = $33; //@line 288 "mcbits/Keccak-simple.c"
  $2763 = $2762; //@line 288 "mcbits/Keccak-simple.c"
  $2764 = HEAP32[$2763>>2]|0; //@line 288 "mcbits/Keccak-simple.c"
  $2765 = (($2762) + 4)|0; //@line 288 "mcbits/Keccak-simple.c"
  $2766 = $2765; //@line 288 "mcbits/Keccak-simple.c"
  $2767 = HEAP32[$2766>>2]|0; //@line 288 "mcbits/Keccak-simple.c"
  $2768 = $35; //@line 288 "mcbits/Keccak-simple.c"
  $2769 = $2768; //@line 288 "mcbits/Keccak-simple.c"
  $2770 = HEAP32[$2769>>2]|0; //@line 288 "mcbits/Keccak-simple.c"
  $2771 = (($2768) + 4)|0; //@line 288 "mcbits/Keccak-simple.c"
  $2772 = $2771; //@line 288 "mcbits/Keccak-simple.c"
  $2773 = HEAP32[$2772>>2]|0; //@line 288 "mcbits/Keccak-simple.c"
  $2774 = (_bitshift64Shl(($2770|0),($2773|0),1)|0); //@line 288 "mcbits/Keccak-simple.c"
  $2775 = tempRet0; //@line 288 "mcbits/Keccak-simple.c"
  $2776 = $35; //@line 288 "mcbits/Keccak-simple.c"
  $2777 = $2776; //@line 288 "mcbits/Keccak-simple.c"
  $2778 = HEAP32[$2777>>2]|0; //@line 288 "mcbits/Keccak-simple.c"
  $2779 = (($2776) + 4)|0; //@line 288 "mcbits/Keccak-simple.c"
  $2780 = $2779; //@line 288 "mcbits/Keccak-simple.c"
  $2781 = HEAP32[$2780>>2]|0; //@line 288 "mcbits/Keccak-simple.c"
  $2782 = (_bitshift64Lshr(($2778|0),($2781|0),63)|0); //@line 288 "mcbits/Keccak-simple.c"
  $2783 = tempRet0; //@line 288 "mcbits/Keccak-simple.c"
  $2784 = $2774 ^ $2782; //@line 288 "mcbits/Keccak-simple.c"
  $2785 = $2775 ^ $2783; //@line 288 "mcbits/Keccak-simple.c"
  $2786 = $2764 ^ $2784; //@line 288 "mcbits/Keccak-simple.c"
  $2787 = $2767 ^ $2785; //@line 288 "mcbits/Keccak-simple.c"
  $2788 = $39; //@line 288 "mcbits/Keccak-simple.c"
  $2789 = $2788; //@line 288 "mcbits/Keccak-simple.c"
  HEAP32[$2789>>2] = $2786; //@line 288 "mcbits/Keccak-simple.c"
  $2790 = (($2788) + 4)|0; //@line 288 "mcbits/Keccak-simple.c"
  $2791 = $2790; //@line 288 "mcbits/Keccak-simple.c"
  HEAP32[$2791>>2] = $2787; //@line 288 "mcbits/Keccak-simple.c"
  $2792 = $34; //@line 289 "mcbits/Keccak-simple.c"
  $2793 = $2792; //@line 289 "mcbits/Keccak-simple.c"
  $2794 = HEAP32[$2793>>2]|0; //@line 289 "mcbits/Keccak-simple.c"
  $2795 = (($2792) + 4)|0; //@line 289 "mcbits/Keccak-simple.c"
  $2796 = $2795; //@line 289 "mcbits/Keccak-simple.c"
  $2797 = HEAP32[$2796>>2]|0; //@line 289 "mcbits/Keccak-simple.c"
  $2798 = $31; //@line 289 "mcbits/Keccak-simple.c"
  $2799 = $2798; //@line 289 "mcbits/Keccak-simple.c"
  $2800 = HEAP32[$2799>>2]|0; //@line 289 "mcbits/Keccak-simple.c"
  $2801 = (($2798) + 4)|0; //@line 289 "mcbits/Keccak-simple.c"
  $2802 = $2801; //@line 289 "mcbits/Keccak-simple.c"
  $2803 = HEAP32[$2802>>2]|0; //@line 289 "mcbits/Keccak-simple.c"
  $2804 = (_bitshift64Shl(($2800|0),($2803|0),1)|0); //@line 289 "mcbits/Keccak-simple.c"
  $2805 = tempRet0; //@line 289 "mcbits/Keccak-simple.c"
  $2806 = $31; //@line 289 "mcbits/Keccak-simple.c"
  $2807 = $2806; //@line 289 "mcbits/Keccak-simple.c"
  $2808 = HEAP32[$2807>>2]|0; //@line 289 "mcbits/Keccak-simple.c"
  $2809 = (($2806) + 4)|0; //@line 289 "mcbits/Keccak-simple.c"
  $2810 = $2809; //@line 289 "mcbits/Keccak-simple.c"
  $2811 = HEAP32[$2810>>2]|0; //@line 289 "mcbits/Keccak-simple.c"
  $2812 = (_bitshift64Lshr(($2808|0),($2811|0),63)|0); //@line 289 "mcbits/Keccak-simple.c"
  $2813 = tempRet0; //@line 289 "mcbits/Keccak-simple.c"
  $2814 = $2804 ^ $2812; //@line 289 "mcbits/Keccak-simple.c"
  $2815 = $2805 ^ $2813; //@line 289 "mcbits/Keccak-simple.c"
  $2816 = $2794 ^ $2814; //@line 289 "mcbits/Keccak-simple.c"
  $2817 = $2797 ^ $2815; //@line 289 "mcbits/Keccak-simple.c"
  $2818 = $40; //@line 289 "mcbits/Keccak-simple.c"
  $2819 = $2818; //@line 289 "mcbits/Keccak-simple.c"
  HEAP32[$2819>>2] = $2816; //@line 289 "mcbits/Keccak-simple.c"
  $2820 = (($2818) + 4)|0; //@line 289 "mcbits/Keccak-simple.c"
  $2821 = $2820; //@line 289 "mcbits/Keccak-simple.c"
  HEAP32[$2821>>2] = $2817; //@line 289 "mcbits/Keccak-simple.c"
  $2822 = $36; //@line 291 "mcbits/Keccak-simple.c"
  $2823 = $2822; //@line 291 "mcbits/Keccak-simple.c"
  $2824 = HEAP32[$2823>>2]|0; //@line 291 "mcbits/Keccak-simple.c"
  $2825 = (($2822) + 4)|0; //@line 291 "mcbits/Keccak-simple.c"
  $2826 = $2825; //@line 291 "mcbits/Keccak-simple.c"
  $2827 = HEAP32[$2826>>2]|0; //@line 291 "mcbits/Keccak-simple.c"
  $2828 = $41; //@line 291 "mcbits/Keccak-simple.c"
  $2829 = $2828; //@line 291 "mcbits/Keccak-simple.c"
  $2830 = HEAP32[$2829>>2]|0; //@line 291 "mcbits/Keccak-simple.c"
  $2831 = (($2828) + 4)|0; //@line 291 "mcbits/Keccak-simple.c"
  $2832 = $2831; //@line 291 "mcbits/Keccak-simple.c"
  $2833 = HEAP32[$2832>>2]|0; //@line 291 "mcbits/Keccak-simple.c"
  $2834 = $2830 ^ $2824; //@line 291 "mcbits/Keccak-simple.c"
  $2835 = $2833 ^ $2827; //@line 291 "mcbits/Keccak-simple.c"
  $2836 = $41; //@line 291 "mcbits/Keccak-simple.c"
  $2837 = $2836; //@line 291 "mcbits/Keccak-simple.c"
  HEAP32[$2837>>2] = $2834; //@line 291 "mcbits/Keccak-simple.c"
  $2838 = (($2836) + 4)|0; //@line 291 "mcbits/Keccak-simple.c"
  $2839 = $2838; //@line 291 "mcbits/Keccak-simple.c"
  HEAP32[$2839>>2] = $2835; //@line 291 "mcbits/Keccak-simple.c"
  $2840 = $41; //@line 292 "mcbits/Keccak-simple.c"
  $2841 = $2840; //@line 292 "mcbits/Keccak-simple.c"
  $2842 = HEAP32[$2841>>2]|0; //@line 292 "mcbits/Keccak-simple.c"
  $2843 = (($2840) + 4)|0; //@line 292 "mcbits/Keccak-simple.c"
  $2844 = $2843; //@line 292 "mcbits/Keccak-simple.c"
  $2845 = HEAP32[$2844>>2]|0; //@line 292 "mcbits/Keccak-simple.c"
  $2846 = $31; //@line 292 "mcbits/Keccak-simple.c"
  $2847 = $2846; //@line 292 "mcbits/Keccak-simple.c"
  HEAP32[$2847>>2] = $2842; //@line 292 "mcbits/Keccak-simple.c"
  $2848 = (($2846) + 4)|0; //@line 292 "mcbits/Keccak-simple.c"
  $2849 = $2848; //@line 292 "mcbits/Keccak-simple.c"
  HEAP32[$2849>>2] = $2845; //@line 292 "mcbits/Keccak-simple.c"
  $2850 = $37; //@line 293 "mcbits/Keccak-simple.c"
  $2851 = $2850; //@line 293 "mcbits/Keccak-simple.c"
  $2852 = HEAP32[$2851>>2]|0; //@line 293 "mcbits/Keccak-simple.c"
  $2853 = (($2850) + 4)|0; //@line 293 "mcbits/Keccak-simple.c"
  $2854 = $2853; //@line 293 "mcbits/Keccak-simple.c"
  $2855 = HEAP32[$2854>>2]|0; //@line 293 "mcbits/Keccak-simple.c"
  $2856 = $47; //@line 293 "mcbits/Keccak-simple.c"
  $2857 = $2856; //@line 293 "mcbits/Keccak-simple.c"
  $2858 = HEAP32[$2857>>2]|0; //@line 293 "mcbits/Keccak-simple.c"
  $2859 = (($2856) + 4)|0; //@line 293 "mcbits/Keccak-simple.c"
  $2860 = $2859; //@line 293 "mcbits/Keccak-simple.c"
  $2861 = HEAP32[$2860>>2]|0; //@line 293 "mcbits/Keccak-simple.c"
  $2862 = $2858 ^ $2852; //@line 293 "mcbits/Keccak-simple.c"
  $2863 = $2861 ^ $2855; //@line 293 "mcbits/Keccak-simple.c"
  $2864 = $47; //@line 293 "mcbits/Keccak-simple.c"
  $2865 = $2864; //@line 293 "mcbits/Keccak-simple.c"
  HEAP32[$2865>>2] = $2862; //@line 293 "mcbits/Keccak-simple.c"
  $2866 = (($2864) + 4)|0; //@line 293 "mcbits/Keccak-simple.c"
  $2867 = $2866; //@line 293 "mcbits/Keccak-simple.c"
  HEAP32[$2867>>2] = $2863; //@line 293 "mcbits/Keccak-simple.c"
  $2868 = $47; //@line 294 "mcbits/Keccak-simple.c"
  $2869 = $2868; //@line 294 "mcbits/Keccak-simple.c"
  $2870 = HEAP32[$2869>>2]|0; //@line 294 "mcbits/Keccak-simple.c"
  $2871 = (($2868) + 4)|0; //@line 294 "mcbits/Keccak-simple.c"
  $2872 = $2871; //@line 294 "mcbits/Keccak-simple.c"
  $2873 = HEAP32[$2872>>2]|0; //@line 294 "mcbits/Keccak-simple.c"
  $2874 = (_bitshift64Shl(($2870|0),($2873|0),44)|0); //@line 294 "mcbits/Keccak-simple.c"
  $2875 = tempRet0; //@line 294 "mcbits/Keccak-simple.c"
  $2876 = $47; //@line 294 "mcbits/Keccak-simple.c"
  $2877 = $2876; //@line 294 "mcbits/Keccak-simple.c"
  $2878 = HEAP32[$2877>>2]|0; //@line 294 "mcbits/Keccak-simple.c"
  $2879 = (($2876) + 4)|0; //@line 294 "mcbits/Keccak-simple.c"
  $2880 = $2879; //@line 294 "mcbits/Keccak-simple.c"
  $2881 = HEAP32[$2880>>2]|0; //@line 294 "mcbits/Keccak-simple.c"
  $2882 = (_bitshift64Lshr(($2878|0),($2881|0),20)|0); //@line 294 "mcbits/Keccak-simple.c"
  $2883 = tempRet0; //@line 294 "mcbits/Keccak-simple.c"
  $2884 = $2874 ^ $2882; //@line 294 "mcbits/Keccak-simple.c"
  $2885 = $2875 ^ $2883; //@line 294 "mcbits/Keccak-simple.c"
  $2886 = $32; //@line 294 "mcbits/Keccak-simple.c"
  $2887 = $2886; //@line 294 "mcbits/Keccak-simple.c"
  HEAP32[$2887>>2] = $2884; //@line 294 "mcbits/Keccak-simple.c"
  $2888 = (($2886) + 4)|0; //@line 294 "mcbits/Keccak-simple.c"
  $2889 = $2888; //@line 294 "mcbits/Keccak-simple.c"
  HEAP32[$2889>>2] = $2885; //@line 294 "mcbits/Keccak-simple.c"
  $2890 = $38; //@line 295 "mcbits/Keccak-simple.c"
  $2891 = $2890; //@line 295 "mcbits/Keccak-simple.c"
  $2892 = HEAP32[$2891>>2]|0; //@line 295 "mcbits/Keccak-simple.c"
  $2893 = (($2890) + 4)|0; //@line 295 "mcbits/Keccak-simple.c"
  $2894 = $2893; //@line 295 "mcbits/Keccak-simple.c"
  $2895 = HEAP32[$2894>>2]|0; //@line 295 "mcbits/Keccak-simple.c"
  $2896 = $53; //@line 295 "mcbits/Keccak-simple.c"
  $2897 = $2896; //@line 295 "mcbits/Keccak-simple.c"
  $2898 = HEAP32[$2897>>2]|0; //@line 295 "mcbits/Keccak-simple.c"
  $2899 = (($2896) + 4)|0; //@line 295 "mcbits/Keccak-simple.c"
  $2900 = $2899; //@line 295 "mcbits/Keccak-simple.c"
  $2901 = HEAP32[$2900>>2]|0; //@line 295 "mcbits/Keccak-simple.c"
  $2902 = $2898 ^ $2892; //@line 295 "mcbits/Keccak-simple.c"
  $2903 = $2901 ^ $2895; //@line 295 "mcbits/Keccak-simple.c"
  $2904 = $53; //@line 295 "mcbits/Keccak-simple.c"
  $2905 = $2904; //@line 295 "mcbits/Keccak-simple.c"
  HEAP32[$2905>>2] = $2902; //@line 295 "mcbits/Keccak-simple.c"
  $2906 = (($2904) + 4)|0; //@line 295 "mcbits/Keccak-simple.c"
  $2907 = $2906; //@line 295 "mcbits/Keccak-simple.c"
  HEAP32[$2907>>2] = $2903; //@line 295 "mcbits/Keccak-simple.c"
  $2908 = $53; //@line 296 "mcbits/Keccak-simple.c"
  $2909 = $2908; //@line 296 "mcbits/Keccak-simple.c"
  $2910 = HEAP32[$2909>>2]|0; //@line 296 "mcbits/Keccak-simple.c"
  $2911 = (($2908) + 4)|0; //@line 296 "mcbits/Keccak-simple.c"
  $2912 = $2911; //@line 296 "mcbits/Keccak-simple.c"
  $2913 = HEAP32[$2912>>2]|0; //@line 296 "mcbits/Keccak-simple.c"
  $2914 = (_bitshift64Shl(($2910|0),($2913|0),43)|0); //@line 296 "mcbits/Keccak-simple.c"
  $2915 = tempRet0; //@line 296 "mcbits/Keccak-simple.c"
  $2916 = $53; //@line 296 "mcbits/Keccak-simple.c"
  $2917 = $2916; //@line 296 "mcbits/Keccak-simple.c"
  $2918 = HEAP32[$2917>>2]|0; //@line 296 "mcbits/Keccak-simple.c"
  $2919 = (($2916) + 4)|0; //@line 296 "mcbits/Keccak-simple.c"
  $2920 = $2919; //@line 296 "mcbits/Keccak-simple.c"
  $2921 = HEAP32[$2920>>2]|0; //@line 296 "mcbits/Keccak-simple.c"
  $2922 = (_bitshift64Lshr(($2918|0),($2921|0),21)|0); //@line 296 "mcbits/Keccak-simple.c"
  $2923 = tempRet0; //@line 296 "mcbits/Keccak-simple.c"
  $2924 = $2914 ^ $2922; //@line 296 "mcbits/Keccak-simple.c"
  $2925 = $2915 ^ $2923; //@line 296 "mcbits/Keccak-simple.c"
  $2926 = $33; //@line 296 "mcbits/Keccak-simple.c"
  $2927 = $2926; //@line 296 "mcbits/Keccak-simple.c"
  HEAP32[$2927>>2] = $2924; //@line 296 "mcbits/Keccak-simple.c"
  $2928 = (($2926) + 4)|0; //@line 296 "mcbits/Keccak-simple.c"
  $2929 = $2928; //@line 296 "mcbits/Keccak-simple.c"
  HEAP32[$2929>>2] = $2925; //@line 296 "mcbits/Keccak-simple.c"
  $2930 = $39; //@line 297 "mcbits/Keccak-simple.c"
  $2931 = $2930; //@line 297 "mcbits/Keccak-simple.c"
  $2932 = HEAP32[$2931>>2]|0; //@line 297 "mcbits/Keccak-simple.c"
  $2933 = (($2930) + 4)|0; //@line 297 "mcbits/Keccak-simple.c"
  $2934 = $2933; //@line 297 "mcbits/Keccak-simple.c"
  $2935 = HEAP32[$2934>>2]|0; //@line 297 "mcbits/Keccak-simple.c"
  $2936 = $59; //@line 297 "mcbits/Keccak-simple.c"
  $2937 = $2936; //@line 297 "mcbits/Keccak-simple.c"
  $2938 = HEAP32[$2937>>2]|0; //@line 297 "mcbits/Keccak-simple.c"
  $2939 = (($2936) + 4)|0; //@line 297 "mcbits/Keccak-simple.c"
  $2940 = $2939; //@line 297 "mcbits/Keccak-simple.c"
  $2941 = HEAP32[$2940>>2]|0; //@line 297 "mcbits/Keccak-simple.c"
  $2942 = $2938 ^ $2932; //@line 297 "mcbits/Keccak-simple.c"
  $2943 = $2941 ^ $2935; //@line 297 "mcbits/Keccak-simple.c"
  $2944 = $59; //@line 297 "mcbits/Keccak-simple.c"
  $2945 = $2944; //@line 297 "mcbits/Keccak-simple.c"
  HEAP32[$2945>>2] = $2942; //@line 297 "mcbits/Keccak-simple.c"
  $2946 = (($2944) + 4)|0; //@line 297 "mcbits/Keccak-simple.c"
  $2947 = $2946; //@line 297 "mcbits/Keccak-simple.c"
  HEAP32[$2947>>2] = $2943; //@line 297 "mcbits/Keccak-simple.c"
  $2948 = $59; //@line 298 "mcbits/Keccak-simple.c"
  $2949 = $2948; //@line 298 "mcbits/Keccak-simple.c"
  $2950 = HEAP32[$2949>>2]|0; //@line 298 "mcbits/Keccak-simple.c"
  $2951 = (($2948) + 4)|0; //@line 298 "mcbits/Keccak-simple.c"
  $2952 = $2951; //@line 298 "mcbits/Keccak-simple.c"
  $2953 = HEAP32[$2952>>2]|0; //@line 298 "mcbits/Keccak-simple.c"
  $2954 = (_bitshift64Shl(($2950|0),($2953|0),21)|0); //@line 298 "mcbits/Keccak-simple.c"
  $2955 = tempRet0; //@line 298 "mcbits/Keccak-simple.c"
  $2956 = $59; //@line 298 "mcbits/Keccak-simple.c"
  $2957 = $2956; //@line 298 "mcbits/Keccak-simple.c"
  $2958 = HEAP32[$2957>>2]|0; //@line 298 "mcbits/Keccak-simple.c"
  $2959 = (($2956) + 4)|0; //@line 298 "mcbits/Keccak-simple.c"
  $2960 = $2959; //@line 298 "mcbits/Keccak-simple.c"
  $2961 = HEAP32[$2960>>2]|0; //@line 298 "mcbits/Keccak-simple.c"
  $2962 = (_bitshift64Lshr(($2958|0),($2961|0),43)|0); //@line 298 "mcbits/Keccak-simple.c"
  $2963 = tempRet0; //@line 298 "mcbits/Keccak-simple.c"
  $2964 = $2954 ^ $2962; //@line 298 "mcbits/Keccak-simple.c"
  $2965 = $2955 ^ $2963; //@line 298 "mcbits/Keccak-simple.c"
  $2966 = $34; //@line 298 "mcbits/Keccak-simple.c"
  $2967 = $2966; //@line 298 "mcbits/Keccak-simple.c"
  HEAP32[$2967>>2] = $2964; //@line 298 "mcbits/Keccak-simple.c"
  $2968 = (($2966) + 4)|0; //@line 298 "mcbits/Keccak-simple.c"
  $2969 = $2968; //@line 298 "mcbits/Keccak-simple.c"
  HEAP32[$2969>>2] = $2965; //@line 298 "mcbits/Keccak-simple.c"
  $2970 = $40; //@line 299 "mcbits/Keccak-simple.c"
  $2971 = $2970; //@line 299 "mcbits/Keccak-simple.c"
  $2972 = HEAP32[$2971>>2]|0; //@line 299 "mcbits/Keccak-simple.c"
  $2973 = (($2970) + 4)|0; //@line 299 "mcbits/Keccak-simple.c"
  $2974 = $2973; //@line 299 "mcbits/Keccak-simple.c"
  $2975 = HEAP32[$2974>>2]|0; //@line 299 "mcbits/Keccak-simple.c"
  $2976 = $65; //@line 299 "mcbits/Keccak-simple.c"
  $2977 = $2976; //@line 299 "mcbits/Keccak-simple.c"
  $2978 = HEAP32[$2977>>2]|0; //@line 299 "mcbits/Keccak-simple.c"
  $2979 = (($2976) + 4)|0; //@line 299 "mcbits/Keccak-simple.c"
  $2980 = $2979; //@line 299 "mcbits/Keccak-simple.c"
  $2981 = HEAP32[$2980>>2]|0; //@line 299 "mcbits/Keccak-simple.c"
  $2982 = $2978 ^ $2972; //@line 299 "mcbits/Keccak-simple.c"
  $2983 = $2981 ^ $2975; //@line 299 "mcbits/Keccak-simple.c"
  $2984 = $65; //@line 299 "mcbits/Keccak-simple.c"
  $2985 = $2984; //@line 299 "mcbits/Keccak-simple.c"
  HEAP32[$2985>>2] = $2982; //@line 299 "mcbits/Keccak-simple.c"
  $2986 = (($2984) + 4)|0; //@line 299 "mcbits/Keccak-simple.c"
  $2987 = $2986; //@line 299 "mcbits/Keccak-simple.c"
  HEAP32[$2987>>2] = $2983; //@line 299 "mcbits/Keccak-simple.c"
  $2988 = $65; //@line 300 "mcbits/Keccak-simple.c"
  $2989 = $2988; //@line 300 "mcbits/Keccak-simple.c"
  $2990 = HEAP32[$2989>>2]|0; //@line 300 "mcbits/Keccak-simple.c"
  $2991 = (($2988) + 4)|0; //@line 300 "mcbits/Keccak-simple.c"
  $2992 = $2991; //@line 300 "mcbits/Keccak-simple.c"
  $2993 = HEAP32[$2992>>2]|0; //@line 300 "mcbits/Keccak-simple.c"
  $2994 = (_bitshift64Shl(($2990|0),($2993|0),14)|0); //@line 300 "mcbits/Keccak-simple.c"
  $2995 = tempRet0; //@line 300 "mcbits/Keccak-simple.c"
  $2996 = $65; //@line 300 "mcbits/Keccak-simple.c"
  $2997 = $2996; //@line 300 "mcbits/Keccak-simple.c"
  $2998 = HEAP32[$2997>>2]|0; //@line 300 "mcbits/Keccak-simple.c"
  $2999 = (($2996) + 4)|0; //@line 300 "mcbits/Keccak-simple.c"
  $3000 = $2999; //@line 300 "mcbits/Keccak-simple.c"
  $3001 = HEAP32[$3000>>2]|0; //@line 300 "mcbits/Keccak-simple.c"
  $3002 = (_bitshift64Lshr(($2998|0),($3001|0),50)|0); //@line 300 "mcbits/Keccak-simple.c"
  $3003 = tempRet0; //@line 300 "mcbits/Keccak-simple.c"
  $3004 = $2994 ^ $3002; //@line 300 "mcbits/Keccak-simple.c"
  $3005 = $2995 ^ $3003; //@line 300 "mcbits/Keccak-simple.c"
  $3006 = $35; //@line 300 "mcbits/Keccak-simple.c"
  $3007 = $3006; //@line 300 "mcbits/Keccak-simple.c"
  HEAP32[$3007>>2] = $3004; //@line 300 "mcbits/Keccak-simple.c"
  $3008 = (($3006) + 4)|0; //@line 300 "mcbits/Keccak-simple.c"
  $3009 = $3008; //@line 300 "mcbits/Keccak-simple.c"
  HEAP32[$3009>>2] = $3005; //@line 300 "mcbits/Keccak-simple.c"
  $3010 = $31; //@line 301 "mcbits/Keccak-simple.c"
  $3011 = $3010; //@line 301 "mcbits/Keccak-simple.c"
  $3012 = HEAP32[$3011>>2]|0; //@line 301 "mcbits/Keccak-simple.c"
  $3013 = (($3010) + 4)|0; //@line 301 "mcbits/Keccak-simple.c"
  $3014 = $3013; //@line 301 "mcbits/Keccak-simple.c"
  $3015 = HEAP32[$3014>>2]|0; //@line 301 "mcbits/Keccak-simple.c"
  $3016 = $32; //@line 301 "mcbits/Keccak-simple.c"
  $3017 = $3016; //@line 301 "mcbits/Keccak-simple.c"
  $3018 = HEAP32[$3017>>2]|0; //@line 301 "mcbits/Keccak-simple.c"
  $3019 = (($3016) + 4)|0; //@line 301 "mcbits/Keccak-simple.c"
  $3020 = $3019; //@line 301 "mcbits/Keccak-simple.c"
  $3021 = HEAP32[$3020>>2]|0; //@line 301 "mcbits/Keccak-simple.c"
  $3022 = $3018 ^ -1; //@line 301 "mcbits/Keccak-simple.c"
  $3023 = $3021 ^ -1; //@line 301 "mcbits/Keccak-simple.c"
  $3024 = $33; //@line 301 "mcbits/Keccak-simple.c"
  $3025 = $3024; //@line 301 "mcbits/Keccak-simple.c"
  $3026 = HEAP32[$3025>>2]|0; //@line 301 "mcbits/Keccak-simple.c"
  $3027 = (($3024) + 4)|0; //@line 301 "mcbits/Keccak-simple.c"
  $3028 = $3027; //@line 301 "mcbits/Keccak-simple.c"
  $3029 = HEAP32[$3028>>2]|0; //@line 301 "mcbits/Keccak-simple.c"
  $3030 = $3022 & $3026; //@line 301 "mcbits/Keccak-simple.c"
  $3031 = $3023 & $3029; //@line 301 "mcbits/Keccak-simple.c"
  $3032 = $3012 ^ $3030; //@line 301 "mcbits/Keccak-simple.c"
  $3033 = $3015 ^ $3031; //@line 301 "mcbits/Keccak-simple.c"
  $3034 = $6; //@line 301 "mcbits/Keccak-simple.c"
  $3035 = $3034; //@line 301 "mcbits/Keccak-simple.c"
  HEAP32[$3035>>2] = $3032; //@line 301 "mcbits/Keccak-simple.c"
  $3036 = (($3034) + 4)|0; //@line 301 "mcbits/Keccak-simple.c"
  $3037 = $3036; //@line 301 "mcbits/Keccak-simple.c"
  HEAP32[$3037>>2] = $3033; //@line 301 "mcbits/Keccak-simple.c"
  $3038 = $5; //@line 302 "mcbits/Keccak-simple.c"
  $3039 = (($3038) + 1)|0; //@line 302 "mcbits/Keccak-simple.c"
  $3040 = (8 + ($3039<<3)|0); //@line 302 "mcbits/Keccak-simple.c"
  $3041 = $3040; //@line 302 "mcbits/Keccak-simple.c"
  $3042 = $3041; //@line 302 "mcbits/Keccak-simple.c"
  $3043 = HEAP32[$3042>>2]|0; //@line 302 "mcbits/Keccak-simple.c"
  $3044 = (($3041) + 4)|0; //@line 302 "mcbits/Keccak-simple.c"
  $3045 = $3044; //@line 302 "mcbits/Keccak-simple.c"
  $3046 = HEAP32[$3045>>2]|0; //@line 302 "mcbits/Keccak-simple.c"
  $3047 = $6; //@line 302 "mcbits/Keccak-simple.c"
  $3048 = $3047; //@line 302 "mcbits/Keccak-simple.c"
  $3049 = HEAP32[$3048>>2]|0; //@line 302 "mcbits/Keccak-simple.c"
  $3050 = (($3047) + 4)|0; //@line 302 "mcbits/Keccak-simple.c"
  $3051 = $3050; //@line 302 "mcbits/Keccak-simple.c"
  $3052 = HEAP32[$3051>>2]|0; //@line 302 "mcbits/Keccak-simple.c"
  $3053 = $3049 ^ $3043; //@line 302 "mcbits/Keccak-simple.c"
  $3054 = $3052 ^ $3046; //@line 302 "mcbits/Keccak-simple.c"
  $3055 = $6; //@line 302 "mcbits/Keccak-simple.c"
  $3056 = $3055; //@line 302 "mcbits/Keccak-simple.c"
  HEAP32[$3056>>2] = $3053; //@line 302 "mcbits/Keccak-simple.c"
  $3057 = (($3055) + 4)|0; //@line 302 "mcbits/Keccak-simple.c"
  $3058 = $3057; //@line 302 "mcbits/Keccak-simple.c"
  HEAP32[$3058>>2] = $3054; //@line 302 "mcbits/Keccak-simple.c"
  $3059 = $32; //@line 303 "mcbits/Keccak-simple.c"
  $3060 = $3059; //@line 303 "mcbits/Keccak-simple.c"
  $3061 = HEAP32[$3060>>2]|0; //@line 303 "mcbits/Keccak-simple.c"
  $3062 = (($3059) + 4)|0; //@line 303 "mcbits/Keccak-simple.c"
  $3063 = $3062; //@line 303 "mcbits/Keccak-simple.c"
  $3064 = HEAP32[$3063>>2]|0; //@line 303 "mcbits/Keccak-simple.c"
  $3065 = $33; //@line 303 "mcbits/Keccak-simple.c"
  $3066 = $3065; //@line 303 "mcbits/Keccak-simple.c"
  $3067 = HEAP32[$3066>>2]|0; //@line 303 "mcbits/Keccak-simple.c"
  $3068 = (($3065) + 4)|0; //@line 303 "mcbits/Keccak-simple.c"
  $3069 = $3068; //@line 303 "mcbits/Keccak-simple.c"
  $3070 = HEAP32[$3069>>2]|0; //@line 303 "mcbits/Keccak-simple.c"
  $3071 = $3067 ^ -1; //@line 303 "mcbits/Keccak-simple.c"
  $3072 = $3070 ^ -1; //@line 303 "mcbits/Keccak-simple.c"
  $3073 = $34; //@line 303 "mcbits/Keccak-simple.c"
  $3074 = $3073; //@line 303 "mcbits/Keccak-simple.c"
  $3075 = HEAP32[$3074>>2]|0; //@line 303 "mcbits/Keccak-simple.c"
  $3076 = (($3073) + 4)|0; //@line 303 "mcbits/Keccak-simple.c"
  $3077 = $3076; //@line 303 "mcbits/Keccak-simple.c"
  $3078 = HEAP32[$3077>>2]|0; //@line 303 "mcbits/Keccak-simple.c"
  $3079 = $3071 & $3075; //@line 303 "mcbits/Keccak-simple.c"
  $3080 = $3072 & $3078; //@line 303 "mcbits/Keccak-simple.c"
  $3081 = $3061 ^ $3079; //@line 303 "mcbits/Keccak-simple.c"
  $3082 = $3064 ^ $3080; //@line 303 "mcbits/Keccak-simple.c"
  $3083 = $7; //@line 303 "mcbits/Keccak-simple.c"
  $3084 = $3083; //@line 303 "mcbits/Keccak-simple.c"
  HEAP32[$3084>>2] = $3081; //@line 303 "mcbits/Keccak-simple.c"
  $3085 = (($3083) + 4)|0; //@line 303 "mcbits/Keccak-simple.c"
  $3086 = $3085; //@line 303 "mcbits/Keccak-simple.c"
  HEAP32[$3086>>2] = $3082; //@line 303 "mcbits/Keccak-simple.c"
  $3087 = $33; //@line 304 "mcbits/Keccak-simple.c"
  $3088 = $3087; //@line 304 "mcbits/Keccak-simple.c"
  $3089 = HEAP32[$3088>>2]|0; //@line 304 "mcbits/Keccak-simple.c"
  $3090 = (($3087) + 4)|0; //@line 304 "mcbits/Keccak-simple.c"
  $3091 = $3090; //@line 304 "mcbits/Keccak-simple.c"
  $3092 = HEAP32[$3091>>2]|0; //@line 304 "mcbits/Keccak-simple.c"
  $3093 = $34; //@line 304 "mcbits/Keccak-simple.c"
  $3094 = $3093; //@line 304 "mcbits/Keccak-simple.c"
  $3095 = HEAP32[$3094>>2]|0; //@line 304 "mcbits/Keccak-simple.c"
  $3096 = (($3093) + 4)|0; //@line 304 "mcbits/Keccak-simple.c"
  $3097 = $3096; //@line 304 "mcbits/Keccak-simple.c"
  $3098 = HEAP32[$3097>>2]|0; //@line 304 "mcbits/Keccak-simple.c"
  $3099 = $3095 ^ -1; //@line 304 "mcbits/Keccak-simple.c"
  $3100 = $3098 ^ -1; //@line 304 "mcbits/Keccak-simple.c"
  $3101 = $35; //@line 304 "mcbits/Keccak-simple.c"
  $3102 = $3101; //@line 304 "mcbits/Keccak-simple.c"
  $3103 = HEAP32[$3102>>2]|0; //@line 304 "mcbits/Keccak-simple.c"
  $3104 = (($3101) + 4)|0; //@line 304 "mcbits/Keccak-simple.c"
  $3105 = $3104; //@line 304 "mcbits/Keccak-simple.c"
  $3106 = HEAP32[$3105>>2]|0; //@line 304 "mcbits/Keccak-simple.c"
  $3107 = $3099 & $3103; //@line 304 "mcbits/Keccak-simple.c"
  $3108 = $3100 & $3106; //@line 304 "mcbits/Keccak-simple.c"
  $3109 = $3089 ^ $3107; //@line 304 "mcbits/Keccak-simple.c"
  $3110 = $3092 ^ $3108; //@line 304 "mcbits/Keccak-simple.c"
  $3111 = $8; //@line 304 "mcbits/Keccak-simple.c"
  $3112 = $3111; //@line 304 "mcbits/Keccak-simple.c"
  HEAP32[$3112>>2] = $3109; //@line 304 "mcbits/Keccak-simple.c"
  $3113 = (($3111) + 4)|0; //@line 304 "mcbits/Keccak-simple.c"
  $3114 = $3113; //@line 304 "mcbits/Keccak-simple.c"
  HEAP32[$3114>>2] = $3110; //@line 304 "mcbits/Keccak-simple.c"
  $3115 = $34; //@line 305 "mcbits/Keccak-simple.c"
  $3116 = $3115; //@line 305 "mcbits/Keccak-simple.c"
  $3117 = HEAP32[$3116>>2]|0; //@line 305 "mcbits/Keccak-simple.c"
  $3118 = (($3115) + 4)|0; //@line 305 "mcbits/Keccak-simple.c"
  $3119 = $3118; //@line 305 "mcbits/Keccak-simple.c"
  $3120 = HEAP32[$3119>>2]|0; //@line 305 "mcbits/Keccak-simple.c"
  $3121 = $35; //@line 305 "mcbits/Keccak-simple.c"
  $3122 = $3121; //@line 305 "mcbits/Keccak-simple.c"
  $3123 = HEAP32[$3122>>2]|0; //@line 305 "mcbits/Keccak-simple.c"
  $3124 = (($3121) + 4)|0; //@line 305 "mcbits/Keccak-simple.c"
  $3125 = $3124; //@line 305 "mcbits/Keccak-simple.c"
  $3126 = HEAP32[$3125>>2]|0; //@line 305 "mcbits/Keccak-simple.c"
  $3127 = $3123 ^ -1; //@line 305 "mcbits/Keccak-simple.c"
  $3128 = $3126 ^ -1; //@line 305 "mcbits/Keccak-simple.c"
  $3129 = $31; //@line 305 "mcbits/Keccak-simple.c"
  $3130 = $3129; //@line 305 "mcbits/Keccak-simple.c"
  $3131 = HEAP32[$3130>>2]|0; //@line 305 "mcbits/Keccak-simple.c"
  $3132 = (($3129) + 4)|0; //@line 305 "mcbits/Keccak-simple.c"
  $3133 = $3132; //@line 305 "mcbits/Keccak-simple.c"
  $3134 = HEAP32[$3133>>2]|0; //@line 305 "mcbits/Keccak-simple.c"
  $3135 = $3127 & $3131; //@line 305 "mcbits/Keccak-simple.c"
  $3136 = $3128 & $3134; //@line 305 "mcbits/Keccak-simple.c"
  $3137 = $3117 ^ $3135; //@line 305 "mcbits/Keccak-simple.c"
  $3138 = $3120 ^ $3136; //@line 305 "mcbits/Keccak-simple.c"
  $3139 = $9; //@line 305 "mcbits/Keccak-simple.c"
  $3140 = $3139; //@line 305 "mcbits/Keccak-simple.c"
  HEAP32[$3140>>2] = $3137; //@line 305 "mcbits/Keccak-simple.c"
  $3141 = (($3139) + 4)|0; //@line 305 "mcbits/Keccak-simple.c"
  $3142 = $3141; //@line 305 "mcbits/Keccak-simple.c"
  HEAP32[$3142>>2] = $3138; //@line 305 "mcbits/Keccak-simple.c"
  $3143 = $35; //@line 306 "mcbits/Keccak-simple.c"
  $3144 = $3143; //@line 306 "mcbits/Keccak-simple.c"
  $3145 = HEAP32[$3144>>2]|0; //@line 306 "mcbits/Keccak-simple.c"
  $3146 = (($3143) + 4)|0; //@line 306 "mcbits/Keccak-simple.c"
  $3147 = $3146; //@line 306 "mcbits/Keccak-simple.c"
  $3148 = HEAP32[$3147>>2]|0; //@line 306 "mcbits/Keccak-simple.c"
  $3149 = $31; //@line 306 "mcbits/Keccak-simple.c"
  $3150 = $3149; //@line 306 "mcbits/Keccak-simple.c"
  $3151 = HEAP32[$3150>>2]|0; //@line 306 "mcbits/Keccak-simple.c"
  $3152 = (($3149) + 4)|0; //@line 306 "mcbits/Keccak-simple.c"
  $3153 = $3152; //@line 306 "mcbits/Keccak-simple.c"
  $3154 = HEAP32[$3153>>2]|0; //@line 306 "mcbits/Keccak-simple.c"
  $3155 = $3151 ^ -1; //@line 306 "mcbits/Keccak-simple.c"
  $3156 = $3154 ^ -1; //@line 306 "mcbits/Keccak-simple.c"
  $3157 = $32; //@line 306 "mcbits/Keccak-simple.c"
  $3158 = $3157; //@line 306 "mcbits/Keccak-simple.c"
  $3159 = HEAP32[$3158>>2]|0; //@line 306 "mcbits/Keccak-simple.c"
  $3160 = (($3157) + 4)|0; //@line 306 "mcbits/Keccak-simple.c"
  $3161 = $3160; //@line 306 "mcbits/Keccak-simple.c"
  $3162 = HEAP32[$3161>>2]|0; //@line 306 "mcbits/Keccak-simple.c"
  $3163 = $3155 & $3159; //@line 306 "mcbits/Keccak-simple.c"
  $3164 = $3156 & $3162; //@line 306 "mcbits/Keccak-simple.c"
  $3165 = $3145 ^ $3163; //@line 306 "mcbits/Keccak-simple.c"
  $3166 = $3148 ^ $3164; //@line 306 "mcbits/Keccak-simple.c"
  $3167 = $10; //@line 306 "mcbits/Keccak-simple.c"
  $3168 = $3167; //@line 306 "mcbits/Keccak-simple.c"
  HEAP32[$3168>>2] = $3165; //@line 306 "mcbits/Keccak-simple.c"
  $3169 = (($3167) + 4)|0; //@line 306 "mcbits/Keccak-simple.c"
  $3170 = $3169; //@line 306 "mcbits/Keccak-simple.c"
  HEAP32[$3170>>2] = $3166; //@line 306 "mcbits/Keccak-simple.c"
  $3171 = $39; //@line 308 "mcbits/Keccak-simple.c"
  $3172 = $3171; //@line 308 "mcbits/Keccak-simple.c"
  $3173 = HEAP32[$3172>>2]|0; //@line 308 "mcbits/Keccak-simple.c"
  $3174 = (($3171) + 4)|0; //@line 308 "mcbits/Keccak-simple.c"
  $3175 = $3174; //@line 308 "mcbits/Keccak-simple.c"
  $3176 = HEAP32[$3175>>2]|0; //@line 308 "mcbits/Keccak-simple.c"
  $3177 = $44; //@line 308 "mcbits/Keccak-simple.c"
  $3178 = $3177; //@line 308 "mcbits/Keccak-simple.c"
  $3179 = HEAP32[$3178>>2]|0; //@line 308 "mcbits/Keccak-simple.c"
  $3180 = (($3177) + 4)|0; //@line 308 "mcbits/Keccak-simple.c"
  $3181 = $3180; //@line 308 "mcbits/Keccak-simple.c"
  $3182 = HEAP32[$3181>>2]|0; //@line 308 "mcbits/Keccak-simple.c"
  $3183 = $3179 ^ $3173; //@line 308 "mcbits/Keccak-simple.c"
  $3184 = $3182 ^ $3176; //@line 308 "mcbits/Keccak-simple.c"
  $3185 = $44; //@line 308 "mcbits/Keccak-simple.c"
  $3186 = $3185; //@line 308 "mcbits/Keccak-simple.c"
  HEAP32[$3186>>2] = $3183; //@line 308 "mcbits/Keccak-simple.c"
  $3187 = (($3185) + 4)|0; //@line 308 "mcbits/Keccak-simple.c"
  $3188 = $3187; //@line 308 "mcbits/Keccak-simple.c"
  HEAP32[$3188>>2] = $3184; //@line 308 "mcbits/Keccak-simple.c"
  $3189 = $44; //@line 309 "mcbits/Keccak-simple.c"
  $3190 = $3189; //@line 309 "mcbits/Keccak-simple.c"
  $3191 = HEAP32[$3190>>2]|0; //@line 309 "mcbits/Keccak-simple.c"
  $3192 = (($3189) + 4)|0; //@line 309 "mcbits/Keccak-simple.c"
  $3193 = $3192; //@line 309 "mcbits/Keccak-simple.c"
  $3194 = HEAP32[$3193>>2]|0; //@line 309 "mcbits/Keccak-simple.c"
  $3195 = (_bitshift64Shl(($3191|0),($3194|0),28)|0); //@line 309 "mcbits/Keccak-simple.c"
  $3196 = tempRet0; //@line 309 "mcbits/Keccak-simple.c"
  $3197 = $44; //@line 309 "mcbits/Keccak-simple.c"
  $3198 = $3197; //@line 309 "mcbits/Keccak-simple.c"
  $3199 = HEAP32[$3198>>2]|0; //@line 309 "mcbits/Keccak-simple.c"
  $3200 = (($3197) + 4)|0; //@line 309 "mcbits/Keccak-simple.c"
  $3201 = $3200; //@line 309 "mcbits/Keccak-simple.c"
  $3202 = HEAP32[$3201>>2]|0; //@line 309 "mcbits/Keccak-simple.c"
  $3203 = (_bitshift64Lshr(($3199|0),($3202|0),36)|0); //@line 309 "mcbits/Keccak-simple.c"
  $3204 = tempRet0; //@line 309 "mcbits/Keccak-simple.c"
  $3205 = $3195 ^ $3203; //@line 309 "mcbits/Keccak-simple.c"
  $3206 = $3196 ^ $3204; //@line 309 "mcbits/Keccak-simple.c"
  $3207 = $31; //@line 309 "mcbits/Keccak-simple.c"
  $3208 = $3207; //@line 309 "mcbits/Keccak-simple.c"
  HEAP32[$3208>>2] = $3205; //@line 309 "mcbits/Keccak-simple.c"
  $3209 = (($3207) + 4)|0; //@line 309 "mcbits/Keccak-simple.c"
  $3210 = $3209; //@line 309 "mcbits/Keccak-simple.c"
  HEAP32[$3210>>2] = $3206; //@line 309 "mcbits/Keccak-simple.c"
  $3211 = $40; //@line 310 "mcbits/Keccak-simple.c"
  $3212 = $3211; //@line 310 "mcbits/Keccak-simple.c"
  $3213 = HEAP32[$3212>>2]|0; //@line 310 "mcbits/Keccak-simple.c"
  $3214 = (($3211) + 4)|0; //@line 310 "mcbits/Keccak-simple.c"
  $3215 = $3214; //@line 310 "mcbits/Keccak-simple.c"
  $3216 = HEAP32[$3215>>2]|0; //@line 310 "mcbits/Keccak-simple.c"
  $3217 = $50; //@line 310 "mcbits/Keccak-simple.c"
  $3218 = $3217; //@line 310 "mcbits/Keccak-simple.c"
  $3219 = HEAP32[$3218>>2]|0; //@line 310 "mcbits/Keccak-simple.c"
  $3220 = (($3217) + 4)|0; //@line 310 "mcbits/Keccak-simple.c"
  $3221 = $3220; //@line 310 "mcbits/Keccak-simple.c"
  $3222 = HEAP32[$3221>>2]|0; //@line 310 "mcbits/Keccak-simple.c"
  $3223 = $3219 ^ $3213; //@line 310 "mcbits/Keccak-simple.c"
  $3224 = $3222 ^ $3216; //@line 310 "mcbits/Keccak-simple.c"
  $3225 = $50; //@line 310 "mcbits/Keccak-simple.c"
  $3226 = $3225; //@line 310 "mcbits/Keccak-simple.c"
  HEAP32[$3226>>2] = $3223; //@line 310 "mcbits/Keccak-simple.c"
  $3227 = (($3225) + 4)|0; //@line 310 "mcbits/Keccak-simple.c"
  $3228 = $3227; //@line 310 "mcbits/Keccak-simple.c"
  HEAP32[$3228>>2] = $3224; //@line 310 "mcbits/Keccak-simple.c"
  $3229 = $50; //@line 311 "mcbits/Keccak-simple.c"
  $3230 = $3229; //@line 311 "mcbits/Keccak-simple.c"
  $3231 = HEAP32[$3230>>2]|0; //@line 311 "mcbits/Keccak-simple.c"
  $3232 = (($3229) + 4)|0; //@line 311 "mcbits/Keccak-simple.c"
  $3233 = $3232; //@line 311 "mcbits/Keccak-simple.c"
  $3234 = HEAP32[$3233>>2]|0; //@line 311 "mcbits/Keccak-simple.c"
  $3235 = (_bitshift64Shl(($3231|0),($3234|0),20)|0); //@line 311 "mcbits/Keccak-simple.c"
  $3236 = tempRet0; //@line 311 "mcbits/Keccak-simple.c"
  $3237 = $50; //@line 311 "mcbits/Keccak-simple.c"
  $3238 = $3237; //@line 311 "mcbits/Keccak-simple.c"
  $3239 = HEAP32[$3238>>2]|0; //@line 311 "mcbits/Keccak-simple.c"
  $3240 = (($3237) + 4)|0; //@line 311 "mcbits/Keccak-simple.c"
  $3241 = $3240; //@line 311 "mcbits/Keccak-simple.c"
  $3242 = HEAP32[$3241>>2]|0; //@line 311 "mcbits/Keccak-simple.c"
  $3243 = (_bitshift64Lshr(($3239|0),($3242|0),44)|0); //@line 311 "mcbits/Keccak-simple.c"
  $3244 = tempRet0; //@line 311 "mcbits/Keccak-simple.c"
  $3245 = $3235 ^ $3243; //@line 311 "mcbits/Keccak-simple.c"
  $3246 = $3236 ^ $3244; //@line 311 "mcbits/Keccak-simple.c"
  $3247 = $32; //@line 311 "mcbits/Keccak-simple.c"
  $3248 = $3247; //@line 311 "mcbits/Keccak-simple.c"
  HEAP32[$3248>>2] = $3245; //@line 311 "mcbits/Keccak-simple.c"
  $3249 = (($3247) + 4)|0; //@line 311 "mcbits/Keccak-simple.c"
  $3250 = $3249; //@line 311 "mcbits/Keccak-simple.c"
  HEAP32[$3250>>2] = $3246; //@line 311 "mcbits/Keccak-simple.c"
  $3251 = $36; //@line 312 "mcbits/Keccak-simple.c"
  $3252 = $3251; //@line 312 "mcbits/Keccak-simple.c"
  $3253 = HEAP32[$3252>>2]|0; //@line 312 "mcbits/Keccak-simple.c"
  $3254 = (($3251) + 4)|0; //@line 312 "mcbits/Keccak-simple.c"
  $3255 = $3254; //@line 312 "mcbits/Keccak-simple.c"
  $3256 = HEAP32[$3255>>2]|0; //@line 312 "mcbits/Keccak-simple.c"
  $3257 = $51; //@line 312 "mcbits/Keccak-simple.c"
  $3258 = $3257; //@line 312 "mcbits/Keccak-simple.c"
  $3259 = HEAP32[$3258>>2]|0; //@line 312 "mcbits/Keccak-simple.c"
  $3260 = (($3257) + 4)|0; //@line 312 "mcbits/Keccak-simple.c"
  $3261 = $3260; //@line 312 "mcbits/Keccak-simple.c"
  $3262 = HEAP32[$3261>>2]|0; //@line 312 "mcbits/Keccak-simple.c"
  $3263 = $3259 ^ $3253; //@line 312 "mcbits/Keccak-simple.c"
  $3264 = $3262 ^ $3256; //@line 312 "mcbits/Keccak-simple.c"
  $3265 = $51; //@line 312 "mcbits/Keccak-simple.c"
  $3266 = $3265; //@line 312 "mcbits/Keccak-simple.c"
  HEAP32[$3266>>2] = $3263; //@line 312 "mcbits/Keccak-simple.c"
  $3267 = (($3265) + 4)|0; //@line 312 "mcbits/Keccak-simple.c"
  $3268 = $3267; //@line 312 "mcbits/Keccak-simple.c"
  HEAP32[$3268>>2] = $3264; //@line 312 "mcbits/Keccak-simple.c"
  $3269 = $51; //@line 313 "mcbits/Keccak-simple.c"
  $3270 = $3269; //@line 313 "mcbits/Keccak-simple.c"
  $3271 = HEAP32[$3270>>2]|0; //@line 313 "mcbits/Keccak-simple.c"
  $3272 = (($3269) + 4)|0; //@line 313 "mcbits/Keccak-simple.c"
  $3273 = $3272; //@line 313 "mcbits/Keccak-simple.c"
  $3274 = HEAP32[$3273>>2]|0; //@line 313 "mcbits/Keccak-simple.c"
  $3275 = (_bitshift64Shl(($3271|0),($3274|0),3)|0); //@line 313 "mcbits/Keccak-simple.c"
  $3276 = tempRet0; //@line 313 "mcbits/Keccak-simple.c"
  $3277 = $51; //@line 313 "mcbits/Keccak-simple.c"
  $3278 = $3277; //@line 313 "mcbits/Keccak-simple.c"
  $3279 = HEAP32[$3278>>2]|0; //@line 313 "mcbits/Keccak-simple.c"
  $3280 = (($3277) + 4)|0; //@line 313 "mcbits/Keccak-simple.c"
  $3281 = $3280; //@line 313 "mcbits/Keccak-simple.c"
  $3282 = HEAP32[$3281>>2]|0; //@line 313 "mcbits/Keccak-simple.c"
  $3283 = (_bitshift64Lshr(($3279|0),($3282|0),61)|0); //@line 313 "mcbits/Keccak-simple.c"
  $3284 = tempRet0; //@line 313 "mcbits/Keccak-simple.c"
  $3285 = $3275 ^ $3283; //@line 313 "mcbits/Keccak-simple.c"
  $3286 = $3276 ^ $3284; //@line 313 "mcbits/Keccak-simple.c"
  $3287 = $33; //@line 313 "mcbits/Keccak-simple.c"
  $3288 = $3287; //@line 313 "mcbits/Keccak-simple.c"
  HEAP32[$3288>>2] = $3285; //@line 313 "mcbits/Keccak-simple.c"
  $3289 = (($3287) + 4)|0; //@line 313 "mcbits/Keccak-simple.c"
  $3290 = $3289; //@line 313 "mcbits/Keccak-simple.c"
  HEAP32[$3290>>2] = $3286; //@line 313 "mcbits/Keccak-simple.c"
  $3291 = $37; //@line 314 "mcbits/Keccak-simple.c"
  $3292 = $3291; //@line 314 "mcbits/Keccak-simple.c"
  $3293 = HEAP32[$3292>>2]|0; //@line 314 "mcbits/Keccak-simple.c"
  $3294 = (($3291) + 4)|0; //@line 314 "mcbits/Keccak-simple.c"
  $3295 = $3294; //@line 314 "mcbits/Keccak-simple.c"
  $3296 = HEAP32[$3295>>2]|0; //@line 314 "mcbits/Keccak-simple.c"
  $3297 = $57; //@line 314 "mcbits/Keccak-simple.c"
  $3298 = $3297; //@line 314 "mcbits/Keccak-simple.c"
  $3299 = HEAP32[$3298>>2]|0; //@line 314 "mcbits/Keccak-simple.c"
  $3300 = (($3297) + 4)|0; //@line 314 "mcbits/Keccak-simple.c"
  $3301 = $3300; //@line 314 "mcbits/Keccak-simple.c"
  $3302 = HEAP32[$3301>>2]|0; //@line 314 "mcbits/Keccak-simple.c"
  $3303 = $3299 ^ $3293; //@line 314 "mcbits/Keccak-simple.c"
  $3304 = $3302 ^ $3296; //@line 314 "mcbits/Keccak-simple.c"
  $3305 = $57; //@line 314 "mcbits/Keccak-simple.c"
  $3306 = $3305; //@line 314 "mcbits/Keccak-simple.c"
  HEAP32[$3306>>2] = $3303; //@line 314 "mcbits/Keccak-simple.c"
  $3307 = (($3305) + 4)|0; //@line 314 "mcbits/Keccak-simple.c"
  $3308 = $3307; //@line 314 "mcbits/Keccak-simple.c"
  HEAP32[$3308>>2] = $3304; //@line 314 "mcbits/Keccak-simple.c"
  $3309 = $57; //@line 315 "mcbits/Keccak-simple.c"
  $3310 = $3309; //@line 315 "mcbits/Keccak-simple.c"
  $3311 = HEAP32[$3310>>2]|0; //@line 315 "mcbits/Keccak-simple.c"
  $3312 = (($3309) + 4)|0; //@line 315 "mcbits/Keccak-simple.c"
  $3313 = $3312; //@line 315 "mcbits/Keccak-simple.c"
  $3314 = HEAP32[$3313>>2]|0; //@line 315 "mcbits/Keccak-simple.c"
  $3315 = (_bitshift64Shl(($3311|0),($3314|0),45)|0); //@line 315 "mcbits/Keccak-simple.c"
  $3316 = tempRet0; //@line 315 "mcbits/Keccak-simple.c"
  $3317 = $57; //@line 315 "mcbits/Keccak-simple.c"
  $3318 = $3317; //@line 315 "mcbits/Keccak-simple.c"
  $3319 = HEAP32[$3318>>2]|0; //@line 315 "mcbits/Keccak-simple.c"
  $3320 = (($3317) + 4)|0; //@line 315 "mcbits/Keccak-simple.c"
  $3321 = $3320; //@line 315 "mcbits/Keccak-simple.c"
  $3322 = HEAP32[$3321>>2]|0; //@line 315 "mcbits/Keccak-simple.c"
  $3323 = (_bitshift64Lshr(($3319|0),($3322|0),19)|0); //@line 315 "mcbits/Keccak-simple.c"
  $3324 = tempRet0; //@line 315 "mcbits/Keccak-simple.c"
  $3325 = $3315 ^ $3323; //@line 315 "mcbits/Keccak-simple.c"
  $3326 = $3316 ^ $3324; //@line 315 "mcbits/Keccak-simple.c"
  $3327 = $34; //@line 315 "mcbits/Keccak-simple.c"
  $3328 = $3327; //@line 315 "mcbits/Keccak-simple.c"
  HEAP32[$3328>>2] = $3325; //@line 315 "mcbits/Keccak-simple.c"
  $3329 = (($3327) + 4)|0; //@line 315 "mcbits/Keccak-simple.c"
  $3330 = $3329; //@line 315 "mcbits/Keccak-simple.c"
  HEAP32[$3330>>2] = $3326; //@line 315 "mcbits/Keccak-simple.c"
  $3331 = $38; //@line 316 "mcbits/Keccak-simple.c"
  $3332 = $3331; //@line 316 "mcbits/Keccak-simple.c"
  $3333 = HEAP32[$3332>>2]|0; //@line 316 "mcbits/Keccak-simple.c"
  $3334 = (($3331) + 4)|0; //@line 316 "mcbits/Keccak-simple.c"
  $3335 = $3334; //@line 316 "mcbits/Keccak-simple.c"
  $3336 = HEAP32[$3335>>2]|0; //@line 316 "mcbits/Keccak-simple.c"
  $3337 = $63; //@line 316 "mcbits/Keccak-simple.c"
  $3338 = $3337; //@line 316 "mcbits/Keccak-simple.c"
  $3339 = HEAP32[$3338>>2]|0; //@line 316 "mcbits/Keccak-simple.c"
  $3340 = (($3337) + 4)|0; //@line 316 "mcbits/Keccak-simple.c"
  $3341 = $3340; //@line 316 "mcbits/Keccak-simple.c"
  $3342 = HEAP32[$3341>>2]|0; //@line 316 "mcbits/Keccak-simple.c"
  $3343 = $3339 ^ $3333; //@line 316 "mcbits/Keccak-simple.c"
  $3344 = $3342 ^ $3336; //@line 316 "mcbits/Keccak-simple.c"
  $3345 = $63; //@line 316 "mcbits/Keccak-simple.c"
  $3346 = $3345; //@line 316 "mcbits/Keccak-simple.c"
  HEAP32[$3346>>2] = $3343; //@line 316 "mcbits/Keccak-simple.c"
  $3347 = (($3345) + 4)|0; //@line 316 "mcbits/Keccak-simple.c"
  $3348 = $3347; //@line 316 "mcbits/Keccak-simple.c"
  HEAP32[$3348>>2] = $3344; //@line 316 "mcbits/Keccak-simple.c"
  $3349 = $63; //@line 317 "mcbits/Keccak-simple.c"
  $3350 = $3349; //@line 317 "mcbits/Keccak-simple.c"
  $3351 = HEAP32[$3350>>2]|0; //@line 317 "mcbits/Keccak-simple.c"
  $3352 = (($3349) + 4)|0; //@line 317 "mcbits/Keccak-simple.c"
  $3353 = $3352; //@line 317 "mcbits/Keccak-simple.c"
  $3354 = HEAP32[$3353>>2]|0; //@line 317 "mcbits/Keccak-simple.c"
  $3355 = (_bitshift64Shl(($3351|0),($3354|0),61)|0); //@line 317 "mcbits/Keccak-simple.c"
  $3356 = tempRet0; //@line 317 "mcbits/Keccak-simple.c"
  $3357 = $63; //@line 317 "mcbits/Keccak-simple.c"
  $3358 = $3357; //@line 317 "mcbits/Keccak-simple.c"
  $3359 = HEAP32[$3358>>2]|0; //@line 317 "mcbits/Keccak-simple.c"
  $3360 = (($3357) + 4)|0; //@line 317 "mcbits/Keccak-simple.c"
  $3361 = $3360; //@line 317 "mcbits/Keccak-simple.c"
  $3362 = HEAP32[$3361>>2]|0; //@line 317 "mcbits/Keccak-simple.c"
  $3363 = (_bitshift64Lshr(($3359|0),($3362|0),3)|0); //@line 317 "mcbits/Keccak-simple.c"
  $3364 = tempRet0; //@line 317 "mcbits/Keccak-simple.c"
  $3365 = $3355 ^ $3363; //@line 317 "mcbits/Keccak-simple.c"
  $3366 = $3356 ^ $3364; //@line 317 "mcbits/Keccak-simple.c"
  $3367 = $35; //@line 317 "mcbits/Keccak-simple.c"
  $3368 = $3367; //@line 317 "mcbits/Keccak-simple.c"
  HEAP32[$3368>>2] = $3365; //@line 317 "mcbits/Keccak-simple.c"
  $3369 = (($3367) + 4)|0; //@line 317 "mcbits/Keccak-simple.c"
  $3370 = $3369; //@line 317 "mcbits/Keccak-simple.c"
  HEAP32[$3370>>2] = $3366; //@line 317 "mcbits/Keccak-simple.c"
  $3371 = $31; //@line 318 "mcbits/Keccak-simple.c"
  $3372 = $3371; //@line 318 "mcbits/Keccak-simple.c"
  $3373 = HEAP32[$3372>>2]|0; //@line 318 "mcbits/Keccak-simple.c"
  $3374 = (($3371) + 4)|0; //@line 318 "mcbits/Keccak-simple.c"
  $3375 = $3374; //@line 318 "mcbits/Keccak-simple.c"
  $3376 = HEAP32[$3375>>2]|0; //@line 318 "mcbits/Keccak-simple.c"
  $3377 = $32; //@line 318 "mcbits/Keccak-simple.c"
  $3378 = $3377; //@line 318 "mcbits/Keccak-simple.c"
  $3379 = HEAP32[$3378>>2]|0; //@line 318 "mcbits/Keccak-simple.c"
  $3380 = (($3377) + 4)|0; //@line 318 "mcbits/Keccak-simple.c"
  $3381 = $3380; //@line 318 "mcbits/Keccak-simple.c"
  $3382 = HEAP32[$3381>>2]|0; //@line 318 "mcbits/Keccak-simple.c"
  $3383 = $3379 ^ -1; //@line 318 "mcbits/Keccak-simple.c"
  $3384 = $3382 ^ -1; //@line 318 "mcbits/Keccak-simple.c"
  $3385 = $33; //@line 318 "mcbits/Keccak-simple.c"
  $3386 = $3385; //@line 318 "mcbits/Keccak-simple.c"
  $3387 = HEAP32[$3386>>2]|0; //@line 318 "mcbits/Keccak-simple.c"
  $3388 = (($3385) + 4)|0; //@line 318 "mcbits/Keccak-simple.c"
  $3389 = $3388; //@line 318 "mcbits/Keccak-simple.c"
  $3390 = HEAP32[$3389>>2]|0; //@line 318 "mcbits/Keccak-simple.c"
  $3391 = $3383 & $3387; //@line 318 "mcbits/Keccak-simple.c"
  $3392 = $3384 & $3390; //@line 318 "mcbits/Keccak-simple.c"
  $3393 = $3373 ^ $3391; //@line 318 "mcbits/Keccak-simple.c"
  $3394 = $3376 ^ $3392; //@line 318 "mcbits/Keccak-simple.c"
  $3395 = $11; //@line 318 "mcbits/Keccak-simple.c"
  $3396 = $3395; //@line 318 "mcbits/Keccak-simple.c"
  HEAP32[$3396>>2] = $3393; //@line 318 "mcbits/Keccak-simple.c"
  $3397 = (($3395) + 4)|0; //@line 318 "mcbits/Keccak-simple.c"
  $3398 = $3397; //@line 318 "mcbits/Keccak-simple.c"
  HEAP32[$3398>>2] = $3394; //@line 318 "mcbits/Keccak-simple.c"
  $3399 = $32; //@line 319 "mcbits/Keccak-simple.c"
  $3400 = $3399; //@line 319 "mcbits/Keccak-simple.c"
  $3401 = HEAP32[$3400>>2]|0; //@line 319 "mcbits/Keccak-simple.c"
  $3402 = (($3399) + 4)|0; //@line 319 "mcbits/Keccak-simple.c"
  $3403 = $3402; //@line 319 "mcbits/Keccak-simple.c"
  $3404 = HEAP32[$3403>>2]|0; //@line 319 "mcbits/Keccak-simple.c"
  $3405 = $33; //@line 319 "mcbits/Keccak-simple.c"
  $3406 = $3405; //@line 319 "mcbits/Keccak-simple.c"
  $3407 = HEAP32[$3406>>2]|0; //@line 319 "mcbits/Keccak-simple.c"
  $3408 = (($3405) + 4)|0; //@line 319 "mcbits/Keccak-simple.c"
  $3409 = $3408; //@line 319 "mcbits/Keccak-simple.c"
  $3410 = HEAP32[$3409>>2]|0; //@line 319 "mcbits/Keccak-simple.c"
  $3411 = $3407 ^ -1; //@line 319 "mcbits/Keccak-simple.c"
  $3412 = $3410 ^ -1; //@line 319 "mcbits/Keccak-simple.c"
  $3413 = $34; //@line 319 "mcbits/Keccak-simple.c"
  $3414 = $3413; //@line 319 "mcbits/Keccak-simple.c"
  $3415 = HEAP32[$3414>>2]|0; //@line 319 "mcbits/Keccak-simple.c"
  $3416 = (($3413) + 4)|0; //@line 319 "mcbits/Keccak-simple.c"
  $3417 = $3416; //@line 319 "mcbits/Keccak-simple.c"
  $3418 = HEAP32[$3417>>2]|0; //@line 319 "mcbits/Keccak-simple.c"
  $3419 = $3411 & $3415; //@line 319 "mcbits/Keccak-simple.c"
  $3420 = $3412 & $3418; //@line 319 "mcbits/Keccak-simple.c"
  $3421 = $3401 ^ $3419; //@line 319 "mcbits/Keccak-simple.c"
  $3422 = $3404 ^ $3420; //@line 319 "mcbits/Keccak-simple.c"
  $3423 = $12; //@line 319 "mcbits/Keccak-simple.c"
  $3424 = $3423; //@line 319 "mcbits/Keccak-simple.c"
  HEAP32[$3424>>2] = $3421; //@line 319 "mcbits/Keccak-simple.c"
  $3425 = (($3423) + 4)|0; //@line 319 "mcbits/Keccak-simple.c"
  $3426 = $3425; //@line 319 "mcbits/Keccak-simple.c"
  HEAP32[$3426>>2] = $3422; //@line 319 "mcbits/Keccak-simple.c"
  $3427 = $33; //@line 320 "mcbits/Keccak-simple.c"
  $3428 = $3427; //@line 320 "mcbits/Keccak-simple.c"
  $3429 = HEAP32[$3428>>2]|0; //@line 320 "mcbits/Keccak-simple.c"
  $3430 = (($3427) + 4)|0; //@line 320 "mcbits/Keccak-simple.c"
  $3431 = $3430; //@line 320 "mcbits/Keccak-simple.c"
  $3432 = HEAP32[$3431>>2]|0; //@line 320 "mcbits/Keccak-simple.c"
  $3433 = $34; //@line 320 "mcbits/Keccak-simple.c"
  $3434 = $3433; //@line 320 "mcbits/Keccak-simple.c"
  $3435 = HEAP32[$3434>>2]|0; //@line 320 "mcbits/Keccak-simple.c"
  $3436 = (($3433) + 4)|0; //@line 320 "mcbits/Keccak-simple.c"
  $3437 = $3436; //@line 320 "mcbits/Keccak-simple.c"
  $3438 = HEAP32[$3437>>2]|0; //@line 320 "mcbits/Keccak-simple.c"
  $3439 = $3435 ^ -1; //@line 320 "mcbits/Keccak-simple.c"
  $3440 = $3438 ^ -1; //@line 320 "mcbits/Keccak-simple.c"
  $3441 = $35; //@line 320 "mcbits/Keccak-simple.c"
  $3442 = $3441; //@line 320 "mcbits/Keccak-simple.c"
  $3443 = HEAP32[$3442>>2]|0; //@line 320 "mcbits/Keccak-simple.c"
  $3444 = (($3441) + 4)|0; //@line 320 "mcbits/Keccak-simple.c"
  $3445 = $3444; //@line 320 "mcbits/Keccak-simple.c"
  $3446 = HEAP32[$3445>>2]|0; //@line 320 "mcbits/Keccak-simple.c"
  $3447 = $3439 & $3443; //@line 320 "mcbits/Keccak-simple.c"
  $3448 = $3440 & $3446; //@line 320 "mcbits/Keccak-simple.c"
  $3449 = $3429 ^ $3447; //@line 320 "mcbits/Keccak-simple.c"
  $3450 = $3432 ^ $3448; //@line 320 "mcbits/Keccak-simple.c"
  $3451 = $13; //@line 320 "mcbits/Keccak-simple.c"
  $3452 = $3451; //@line 320 "mcbits/Keccak-simple.c"
  HEAP32[$3452>>2] = $3449; //@line 320 "mcbits/Keccak-simple.c"
  $3453 = (($3451) + 4)|0; //@line 320 "mcbits/Keccak-simple.c"
  $3454 = $3453; //@line 320 "mcbits/Keccak-simple.c"
  HEAP32[$3454>>2] = $3450; //@line 320 "mcbits/Keccak-simple.c"
  $3455 = $34; //@line 321 "mcbits/Keccak-simple.c"
  $3456 = $3455; //@line 321 "mcbits/Keccak-simple.c"
  $3457 = HEAP32[$3456>>2]|0; //@line 321 "mcbits/Keccak-simple.c"
  $3458 = (($3455) + 4)|0; //@line 321 "mcbits/Keccak-simple.c"
  $3459 = $3458; //@line 321 "mcbits/Keccak-simple.c"
  $3460 = HEAP32[$3459>>2]|0; //@line 321 "mcbits/Keccak-simple.c"
  $3461 = $35; //@line 321 "mcbits/Keccak-simple.c"
  $3462 = $3461; //@line 321 "mcbits/Keccak-simple.c"
  $3463 = HEAP32[$3462>>2]|0; //@line 321 "mcbits/Keccak-simple.c"
  $3464 = (($3461) + 4)|0; //@line 321 "mcbits/Keccak-simple.c"
  $3465 = $3464; //@line 321 "mcbits/Keccak-simple.c"
  $3466 = HEAP32[$3465>>2]|0; //@line 321 "mcbits/Keccak-simple.c"
  $3467 = $3463 ^ -1; //@line 321 "mcbits/Keccak-simple.c"
  $3468 = $3466 ^ -1; //@line 321 "mcbits/Keccak-simple.c"
  $3469 = $31; //@line 321 "mcbits/Keccak-simple.c"
  $3470 = $3469; //@line 321 "mcbits/Keccak-simple.c"
  $3471 = HEAP32[$3470>>2]|0; //@line 321 "mcbits/Keccak-simple.c"
  $3472 = (($3469) + 4)|0; //@line 321 "mcbits/Keccak-simple.c"
  $3473 = $3472; //@line 321 "mcbits/Keccak-simple.c"
  $3474 = HEAP32[$3473>>2]|0; //@line 321 "mcbits/Keccak-simple.c"
  $3475 = $3467 & $3471; //@line 321 "mcbits/Keccak-simple.c"
  $3476 = $3468 & $3474; //@line 321 "mcbits/Keccak-simple.c"
  $3477 = $3457 ^ $3475; //@line 321 "mcbits/Keccak-simple.c"
  $3478 = $3460 ^ $3476; //@line 321 "mcbits/Keccak-simple.c"
  $3479 = $14; //@line 321 "mcbits/Keccak-simple.c"
  $3480 = $3479; //@line 321 "mcbits/Keccak-simple.c"
  HEAP32[$3480>>2] = $3477; //@line 321 "mcbits/Keccak-simple.c"
  $3481 = (($3479) + 4)|0; //@line 321 "mcbits/Keccak-simple.c"
  $3482 = $3481; //@line 321 "mcbits/Keccak-simple.c"
  HEAP32[$3482>>2] = $3478; //@line 321 "mcbits/Keccak-simple.c"
  $3483 = $35; //@line 322 "mcbits/Keccak-simple.c"
  $3484 = $3483; //@line 322 "mcbits/Keccak-simple.c"
  $3485 = HEAP32[$3484>>2]|0; //@line 322 "mcbits/Keccak-simple.c"
  $3486 = (($3483) + 4)|0; //@line 322 "mcbits/Keccak-simple.c"
  $3487 = $3486; //@line 322 "mcbits/Keccak-simple.c"
  $3488 = HEAP32[$3487>>2]|0; //@line 322 "mcbits/Keccak-simple.c"
  $3489 = $31; //@line 322 "mcbits/Keccak-simple.c"
  $3490 = $3489; //@line 322 "mcbits/Keccak-simple.c"
  $3491 = HEAP32[$3490>>2]|0; //@line 322 "mcbits/Keccak-simple.c"
  $3492 = (($3489) + 4)|0; //@line 322 "mcbits/Keccak-simple.c"
  $3493 = $3492; //@line 322 "mcbits/Keccak-simple.c"
  $3494 = HEAP32[$3493>>2]|0; //@line 322 "mcbits/Keccak-simple.c"
  $3495 = $3491 ^ -1; //@line 322 "mcbits/Keccak-simple.c"
  $3496 = $3494 ^ -1; //@line 322 "mcbits/Keccak-simple.c"
  $3497 = $32; //@line 322 "mcbits/Keccak-simple.c"
  $3498 = $3497; //@line 322 "mcbits/Keccak-simple.c"
  $3499 = HEAP32[$3498>>2]|0; //@line 322 "mcbits/Keccak-simple.c"
  $3500 = (($3497) + 4)|0; //@line 322 "mcbits/Keccak-simple.c"
  $3501 = $3500; //@line 322 "mcbits/Keccak-simple.c"
  $3502 = HEAP32[$3501>>2]|0; //@line 322 "mcbits/Keccak-simple.c"
  $3503 = $3495 & $3499; //@line 322 "mcbits/Keccak-simple.c"
  $3504 = $3496 & $3502; //@line 322 "mcbits/Keccak-simple.c"
  $3505 = $3485 ^ $3503; //@line 322 "mcbits/Keccak-simple.c"
  $3506 = $3488 ^ $3504; //@line 322 "mcbits/Keccak-simple.c"
  $3507 = $15; //@line 322 "mcbits/Keccak-simple.c"
  $3508 = $3507; //@line 322 "mcbits/Keccak-simple.c"
  HEAP32[$3508>>2] = $3505; //@line 322 "mcbits/Keccak-simple.c"
  $3509 = (($3507) + 4)|0; //@line 322 "mcbits/Keccak-simple.c"
  $3510 = $3509; //@line 322 "mcbits/Keccak-simple.c"
  HEAP32[$3510>>2] = $3506; //@line 322 "mcbits/Keccak-simple.c"
  $3511 = $37; //@line 324 "mcbits/Keccak-simple.c"
  $3512 = $3511; //@line 324 "mcbits/Keccak-simple.c"
  $3513 = HEAP32[$3512>>2]|0; //@line 324 "mcbits/Keccak-simple.c"
  $3514 = (($3511) + 4)|0; //@line 324 "mcbits/Keccak-simple.c"
  $3515 = $3514; //@line 324 "mcbits/Keccak-simple.c"
  $3516 = HEAP32[$3515>>2]|0; //@line 324 "mcbits/Keccak-simple.c"
  $3517 = $42; //@line 324 "mcbits/Keccak-simple.c"
  $3518 = $3517; //@line 324 "mcbits/Keccak-simple.c"
  $3519 = HEAP32[$3518>>2]|0; //@line 324 "mcbits/Keccak-simple.c"
  $3520 = (($3517) + 4)|0; //@line 324 "mcbits/Keccak-simple.c"
  $3521 = $3520; //@line 324 "mcbits/Keccak-simple.c"
  $3522 = HEAP32[$3521>>2]|0; //@line 324 "mcbits/Keccak-simple.c"
  $3523 = $3519 ^ $3513; //@line 324 "mcbits/Keccak-simple.c"
  $3524 = $3522 ^ $3516; //@line 324 "mcbits/Keccak-simple.c"
  $3525 = $42; //@line 324 "mcbits/Keccak-simple.c"
  $3526 = $3525; //@line 324 "mcbits/Keccak-simple.c"
  HEAP32[$3526>>2] = $3523; //@line 324 "mcbits/Keccak-simple.c"
  $3527 = (($3525) + 4)|0; //@line 324 "mcbits/Keccak-simple.c"
  $3528 = $3527; //@line 324 "mcbits/Keccak-simple.c"
  HEAP32[$3528>>2] = $3524; //@line 324 "mcbits/Keccak-simple.c"
  $3529 = $42; //@line 325 "mcbits/Keccak-simple.c"
  $3530 = $3529; //@line 325 "mcbits/Keccak-simple.c"
  $3531 = HEAP32[$3530>>2]|0; //@line 325 "mcbits/Keccak-simple.c"
  $3532 = (($3529) + 4)|0; //@line 325 "mcbits/Keccak-simple.c"
  $3533 = $3532; //@line 325 "mcbits/Keccak-simple.c"
  $3534 = HEAP32[$3533>>2]|0; //@line 325 "mcbits/Keccak-simple.c"
  $3535 = (_bitshift64Shl(($3531|0),($3534|0),1)|0); //@line 325 "mcbits/Keccak-simple.c"
  $3536 = tempRet0; //@line 325 "mcbits/Keccak-simple.c"
  $3537 = $42; //@line 325 "mcbits/Keccak-simple.c"
  $3538 = $3537; //@line 325 "mcbits/Keccak-simple.c"
  $3539 = HEAP32[$3538>>2]|0; //@line 325 "mcbits/Keccak-simple.c"
  $3540 = (($3537) + 4)|0; //@line 325 "mcbits/Keccak-simple.c"
  $3541 = $3540; //@line 325 "mcbits/Keccak-simple.c"
  $3542 = HEAP32[$3541>>2]|0; //@line 325 "mcbits/Keccak-simple.c"
  $3543 = (_bitshift64Lshr(($3539|0),($3542|0),63)|0); //@line 325 "mcbits/Keccak-simple.c"
  $3544 = tempRet0; //@line 325 "mcbits/Keccak-simple.c"
  $3545 = $3535 ^ $3543; //@line 325 "mcbits/Keccak-simple.c"
  $3546 = $3536 ^ $3544; //@line 325 "mcbits/Keccak-simple.c"
  $3547 = $31; //@line 325 "mcbits/Keccak-simple.c"
  $3548 = $3547; //@line 325 "mcbits/Keccak-simple.c"
  HEAP32[$3548>>2] = $3545; //@line 325 "mcbits/Keccak-simple.c"
  $3549 = (($3547) + 4)|0; //@line 325 "mcbits/Keccak-simple.c"
  $3550 = $3549; //@line 325 "mcbits/Keccak-simple.c"
  HEAP32[$3550>>2] = $3546; //@line 325 "mcbits/Keccak-simple.c"
  $3551 = $38; //@line 326 "mcbits/Keccak-simple.c"
  $3552 = $3551; //@line 326 "mcbits/Keccak-simple.c"
  $3553 = HEAP32[$3552>>2]|0; //@line 326 "mcbits/Keccak-simple.c"
  $3554 = (($3551) + 4)|0; //@line 326 "mcbits/Keccak-simple.c"
  $3555 = $3554; //@line 326 "mcbits/Keccak-simple.c"
  $3556 = HEAP32[$3555>>2]|0; //@line 326 "mcbits/Keccak-simple.c"
  $3557 = $48; //@line 326 "mcbits/Keccak-simple.c"
  $3558 = $3557; //@line 326 "mcbits/Keccak-simple.c"
  $3559 = HEAP32[$3558>>2]|0; //@line 326 "mcbits/Keccak-simple.c"
  $3560 = (($3557) + 4)|0; //@line 326 "mcbits/Keccak-simple.c"
  $3561 = $3560; //@line 326 "mcbits/Keccak-simple.c"
  $3562 = HEAP32[$3561>>2]|0; //@line 326 "mcbits/Keccak-simple.c"
  $3563 = $3559 ^ $3553; //@line 326 "mcbits/Keccak-simple.c"
  $3564 = $3562 ^ $3556; //@line 326 "mcbits/Keccak-simple.c"
  $3565 = $48; //@line 326 "mcbits/Keccak-simple.c"
  $3566 = $3565; //@line 326 "mcbits/Keccak-simple.c"
  HEAP32[$3566>>2] = $3563; //@line 326 "mcbits/Keccak-simple.c"
  $3567 = (($3565) + 4)|0; //@line 326 "mcbits/Keccak-simple.c"
  $3568 = $3567; //@line 326 "mcbits/Keccak-simple.c"
  HEAP32[$3568>>2] = $3564; //@line 326 "mcbits/Keccak-simple.c"
  $3569 = $48; //@line 327 "mcbits/Keccak-simple.c"
  $3570 = $3569; //@line 327 "mcbits/Keccak-simple.c"
  $3571 = HEAP32[$3570>>2]|0; //@line 327 "mcbits/Keccak-simple.c"
  $3572 = (($3569) + 4)|0; //@line 327 "mcbits/Keccak-simple.c"
  $3573 = $3572; //@line 327 "mcbits/Keccak-simple.c"
  $3574 = HEAP32[$3573>>2]|0; //@line 327 "mcbits/Keccak-simple.c"
  $3575 = (_bitshift64Shl(($3571|0),($3574|0),6)|0); //@line 327 "mcbits/Keccak-simple.c"
  $3576 = tempRet0; //@line 327 "mcbits/Keccak-simple.c"
  $3577 = $48; //@line 327 "mcbits/Keccak-simple.c"
  $3578 = $3577; //@line 327 "mcbits/Keccak-simple.c"
  $3579 = HEAP32[$3578>>2]|0; //@line 327 "mcbits/Keccak-simple.c"
  $3580 = (($3577) + 4)|0; //@line 327 "mcbits/Keccak-simple.c"
  $3581 = $3580; //@line 327 "mcbits/Keccak-simple.c"
  $3582 = HEAP32[$3581>>2]|0; //@line 327 "mcbits/Keccak-simple.c"
  $3583 = (_bitshift64Lshr(($3579|0),($3582|0),58)|0); //@line 327 "mcbits/Keccak-simple.c"
  $3584 = tempRet0; //@line 327 "mcbits/Keccak-simple.c"
  $3585 = $3575 ^ $3583; //@line 327 "mcbits/Keccak-simple.c"
  $3586 = $3576 ^ $3584; //@line 327 "mcbits/Keccak-simple.c"
  $3587 = $32; //@line 327 "mcbits/Keccak-simple.c"
  $3588 = $3587; //@line 327 "mcbits/Keccak-simple.c"
  HEAP32[$3588>>2] = $3585; //@line 327 "mcbits/Keccak-simple.c"
  $3589 = (($3587) + 4)|0; //@line 327 "mcbits/Keccak-simple.c"
  $3590 = $3589; //@line 327 "mcbits/Keccak-simple.c"
  HEAP32[$3590>>2] = $3586; //@line 327 "mcbits/Keccak-simple.c"
  $3591 = $39; //@line 328 "mcbits/Keccak-simple.c"
  $3592 = $3591; //@line 328 "mcbits/Keccak-simple.c"
  $3593 = HEAP32[$3592>>2]|0; //@line 328 "mcbits/Keccak-simple.c"
  $3594 = (($3591) + 4)|0; //@line 328 "mcbits/Keccak-simple.c"
  $3595 = $3594; //@line 328 "mcbits/Keccak-simple.c"
  $3596 = HEAP32[$3595>>2]|0; //@line 328 "mcbits/Keccak-simple.c"
  $3597 = $54; //@line 328 "mcbits/Keccak-simple.c"
  $3598 = $3597; //@line 328 "mcbits/Keccak-simple.c"
  $3599 = HEAP32[$3598>>2]|0; //@line 328 "mcbits/Keccak-simple.c"
  $3600 = (($3597) + 4)|0; //@line 328 "mcbits/Keccak-simple.c"
  $3601 = $3600; //@line 328 "mcbits/Keccak-simple.c"
  $3602 = HEAP32[$3601>>2]|0; //@line 328 "mcbits/Keccak-simple.c"
  $3603 = $3599 ^ $3593; //@line 328 "mcbits/Keccak-simple.c"
  $3604 = $3602 ^ $3596; //@line 328 "mcbits/Keccak-simple.c"
  $3605 = $54; //@line 328 "mcbits/Keccak-simple.c"
  $3606 = $3605; //@line 328 "mcbits/Keccak-simple.c"
  HEAP32[$3606>>2] = $3603; //@line 328 "mcbits/Keccak-simple.c"
  $3607 = (($3605) + 4)|0; //@line 328 "mcbits/Keccak-simple.c"
  $3608 = $3607; //@line 328 "mcbits/Keccak-simple.c"
  HEAP32[$3608>>2] = $3604; //@line 328 "mcbits/Keccak-simple.c"
  $3609 = $54; //@line 329 "mcbits/Keccak-simple.c"
  $3610 = $3609; //@line 329 "mcbits/Keccak-simple.c"
  $3611 = HEAP32[$3610>>2]|0; //@line 329 "mcbits/Keccak-simple.c"
  $3612 = (($3609) + 4)|0; //@line 329 "mcbits/Keccak-simple.c"
  $3613 = $3612; //@line 329 "mcbits/Keccak-simple.c"
  $3614 = HEAP32[$3613>>2]|0; //@line 329 "mcbits/Keccak-simple.c"
  $3615 = (_bitshift64Shl(($3611|0),($3614|0),25)|0); //@line 329 "mcbits/Keccak-simple.c"
  $3616 = tempRet0; //@line 329 "mcbits/Keccak-simple.c"
  $3617 = $54; //@line 329 "mcbits/Keccak-simple.c"
  $3618 = $3617; //@line 329 "mcbits/Keccak-simple.c"
  $3619 = HEAP32[$3618>>2]|0; //@line 329 "mcbits/Keccak-simple.c"
  $3620 = (($3617) + 4)|0; //@line 329 "mcbits/Keccak-simple.c"
  $3621 = $3620; //@line 329 "mcbits/Keccak-simple.c"
  $3622 = HEAP32[$3621>>2]|0; //@line 329 "mcbits/Keccak-simple.c"
  $3623 = (_bitshift64Lshr(($3619|0),($3622|0),39)|0); //@line 329 "mcbits/Keccak-simple.c"
  $3624 = tempRet0; //@line 329 "mcbits/Keccak-simple.c"
  $3625 = $3615 ^ $3623; //@line 329 "mcbits/Keccak-simple.c"
  $3626 = $3616 ^ $3624; //@line 329 "mcbits/Keccak-simple.c"
  $3627 = $33; //@line 329 "mcbits/Keccak-simple.c"
  $3628 = $3627; //@line 329 "mcbits/Keccak-simple.c"
  HEAP32[$3628>>2] = $3625; //@line 329 "mcbits/Keccak-simple.c"
  $3629 = (($3627) + 4)|0; //@line 329 "mcbits/Keccak-simple.c"
  $3630 = $3629; //@line 329 "mcbits/Keccak-simple.c"
  HEAP32[$3630>>2] = $3626; //@line 329 "mcbits/Keccak-simple.c"
  $3631 = $40; //@line 330 "mcbits/Keccak-simple.c"
  $3632 = $3631; //@line 330 "mcbits/Keccak-simple.c"
  $3633 = HEAP32[$3632>>2]|0; //@line 330 "mcbits/Keccak-simple.c"
  $3634 = (($3631) + 4)|0; //@line 330 "mcbits/Keccak-simple.c"
  $3635 = $3634; //@line 330 "mcbits/Keccak-simple.c"
  $3636 = HEAP32[$3635>>2]|0; //@line 330 "mcbits/Keccak-simple.c"
  $3637 = $60; //@line 330 "mcbits/Keccak-simple.c"
  $3638 = $3637; //@line 330 "mcbits/Keccak-simple.c"
  $3639 = HEAP32[$3638>>2]|0; //@line 330 "mcbits/Keccak-simple.c"
  $3640 = (($3637) + 4)|0; //@line 330 "mcbits/Keccak-simple.c"
  $3641 = $3640; //@line 330 "mcbits/Keccak-simple.c"
  $3642 = HEAP32[$3641>>2]|0; //@line 330 "mcbits/Keccak-simple.c"
  $3643 = $3639 ^ $3633; //@line 330 "mcbits/Keccak-simple.c"
  $3644 = $3642 ^ $3636; //@line 330 "mcbits/Keccak-simple.c"
  $3645 = $60; //@line 330 "mcbits/Keccak-simple.c"
  $3646 = $3645; //@line 330 "mcbits/Keccak-simple.c"
  HEAP32[$3646>>2] = $3643; //@line 330 "mcbits/Keccak-simple.c"
  $3647 = (($3645) + 4)|0; //@line 330 "mcbits/Keccak-simple.c"
  $3648 = $3647; //@line 330 "mcbits/Keccak-simple.c"
  HEAP32[$3648>>2] = $3644; //@line 330 "mcbits/Keccak-simple.c"
  $3649 = $60; //@line 331 "mcbits/Keccak-simple.c"
  $3650 = $3649; //@line 331 "mcbits/Keccak-simple.c"
  $3651 = HEAP32[$3650>>2]|0; //@line 331 "mcbits/Keccak-simple.c"
  $3652 = (($3649) + 4)|0; //@line 331 "mcbits/Keccak-simple.c"
  $3653 = $3652; //@line 331 "mcbits/Keccak-simple.c"
  $3654 = HEAP32[$3653>>2]|0; //@line 331 "mcbits/Keccak-simple.c"
  $3655 = (_bitshift64Shl(($3651|0),($3654|0),8)|0); //@line 331 "mcbits/Keccak-simple.c"
  $3656 = tempRet0; //@line 331 "mcbits/Keccak-simple.c"
  $3657 = $60; //@line 331 "mcbits/Keccak-simple.c"
  $3658 = $3657; //@line 331 "mcbits/Keccak-simple.c"
  $3659 = HEAP32[$3658>>2]|0; //@line 331 "mcbits/Keccak-simple.c"
  $3660 = (($3657) + 4)|0; //@line 331 "mcbits/Keccak-simple.c"
  $3661 = $3660; //@line 331 "mcbits/Keccak-simple.c"
  $3662 = HEAP32[$3661>>2]|0; //@line 331 "mcbits/Keccak-simple.c"
  $3663 = (_bitshift64Lshr(($3659|0),($3662|0),56)|0); //@line 331 "mcbits/Keccak-simple.c"
  $3664 = tempRet0; //@line 331 "mcbits/Keccak-simple.c"
  $3665 = $3655 ^ $3663; //@line 331 "mcbits/Keccak-simple.c"
  $3666 = $3656 ^ $3664; //@line 331 "mcbits/Keccak-simple.c"
  $3667 = $34; //@line 331 "mcbits/Keccak-simple.c"
  $3668 = $3667; //@line 331 "mcbits/Keccak-simple.c"
  HEAP32[$3668>>2] = $3665; //@line 331 "mcbits/Keccak-simple.c"
  $3669 = (($3667) + 4)|0; //@line 331 "mcbits/Keccak-simple.c"
  $3670 = $3669; //@line 331 "mcbits/Keccak-simple.c"
  HEAP32[$3670>>2] = $3666; //@line 331 "mcbits/Keccak-simple.c"
  $3671 = $36; //@line 332 "mcbits/Keccak-simple.c"
  $3672 = $3671; //@line 332 "mcbits/Keccak-simple.c"
  $3673 = HEAP32[$3672>>2]|0; //@line 332 "mcbits/Keccak-simple.c"
  $3674 = (($3671) + 4)|0; //@line 332 "mcbits/Keccak-simple.c"
  $3675 = $3674; //@line 332 "mcbits/Keccak-simple.c"
  $3676 = HEAP32[$3675>>2]|0; //@line 332 "mcbits/Keccak-simple.c"
  $3677 = $61; //@line 332 "mcbits/Keccak-simple.c"
  $3678 = $3677; //@line 332 "mcbits/Keccak-simple.c"
  $3679 = HEAP32[$3678>>2]|0; //@line 332 "mcbits/Keccak-simple.c"
  $3680 = (($3677) + 4)|0; //@line 332 "mcbits/Keccak-simple.c"
  $3681 = $3680; //@line 332 "mcbits/Keccak-simple.c"
  $3682 = HEAP32[$3681>>2]|0; //@line 332 "mcbits/Keccak-simple.c"
  $3683 = $3679 ^ $3673; //@line 332 "mcbits/Keccak-simple.c"
  $3684 = $3682 ^ $3676; //@line 332 "mcbits/Keccak-simple.c"
  $3685 = $61; //@line 332 "mcbits/Keccak-simple.c"
  $3686 = $3685; //@line 332 "mcbits/Keccak-simple.c"
  HEAP32[$3686>>2] = $3683; //@line 332 "mcbits/Keccak-simple.c"
  $3687 = (($3685) + 4)|0; //@line 332 "mcbits/Keccak-simple.c"
  $3688 = $3687; //@line 332 "mcbits/Keccak-simple.c"
  HEAP32[$3688>>2] = $3684; //@line 332 "mcbits/Keccak-simple.c"
  $3689 = $61; //@line 333 "mcbits/Keccak-simple.c"
  $3690 = $3689; //@line 333 "mcbits/Keccak-simple.c"
  $3691 = HEAP32[$3690>>2]|0; //@line 333 "mcbits/Keccak-simple.c"
  $3692 = (($3689) + 4)|0; //@line 333 "mcbits/Keccak-simple.c"
  $3693 = $3692; //@line 333 "mcbits/Keccak-simple.c"
  $3694 = HEAP32[$3693>>2]|0; //@line 333 "mcbits/Keccak-simple.c"
  $3695 = (_bitshift64Shl(($3691|0),($3694|0),18)|0); //@line 333 "mcbits/Keccak-simple.c"
  $3696 = tempRet0; //@line 333 "mcbits/Keccak-simple.c"
  $3697 = $61; //@line 333 "mcbits/Keccak-simple.c"
  $3698 = $3697; //@line 333 "mcbits/Keccak-simple.c"
  $3699 = HEAP32[$3698>>2]|0; //@line 333 "mcbits/Keccak-simple.c"
  $3700 = (($3697) + 4)|0; //@line 333 "mcbits/Keccak-simple.c"
  $3701 = $3700; //@line 333 "mcbits/Keccak-simple.c"
  $3702 = HEAP32[$3701>>2]|0; //@line 333 "mcbits/Keccak-simple.c"
  $3703 = (_bitshift64Lshr(($3699|0),($3702|0),46)|0); //@line 333 "mcbits/Keccak-simple.c"
  $3704 = tempRet0; //@line 333 "mcbits/Keccak-simple.c"
  $3705 = $3695 ^ $3703; //@line 333 "mcbits/Keccak-simple.c"
  $3706 = $3696 ^ $3704; //@line 333 "mcbits/Keccak-simple.c"
  $3707 = $35; //@line 333 "mcbits/Keccak-simple.c"
  $3708 = $3707; //@line 333 "mcbits/Keccak-simple.c"
  HEAP32[$3708>>2] = $3705; //@line 333 "mcbits/Keccak-simple.c"
  $3709 = (($3707) + 4)|0; //@line 333 "mcbits/Keccak-simple.c"
  $3710 = $3709; //@line 333 "mcbits/Keccak-simple.c"
  HEAP32[$3710>>2] = $3706; //@line 333 "mcbits/Keccak-simple.c"
  $3711 = $31; //@line 334 "mcbits/Keccak-simple.c"
  $3712 = $3711; //@line 334 "mcbits/Keccak-simple.c"
  $3713 = HEAP32[$3712>>2]|0; //@line 334 "mcbits/Keccak-simple.c"
  $3714 = (($3711) + 4)|0; //@line 334 "mcbits/Keccak-simple.c"
  $3715 = $3714; //@line 334 "mcbits/Keccak-simple.c"
  $3716 = HEAP32[$3715>>2]|0; //@line 334 "mcbits/Keccak-simple.c"
  $3717 = $32; //@line 334 "mcbits/Keccak-simple.c"
  $3718 = $3717; //@line 334 "mcbits/Keccak-simple.c"
  $3719 = HEAP32[$3718>>2]|0; //@line 334 "mcbits/Keccak-simple.c"
  $3720 = (($3717) + 4)|0; //@line 334 "mcbits/Keccak-simple.c"
  $3721 = $3720; //@line 334 "mcbits/Keccak-simple.c"
  $3722 = HEAP32[$3721>>2]|0; //@line 334 "mcbits/Keccak-simple.c"
  $3723 = $3719 ^ -1; //@line 334 "mcbits/Keccak-simple.c"
  $3724 = $3722 ^ -1; //@line 334 "mcbits/Keccak-simple.c"
  $3725 = $33; //@line 334 "mcbits/Keccak-simple.c"
  $3726 = $3725; //@line 334 "mcbits/Keccak-simple.c"
  $3727 = HEAP32[$3726>>2]|0; //@line 334 "mcbits/Keccak-simple.c"
  $3728 = (($3725) + 4)|0; //@line 334 "mcbits/Keccak-simple.c"
  $3729 = $3728; //@line 334 "mcbits/Keccak-simple.c"
  $3730 = HEAP32[$3729>>2]|0; //@line 334 "mcbits/Keccak-simple.c"
  $3731 = $3723 & $3727; //@line 334 "mcbits/Keccak-simple.c"
  $3732 = $3724 & $3730; //@line 334 "mcbits/Keccak-simple.c"
  $3733 = $3713 ^ $3731; //@line 334 "mcbits/Keccak-simple.c"
  $3734 = $3716 ^ $3732; //@line 334 "mcbits/Keccak-simple.c"
  $3735 = $16; //@line 334 "mcbits/Keccak-simple.c"
  $3736 = $3735; //@line 334 "mcbits/Keccak-simple.c"
  HEAP32[$3736>>2] = $3733; //@line 334 "mcbits/Keccak-simple.c"
  $3737 = (($3735) + 4)|0; //@line 334 "mcbits/Keccak-simple.c"
  $3738 = $3737; //@line 334 "mcbits/Keccak-simple.c"
  HEAP32[$3738>>2] = $3734; //@line 334 "mcbits/Keccak-simple.c"
  $3739 = $32; //@line 335 "mcbits/Keccak-simple.c"
  $3740 = $3739; //@line 335 "mcbits/Keccak-simple.c"
  $3741 = HEAP32[$3740>>2]|0; //@line 335 "mcbits/Keccak-simple.c"
  $3742 = (($3739) + 4)|0; //@line 335 "mcbits/Keccak-simple.c"
  $3743 = $3742; //@line 335 "mcbits/Keccak-simple.c"
  $3744 = HEAP32[$3743>>2]|0; //@line 335 "mcbits/Keccak-simple.c"
  $3745 = $33; //@line 335 "mcbits/Keccak-simple.c"
  $3746 = $3745; //@line 335 "mcbits/Keccak-simple.c"
  $3747 = HEAP32[$3746>>2]|0; //@line 335 "mcbits/Keccak-simple.c"
  $3748 = (($3745) + 4)|0; //@line 335 "mcbits/Keccak-simple.c"
  $3749 = $3748; //@line 335 "mcbits/Keccak-simple.c"
  $3750 = HEAP32[$3749>>2]|0; //@line 335 "mcbits/Keccak-simple.c"
  $3751 = $3747 ^ -1; //@line 335 "mcbits/Keccak-simple.c"
  $3752 = $3750 ^ -1; //@line 335 "mcbits/Keccak-simple.c"
  $3753 = $34; //@line 335 "mcbits/Keccak-simple.c"
  $3754 = $3753; //@line 335 "mcbits/Keccak-simple.c"
  $3755 = HEAP32[$3754>>2]|0; //@line 335 "mcbits/Keccak-simple.c"
  $3756 = (($3753) + 4)|0; //@line 335 "mcbits/Keccak-simple.c"
  $3757 = $3756; //@line 335 "mcbits/Keccak-simple.c"
  $3758 = HEAP32[$3757>>2]|0; //@line 335 "mcbits/Keccak-simple.c"
  $3759 = $3751 & $3755; //@line 335 "mcbits/Keccak-simple.c"
  $3760 = $3752 & $3758; //@line 335 "mcbits/Keccak-simple.c"
  $3761 = $3741 ^ $3759; //@line 335 "mcbits/Keccak-simple.c"
  $3762 = $3744 ^ $3760; //@line 335 "mcbits/Keccak-simple.c"
  $3763 = $17; //@line 335 "mcbits/Keccak-simple.c"
  $3764 = $3763; //@line 335 "mcbits/Keccak-simple.c"
  HEAP32[$3764>>2] = $3761; //@line 335 "mcbits/Keccak-simple.c"
  $3765 = (($3763) + 4)|0; //@line 335 "mcbits/Keccak-simple.c"
  $3766 = $3765; //@line 335 "mcbits/Keccak-simple.c"
  HEAP32[$3766>>2] = $3762; //@line 335 "mcbits/Keccak-simple.c"
  $3767 = $33; //@line 336 "mcbits/Keccak-simple.c"
  $3768 = $3767; //@line 336 "mcbits/Keccak-simple.c"
  $3769 = HEAP32[$3768>>2]|0; //@line 336 "mcbits/Keccak-simple.c"
  $3770 = (($3767) + 4)|0; //@line 336 "mcbits/Keccak-simple.c"
  $3771 = $3770; //@line 336 "mcbits/Keccak-simple.c"
  $3772 = HEAP32[$3771>>2]|0; //@line 336 "mcbits/Keccak-simple.c"
  $3773 = $34; //@line 336 "mcbits/Keccak-simple.c"
  $3774 = $3773; //@line 336 "mcbits/Keccak-simple.c"
  $3775 = HEAP32[$3774>>2]|0; //@line 336 "mcbits/Keccak-simple.c"
  $3776 = (($3773) + 4)|0; //@line 336 "mcbits/Keccak-simple.c"
  $3777 = $3776; //@line 336 "mcbits/Keccak-simple.c"
  $3778 = HEAP32[$3777>>2]|0; //@line 336 "mcbits/Keccak-simple.c"
  $3779 = $3775 ^ -1; //@line 336 "mcbits/Keccak-simple.c"
  $3780 = $3778 ^ -1; //@line 336 "mcbits/Keccak-simple.c"
  $3781 = $35; //@line 336 "mcbits/Keccak-simple.c"
  $3782 = $3781; //@line 336 "mcbits/Keccak-simple.c"
  $3783 = HEAP32[$3782>>2]|0; //@line 336 "mcbits/Keccak-simple.c"
  $3784 = (($3781) + 4)|0; //@line 336 "mcbits/Keccak-simple.c"
  $3785 = $3784; //@line 336 "mcbits/Keccak-simple.c"
  $3786 = HEAP32[$3785>>2]|0; //@line 336 "mcbits/Keccak-simple.c"
  $3787 = $3779 & $3783; //@line 336 "mcbits/Keccak-simple.c"
  $3788 = $3780 & $3786; //@line 336 "mcbits/Keccak-simple.c"
  $3789 = $3769 ^ $3787; //@line 336 "mcbits/Keccak-simple.c"
  $3790 = $3772 ^ $3788; //@line 336 "mcbits/Keccak-simple.c"
  $3791 = $18; //@line 336 "mcbits/Keccak-simple.c"
  $3792 = $3791; //@line 336 "mcbits/Keccak-simple.c"
  HEAP32[$3792>>2] = $3789; //@line 336 "mcbits/Keccak-simple.c"
  $3793 = (($3791) + 4)|0; //@line 336 "mcbits/Keccak-simple.c"
  $3794 = $3793; //@line 336 "mcbits/Keccak-simple.c"
  HEAP32[$3794>>2] = $3790; //@line 336 "mcbits/Keccak-simple.c"
  $3795 = $34; //@line 337 "mcbits/Keccak-simple.c"
  $3796 = $3795; //@line 337 "mcbits/Keccak-simple.c"
  $3797 = HEAP32[$3796>>2]|0; //@line 337 "mcbits/Keccak-simple.c"
  $3798 = (($3795) + 4)|0; //@line 337 "mcbits/Keccak-simple.c"
  $3799 = $3798; //@line 337 "mcbits/Keccak-simple.c"
  $3800 = HEAP32[$3799>>2]|0; //@line 337 "mcbits/Keccak-simple.c"
  $3801 = $35; //@line 337 "mcbits/Keccak-simple.c"
  $3802 = $3801; //@line 337 "mcbits/Keccak-simple.c"
  $3803 = HEAP32[$3802>>2]|0; //@line 337 "mcbits/Keccak-simple.c"
  $3804 = (($3801) + 4)|0; //@line 337 "mcbits/Keccak-simple.c"
  $3805 = $3804; //@line 337 "mcbits/Keccak-simple.c"
  $3806 = HEAP32[$3805>>2]|0; //@line 337 "mcbits/Keccak-simple.c"
  $3807 = $3803 ^ -1; //@line 337 "mcbits/Keccak-simple.c"
  $3808 = $3806 ^ -1; //@line 337 "mcbits/Keccak-simple.c"
  $3809 = $31; //@line 337 "mcbits/Keccak-simple.c"
  $3810 = $3809; //@line 337 "mcbits/Keccak-simple.c"
  $3811 = HEAP32[$3810>>2]|0; //@line 337 "mcbits/Keccak-simple.c"
  $3812 = (($3809) + 4)|0; //@line 337 "mcbits/Keccak-simple.c"
  $3813 = $3812; //@line 337 "mcbits/Keccak-simple.c"
  $3814 = HEAP32[$3813>>2]|0; //@line 337 "mcbits/Keccak-simple.c"
  $3815 = $3807 & $3811; //@line 337 "mcbits/Keccak-simple.c"
  $3816 = $3808 & $3814; //@line 337 "mcbits/Keccak-simple.c"
  $3817 = $3797 ^ $3815; //@line 337 "mcbits/Keccak-simple.c"
  $3818 = $3800 ^ $3816; //@line 337 "mcbits/Keccak-simple.c"
  $3819 = $19; //@line 337 "mcbits/Keccak-simple.c"
  $3820 = $3819; //@line 337 "mcbits/Keccak-simple.c"
  HEAP32[$3820>>2] = $3817; //@line 337 "mcbits/Keccak-simple.c"
  $3821 = (($3819) + 4)|0; //@line 337 "mcbits/Keccak-simple.c"
  $3822 = $3821; //@line 337 "mcbits/Keccak-simple.c"
  HEAP32[$3822>>2] = $3818; //@line 337 "mcbits/Keccak-simple.c"
  $3823 = $35; //@line 338 "mcbits/Keccak-simple.c"
  $3824 = $3823; //@line 338 "mcbits/Keccak-simple.c"
  $3825 = HEAP32[$3824>>2]|0; //@line 338 "mcbits/Keccak-simple.c"
  $3826 = (($3823) + 4)|0; //@line 338 "mcbits/Keccak-simple.c"
  $3827 = $3826; //@line 338 "mcbits/Keccak-simple.c"
  $3828 = HEAP32[$3827>>2]|0; //@line 338 "mcbits/Keccak-simple.c"
  $3829 = $31; //@line 338 "mcbits/Keccak-simple.c"
  $3830 = $3829; //@line 338 "mcbits/Keccak-simple.c"
  $3831 = HEAP32[$3830>>2]|0; //@line 338 "mcbits/Keccak-simple.c"
  $3832 = (($3829) + 4)|0; //@line 338 "mcbits/Keccak-simple.c"
  $3833 = $3832; //@line 338 "mcbits/Keccak-simple.c"
  $3834 = HEAP32[$3833>>2]|0; //@line 338 "mcbits/Keccak-simple.c"
  $3835 = $3831 ^ -1; //@line 338 "mcbits/Keccak-simple.c"
  $3836 = $3834 ^ -1; //@line 338 "mcbits/Keccak-simple.c"
  $3837 = $32; //@line 338 "mcbits/Keccak-simple.c"
  $3838 = $3837; //@line 338 "mcbits/Keccak-simple.c"
  $3839 = HEAP32[$3838>>2]|0; //@line 338 "mcbits/Keccak-simple.c"
  $3840 = (($3837) + 4)|0; //@line 338 "mcbits/Keccak-simple.c"
  $3841 = $3840; //@line 338 "mcbits/Keccak-simple.c"
  $3842 = HEAP32[$3841>>2]|0; //@line 338 "mcbits/Keccak-simple.c"
  $3843 = $3835 & $3839; //@line 338 "mcbits/Keccak-simple.c"
  $3844 = $3836 & $3842; //@line 338 "mcbits/Keccak-simple.c"
  $3845 = $3825 ^ $3843; //@line 338 "mcbits/Keccak-simple.c"
  $3846 = $3828 ^ $3844; //@line 338 "mcbits/Keccak-simple.c"
  $3847 = $20; //@line 338 "mcbits/Keccak-simple.c"
  $3848 = $3847; //@line 338 "mcbits/Keccak-simple.c"
  HEAP32[$3848>>2] = $3845; //@line 338 "mcbits/Keccak-simple.c"
  $3849 = (($3847) + 4)|0; //@line 338 "mcbits/Keccak-simple.c"
  $3850 = $3849; //@line 338 "mcbits/Keccak-simple.c"
  HEAP32[$3850>>2] = $3846; //@line 338 "mcbits/Keccak-simple.c"
  $3851 = $40; //@line 340 "mcbits/Keccak-simple.c"
  $3852 = $3851; //@line 340 "mcbits/Keccak-simple.c"
  $3853 = HEAP32[$3852>>2]|0; //@line 340 "mcbits/Keccak-simple.c"
  $3854 = (($3851) + 4)|0; //@line 340 "mcbits/Keccak-simple.c"
  $3855 = $3854; //@line 340 "mcbits/Keccak-simple.c"
  $3856 = HEAP32[$3855>>2]|0; //@line 340 "mcbits/Keccak-simple.c"
  $3857 = $45; //@line 340 "mcbits/Keccak-simple.c"
  $3858 = $3857; //@line 340 "mcbits/Keccak-simple.c"
  $3859 = HEAP32[$3858>>2]|0; //@line 340 "mcbits/Keccak-simple.c"
  $3860 = (($3857) + 4)|0; //@line 340 "mcbits/Keccak-simple.c"
  $3861 = $3860; //@line 340 "mcbits/Keccak-simple.c"
  $3862 = HEAP32[$3861>>2]|0; //@line 340 "mcbits/Keccak-simple.c"
  $3863 = $3859 ^ $3853; //@line 340 "mcbits/Keccak-simple.c"
  $3864 = $3862 ^ $3856; //@line 340 "mcbits/Keccak-simple.c"
  $3865 = $45; //@line 340 "mcbits/Keccak-simple.c"
  $3866 = $3865; //@line 340 "mcbits/Keccak-simple.c"
  HEAP32[$3866>>2] = $3863; //@line 340 "mcbits/Keccak-simple.c"
  $3867 = (($3865) + 4)|0; //@line 340 "mcbits/Keccak-simple.c"
  $3868 = $3867; //@line 340 "mcbits/Keccak-simple.c"
  HEAP32[$3868>>2] = $3864; //@line 340 "mcbits/Keccak-simple.c"
  $3869 = $45; //@line 341 "mcbits/Keccak-simple.c"
  $3870 = $3869; //@line 341 "mcbits/Keccak-simple.c"
  $3871 = HEAP32[$3870>>2]|0; //@line 341 "mcbits/Keccak-simple.c"
  $3872 = (($3869) + 4)|0; //@line 341 "mcbits/Keccak-simple.c"
  $3873 = $3872; //@line 341 "mcbits/Keccak-simple.c"
  $3874 = HEAP32[$3873>>2]|0; //@line 341 "mcbits/Keccak-simple.c"
  $3875 = (_bitshift64Shl(($3871|0),($3874|0),27)|0); //@line 341 "mcbits/Keccak-simple.c"
  $3876 = tempRet0; //@line 341 "mcbits/Keccak-simple.c"
  $3877 = $45; //@line 341 "mcbits/Keccak-simple.c"
  $3878 = $3877; //@line 341 "mcbits/Keccak-simple.c"
  $3879 = HEAP32[$3878>>2]|0; //@line 341 "mcbits/Keccak-simple.c"
  $3880 = (($3877) + 4)|0; //@line 341 "mcbits/Keccak-simple.c"
  $3881 = $3880; //@line 341 "mcbits/Keccak-simple.c"
  $3882 = HEAP32[$3881>>2]|0; //@line 341 "mcbits/Keccak-simple.c"
  $3883 = (_bitshift64Lshr(($3879|0),($3882|0),37)|0); //@line 341 "mcbits/Keccak-simple.c"
  $3884 = tempRet0; //@line 341 "mcbits/Keccak-simple.c"
  $3885 = $3875 ^ $3883; //@line 341 "mcbits/Keccak-simple.c"
  $3886 = $3876 ^ $3884; //@line 341 "mcbits/Keccak-simple.c"
  $3887 = $31; //@line 341 "mcbits/Keccak-simple.c"
  $3888 = $3887; //@line 341 "mcbits/Keccak-simple.c"
  HEAP32[$3888>>2] = $3885; //@line 341 "mcbits/Keccak-simple.c"
  $3889 = (($3887) + 4)|0; //@line 341 "mcbits/Keccak-simple.c"
  $3890 = $3889; //@line 341 "mcbits/Keccak-simple.c"
  HEAP32[$3890>>2] = $3886; //@line 341 "mcbits/Keccak-simple.c"
  $3891 = $36; //@line 342 "mcbits/Keccak-simple.c"
  $3892 = $3891; //@line 342 "mcbits/Keccak-simple.c"
  $3893 = HEAP32[$3892>>2]|0; //@line 342 "mcbits/Keccak-simple.c"
  $3894 = (($3891) + 4)|0; //@line 342 "mcbits/Keccak-simple.c"
  $3895 = $3894; //@line 342 "mcbits/Keccak-simple.c"
  $3896 = HEAP32[$3895>>2]|0; //@line 342 "mcbits/Keccak-simple.c"
  $3897 = $46; //@line 342 "mcbits/Keccak-simple.c"
  $3898 = $3897; //@line 342 "mcbits/Keccak-simple.c"
  $3899 = HEAP32[$3898>>2]|0; //@line 342 "mcbits/Keccak-simple.c"
  $3900 = (($3897) + 4)|0; //@line 342 "mcbits/Keccak-simple.c"
  $3901 = $3900; //@line 342 "mcbits/Keccak-simple.c"
  $3902 = HEAP32[$3901>>2]|0; //@line 342 "mcbits/Keccak-simple.c"
  $3903 = $3899 ^ $3893; //@line 342 "mcbits/Keccak-simple.c"
  $3904 = $3902 ^ $3896; //@line 342 "mcbits/Keccak-simple.c"
  $3905 = $46; //@line 342 "mcbits/Keccak-simple.c"
  $3906 = $3905; //@line 342 "mcbits/Keccak-simple.c"
  HEAP32[$3906>>2] = $3903; //@line 342 "mcbits/Keccak-simple.c"
  $3907 = (($3905) + 4)|0; //@line 342 "mcbits/Keccak-simple.c"
  $3908 = $3907; //@line 342 "mcbits/Keccak-simple.c"
  HEAP32[$3908>>2] = $3904; //@line 342 "mcbits/Keccak-simple.c"
  $3909 = $46; //@line 343 "mcbits/Keccak-simple.c"
  $3910 = $3909; //@line 343 "mcbits/Keccak-simple.c"
  $3911 = HEAP32[$3910>>2]|0; //@line 343 "mcbits/Keccak-simple.c"
  $3912 = (($3909) + 4)|0; //@line 343 "mcbits/Keccak-simple.c"
  $3913 = $3912; //@line 343 "mcbits/Keccak-simple.c"
  $3914 = HEAP32[$3913>>2]|0; //@line 343 "mcbits/Keccak-simple.c"
  $3915 = (_bitshift64Shl(($3911|0),($3914|0),36)|0); //@line 343 "mcbits/Keccak-simple.c"
  $3916 = tempRet0; //@line 343 "mcbits/Keccak-simple.c"
  $3917 = $46; //@line 343 "mcbits/Keccak-simple.c"
  $3918 = $3917; //@line 343 "mcbits/Keccak-simple.c"
  $3919 = HEAP32[$3918>>2]|0; //@line 343 "mcbits/Keccak-simple.c"
  $3920 = (($3917) + 4)|0; //@line 343 "mcbits/Keccak-simple.c"
  $3921 = $3920; //@line 343 "mcbits/Keccak-simple.c"
  $3922 = HEAP32[$3921>>2]|0; //@line 343 "mcbits/Keccak-simple.c"
  $3923 = (_bitshift64Lshr(($3919|0),($3922|0),28)|0); //@line 343 "mcbits/Keccak-simple.c"
  $3924 = tempRet0; //@line 343 "mcbits/Keccak-simple.c"
  $3925 = $3915 ^ $3923; //@line 343 "mcbits/Keccak-simple.c"
  $3926 = $3916 ^ $3924; //@line 343 "mcbits/Keccak-simple.c"
  $3927 = $32; //@line 343 "mcbits/Keccak-simple.c"
  $3928 = $3927; //@line 343 "mcbits/Keccak-simple.c"
  HEAP32[$3928>>2] = $3925; //@line 343 "mcbits/Keccak-simple.c"
  $3929 = (($3927) + 4)|0; //@line 343 "mcbits/Keccak-simple.c"
  $3930 = $3929; //@line 343 "mcbits/Keccak-simple.c"
  HEAP32[$3930>>2] = $3926; //@line 343 "mcbits/Keccak-simple.c"
  $3931 = $37; //@line 344 "mcbits/Keccak-simple.c"
  $3932 = $3931; //@line 344 "mcbits/Keccak-simple.c"
  $3933 = HEAP32[$3932>>2]|0; //@line 344 "mcbits/Keccak-simple.c"
  $3934 = (($3931) + 4)|0; //@line 344 "mcbits/Keccak-simple.c"
  $3935 = $3934; //@line 344 "mcbits/Keccak-simple.c"
  $3936 = HEAP32[$3935>>2]|0; //@line 344 "mcbits/Keccak-simple.c"
  $3937 = $52; //@line 344 "mcbits/Keccak-simple.c"
  $3938 = $3937; //@line 344 "mcbits/Keccak-simple.c"
  $3939 = HEAP32[$3938>>2]|0; //@line 344 "mcbits/Keccak-simple.c"
  $3940 = (($3937) + 4)|0; //@line 344 "mcbits/Keccak-simple.c"
  $3941 = $3940; //@line 344 "mcbits/Keccak-simple.c"
  $3942 = HEAP32[$3941>>2]|0; //@line 344 "mcbits/Keccak-simple.c"
  $3943 = $3939 ^ $3933; //@line 344 "mcbits/Keccak-simple.c"
  $3944 = $3942 ^ $3936; //@line 344 "mcbits/Keccak-simple.c"
  $3945 = $52; //@line 344 "mcbits/Keccak-simple.c"
  $3946 = $3945; //@line 344 "mcbits/Keccak-simple.c"
  HEAP32[$3946>>2] = $3943; //@line 344 "mcbits/Keccak-simple.c"
  $3947 = (($3945) + 4)|0; //@line 344 "mcbits/Keccak-simple.c"
  $3948 = $3947; //@line 344 "mcbits/Keccak-simple.c"
  HEAP32[$3948>>2] = $3944; //@line 344 "mcbits/Keccak-simple.c"
  $3949 = $52; //@line 345 "mcbits/Keccak-simple.c"
  $3950 = $3949; //@line 345 "mcbits/Keccak-simple.c"
  $3951 = HEAP32[$3950>>2]|0; //@line 345 "mcbits/Keccak-simple.c"
  $3952 = (($3949) + 4)|0; //@line 345 "mcbits/Keccak-simple.c"
  $3953 = $3952; //@line 345 "mcbits/Keccak-simple.c"
  $3954 = HEAP32[$3953>>2]|0; //@line 345 "mcbits/Keccak-simple.c"
  $3955 = (_bitshift64Shl(($3951|0),($3954|0),10)|0); //@line 345 "mcbits/Keccak-simple.c"
  $3956 = tempRet0; //@line 345 "mcbits/Keccak-simple.c"
  $3957 = $52; //@line 345 "mcbits/Keccak-simple.c"
  $3958 = $3957; //@line 345 "mcbits/Keccak-simple.c"
  $3959 = HEAP32[$3958>>2]|0; //@line 345 "mcbits/Keccak-simple.c"
  $3960 = (($3957) + 4)|0; //@line 345 "mcbits/Keccak-simple.c"
  $3961 = $3960; //@line 345 "mcbits/Keccak-simple.c"
  $3962 = HEAP32[$3961>>2]|0; //@line 345 "mcbits/Keccak-simple.c"
  $3963 = (_bitshift64Lshr(($3959|0),($3962|0),54)|0); //@line 345 "mcbits/Keccak-simple.c"
  $3964 = tempRet0; //@line 345 "mcbits/Keccak-simple.c"
  $3965 = $3955 ^ $3963; //@line 345 "mcbits/Keccak-simple.c"
  $3966 = $3956 ^ $3964; //@line 345 "mcbits/Keccak-simple.c"
  $3967 = $33; //@line 345 "mcbits/Keccak-simple.c"
  $3968 = $3967; //@line 345 "mcbits/Keccak-simple.c"
  HEAP32[$3968>>2] = $3965; //@line 345 "mcbits/Keccak-simple.c"
  $3969 = (($3967) + 4)|0; //@line 345 "mcbits/Keccak-simple.c"
  $3970 = $3969; //@line 345 "mcbits/Keccak-simple.c"
  HEAP32[$3970>>2] = $3966; //@line 345 "mcbits/Keccak-simple.c"
  $3971 = $38; //@line 346 "mcbits/Keccak-simple.c"
  $3972 = $3971; //@line 346 "mcbits/Keccak-simple.c"
  $3973 = HEAP32[$3972>>2]|0; //@line 346 "mcbits/Keccak-simple.c"
  $3974 = (($3971) + 4)|0; //@line 346 "mcbits/Keccak-simple.c"
  $3975 = $3974; //@line 346 "mcbits/Keccak-simple.c"
  $3976 = HEAP32[$3975>>2]|0; //@line 346 "mcbits/Keccak-simple.c"
  $3977 = $58; //@line 346 "mcbits/Keccak-simple.c"
  $3978 = $3977; //@line 346 "mcbits/Keccak-simple.c"
  $3979 = HEAP32[$3978>>2]|0; //@line 346 "mcbits/Keccak-simple.c"
  $3980 = (($3977) + 4)|0; //@line 346 "mcbits/Keccak-simple.c"
  $3981 = $3980; //@line 346 "mcbits/Keccak-simple.c"
  $3982 = HEAP32[$3981>>2]|0; //@line 346 "mcbits/Keccak-simple.c"
  $3983 = $3979 ^ $3973; //@line 346 "mcbits/Keccak-simple.c"
  $3984 = $3982 ^ $3976; //@line 346 "mcbits/Keccak-simple.c"
  $3985 = $58; //@line 346 "mcbits/Keccak-simple.c"
  $3986 = $3985; //@line 346 "mcbits/Keccak-simple.c"
  HEAP32[$3986>>2] = $3983; //@line 346 "mcbits/Keccak-simple.c"
  $3987 = (($3985) + 4)|0; //@line 346 "mcbits/Keccak-simple.c"
  $3988 = $3987; //@line 346 "mcbits/Keccak-simple.c"
  HEAP32[$3988>>2] = $3984; //@line 346 "mcbits/Keccak-simple.c"
  $3989 = $58; //@line 347 "mcbits/Keccak-simple.c"
  $3990 = $3989; //@line 347 "mcbits/Keccak-simple.c"
  $3991 = HEAP32[$3990>>2]|0; //@line 347 "mcbits/Keccak-simple.c"
  $3992 = (($3989) + 4)|0; //@line 347 "mcbits/Keccak-simple.c"
  $3993 = $3992; //@line 347 "mcbits/Keccak-simple.c"
  $3994 = HEAP32[$3993>>2]|0; //@line 347 "mcbits/Keccak-simple.c"
  $3995 = (_bitshift64Shl(($3991|0),($3994|0),15)|0); //@line 347 "mcbits/Keccak-simple.c"
  $3996 = tempRet0; //@line 347 "mcbits/Keccak-simple.c"
  $3997 = $58; //@line 347 "mcbits/Keccak-simple.c"
  $3998 = $3997; //@line 347 "mcbits/Keccak-simple.c"
  $3999 = HEAP32[$3998>>2]|0; //@line 347 "mcbits/Keccak-simple.c"
  $4000 = (($3997) + 4)|0; //@line 347 "mcbits/Keccak-simple.c"
  $4001 = $4000; //@line 347 "mcbits/Keccak-simple.c"
  $4002 = HEAP32[$4001>>2]|0; //@line 347 "mcbits/Keccak-simple.c"
  $4003 = (_bitshift64Lshr(($3999|0),($4002|0),49)|0); //@line 347 "mcbits/Keccak-simple.c"
  $4004 = tempRet0; //@line 347 "mcbits/Keccak-simple.c"
  $4005 = $3995 ^ $4003; //@line 347 "mcbits/Keccak-simple.c"
  $4006 = $3996 ^ $4004; //@line 347 "mcbits/Keccak-simple.c"
  $4007 = $34; //@line 347 "mcbits/Keccak-simple.c"
  $4008 = $4007; //@line 347 "mcbits/Keccak-simple.c"
  HEAP32[$4008>>2] = $4005; //@line 347 "mcbits/Keccak-simple.c"
  $4009 = (($4007) + 4)|0; //@line 347 "mcbits/Keccak-simple.c"
  $4010 = $4009; //@line 347 "mcbits/Keccak-simple.c"
  HEAP32[$4010>>2] = $4006; //@line 347 "mcbits/Keccak-simple.c"
  $4011 = $39; //@line 348 "mcbits/Keccak-simple.c"
  $4012 = $4011; //@line 348 "mcbits/Keccak-simple.c"
  $4013 = HEAP32[$4012>>2]|0; //@line 348 "mcbits/Keccak-simple.c"
  $4014 = (($4011) + 4)|0; //@line 348 "mcbits/Keccak-simple.c"
  $4015 = $4014; //@line 348 "mcbits/Keccak-simple.c"
  $4016 = HEAP32[$4015>>2]|0; //@line 348 "mcbits/Keccak-simple.c"
  $4017 = $64; //@line 348 "mcbits/Keccak-simple.c"
  $4018 = $4017; //@line 348 "mcbits/Keccak-simple.c"
  $4019 = HEAP32[$4018>>2]|0; //@line 348 "mcbits/Keccak-simple.c"
  $4020 = (($4017) + 4)|0; //@line 348 "mcbits/Keccak-simple.c"
  $4021 = $4020; //@line 348 "mcbits/Keccak-simple.c"
  $4022 = HEAP32[$4021>>2]|0; //@line 348 "mcbits/Keccak-simple.c"
  $4023 = $4019 ^ $4013; //@line 348 "mcbits/Keccak-simple.c"
  $4024 = $4022 ^ $4016; //@line 348 "mcbits/Keccak-simple.c"
  $4025 = $64; //@line 348 "mcbits/Keccak-simple.c"
  $4026 = $4025; //@line 348 "mcbits/Keccak-simple.c"
  HEAP32[$4026>>2] = $4023; //@line 348 "mcbits/Keccak-simple.c"
  $4027 = (($4025) + 4)|0; //@line 348 "mcbits/Keccak-simple.c"
  $4028 = $4027; //@line 348 "mcbits/Keccak-simple.c"
  HEAP32[$4028>>2] = $4024; //@line 348 "mcbits/Keccak-simple.c"
  $4029 = $64; //@line 349 "mcbits/Keccak-simple.c"
  $4030 = $4029; //@line 349 "mcbits/Keccak-simple.c"
  $4031 = HEAP32[$4030>>2]|0; //@line 349 "mcbits/Keccak-simple.c"
  $4032 = (($4029) + 4)|0; //@line 349 "mcbits/Keccak-simple.c"
  $4033 = $4032; //@line 349 "mcbits/Keccak-simple.c"
  $4034 = HEAP32[$4033>>2]|0; //@line 349 "mcbits/Keccak-simple.c"
  $4035 = (_bitshift64Shl(($4031|0),($4034|0),56)|0); //@line 349 "mcbits/Keccak-simple.c"
  $4036 = tempRet0; //@line 349 "mcbits/Keccak-simple.c"
  $4037 = $64; //@line 349 "mcbits/Keccak-simple.c"
  $4038 = $4037; //@line 349 "mcbits/Keccak-simple.c"
  $4039 = HEAP32[$4038>>2]|0; //@line 349 "mcbits/Keccak-simple.c"
  $4040 = (($4037) + 4)|0; //@line 349 "mcbits/Keccak-simple.c"
  $4041 = $4040; //@line 349 "mcbits/Keccak-simple.c"
  $4042 = HEAP32[$4041>>2]|0; //@line 349 "mcbits/Keccak-simple.c"
  $4043 = (_bitshift64Lshr(($4039|0),($4042|0),8)|0); //@line 349 "mcbits/Keccak-simple.c"
  $4044 = tempRet0; //@line 349 "mcbits/Keccak-simple.c"
  $4045 = $4035 ^ $4043; //@line 349 "mcbits/Keccak-simple.c"
  $4046 = $4036 ^ $4044; //@line 349 "mcbits/Keccak-simple.c"
  $4047 = $35; //@line 349 "mcbits/Keccak-simple.c"
  $4048 = $4047; //@line 349 "mcbits/Keccak-simple.c"
  HEAP32[$4048>>2] = $4045; //@line 349 "mcbits/Keccak-simple.c"
  $4049 = (($4047) + 4)|0; //@line 349 "mcbits/Keccak-simple.c"
  $4050 = $4049; //@line 349 "mcbits/Keccak-simple.c"
  HEAP32[$4050>>2] = $4046; //@line 349 "mcbits/Keccak-simple.c"
  $4051 = $31; //@line 350 "mcbits/Keccak-simple.c"
  $4052 = $4051; //@line 350 "mcbits/Keccak-simple.c"
  $4053 = HEAP32[$4052>>2]|0; //@line 350 "mcbits/Keccak-simple.c"
  $4054 = (($4051) + 4)|0; //@line 350 "mcbits/Keccak-simple.c"
  $4055 = $4054; //@line 350 "mcbits/Keccak-simple.c"
  $4056 = HEAP32[$4055>>2]|0; //@line 350 "mcbits/Keccak-simple.c"
  $4057 = $32; //@line 350 "mcbits/Keccak-simple.c"
  $4058 = $4057; //@line 350 "mcbits/Keccak-simple.c"
  $4059 = HEAP32[$4058>>2]|0; //@line 350 "mcbits/Keccak-simple.c"
  $4060 = (($4057) + 4)|0; //@line 350 "mcbits/Keccak-simple.c"
  $4061 = $4060; //@line 350 "mcbits/Keccak-simple.c"
  $4062 = HEAP32[$4061>>2]|0; //@line 350 "mcbits/Keccak-simple.c"
  $4063 = $4059 ^ -1; //@line 350 "mcbits/Keccak-simple.c"
  $4064 = $4062 ^ -1; //@line 350 "mcbits/Keccak-simple.c"
  $4065 = $33; //@line 350 "mcbits/Keccak-simple.c"
  $4066 = $4065; //@line 350 "mcbits/Keccak-simple.c"
  $4067 = HEAP32[$4066>>2]|0; //@line 350 "mcbits/Keccak-simple.c"
  $4068 = (($4065) + 4)|0; //@line 350 "mcbits/Keccak-simple.c"
  $4069 = $4068; //@line 350 "mcbits/Keccak-simple.c"
  $4070 = HEAP32[$4069>>2]|0; //@line 350 "mcbits/Keccak-simple.c"
  $4071 = $4063 & $4067; //@line 350 "mcbits/Keccak-simple.c"
  $4072 = $4064 & $4070; //@line 350 "mcbits/Keccak-simple.c"
  $4073 = $4053 ^ $4071; //@line 350 "mcbits/Keccak-simple.c"
  $4074 = $4056 ^ $4072; //@line 350 "mcbits/Keccak-simple.c"
  $4075 = $21; //@line 350 "mcbits/Keccak-simple.c"
  $4076 = $4075; //@line 350 "mcbits/Keccak-simple.c"
  HEAP32[$4076>>2] = $4073; //@line 350 "mcbits/Keccak-simple.c"
  $4077 = (($4075) + 4)|0; //@line 350 "mcbits/Keccak-simple.c"
  $4078 = $4077; //@line 350 "mcbits/Keccak-simple.c"
  HEAP32[$4078>>2] = $4074; //@line 350 "mcbits/Keccak-simple.c"
  $4079 = $32; //@line 351 "mcbits/Keccak-simple.c"
  $4080 = $4079; //@line 351 "mcbits/Keccak-simple.c"
  $4081 = HEAP32[$4080>>2]|0; //@line 351 "mcbits/Keccak-simple.c"
  $4082 = (($4079) + 4)|0; //@line 351 "mcbits/Keccak-simple.c"
  $4083 = $4082; //@line 351 "mcbits/Keccak-simple.c"
  $4084 = HEAP32[$4083>>2]|0; //@line 351 "mcbits/Keccak-simple.c"
  $4085 = $33; //@line 351 "mcbits/Keccak-simple.c"
  $4086 = $4085; //@line 351 "mcbits/Keccak-simple.c"
  $4087 = HEAP32[$4086>>2]|0; //@line 351 "mcbits/Keccak-simple.c"
  $4088 = (($4085) + 4)|0; //@line 351 "mcbits/Keccak-simple.c"
  $4089 = $4088; //@line 351 "mcbits/Keccak-simple.c"
  $4090 = HEAP32[$4089>>2]|0; //@line 351 "mcbits/Keccak-simple.c"
  $4091 = $4087 ^ -1; //@line 351 "mcbits/Keccak-simple.c"
  $4092 = $4090 ^ -1; //@line 351 "mcbits/Keccak-simple.c"
  $4093 = $34; //@line 351 "mcbits/Keccak-simple.c"
  $4094 = $4093; //@line 351 "mcbits/Keccak-simple.c"
  $4095 = HEAP32[$4094>>2]|0; //@line 351 "mcbits/Keccak-simple.c"
  $4096 = (($4093) + 4)|0; //@line 351 "mcbits/Keccak-simple.c"
  $4097 = $4096; //@line 351 "mcbits/Keccak-simple.c"
  $4098 = HEAP32[$4097>>2]|0; //@line 351 "mcbits/Keccak-simple.c"
  $4099 = $4091 & $4095; //@line 351 "mcbits/Keccak-simple.c"
  $4100 = $4092 & $4098; //@line 351 "mcbits/Keccak-simple.c"
  $4101 = $4081 ^ $4099; //@line 351 "mcbits/Keccak-simple.c"
  $4102 = $4084 ^ $4100; //@line 351 "mcbits/Keccak-simple.c"
  $4103 = $22; //@line 351 "mcbits/Keccak-simple.c"
  $4104 = $4103; //@line 351 "mcbits/Keccak-simple.c"
  HEAP32[$4104>>2] = $4101; //@line 351 "mcbits/Keccak-simple.c"
  $4105 = (($4103) + 4)|0; //@line 351 "mcbits/Keccak-simple.c"
  $4106 = $4105; //@line 351 "mcbits/Keccak-simple.c"
  HEAP32[$4106>>2] = $4102; //@line 351 "mcbits/Keccak-simple.c"
  $4107 = $33; //@line 352 "mcbits/Keccak-simple.c"
  $4108 = $4107; //@line 352 "mcbits/Keccak-simple.c"
  $4109 = HEAP32[$4108>>2]|0; //@line 352 "mcbits/Keccak-simple.c"
  $4110 = (($4107) + 4)|0; //@line 352 "mcbits/Keccak-simple.c"
  $4111 = $4110; //@line 352 "mcbits/Keccak-simple.c"
  $4112 = HEAP32[$4111>>2]|0; //@line 352 "mcbits/Keccak-simple.c"
  $4113 = $34; //@line 352 "mcbits/Keccak-simple.c"
  $4114 = $4113; //@line 352 "mcbits/Keccak-simple.c"
  $4115 = HEAP32[$4114>>2]|0; //@line 352 "mcbits/Keccak-simple.c"
  $4116 = (($4113) + 4)|0; //@line 352 "mcbits/Keccak-simple.c"
  $4117 = $4116; //@line 352 "mcbits/Keccak-simple.c"
  $4118 = HEAP32[$4117>>2]|0; //@line 352 "mcbits/Keccak-simple.c"
  $4119 = $4115 ^ -1; //@line 352 "mcbits/Keccak-simple.c"
  $4120 = $4118 ^ -1; //@line 352 "mcbits/Keccak-simple.c"
  $4121 = $35; //@line 352 "mcbits/Keccak-simple.c"
  $4122 = $4121; //@line 352 "mcbits/Keccak-simple.c"
  $4123 = HEAP32[$4122>>2]|0; //@line 352 "mcbits/Keccak-simple.c"
  $4124 = (($4121) + 4)|0; //@line 352 "mcbits/Keccak-simple.c"
  $4125 = $4124; //@line 352 "mcbits/Keccak-simple.c"
  $4126 = HEAP32[$4125>>2]|0; //@line 352 "mcbits/Keccak-simple.c"
  $4127 = $4119 & $4123; //@line 352 "mcbits/Keccak-simple.c"
  $4128 = $4120 & $4126; //@line 352 "mcbits/Keccak-simple.c"
  $4129 = $4109 ^ $4127; //@line 352 "mcbits/Keccak-simple.c"
  $4130 = $4112 ^ $4128; //@line 352 "mcbits/Keccak-simple.c"
  $4131 = $23; //@line 352 "mcbits/Keccak-simple.c"
  $4132 = $4131; //@line 352 "mcbits/Keccak-simple.c"
  HEAP32[$4132>>2] = $4129; //@line 352 "mcbits/Keccak-simple.c"
  $4133 = (($4131) + 4)|0; //@line 352 "mcbits/Keccak-simple.c"
  $4134 = $4133; //@line 352 "mcbits/Keccak-simple.c"
  HEAP32[$4134>>2] = $4130; //@line 352 "mcbits/Keccak-simple.c"
  $4135 = $34; //@line 353 "mcbits/Keccak-simple.c"
  $4136 = $4135; //@line 353 "mcbits/Keccak-simple.c"
  $4137 = HEAP32[$4136>>2]|0; //@line 353 "mcbits/Keccak-simple.c"
  $4138 = (($4135) + 4)|0; //@line 353 "mcbits/Keccak-simple.c"
  $4139 = $4138; //@line 353 "mcbits/Keccak-simple.c"
  $4140 = HEAP32[$4139>>2]|0; //@line 353 "mcbits/Keccak-simple.c"
  $4141 = $35; //@line 353 "mcbits/Keccak-simple.c"
  $4142 = $4141; //@line 353 "mcbits/Keccak-simple.c"
  $4143 = HEAP32[$4142>>2]|0; //@line 353 "mcbits/Keccak-simple.c"
  $4144 = (($4141) + 4)|0; //@line 353 "mcbits/Keccak-simple.c"
  $4145 = $4144; //@line 353 "mcbits/Keccak-simple.c"
  $4146 = HEAP32[$4145>>2]|0; //@line 353 "mcbits/Keccak-simple.c"
  $4147 = $4143 ^ -1; //@line 353 "mcbits/Keccak-simple.c"
  $4148 = $4146 ^ -1; //@line 353 "mcbits/Keccak-simple.c"
  $4149 = $31; //@line 353 "mcbits/Keccak-simple.c"
  $4150 = $4149; //@line 353 "mcbits/Keccak-simple.c"
  $4151 = HEAP32[$4150>>2]|0; //@line 353 "mcbits/Keccak-simple.c"
  $4152 = (($4149) + 4)|0; //@line 353 "mcbits/Keccak-simple.c"
  $4153 = $4152; //@line 353 "mcbits/Keccak-simple.c"
  $4154 = HEAP32[$4153>>2]|0; //@line 353 "mcbits/Keccak-simple.c"
  $4155 = $4147 & $4151; //@line 353 "mcbits/Keccak-simple.c"
  $4156 = $4148 & $4154; //@line 353 "mcbits/Keccak-simple.c"
  $4157 = $4137 ^ $4155; //@line 353 "mcbits/Keccak-simple.c"
  $4158 = $4140 ^ $4156; //@line 353 "mcbits/Keccak-simple.c"
  $4159 = $24; //@line 353 "mcbits/Keccak-simple.c"
  $4160 = $4159; //@line 353 "mcbits/Keccak-simple.c"
  HEAP32[$4160>>2] = $4157; //@line 353 "mcbits/Keccak-simple.c"
  $4161 = (($4159) + 4)|0; //@line 353 "mcbits/Keccak-simple.c"
  $4162 = $4161; //@line 353 "mcbits/Keccak-simple.c"
  HEAP32[$4162>>2] = $4158; //@line 353 "mcbits/Keccak-simple.c"
  $4163 = $35; //@line 354 "mcbits/Keccak-simple.c"
  $4164 = $4163; //@line 354 "mcbits/Keccak-simple.c"
  $4165 = HEAP32[$4164>>2]|0; //@line 354 "mcbits/Keccak-simple.c"
  $4166 = (($4163) + 4)|0; //@line 354 "mcbits/Keccak-simple.c"
  $4167 = $4166; //@line 354 "mcbits/Keccak-simple.c"
  $4168 = HEAP32[$4167>>2]|0; //@line 354 "mcbits/Keccak-simple.c"
  $4169 = $31; //@line 354 "mcbits/Keccak-simple.c"
  $4170 = $4169; //@line 354 "mcbits/Keccak-simple.c"
  $4171 = HEAP32[$4170>>2]|0; //@line 354 "mcbits/Keccak-simple.c"
  $4172 = (($4169) + 4)|0; //@line 354 "mcbits/Keccak-simple.c"
  $4173 = $4172; //@line 354 "mcbits/Keccak-simple.c"
  $4174 = HEAP32[$4173>>2]|0; //@line 354 "mcbits/Keccak-simple.c"
  $4175 = $4171 ^ -1; //@line 354 "mcbits/Keccak-simple.c"
  $4176 = $4174 ^ -1; //@line 354 "mcbits/Keccak-simple.c"
  $4177 = $32; //@line 354 "mcbits/Keccak-simple.c"
  $4178 = $4177; //@line 354 "mcbits/Keccak-simple.c"
  $4179 = HEAP32[$4178>>2]|0; //@line 354 "mcbits/Keccak-simple.c"
  $4180 = (($4177) + 4)|0; //@line 354 "mcbits/Keccak-simple.c"
  $4181 = $4180; //@line 354 "mcbits/Keccak-simple.c"
  $4182 = HEAP32[$4181>>2]|0; //@line 354 "mcbits/Keccak-simple.c"
  $4183 = $4175 & $4179; //@line 354 "mcbits/Keccak-simple.c"
  $4184 = $4176 & $4182; //@line 354 "mcbits/Keccak-simple.c"
  $4185 = $4165 ^ $4183; //@line 354 "mcbits/Keccak-simple.c"
  $4186 = $4168 ^ $4184; //@line 354 "mcbits/Keccak-simple.c"
  $4187 = $25; //@line 354 "mcbits/Keccak-simple.c"
  $4188 = $4187; //@line 354 "mcbits/Keccak-simple.c"
  HEAP32[$4188>>2] = $4185; //@line 354 "mcbits/Keccak-simple.c"
  $4189 = (($4187) + 4)|0; //@line 354 "mcbits/Keccak-simple.c"
  $4190 = $4189; //@line 354 "mcbits/Keccak-simple.c"
  HEAP32[$4190>>2] = $4186; //@line 354 "mcbits/Keccak-simple.c"
  $4191 = $38; //@line 356 "mcbits/Keccak-simple.c"
  $4192 = $4191; //@line 356 "mcbits/Keccak-simple.c"
  $4193 = HEAP32[$4192>>2]|0; //@line 356 "mcbits/Keccak-simple.c"
  $4194 = (($4191) + 4)|0; //@line 356 "mcbits/Keccak-simple.c"
  $4195 = $4194; //@line 356 "mcbits/Keccak-simple.c"
  $4196 = HEAP32[$4195>>2]|0; //@line 356 "mcbits/Keccak-simple.c"
  $4197 = $43; //@line 356 "mcbits/Keccak-simple.c"
  $4198 = $4197; //@line 356 "mcbits/Keccak-simple.c"
  $4199 = HEAP32[$4198>>2]|0; //@line 356 "mcbits/Keccak-simple.c"
  $4200 = (($4197) + 4)|0; //@line 356 "mcbits/Keccak-simple.c"
  $4201 = $4200; //@line 356 "mcbits/Keccak-simple.c"
  $4202 = HEAP32[$4201>>2]|0; //@line 356 "mcbits/Keccak-simple.c"
  $4203 = $4199 ^ $4193; //@line 356 "mcbits/Keccak-simple.c"
  $4204 = $4202 ^ $4196; //@line 356 "mcbits/Keccak-simple.c"
  $4205 = $43; //@line 356 "mcbits/Keccak-simple.c"
  $4206 = $4205; //@line 356 "mcbits/Keccak-simple.c"
  HEAP32[$4206>>2] = $4203; //@line 356 "mcbits/Keccak-simple.c"
  $4207 = (($4205) + 4)|0; //@line 356 "mcbits/Keccak-simple.c"
  $4208 = $4207; //@line 356 "mcbits/Keccak-simple.c"
  HEAP32[$4208>>2] = $4204; //@line 356 "mcbits/Keccak-simple.c"
  $4209 = $43; //@line 357 "mcbits/Keccak-simple.c"
  $4210 = $4209; //@line 357 "mcbits/Keccak-simple.c"
  $4211 = HEAP32[$4210>>2]|0; //@line 357 "mcbits/Keccak-simple.c"
  $4212 = (($4209) + 4)|0; //@line 357 "mcbits/Keccak-simple.c"
  $4213 = $4212; //@line 357 "mcbits/Keccak-simple.c"
  $4214 = HEAP32[$4213>>2]|0; //@line 357 "mcbits/Keccak-simple.c"
  $4215 = (_bitshift64Shl(($4211|0),($4214|0),62)|0); //@line 357 "mcbits/Keccak-simple.c"
  $4216 = tempRet0; //@line 357 "mcbits/Keccak-simple.c"
  $4217 = $43; //@line 357 "mcbits/Keccak-simple.c"
  $4218 = $4217; //@line 357 "mcbits/Keccak-simple.c"
  $4219 = HEAP32[$4218>>2]|0; //@line 357 "mcbits/Keccak-simple.c"
  $4220 = (($4217) + 4)|0; //@line 357 "mcbits/Keccak-simple.c"
  $4221 = $4220; //@line 357 "mcbits/Keccak-simple.c"
  $4222 = HEAP32[$4221>>2]|0; //@line 357 "mcbits/Keccak-simple.c"
  $4223 = (_bitshift64Lshr(($4219|0),($4222|0),2)|0); //@line 357 "mcbits/Keccak-simple.c"
  $4224 = tempRet0; //@line 357 "mcbits/Keccak-simple.c"
  $4225 = $4215 ^ $4223; //@line 357 "mcbits/Keccak-simple.c"
  $4226 = $4216 ^ $4224; //@line 357 "mcbits/Keccak-simple.c"
  $4227 = $31; //@line 357 "mcbits/Keccak-simple.c"
  $4228 = $4227; //@line 357 "mcbits/Keccak-simple.c"
  HEAP32[$4228>>2] = $4225; //@line 357 "mcbits/Keccak-simple.c"
  $4229 = (($4227) + 4)|0; //@line 357 "mcbits/Keccak-simple.c"
  $4230 = $4229; //@line 357 "mcbits/Keccak-simple.c"
  HEAP32[$4230>>2] = $4226; //@line 357 "mcbits/Keccak-simple.c"
  $4231 = $39; //@line 358 "mcbits/Keccak-simple.c"
  $4232 = $4231; //@line 358 "mcbits/Keccak-simple.c"
  $4233 = HEAP32[$4232>>2]|0; //@line 358 "mcbits/Keccak-simple.c"
  $4234 = (($4231) + 4)|0; //@line 358 "mcbits/Keccak-simple.c"
  $4235 = $4234; //@line 358 "mcbits/Keccak-simple.c"
  $4236 = HEAP32[$4235>>2]|0; //@line 358 "mcbits/Keccak-simple.c"
  $4237 = $49; //@line 358 "mcbits/Keccak-simple.c"
  $4238 = $4237; //@line 358 "mcbits/Keccak-simple.c"
  $4239 = HEAP32[$4238>>2]|0; //@line 358 "mcbits/Keccak-simple.c"
  $4240 = (($4237) + 4)|0; //@line 358 "mcbits/Keccak-simple.c"
  $4241 = $4240; //@line 358 "mcbits/Keccak-simple.c"
  $4242 = HEAP32[$4241>>2]|0; //@line 358 "mcbits/Keccak-simple.c"
  $4243 = $4239 ^ $4233; //@line 358 "mcbits/Keccak-simple.c"
  $4244 = $4242 ^ $4236; //@line 358 "mcbits/Keccak-simple.c"
  $4245 = $49; //@line 358 "mcbits/Keccak-simple.c"
  $4246 = $4245; //@line 358 "mcbits/Keccak-simple.c"
  HEAP32[$4246>>2] = $4243; //@line 358 "mcbits/Keccak-simple.c"
  $4247 = (($4245) + 4)|0; //@line 358 "mcbits/Keccak-simple.c"
  $4248 = $4247; //@line 358 "mcbits/Keccak-simple.c"
  HEAP32[$4248>>2] = $4244; //@line 358 "mcbits/Keccak-simple.c"
  $4249 = $49; //@line 359 "mcbits/Keccak-simple.c"
  $4250 = $4249; //@line 359 "mcbits/Keccak-simple.c"
  $4251 = HEAP32[$4250>>2]|0; //@line 359 "mcbits/Keccak-simple.c"
  $4252 = (($4249) + 4)|0; //@line 359 "mcbits/Keccak-simple.c"
  $4253 = $4252; //@line 359 "mcbits/Keccak-simple.c"
  $4254 = HEAP32[$4253>>2]|0; //@line 359 "mcbits/Keccak-simple.c"
  $4255 = (_bitshift64Shl(($4251|0),($4254|0),55)|0); //@line 359 "mcbits/Keccak-simple.c"
  $4256 = tempRet0; //@line 359 "mcbits/Keccak-simple.c"
  $4257 = $49; //@line 359 "mcbits/Keccak-simple.c"
  $4258 = $4257; //@line 359 "mcbits/Keccak-simple.c"
  $4259 = HEAP32[$4258>>2]|0; //@line 359 "mcbits/Keccak-simple.c"
  $4260 = (($4257) + 4)|0; //@line 359 "mcbits/Keccak-simple.c"
  $4261 = $4260; //@line 359 "mcbits/Keccak-simple.c"
  $4262 = HEAP32[$4261>>2]|0; //@line 359 "mcbits/Keccak-simple.c"
  $4263 = (_bitshift64Lshr(($4259|0),($4262|0),9)|0); //@line 359 "mcbits/Keccak-simple.c"
  $4264 = tempRet0; //@line 359 "mcbits/Keccak-simple.c"
  $4265 = $4255 ^ $4263; //@line 359 "mcbits/Keccak-simple.c"
  $4266 = $4256 ^ $4264; //@line 359 "mcbits/Keccak-simple.c"
  $4267 = $32; //@line 359 "mcbits/Keccak-simple.c"
  $4268 = $4267; //@line 359 "mcbits/Keccak-simple.c"
  HEAP32[$4268>>2] = $4265; //@line 359 "mcbits/Keccak-simple.c"
  $4269 = (($4267) + 4)|0; //@line 359 "mcbits/Keccak-simple.c"
  $4270 = $4269; //@line 359 "mcbits/Keccak-simple.c"
  HEAP32[$4270>>2] = $4266; //@line 359 "mcbits/Keccak-simple.c"
  $4271 = $40; //@line 360 "mcbits/Keccak-simple.c"
  $4272 = $4271; //@line 360 "mcbits/Keccak-simple.c"
  $4273 = HEAP32[$4272>>2]|0; //@line 360 "mcbits/Keccak-simple.c"
  $4274 = (($4271) + 4)|0; //@line 360 "mcbits/Keccak-simple.c"
  $4275 = $4274; //@line 360 "mcbits/Keccak-simple.c"
  $4276 = HEAP32[$4275>>2]|0; //@line 360 "mcbits/Keccak-simple.c"
  $4277 = $55; //@line 360 "mcbits/Keccak-simple.c"
  $4278 = $4277; //@line 360 "mcbits/Keccak-simple.c"
  $4279 = HEAP32[$4278>>2]|0; //@line 360 "mcbits/Keccak-simple.c"
  $4280 = (($4277) + 4)|0; //@line 360 "mcbits/Keccak-simple.c"
  $4281 = $4280; //@line 360 "mcbits/Keccak-simple.c"
  $4282 = HEAP32[$4281>>2]|0; //@line 360 "mcbits/Keccak-simple.c"
  $4283 = $4279 ^ $4273; //@line 360 "mcbits/Keccak-simple.c"
  $4284 = $4282 ^ $4276; //@line 360 "mcbits/Keccak-simple.c"
  $4285 = $55; //@line 360 "mcbits/Keccak-simple.c"
  $4286 = $4285; //@line 360 "mcbits/Keccak-simple.c"
  HEAP32[$4286>>2] = $4283; //@line 360 "mcbits/Keccak-simple.c"
  $4287 = (($4285) + 4)|0; //@line 360 "mcbits/Keccak-simple.c"
  $4288 = $4287; //@line 360 "mcbits/Keccak-simple.c"
  HEAP32[$4288>>2] = $4284; //@line 360 "mcbits/Keccak-simple.c"
  $4289 = $55; //@line 361 "mcbits/Keccak-simple.c"
  $4290 = $4289; //@line 361 "mcbits/Keccak-simple.c"
  $4291 = HEAP32[$4290>>2]|0; //@line 361 "mcbits/Keccak-simple.c"
  $4292 = (($4289) + 4)|0; //@line 361 "mcbits/Keccak-simple.c"
  $4293 = $4292; //@line 361 "mcbits/Keccak-simple.c"
  $4294 = HEAP32[$4293>>2]|0; //@line 361 "mcbits/Keccak-simple.c"
  $4295 = (_bitshift64Shl(($4291|0),($4294|0),39)|0); //@line 361 "mcbits/Keccak-simple.c"
  $4296 = tempRet0; //@line 361 "mcbits/Keccak-simple.c"
  $4297 = $55; //@line 361 "mcbits/Keccak-simple.c"
  $4298 = $4297; //@line 361 "mcbits/Keccak-simple.c"
  $4299 = HEAP32[$4298>>2]|0; //@line 361 "mcbits/Keccak-simple.c"
  $4300 = (($4297) + 4)|0; //@line 361 "mcbits/Keccak-simple.c"
  $4301 = $4300; //@line 361 "mcbits/Keccak-simple.c"
  $4302 = HEAP32[$4301>>2]|0; //@line 361 "mcbits/Keccak-simple.c"
  $4303 = (_bitshift64Lshr(($4299|0),($4302|0),25)|0); //@line 361 "mcbits/Keccak-simple.c"
  $4304 = tempRet0; //@line 361 "mcbits/Keccak-simple.c"
  $4305 = $4295 ^ $4303; //@line 361 "mcbits/Keccak-simple.c"
  $4306 = $4296 ^ $4304; //@line 361 "mcbits/Keccak-simple.c"
  $4307 = $33; //@line 361 "mcbits/Keccak-simple.c"
  $4308 = $4307; //@line 361 "mcbits/Keccak-simple.c"
  HEAP32[$4308>>2] = $4305; //@line 361 "mcbits/Keccak-simple.c"
  $4309 = (($4307) + 4)|0; //@line 361 "mcbits/Keccak-simple.c"
  $4310 = $4309; //@line 361 "mcbits/Keccak-simple.c"
  HEAP32[$4310>>2] = $4306; //@line 361 "mcbits/Keccak-simple.c"
  $4311 = $36; //@line 362 "mcbits/Keccak-simple.c"
  $4312 = $4311; //@line 362 "mcbits/Keccak-simple.c"
  $4313 = HEAP32[$4312>>2]|0; //@line 362 "mcbits/Keccak-simple.c"
  $4314 = (($4311) + 4)|0; //@line 362 "mcbits/Keccak-simple.c"
  $4315 = $4314; //@line 362 "mcbits/Keccak-simple.c"
  $4316 = HEAP32[$4315>>2]|0; //@line 362 "mcbits/Keccak-simple.c"
  $4317 = $56; //@line 362 "mcbits/Keccak-simple.c"
  $4318 = $4317; //@line 362 "mcbits/Keccak-simple.c"
  $4319 = HEAP32[$4318>>2]|0; //@line 362 "mcbits/Keccak-simple.c"
  $4320 = (($4317) + 4)|0; //@line 362 "mcbits/Keccak-simple.c"
  $4321 = $4320; //@line 362 "mcbits/Keccak-simple.c"
  $4322 = HEAP32[$4321>>2]|0; //@line 362 "mcbits/Keccak-simple.c"
  $4323 = $4319 ^ $4313; //@line 362 "mcbits/Keccak-simple.c"
  $4324 = $4322 ^ $4316; //@line 362 "mcbits/Keccak-simple.c"
  $4325 = $56; //@line 362 "mcbits/Keccak-simple.c"
  $4326 = $4325; //@line 362 "mcbits/Keccak-simple.c"
  HEAP32[$4326>>2] = $4323; //@line 362 "mcbits/Keccak-simple.c"
  $4327 = (($4325) + 4)|0; //@line 362 "mcbits/Keccak-simple.c"
  $4328 = $4327; //@line 362 "mcbits/Keccak-simple.c"
  HEAP32[$4328>>2] = $4324; //@line 362 "mcbits/Keccak-simple.c"
  $4329 = $56; //@line 363 "mcbits/Keccak-simple.c"
  $4330 = $4329; //@line 363 "mcbits/Keccak-simple.c"
  $4331 = HEAP32[$4330>>2]|0; //@line 363 "mcbits/Keccak-simple.c"
  $4332 = (($4329) + 4)|0; //@line 363 "mcbits/Keccak-simple.c"
  $4333 = $4332; //@line 363 "mcbits/Keccak-simple.c"
  $4334 = HEAP32[$4333>>2]|0; //@line 363 "mcbits/Keccak-simple.c"
  $4335 = (_bitshift64Shl(($4331|0),($4334|0),41)|0); //@line 363 "mcbits/Keccak-simple.c"
  $4336 = tempRet0; //@line 363 "mcbits/Keccak-simple.c"
  $4337 = $56; //@line 363 "mcbits/Keccak-simple.c"
  $4338 = $4337; //@line 363 "mcbits/Keccak-simple.c"
  $4339 = HEAP32[$4338>>2]|0; //@line 363 "mcbits/Keccak-simple.c"
  $4340 = (($4337) + 4)|0; //@line 363 "mcbits/Keccak-simple.c"
  $4341 = $4340; //@line 363 "mcbits/Keccak-simple.c"
  $4342 = HEAP32[$4341>>2]|0; //@line 363 "mcbits/Keccak-simple.c"
  $4343 = (_bitshift64Lshr(($4339|0),($4342|0),23)|0); //@line 363 "mcbits/Keccak-simple.c"
  $4344 = tempRet0; //@line 363 "mcbits/Keccak-simple.c"
  $4345 = $4335 ^ $4343; //@line 363 "mcbits/Keccak-simple.c"
  $4346 = $4336 ^ $4344; //@line 363 "mcbits/Keccak-simple.c"
  $4347 = $34; //@line 363 "mcbits/Keccak-simple.c"
  $4348 = $4347; //@line 363 "mcbits/Keccak-simple.c"
  HEAP32[$4348>>2] = $4345; //@line 363 "mcbits/Keccak-simple.c"
  $4349 = (($4347) + 4)|0; //@line 363 "mcbits/Keccak-simple.c"
  $4350 = $4349; //@line 363 "mcbits/Keccak-simple.c"
  HEAP32[$4350>>2] = $4346; //@line 363 "mcbits/Keccak-simple.c"
  $4351 = $37; //@line 364 "mcbits/Keccak-simple.c"
  $4352 = $4351; //@line 364 "mcbits/Keccak-simple.c"
  $4353 = HEAP32[$4352>>2]|0; //@line 364 "mcbits/Keccak-simple.c"
  $4354 = (($4351) + 4)|0; //@line 364 "mcbits/Keccak-simple.c"
  $4355 = $4354; //@line 364 "mcbits/Keccak-simple.c"
  $4356 = HEAP32[$4355>>2]|0; //@line 364 "mcbits/Keccak-simple.c"
  $4357 = $62; //@line 364 "mcbits/Keccak-simple.c"
  $4358 = $4357; //@line 364 "mcbits/Keccak-simple.c"
  $4359 = HEAP32[$4358>>2]|0; //@line 364 "mcbits/Keccak-simple.c"
  $4360 = (($4357) + 4)|0; //@line 364 "mcbits/Keccak-simple.c"
  $4361 = $4360; //@line 364 "mcbits/Keccak-simple.c"
  $4362 = HEAP32[$4361>>2]|0; //@line 364 "mcbits/Keccak-simple.c"
  $4363 = $4359 ^ $4353; //@line 364 "mcbits/Keccak-simple.c"
  $4364 = $4362 ^ $4356; //@line 364 "mcbits/Keccak-simple.c"
  $4365 = $62; //@line 364 "mcbits/Keccak-simple.c"
  $4366 = $4365; //@line 364 "mcbits/Keccak-simple.c"
  HEAP32[$4366>>2] = $4363; //@line 364 "mcbits/Keccak-simple.c"
  $4367 = (($4365) + 4)|0; //@line 364 "mcbits/Keccak-simple.c"
  $4368 = $4367; //@line 364 "mcbits/Keccak-simple.c"
  HEAP32[$4368>>2] = $4364; //@line 364 "mcbits/Keccak-simple.c"
  $4369 = $62; //@line 365 "mcbits/Keccak-simple.c"
  $4370 = $4369; //@line 365 "mcbits/Keccak-simple.c"
  $4371 = HEAP32[$4370>>2]|0; //@line 365 "mcbits/Keccak-simple.c"
  $4372 = (($4369) + 4)|0; //@line 365 "mcbits/Keccak-simple.c"
  $4373 = $4372; //@line 365 "mcbits/Keccak-simple.c"
  $4374 = HEAP32[$4373>>2]|0; //@line 365 "mcbits/Keccak-simple.c"
  $4375 = (_bitshift64Shl(($4371|0),($4374|0),2)|0); //@line 365 "mcbits/Keccak-simple.c"
  $4376 = tempRet0; //@line 365 "mcbits/Keccak-simple.c"
  $4377 = $62; //@line 365 "mcbits/Keccak-simple.c"
  $4378 = $4377; //@line 365 "mcbits/Keccak-simple.c"
  $4379 = HEAP32[$4378>>2]|0; //@line 365 "mcbits/Keccak-simple.c"
  $4380 = (($4377) + 4)|0; //@line 365 "mcbits/Keccak-simple.c"
  $4381 = $4380; //@line 365 "mcbits/Keccak-simple.c"
  $4382 = HEAP32[$4381>>2]|0; //@line 365 "mcbits/Keccak-simple.c"
  $4383 = (_bitshift64Lshr(($4379|0),($4382|0),62)|0); //@line 365 "mcbits/Keccak-simple.c"
  $4384 = tempRet0; //@line 365 "mcbits/Keccak-simple.c"
  $4385 = $4375 ^ $4383; //@line 365 "mcbits/Keccak-simple.c"
  $4386 = $4376 ^ $4384; //@line 365 "mcbits/Keccak-simple.c"
  $4387 = $35; //@line 365 "mcbits/Keccak-simple.c"
  $4388 = $4387; //@line 365 "mcbits/Keccak-simple.c"
  HEAP32[$4388>>2] = $4385; //@line 365 "mcbits/Keccak-simple.c"
  $4389 = (($4387) + 4)|0; //@line 365 "mcbits/Keccak-simple.c"
  $4390 = $4389; //@line 365 "mcbits/Keccak-simple.c"
  HEAP32[$4390>>2] = $4386; //@line 365 "mcbits/Keccak-simple.c"
  $4391 = $31; //@line 366 "mcbits/Keccak-simple.c"
  $4392 = $4391; //@line 366 "mcbits/Keccak-simple.c"
  $4393 = HEAP32[$4392>>2]|0; //@line 366 "mcbits/Keccak-simple.c"
  $4394 = (($4391) + 4)|0; //@line 366 "mcbits/Keccak-simple.c"
  $4395 = $4394; //@line 366 "mcbits/Keccak-simple.c"
  $4396 = HEAP32[$4395>>2]|0; //@line 366 "mcbits/Keccak-simple.c"
  $4397 = $32; //@line 366 "mcbits/Keccak-simple.c"
  $4398 = $4397; //@line 366 "mcbits/Keccak-simple.c"
  $4399 = HEAP32[$4398>>2]|0; //@line 366 "mcbits/Keccak-simple.c"
  $4400 = (($4397) + 4)|0; //@line 366 "mcbits/Keccak-simple.c"
  $4401 = $4400; //@line 366 "mcbits/Keccak-simple.c"
  $4402 = HEAP32[$4401>>2]|0; //@line 366 "mcbits/Keccak-simple.c"
  $4403 = $4399 ^ -1; //@line 366 "mcbits/Keccak-simple.c"
  $4404 = $4402 ^ -1; //@line 366 "mcbits/Keccak-simple.c"
  $4405 = $33; //@line 366 "mcbits/Keccak-simple.c"
  $4406 = $4405; //@line 366 "mcbits/Keccak-simple.c"
  $4407 = HEAP32[$4406>>2]|0; //@line 366 "mcbits/Keccak-simple.c"
  $4408 = (($4405) + 4)|0; //@line 366 "mcbits/Keccak-simple.c"
  $4409 = $4408; //@line 366 "mcbits/Keccak-simple.c"
  $4410 = HEAP32[$4409>>2]|0; //@line 366 "mcbits/Keccak-simple.c"
  $4411 = $4403 & $4407; //@line 366 "mcbits/Keccak-simple.c"
  $4412 = $4404 & $4410; //@line 366 "mcbits/Keccak-simple.c"
  $4413 = $4393 ^ $4411; //@line 366 "mcbits/Keccak-simple.c"
  $4414 = $4396 ^ $4412; //@line 366 "mcbits/Keccak-simple.c"
  $4415 = $26; //@line 366 "mcbits/Keccak-simple.c"
  $4416 = $4415; //@line 366 "mcbits/Keccak-simple.c"
  HEAP32[$4416>>2] = $4413; //@line 366 "mcbits/Keccak-simple.c"
  $4417 = (($4415) + 4)|0; //@line 366 "mcbits/Keccak-simple.c"
  $4418 = $4417; //@line 366 "mcbits/Keccak-simple.c"
  HEAP32[$4418>>2] = $4414; //@line 366 "mcbits/Keccak-simple.c"
  $4419 = $32; //@line 367 "mcbits/Keccak-simple.c"
  $4420 = $4419; //@line 367 "mcbits/Keccak-simple.c"
  $4421 = HEAP32[$4420>>2]|0; //@line 367 "mcbits/Keccak-simple.c"
  $4422 = (($4419) + 4)|0; //@line 367 "mcbits/Keccak-simple.c"
  $4423 = $4422; //@line 367 "mcbits/Keccak-simple.c"
  $4424 = HEAP32[$4423>>2]|0; //@line 367 "mcbits/Keccak-simple.c"
  $4425 = $33; //@line 367 "mcbits/Keccak-simple.c"
  $4426 = $4425; //@line 367 "mcbits/Keccak-simple.c"
  $4427 = HEAP32[$4426>>2]|0; //@line 367 "mcbits/Keccak-simple.c"
  $4428 = (($4425) + 4)|0; //@line 367 "mcbits/Keccak-simple.c"
  $4429 = $4428; //@line 367 "mcbits/Keccak-simple.c"
  $4430 = HEAP32[$4429>>2]|0; //@line 367 "mcbits/Keccak-simple.c"
  $4431 = $4427 ^ -1; //@line 367 "mcbits/Keccak-simple.c"
  $4432 = $4430 ^ -1; //@line 367 "mcbits/Keccak-simple.c"
  $4433 = $34; //@line 367 "mcbits/Keccak-simple.c"
  $4434 = $4433; //@line 367 "mcbits/Keccak-simple.c"
  $4435 = HEAP32[$4434>>2]|0; //@line 367 "mcbits/Keccak-simple.c"
  $4436 = (($4433) + 4)|0; //@line 367 "mcbits/Keccak-simple.c"
  $4437 = $4436; //@line 367 "mcbits/Keccak-simple.c"
  $4438 = HEAP32[$4437>>2]|0; //@line 367 "mcbits/Keccak-simple.c"
  $4439 = $4431 & $4435; //@line 367 "mcbits/Keccak-simple.c"
  $4440 = $4432 & $4438; //@line 367 "mcbits/Keccak-simple.c"
  $4441 = $4421 ^ $4439; //@line 367 "mcbits/Keccak-simple.c"
  $4442 = $4424 ^ $4440; //@line 367 "mcbits/Keccak-simple.c"
  $4443 = $27; //@line 367 "mcbits/Keccak-simple.c"
  $4444 = $4443; //@line 367 "mcbits/Keccak-simple.c"
  HEAP32[$4444>>2] = $4441; //@line 367 "mcbits/Keccak-simple.c"
  $4445 = (($4443) + 4)|0; //@line 367 "mcbits/Keccak-simple.c"
  $4446 = $4445; //@line 367 "mcbits/Keccak-simple.c"
  HEAP32[$4446>>2] = $4442; //@line 367 "mcbits/Keccak-simple.c"
  $4447 = $33; //@line 368 "mcbits/Keccak-simple.c"
  $4448 = $4447; //@line 368 "mcbits/Keccak-simple.c"
  $4449 = HEAP32[$4448>>2]|0; //@line 368 "mcbits/Keccak-simple.c"
  $4450 = (($4447) + 4)|0; //@line 368 "mcbits/Keccak-simple.c"
  $4451 = $4450; //@line 368 "mcbits/Keccak-simple.c"
  $4452 = HEAP32[$4451>>2]|0; //@line 368 "mcbits/Keccak-simple.c"
  $4453 = $34; //@line 368 "mcbits/Keccak-simple.c"
  $4454 = $4453; //@line 368 "mcbits/Keccak-simple.c"
  $4455 = HEAP32[$4454>>2]|0; //@line 368 "mcbits/Keccak-simple.c"
  $4456 = (($4453) + 4)|0; //@line 368 "mcbits/Keccak-simple.c"
  $4457 = $4456; //@line 368 "mcbits/Keccak-simple.c"
  $4458 = HEAP32[$4457>>2]|0; //@line 368 "mcbits/Keccak-simple.c"
  $4459 = $4455 ^ -1; //@line 368 "mcbits/Keccak-simple.c"
  $4460 = $4458 ^ -1; //@line 368 "mcbits/Keccak-simple.c"
  $4461 = $35; //@line 368 "mcbits/Keccak-simple.c"
  $4462 = $4461; //@line 368 "mcbits/Keccak-simple.c"
  $4463 = HEAP32[$4462>>2]|0; //@line 368 "mcbits/Keccak-simple.c"
  $4464 = (($4461) + 4)|0; //@line 368 "mcbits/Keccak-simple.c"
  $4465 = $4464; //@line 368 "mcbits/Keccak-simple.c"
  $4466 = HEAP32[$4465>>2]|0; //@line 368 "mcbits/Keccak-simple.c"
  $4467 = $4459 & $4463; //@line 368 "mcbits/Keccak-simple.c"
  $4468 = $4460 & $4466; //@line 368 "mcbits/Keccak-simple.c"
  $4469 = $4449 ^ $4467; //@line 368 "mcbits/Keccak-simple.c"
  $4470 = $4452 ^ $4468; //@line 368 "mcbits/Keccak-simple.c"
  $4471 = $28; //@line 368 "mcbits/Keccak-simple.c"
  $4472 = $4471; //@line 368 "mcbits/Keccak-simple.c"
  HEAP32[$4472>>2] = $4469; //@line 368 "mcbits/Keccak-simple.c"
  $4473 = (($4471) + 4)|0; //@line 368 "mcbits/Keccak-simple.c"
  $4474 = $4473; //@line 368 "mcbits/Keccak-simple.c"
  HEAP32[$4474>>2] = $4470; //@line 368 "mcbits/Keccak-simple.c"
  $4475 = $34; //@line 369 "mcbits/Keccak-simple.c"
  $4476 = $4475; //@line 369 "mcbits/Keccak-simple.c"
  $4477 = HEAP32[$4476>>2]|0; //@line 369 "mcbits/Keccak-simple.c"
  $4478 = (($4475) + 4)|0; //@line 369 "mcbits/Keccak-simple.c"
  $4479 = $4478; //@line 369 "mcbits/Keccak-simple.c"
  $4480 = HEAP32[$4479>>2]|0; //@line 369 "mcbits/Keccak-simple.c"
  $4481 = $35; //@line 369 "mcbits/Keccak-simple.c"
  $4482 = $4481; //@line 369 "mcbits/Keccak-simple.c"
  $4483 = HEAP32[$4482>>2]|0; //@line 369 "mcbits/Keccak-simple.c"
  $4484 = (($4481) + 4)|0; //@line 369 "mcbits/Keccak-simple.c"
  $4485 = $4484; //@line 369 "mcbits/Keccak-simple.c"
  $4486 = HEAP32[$4485>>2]|0; //@line 369 "mcbits/Keccak-simple.c"
  $4487 = $4483 ^ -1; //@line 369 "mcbits/Keccak-simple.c"
  $4488 = $4486 ^ -1; //@line 369 "mcbits/Keccak-simple.c"
  $4489 = $31; //@line 369 "mcbits/Keccak-simple.c"
  $4490 = $4489; //@line 369 "mcbits/Keccak-simple.c"
  $4491 = HEAP32[$4490>>2]|0; //@line 369 "mcbits/Keccak-simple.c"
  $4492 = (($4489) + 4)|0; //@line 369 "mcbits/Keccak-simple.c"
  $4493 = $4492; //@line 369 "mcbits/Keccak-simple.c"
  $4494 = HEAP32[$4493>>2]|0; //@line 369 "mcbits/Keccak-simple.c"
  $4495 = $4487 & $4491; //@line 369 "mcbits/Keccak-simple.c"
  $4496 = $4488 & $4494; //@line 369 "mcbits/Keccak-simple.c"
  $4497 = $4477 ^ $4495; //@line 369 "mcbits/Keccak-simple.c"
  $4498 = $4480 ^ $4496; //@line 369 "mcbits/Keccak-simple.c"
  $4499 = $29; //@line 369 "mcbits/Keccak-simple.c"
  $4500 = $4499; //@line 369 "mcbits/Keccak-simple.c"
  HEAP32[$4500>>2] = $4497; //@line 369 "mcbits/Keccak-simple.c"
  $4501 = (($4499) + 4)|0; //@line 369 "mcbits/Keccak-simple.c"
  $4502 = $4501; //@line 369 "mcbits/Keccak-simple.c"
  HEAP32[$4502>>2] = $4498; //@line 369 "mcbits/Keccak-simple.c"
  $4503 = $35; //@line 370 "mcbits/Keccak-simple.c"
  $4504 = $4503; //@line 370 "mcbits/Keccak-simple.c"
  $4505 = HEAP32[$4504>>2]|0; //@line 370 "mcbits/Keccak-simple.c"
  $4506 = (($4503) + 4)|0; //@line 370 "mcbits/Keccak-simple.c"
  $4507 = $4506; //@line 370 "mcbits/Keccak-simple.c"
  $4508 = HEAP32[$4507>>2]|0; //@line 370 "mcbits/Keccak-simple.c"
  $4509 = $31; //@line 370 "mcbits/Keccak-simple.c"
  $4510 = $4509; //@line 370 "mcbits/Keccak-simple.c"
  $4511 = HEAP32[$4510>>2]|0; //@line 370 "mcbits/Keccak-simple.c"
  $4512 = (($4509) + 4)|0; //@line 370 "mcbits/Keccak-simple.c"
  $4513 = $4512; //@line 370 "mcbits/Keccak-simple.c"
  $4514 = HEAP32[$4513>>2]|0; //@line 370 "mcbits/Keccak-simple.c"
  $4515 = $4511 ^ -1; //@line 370 "mcbits/Keccak-simple.c"
  $4516 = $4514 ^ -1; //@line 370 "mcbits/Keccak-simple.c"
  $4517 = $32; //@line 370 "mcbits/Keccak-simple.c"
  $4518 = $4517; //@line 370 "mcbits/Keccak-simple.c"
  $4519 = HEAP32[$4518>>2]|0; //@line 370 "mcbits/Keccak-simple.c"
  $4520 = (($4517) + 4)|0; //@line 370 "mcbits/Keccak-simple.c"
  $4521 = $4520; //@line 370 "mcbits/Keccak-simple.c"
  $4522 = HEAP32[$4521>>2]|0; //@line 370 "mcbits/Keccak-simple.c"
  $4523 = $4515 & $4519; //@line 370 "mcbits/Keccak-simple.c"
  $4524 = $4516 & $4522; //@line 370 "mcbits/Keccak-simple.c"
  $4525 = $4505 ^ $4523; //@line 370 "mcbits/Keccak-simple.c"
  $4526 = $4508 ^ $4524; //@line 370 "mcbits/Keccak-simple.c"
  $4527 = $30; //@line 370 "mcbits/Keccak-simple.c"
  $4528 = $4527; //@line 370 "mcbits/Keccak-simple.c"
  HEAP32[$4528>>2] = $4525; //@line 370 "mcbits/Keccak-simple.c"
  $4529 = (($4527) + 4)|0; //@line 370 "mcbits/Keccak-simple.c"
  $4530 = $4529; //@line 370 "mcbits/Keccak-simple.c"
  HEAP32[$4530>>2] = $4526; //@line 370 "mcbits/Keccak-simple.c"
  $4531 = $5; //@line 180 "mcbits/Keccak-simple.c"
  $4532 = (($4531) + 2)|0; //@line 180 "mcbits/Keccak-simple.c"
  $5 = $4532; //@line 180 "mcbits/Keccak-simple.c"
 }
 $4533 = $3; //@line 374 "mcbits/Keccak-simple.c"
 $4534 = $4533; //@line 374 "mcbits/Keccak-simple.c"
 $4535 = $4534; //@line 374 "mcbits/Keccak-simple.c"
 HEAP32[$4535>>2] = $396; //@line 374 "mcbits/Keccak-simple.c"
 $4536 = (($4534) + 4)|0; //@line 374 "mcbits/Keccak-simple.c"
 $4537 = $4536; //@line 374 "mcbits/Keccak-simple.c"
 HEAP32[$4537>>2] = $399; //@line 374 "mcbits/Keccak-simple.c"
 $4538 = $7; //@line 375 "mcbits/Keccak-simple.c"
 $4539 = $4538; //@line 375 "mcbits/Keccak-simple.c"
 $4540 = HEAP32[$4539>>2]|0; //@line 375 "mcbits/Keccak-simple.c"
 $4541 = (($4538) + 4)|0; //@line 375 "mcbits/Keccak-simple.c"
 $4542 = $4541; //@line 375 "mcbits/Keccak-simple.c"
 $4543 = HEAP32[$4542>>2]|0; //@line 375 "mcbits/Keccak-simple.c"
 $4544 = $3; //@line 375 "mcbits/Keccak-simple.c"
 $4545 = ((($4544)) + 8|0); //@line 375 "mcbits/Keccak-simple.c"
 $4546 = $4545; //@line 375 "mcbits/Keccak-simple.c"
 $4547 = $4546; //@line 375 "mcbits/Keccak-simple.c"
 HEAP32[$4547>>2] = $4540; //@line 375 "mcbits/Keccak-simple.c"
 $4548 = (($4546) + 4)|0; //@line 375 "mcbits/Keccak-simple.c"
 $4549 = $4548; //@line 375 "mcbits/Keccak-simple.c"
 HEAP32[$4549>>2] = $4543; //@line 375 "mcbits/Keccak-simple.c"
 $4550 = $8; //@line 376 "mcbits/Keccak-simple.c"
 $4551 = $4550; //@line 376 "mcbits/Keccak-simple.c"
 $4552 = HEAP32[$4551>>2]|0; //@line 376 "mcbits/Keccak-simple.c"
 $4553 = (($4550) + 4)|0; //@line 376 "mcbits/Keccak-simple.c"
 $4554 = $4553; //@line 376 "mcbits/Keccak-simple.c"
 $4555 = HEAP32[$4554>>2]|0; //@line 376 "mcbits/Keccak-simple.c"
 $4556 = $3; //@line 376 "mcbits/Keccak-simple.c"
 $4557 = ((($4556)) + 16|0); //@line 376 "mcbits/Keccak-simple.c"
 $4558 = $4557; //@line 376 "mcbits/Keccak-simple.c"
 $4559 = $4558; //@line 376 "mcbits/Keccak-simple.c"
 HEAP32[$4559>>2] = $4552; //@line 376 "mcbits/Keccak-simple.c"
 $4560 = (($4558) + 4)|0; //@line 376 "mcbits/Keccak-simple.c"
 $4561 = $4560; //@line 376 "mcbits/Keccak-simple.c"
 HEAP32[$4561>>2] = $4555; //@line 376 "mcbits/Keccak-simple.c"
 $4562 = $9; //@line 377 "mcbits/Keccak-simple.c"
 $4563 = $4562; //@line 377 "mcbits/Keccak-simple.c"
 $4564 = HEAP32[$4563>>2]|0; //@line 377 "mcbits/Keccak-simple.c"
 $4565 = (($4562) + 4)|0; //@line 377 "mcbits/Keccak-simple.c"
 $4566 = $4565; //@line 377 "mcbits/Keccak-simple.c"
 $4567 = HEAP32[$4566>>2]|0; //@line 377 "mcbits/Keccak-simple.c"
 $4568 = $3; //@line 377 "mcbits/Keccak-simple.c"
 $4569 = ((($4568)) + 24|0); //@line 377 "mcbits/Keccak-simple.c"
 $4570 = $4569; //@line 377 "mcbits/Keccak-simple.c"
 $4571 = $4570; //@line 377 "mcbits/Keccak-simple.c"
 HEAP32[$4571>>2] = $4564; //@line 377 "mcbits/Keccak-simple.c"
 $4572 = (($4570) + 4)|0; //@line 377 "mcbits/Keccak-simple.c"
 $4573 = $4572; //@line 377 "mcbits/Keccak-simple.c"
 HEAP32[$4573>>2] = $4567; //@line 377 "mcbits/Keccak-simple.c"
 $4574 = $10; //@line 378 "mcbits/Keccak-simple.c"
 $4575 = $4574; //@line 378 "mcbits/Keccak-simple.c"
 $4576 = HEAP32[$4575>>2]|0; //@line 378 "mcbits/Keccak-simple.c"
 $4577 = (($4574) + 4)|0; //@line 378 "mcbits/Keccak-simple.c"
 $4578 = $4577; //@line 378 "mcbits/Keccak-simple.c"
 $4579 = HEAP32[$4578>>2]|0; //@line 378 "mcbits/Keccak-simple.c"
 $4580 = $3; //@line 378 "mcbits/Keccak-simple.c"
 $4581 = ((($4580)) + 32|0); //@line 378 "mcbits/Keccak-simple.c"
 $4582 = $4581; //@line 378 "mcbits/Keccak-simple.c"
 $4583 = $4582; //@line 378 "mcbits/Keccak-simple.c"
 HEAP32[$4583>>2] = $4576; //@line 378 "mcbits/Keccak-simple.c"
 $4584 = (($4582) + 4)|0; //@line 378 "mcbits/Keccak-simple.c"
 $4585 = $4584; //@line 378 "mcbits/Keccak-simple.c"
 HEAP32[$4585>>2] = $4579; //@line 378 "mcbits/Keccak-simple.c"
 $4586 = $11; //@line 379 "mcbits/Keccak-simple.c"
 $4587 = $4586; //@line 379 "mcbits/Keccak-simple.c"
 $4588 = HEAP32[$4587>>2]|0; //@line 379 "mcbits/Keccak-simple.c"
 $4589 = (($4586) + 4)|0; //@line 379 "mcbits/Keccak-simple.c"
 $4590 = $4589; //@line 379 "mcbits/Keccak-simple.c"
 $4591 = HEAP32[$4590>>2]|0; //@line 379 "mcbits/Keccak-simple.c"
 $4592 = $3; //@line 379 "mcbits/Keccak-simple.c"
 $4593 = ((($4592)) + 40|0); //@line 379 "mcbits/Keccak-simple.c"
 $4594 = $4593; //@line 379 "mcbits/Keccak-simple.c"
 $4595 = $4594; //@line 379 "mcbits/Keccak-simple.c"
 HEAP32[$4595>>2] = $4588; //@line 379 "mcbits/Keccak-simple.c"
 $4596 = (($4594) + 4)|0; //@line 379 "mcbits/Keccak-simple.c"
 $4597 = $4596; //@line 379 "mcbits/Keccak-simple.c"
 HEAP32[$4597>>2] = $4591; //@line 379 "mcbits/Keccak-simple.c"
 $4598 = $12; //@line 380 "mcbits/Keccak-simple.c"
 $4599 = $4598; //@line 380 "mcbits/Keccak-simple.c"
 $4600 = HEAP32[$4599>>2]|0; //@line 380 "mcbits/Keccak-simple.c"
 $4601 = (($4598) + 4)|0; //@line 380 "mcbits/Keccak-simple.c"
 $4602 = $4601; //@line 380 "mcbits/Keccak-simple.c"
 $4603 = HEAP32[$4602>>2]|0; //@line 380 "mcbits/Keccak-simple.c"
 $4604 = $3; //@line 380 "mcbits/Keccak-simple.c"
 $4605 = ((($4604)) + 48|0); //@line 380 "mcbits/Keccak-simple.c"
 $4606 = $4605; //@line 380 "mcbits/Keccak-simple.c"
 $4607 = $4606; //@line 380 "mcbits/Keccak-simple.c"
 HEAP32[$4607>>2] = $4600; //@line 380 "mcbits/Keccak-simple.c"
 $4608 = (($4606) + 4)|0; //@line 380 "mcbits/Keccak-simple.c"
 $4609 = $4608; //@line 380 "mcbits/Keccak-simple.c"
 HEAP32[$4609>>2] = $4603; //@line 380 "mcbits/Keccak-simple.c"
 $4610 = $13; //@line 381 "mcbits/Keccak-simple.c"
 $4611 = $4610; //@line 381 "mcbits/Keccak-simple.c"
 $4612 = HEAP32[$4611>>2]|0; //@line 381 "mcbits/Keccak-simple.c"
 $4613 = (($4610) + 4)|0; //@line 381 "mcbits/Keccak-simple.c"
 $4614 = $4613; //@line 381 "mcbits/Keccak-simple.c"
 $4615 = HEAP32[$4614>>2]|0; //@line 381 "mcbits/Keccak-simple.c"
 $4616 = $3; //@line 381 "mcbits/Keccak-simple.c"
 $4617 = ((($4616)) + 56|0); //@line 381 "mcbits/Keccak-simple.c"
 $4618 = $4617; //@line 381 "mcbits/Keccak-simple.c"
 $4619 = $4618; //@line 381 "mcbits/Keccak-simple.c"
 HEAP32[$4619>>2] = $4612; //@line 381 "mcbits/Keccak-simple.c"
 $4620 = (($4618) + 4)|0; //@line 381 "mcbits/Keccak-simple.c"
 $4621 = $4620; //@line 381 "mcbits/Keccak-simple.c"
 HEAP32[$4621>>2] = $4615; //@line 381 "mcbits/Keccak-simple.c"
 $4622 = $14; //@line 382 "mcbits/Keccak-simple.c"
 $4623 = $4622; //@line 382 "mcbits/Keccak-simple.c"
 $4624 = HEAP32[$4623>>2]|0; //@line 382 "mcbits/Keccak-simple.c"
 $4625 = (($4622) + 4)|0; //@line 382 "mcbits/Keccak-simple.c"
 $4626 = $4625; //@line 382 "mcbits/Keccak-simple.c"
 $4627 = HEAP32[$4626>>2]|0; //@line 382 "mcbits/Keccak-simple.c"
 $4628 = $3; //@line 382 "mcbits/Keccak-simple.c"
 $4629 = ((($4628)) + 64|0); //@line 382 "mcbits/Keccak-simple.c"
 $4630 = $4629; //@line 382 "mcbits/Keccak-simple.c"
 $4631 = $4630; //@line 382 "mcbits/Keccak-simple.c"
 HEAP32[$4631>>2] = $4624; //@line 382 "mcbits/Keccak-simple.c"
 $4632 = (($4630) + 4)|0; //@line 382 "mcbits/Keccak-simple.c"
 $4633 = $4632; //@line 382 "mcbits/Keccak-simple.c"
 HEAP32[$4633>>2] = $4627; //@line 382 "mcbits/Keccak-simple.c"
 $4634 = $15; //@line 383 "mcbits/Keccak-simple.c"
 $4635 = $4634; //@line 383 "mcbits/Keccak-simple.c"
 $4636 = HEAP32[$4635>>2]|0; //@line 383 "mcbits/Keccak-simple.c"
 $4637 = (($4634) + 4)|0; //@line 383 "mcbits/Keccak-simple.c"
 $4638 = $4637; //@line 383 "mcbits/Keccak-simple.c"
 $4639 = HEAP32[$4638>>2]|0; //@line 383 "mcbits/Keccak-simple.c"
 $4640 = $3; //@line 383 "mcbits/Keccak-simple.c"
 $4641 = ((($4640)) + 72|0); //@line 383 "mcbits/Keccak-simple.c"
 $4642 = $4641; //@line 383 "mcbits/Keccak-simple.c"
 $4643 = $4642; //@line 383 "mcbits/Keccak-simple.c"
 HEAP32[$4643>>2] = $4636; //@line 383 "mcbits/Keccak-simple.c"
 $4644 = (($4642) + 4)|0; //@line 383 "mcbits/Keccak-simple.c"
 $4645 = $4644; //@line 383 "mcbits/Keccak-simple.c"
 HEAP32[$4645>>2] = $4639; //@line 383 "mcbits/Keccak-simple.c"
 $4646 = $16; //@line 384 "mcbits/Keccak-simple.c"
 $4647 = $4646; //@line 384 "mcbits/Keccak-simple.c"
 $4648 = HEAP32[$4647>>2]|0; //@line 384 "mcbits/Keccak-simple.c"
 $4649 = (($4646) + 4)|0; //@line 384 "mcbits/Keccak-simple.c"
 $4650 = $4649; //@line 384 "mcbits/Keccak-simple.c"
 $4651 = HEAP32[$4650>>2]|0; //@line 384 "mcbits/Keccak-simple.c"
 $4652 = $3; //@line 384 "mcbits/Keccak-simple.c"
 $4653 = ((($4652)) + 80|0); //@line 384 "mcbits/Keccak-simple.c"
 $4654 = $4653; //@line 384 "mcbits/Keccak-simple.c"
 $4655 = $4654; //@line 384 "mcbits/Keccak-simple.c"
 HEAP32[$4655>>2] = $4648; //@line 384 "mcbits/Keccak-simple.c"
 $4656 = (($4654) + 4)|0; //@line 384 "mcbits/Keccak-simple.c"
 $4657 = $4656; //@line 384 "mcbits/Keccak-simple.c"
 HEAP32[$4657>>2] = $4651; //@line 384 "mcbits/Keccak-simple.c"
 $4658 = $17; //@line 385 "mcbits/Keccak-simple.c"
 $4659 = $4658; //@line 385 "mcbits/Keccak-simple.c"
 $4660 = HEAP32[$4659>>2]|0; //@line 385 "mcbits/Keccak-simple.c"
 $4661 = (($4658) + 4)|0; //@line 385 "mcbits/Keccak-simple.c"
 $4662 = $4661; //@line 385 "mcbits/Keccak-simple.c"
 $4663 = HEAP32[$4662>>2]|0; //@line 385 "mcbits/Keccak-simple.c"
 $4664 = $3; //@line 385 "mcbits/Keccak-simple.c"
 $4665 = ((($4664)) + 88|0); //@line 385 "mcbits/Keccak-simple.c"
 $4666 = $4665; //@line 385 "mcbits/Keccak-simple.c"
 $4667 = $4666; //@line 385 "mcbits/Keccak-simple.c"
 HEAP32[$4667>>2] = $4660; //@line 385 "mcbits/Keccak-simple.c"
 $4668 = (($4666) + 4)|0; //@line 385 "mcbits/Keccak-simple.c"
 $4669 = $4668; //@line 385 "mcbits/Keccak-simple.c"
 HEAP32[$4669>>2] = $4663; //@line 385 "mcbits/Keccak-simple.c"
 $4670 = $18; //@line 386 "mcbits/Keccak-simple.c"
 $4671 = $4670; //@line 386 "mcbits/Keccak-simple.c"
 $4672 = HEAP32[$4671>>2]|0; //@line 386 "mcbits/Keccak-simple.c"
 $4673 = (($4670) + 4)|0; //@line 386 "mcbits/Keccak-simple.c"
 $4674 = $4673; //@line 386 "mcbits/Keccak-simple.c"
 $4675 = HEAP32[$4674>>2]|0; //@line 386 "mcbits/Keccak-simple.c"
 $4676 = $3; //@line 386 "mcbits/Keccak-simple.c"
 $4677 = ((($4676)) + 96|0); //@line 386 "mcbits/Keccak-simple.c"
 $4678 = $4677; //@line 386 "mcbits/Keccak-simple.c"
 $4679 = $4678; //@line 386 "mcbits/Keccak-simple.c"
 HEAP32[$4679>>2] = $4672; //@line 386 "mcbits/Keccak-simple.c"
 $4680 = (($4678) + 4)|0; //@line 386 "mcbits/Keccak-simple.c"
 $4681 = $4680; //@line 386 "mcbits/Keccak-simple.c"
 HEAP32[$4681>>2] = $4675; //@line 386 "mcbits/Keccak-simple.c"
 $4682 = $19; //@line 387 "mcbits/Keccak-simple.c"
 $4683 = $4682; //@line 387 "mcbits/Keccak-simple.c"
 $4684 = HEAP32[$4683>>2]|0; //@line 387 "mcbits/Keccak-simple.c"
 $4685 = (($4682) + 4)|0; //@line 387 "mcbits/Keccak-simple.c"
 $4686 = $4685; //@line 387 "mcbits/Keccak-simple.c"
 $4687 = HEAP32[$4686>>2]|0; //@line 387 "mcbits/Keccak-simple.c"
 $4688 = $3; //@line 387 "mcbits/Keccak-simple.c"
 $4689 = ((($4688)) + 104|0); //@line 387 "mcbits/Keccak-simple.c"
 $4690 = $4689; //@line 387 "mcbits/Keccak-simple.c"
 $4691 = $4690; //@line 387 "mcbits/Keccak-simple.c"
 HEAP32[$4691>>2] = $4684; //@line 387 "mcbits/Keccak-simple.c"
 $4692 = (($4690) + 4)|0; //@line 387 "mcbits/Keccak-simple.c"
 $4693 = $4692; //@line 387 "mcbits/Keccak-simple.c"
 HEAP32[$4693>>2] = $4687; //@line 387 "mcbits/Keccak-simple.c"
 $4694 = $20; //@line 388 "mcbits/Keccak-simple.c"
 $4695 = $4694; //@line 388 "mcbits/Keccak-simple.c"
 $4696 = HEAP32[$4695>>2]|0; //@line 388 "mcbits/Keccak-simple.c"
 $4697 = (($4694) + 4)|0; //@line 388 "mcbits/Keccak-simple.c"
 $4698 = $4697; //@line 388 "mcbits/Keccak-simple.c"
 $4699 = HEAP32[$4698>>2]|0; //@line 388 "mcbits/Keccak-simple.c"
 $4700 = $3; //@line 388 "mcbits/Keccak-simple.c"
 $4701 = ((($4700)) + 112|0); //@line 388 "mcbits/Keccak-simple.c"
 $4702 = $4701; //@line 388 "mcbits/Keccak-simple.c"
 $4703 = $4702; //@line 388 "mcbits/Keccak-simple.c"
 HEAP32[$4703>>2] = $4696; //@line 388 "mcbits/Keccak-simple.c"
 $4704 = (($4702) + 4)|0; //@line 388 "mcbits/Keccak-simple.c"
 $4705 = $4704; //@line 388 "mcbits/Keccak-simple.c"
 HEAP32[$4705>>2] = $4699; //@line 388 "mcbits/Keccak-simple.c"
 $4706 = $21; //@line 389 "mcbits/Keccak-simple.c"
 $4707 = $4706; //@line 389 "mcbits/Keccak-simple.c"
 $4708 = HEAP32[$4707>>2]|0; //@line 389 "mcbits/Keccak-simple.c"
 $4709 = (($4706) + 4)|0; //@line 389 "mcbits/Keccak-simple.c"
 $4710 = $4709; //@line 389 "mcbits/Keccak-simple.c"
 $4711 = HEAP32[$4710>>2]|0; //@line 389 "mcbits/Keccak-simple.c"
 $4712 = $3; //@line 389 "mcbits/Keccak-simple.c"
 $4713 = ((($4712)) + 120|0); //@line 389 "mcbits/Keccak-simple.c"
 $4714 = $4713; //@line 389 "mcbits/Keccak-simple.c"
 $4715 = $4714; //@line 389 "mcbits/Keccak-simple.c"
 HEAP32[$4715>>2] = $4708; //@line 389 "mcbits/Keccak-simple.c"
 $4716 = (($4714) + 4)|0; //@line 389 "mcbits/Keccak-simple.c"
 $4717 = $4716; //@line 389 "mcbits/Keccak-simple.c"
 HEAP32[$4717>>2] = $4711; //@line 389 "mcbits/Keccak-simple.c"
 $4718 = $22; //@line 390 "mcbits/Keccak-simple.c"
 $4719 = $4718; //@line 390 "mcbits/Keccak-simple.c"
 $4720 = HEAP32[$4719>>2]|0; //@line 390 "mcbits/Keccak-simple.c"
 $4721 = (($4718) + 4)|0; //@line 390 "mcbits/Keccak-simple.c"
 $4722 = $4721; //@line 390 "mcbits/Keccak-simple.c"
 $4723 = HEAP32[$4722>>2]|0; //@line 390 "mcbits/Keccak-simple.c"
 $4724 = $3; //@line 390 "mcbits/Keccak-simple.c"
 $4725 = ((($4724)) + 128|0); //@line 390 "mcbits/Keccak-simple.c"
 $4726 = $4725; //@line 390 "mcbits/Keccak-simple.c"
 $4727 = $4726; //@line 390 "mcbits/Keccak-simple.c"
 HEAP32[$4727>>2] = $4720; //@line 390 "mcbits/Keccak-simple.c"
 $4728 = (($4726) + 4)|0; //@line 390 "mcbits/Keccak-simple.c"
 $4729 = $4728; //@line 390 "mcbits/Keccak-simple.c"
 HEAP32[$4729>>2] = $4723; //@line 390 "mcbits/Keccak-simple.c"
 $4730 = $23; //@line 391 "mcbits/Keccak-simple.c"
 $4731 = $4730; //@line 391 "mcbits/Keccak-simple.c"
 $4732 = HEAP32[$4731>>2]|0; //@line 391 "mcbits/Keccak-simple.c"
 $4733 = (($4730) + 4)|0; //@line 391 "mcbits/Keccak-simple.c"
 $4734 = $4733; //@line 391 "mcbits/Keccak-simple.c"
 $4735 = HEAP32[$4734>>2]|0; //@line 391 "mcbits/Keccak-simple.c"
 $4736 = $3; //@line 391 "mcbits/Keccak-simple.c"
 $4737 = ((($4736)) + 136|0); //@line 391 "mcbits/Keccak-simple.c"
 $4738 = $4737; //@line 391 "mcbits/Keccak-simple.c"
 $4739 = $4738; //@line 391 "mcbits/Keccak-simple.c"
 HEAP32[$4739>>2] = $4732; //@line 391 "mcbits/Keccak-simple.c"
 $4740 = (($4738) + 4)|0; //@line 391 "mcbits/Keccak-simple.c"
 $4741 = $4740; //@line 391 "mcbits/Keccak-simple.c"
 HEAP32[$4741>>2] = $4735; //@line 391 "mcbits/Keccak-simple.c"
 $4742 = $24; //@line 392 "mcbits/Keccak-simple.c"
 $4743 = $4742; //@line 392 "mcbits/Keccak-simple.c"
 $4744 = HEAP32[$4743>>2]|0; //@line 392 "mcbits/Keccak-simple.c"
 $4745 = (($4742) + 4)|0; //@line 392 "mcbits/Keccak-simple.c"
 $4746 = $4745; //@line 392 "mcbits/Keccak-simple.c"
 $4747 = HEAP32[$4746>>2]|0; //@line 392 "mcbits/Keccak-simple.c"
 $4748 = $3; //@line 392 "mcbits/Keccak-simple.c"
 $4749 = ((($4748)) + 144|0); //@line 392 "mcbits/Keccak-simple.c"
 $4750 = $4749; //@line 392 "mcbits/Keccak-simple.c"
 $4751 = $4750; //@line 392 "mcbits/Keccak-simple.c"
 HEAP32[$4751>>2] = $4744; //@line 392 "mcbits/Keccak-simple.c"
 $4752 = (($4750) + 4)|0; //@line 392 "mcbits/Keccak-simple.c"
 $4753 = $4752; //@line 392 "mcbits/Keccak-simple.c"
 HEAP32[$4753>>2] = $4747; //@line 392 "mcbits/Keccak-simple.c"
 $4754 = $25; //@line 393 "mcbits/Keccak-simple.c"
 $4755 = $4754; //@line 393 "mcbits/Keccak-simple.c"
 $4756 = HEAP32[$4755>>2]|0; //@line 393 "mcbits/Keccak-simple.c"
 $4757 = (($4754) + 4)|0; //@line 393 "mcbits/Keccak-simple.c"
 $4758 = $4757; //@line 393 "mcbits/Keccak-simple.c"
 $4759 = HEAP32[$4758>>2]|0; //@line 393 "mcbits/Keccak-simple.c"
 $4760 = $3; //@line 393 "mcbits/Keccak-simple.c"
 $4761 = ((($4760)) + 152|0); //@line 393 "mcbits/Keccak-simple.c"
 $4762 = $4761; //@line 393 "mcbits/Keccak-simple.c"
 $4763 = $4762; //@line 393 "mcbits/Keccak-simple.c"
 HEAP32[$4763>>2] = $4756; //@line 393 "mcbits/Keccak-simple.c"
 $4764 = (($4762) + 4)|0; //@line 393 "mcbits/Keccak-simple.c"
 $4765 = $4764; //@line 393 "mcbits/Keccak-simple.c"
 HEAP32[$4765>>2] = $4759; //@line 393 "mcbits/Keccak-simple.c"
 $4766 = $26; //@line 394 "mcbits/Keccak-simple.c"
 $4767 = $4766; //@line 394 "mcbits/Keccak-simple.c"
 $4768 = HEAP32[$4767>>2]|0; //@line 394 "mcbits/Keccak-simple.c"
 $4769 = (($4766) + 4)|0; //@line 394 "mcbits/Keccak-simple.c"
 $4770 = $4769; //@line 394 "mcbits/Keccak-simple.c"
 $4771 = HEAP32[$4770>>2]|0; //@line 394 "mcbits/Keccak-simple.c"
 $4772 = $3; //@line 394 "mcbits/Keccak-simple.c"
 $4773 = ((($4772)) + 160|0); //@line 394 "mcbits/Keccak-simple.c"
 $4774 = $4773; //@line 394 "mcbits/Keccak-simple.c"
 $4775 = $4774; //@line 394 "mcbits/Keccak-simple.c"
 HEAP32[$4775>>2] = $4768; //@line 394 "mcbits/Keccak-simple.c"
 $4776 = (($4774) + 4)|0; //@line 394 "mcbits/Keccak-simple.c"
 $4777 = $4776; //@line 394 "mcbits/Keccak-simple.c"
 HEAP32[$4777>>2] = $4771; //@line 394 "mcbits/Keccak-simple.c"
 $4778 = $27; //@line 395 "mcbits/Keccak-simple.c"
 $4779 = $4778; //@line 395 "mcbits/Keccak-simple.c"
 $4780 = HEAP32[$4779>>2]|0; //@line 395 "mcbits/Keccak-simple.c"
 $4781 = (($4778) + 4)|0; //@line 395 "mcbits/Keccak-simple.c"
 $4782 = $4781; //@line 395 "mcbits/Keccak-simple.c"
 $4783 = HEAP32[$4782>>2]|0; //@line 395 "mcbits/Keccak-simple.c"
 $4784 = $3; //@line 395 "mcbits/Keccak-simple.c"
 $4785 = ((($4784)) + 168|0); //@line 395 "mcbits/Keccak-simple.c"
 $4786 = $4785; //@line 395 "mcbits/Keccak-simple.c"
 $4787 = $4786; //@line 395 "mcbits/Keccak-simple.c"
 HEAP32[$4787>>2] = $4780; //@line 395 "mcbits/Keccak-simple.c"
 $4788 = (($4786) + 4)|0; //@line 395 "mcbits/Keccak-simple.c"
 $4789 = $4788; //@line 395 "mcbits/Keccak-simple.c"
 HEAP32[$4789>>2] = $4783; //@line 395 "mcbits/Keccak-simple.c"
 $4790 = $28; //@line 396 "mcbits/Keccak-simple.c"
 $4791 = $4790; //@line 396 "mcbits/Keccak-simple.c"
 $4792 = HEAP32[$4791>>2]|0; //@line 396 "mcbits/Keccak-simple.c"
 $4793 = (($4790) + 4)|0; //@line 396 "mcbits/Keccak-simple.c"
 $4794 = $4793; //@line 396 "mcbits/Keccak-simple.c"
 $4795 = HEAP32[$4794>>2]|0; //@line 396 "mcbits/Keccak-simple.c"
 $4796 = $3; //@line 396 "mcbits/Keccak-simple.c"
 $4797 = ((($4796)) + 176|0); //@line 396 "mcbits/Keccak-simple.c"
 $4798 = $4797; //@line 396 "mcbits/Keccak-simple.c"
 $4799 = $4798; //@line 396 "mcbits/Keccak-simple.c"
 HEAP32[$4799>>2] = $4792; //@line 396 "mcbits/Keccak-simple.c"
 $4800 = (($4798) + 4)|0; //@line 396 "mcbits/Keccak-simple.c"
 $4801 = $4800; //@line 396 "mcbits/Keccak-simple.c"
 HEAP32[$4801>>2] = $4795; //@line 396 "mcbits/Keccak-simple.c"
 $4802 = $29; //@line 397 "mcbits/Keccak-simple.c"
 $4803 = $4802; //@line 397 "mcbits/Keccak-simple.c"
 $4804 = HEAP32[$4803>>2]|0; //@line 397 "mcbits/Keccak-simple.c"
 $4805 = (($4802) + 4)|0; //@line 397 "mcbits/Keccak-simple.c"
 $4806 = $4805; //@line 397 "mcbits/Keccak-simple.c"
 $4807 = HEAP32[$4806>>2]|0; //@line 397 "mcbits/Keccak-simple.c"
 $4808 = $3; //@line 397 "mcbits/Keccak-simple.c"
 $4809 = ((($4808)) + 184|0); //@line 397 "mcbits/Keccak-simple.c"
 $4810 = $4809; //@line 397 "mcbits/Keccak-simple.c"
 $4811 = $4810; //@line 397 "mcbits/Keccak-simple.c"
 HEAP32[$4811>>2] = $4804; //@line 397 "mcbits/Keccak-simple.c"
 $4812 = (($4810) + 4)|0; //@line 397 "mcbits/Keccak-simple.c"
 $4813 = $4812; //@line 397 "mcbits/Keccak-simple.c"
 HEAP32[$4813>>2] = $4807; //@line 397 "mcbits/Keccak-simple.c"
 $4814 = $30; //@line 398 "mcbits/Keccak-simple.c"
 $4815 = $4814; //@line 398 "mcbits/Keccak-simple.c"
 $4816 = HEAP32[$4815>>2]|0; //@line 398 "mcbits/Keccak-simple.c"
 $4817 = (($4814) + 4)|0; //@line 398 "mcbits/Keccak-simple.c"
 $4818 = $4817; //@line 398 "mcbits/Keccak-simple.c"
 $4819 = HEAP32[$4818>>2]|0; //@line 398 "mcbits/Keccak-simple.c"
 $4820 = $3; //@line 398 "mcbits/Keccak-simple.c"
 $4821 = ((($4820)) + 192|0); //@line 398 "mcbits/Keccak-simple.c"
 $4822 = $4821; //@line 398 "mcbits/Keccak-simple.c"
 $4823 = $4822; //@line 398 "mcbits/Keccak-simple.c"
 HEAP32[$4823>>2] = $4816; //@line 398 "mcbits/Keccak-simple.c"
 $4824 = (($4822) + 4)|0; //@line 398 "mcbits/Keccak-simple.c"
 $4825 = $4824; //@line 398 "mcbits/Keccak-simple.c"
 HEAP32[$4825>>2] = $4819; //@line 398 "mcbits/Keccak-simple.c"
 STACKTOP = sp;return; //@line 403 "mcbits/Keccak-simple.c"
}
function _benes_compact($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $9 = $5; //@line 45 "mcbits/benes.c"
 $10 = ($9|0)==(0); //@line 45 "mcbits/benes.c"
 if ($10) {
  $7 = 32; //@line 47 "mcbits/benes.c"
  $11 = $4; //@line 48 "mcbits/benes.c"
  $6 = $11; //@line 48 "mcbits/benes.c"
 } else {
  $7 = -32; //@line 52 "mcbits/benes.c"
  $12 = $4; //@line 53 "mcbits/benes.c"
  $13 = ((($12)) + 5632|0); //@line 53 "mcbits/benes.c"
  $6 = $13; //@line 53 "mcbits/benes.c"
 }
 $8 = 0; //@line 58 "mcbits/benes.c"
 while(1) {
  $14 = $8; //@line 58 "mcbits/benes.c"
  $15 = ($14|0)<=(5); //@line 58 "mcbits/benes.c"
  $16 = $3;
  if (!($15)) {
   break;
  }
  $17 = $6; //@line 58 "mcbits/benes.c"
  $18 = $8; //@line 58 "mcbits/benes.c"
  _func($16,$17,$18); //@line 58 "mcbits/benes.c"
  $19 = $7; //@line 58 "mcbits/benes.c"
  $20 = $6; //@line 58 "mcbits/benes.c"
  $21 = (($20) + ($19<<3)|0); //@line 58 "mcbits/benes.c"
  $6 = $21; //@line 58 "mcbits/benes.c"
  $22 = $8; //@line 58 "mcbits/benes.c"
  $23 = (($22) + 1)|0; //@line 58 "mcbits/benes.c"
  $8 = $23; //@line 58 "mcbits/benes.c"
 }
 $24 = $3; //@line 60 "mcbits/benes.c"
 _transpose_64x64_compact($16,$24); //@line 60 "mcbits/benes.c"
 $8 = 0; //@line 62 "mcbits/benes.c"
 while(1) {
  $25 = $8; //@line 62 "mcbits/benes.c"
  $26 = ($25|0)<=(5); //@line 62 "mcbits/benes.c"
  if (!($26)) {
   break;
  }
  $27 = $3; //@line 62 "mcbits/benes.c"
  $28 = $6; //@line 62 "mcbits/benes.c"
  $29 = $8; //@line 62 "mcbits/benes.c"
  _func($27,$28,$29); //@line 62 "mcbits/benes.c"
  $30 = $7; //@line 62 "mcbits/benes.c"
  $31 = $6; //@line 62 "mcbits/benes.c"
  $32 = (($31) + ($30<<3)|0); //@line 62 "mcbits/benes.c"
  $6 = $32; //@line 62 "mcbits/benes.c"
  $33 = $8; //@line 62 "mcbits/benes.c"
  $34 = (($33) + 1)|0; //@line 62 "mcbits/benes.c"
  $8 = $34; //@line 62 "mcbits/benes.c"
 }
 $8 = 4; //@line 63 "mcbits/benes.c"
 while(1) {
  $35 = $8; //@line 63 "mcbits/benes.c"
  $36 = ($35|0)>=(0); //@line 63 "mcbits/benes.c"
  $37 = $3;
  if (!($36)) {
   break;
  }
  $38 = $6; //@line 63 "mcbits/benes.c"
  $39 = $8; //@line 63 "mcbits/benes.c"
  _func($37,$38,$39); //@line 63 "mcbits/benes.c"
  $40 = $7; //@line 63 "mcbits/benes.c"
  $41 = $6; //@line 63 "mcbits/benes.c"
  $42 = (($41) + ($40<<3)|0); //@line 63 "mcbits/benes.c"
  $6 = $42; //@line 63 "mcbits/benes.c"
  $43 = $8; //@line 63 "mcbits/benes.c"
  $44 = (($43) + -1)|0; //@line 63 "mcbits/benes.c"
  $8 = $44; //@line 63 "mcbits/benes.c"
 }
 $45 = $3; //@line 65 "mcbits/benes.c"
 _transpose_64x64_compact($37,$45); //@line 65 "mcbits/benes.c"
 $8 = 5; //@line 67 "mcbits/benes.c"
 while(1) {
  $46 = $8; //@line 67 "mcbits/benes.c"
  $47 = ($46|0)>=(0); //@line 67 "mcbits/benes.c"
  if (!($47)) {
   break;
  }
  $48 = $3; //@line 67 "mcbits/benes.c"
  $49 = $6; //@line 67 "mcbits/benes.c"
  $50 = $8; //@line 67 "mcbits/benes.c"
  _func($48,$49,$50); //@line 67 "mcbits/benes.c"
  $51 = $7; //@line 67 "mcbits/benes.c"
  $52 = $6; //@line 67 "mcbits/benes.c"
  $53 = (($52) + ($51<<3)|0); //@line 67 "mcbits/benes.c"
  $6 = $53; //@line 67 "mcbits/benes.c"
  $54 = $8; //@line 67 "mcbits/benes.c"
  $55 = (($54) + -1)|0; //@line 67 "mcbits/benes.c"
  $8 = $55; //@line 67 "mcbits/benes.c"
 }
 STACKTOP = sp;return; //@line 68 "mcbits/benes.c"
}
function _func($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $11 = sp_a;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $12 = $5; //@line 14 "mcbits/benes.c"
 $13 = (5 - ($12))|0; //@line 14 "mcbits/benes.c"
 $10 = $13; //@line 14 "mcbits/benes.c"
 $7 = 0; //@line 20 "mcbits/benes.c"
 while(1) {
  $14 = $7; //@line 20 "mcbits/benes.c"
  $15 = $5; //@line 20 "mcbits/benes.c"
  $16 = 1 << $15; //@line 20 "mcbits/benes.c"
  $17 = ($14|0)<($16|0); //@line 20 "mcbits/benes.c"
  if (!($17)) {
   break;
  }
  $18 = $5; //@line 22 "mcbits/benes.c"
  $19 = 0 << $18; //@line 22 "mcbits/benes.c"
  $20 = $7; //@line 22 "mcbits/benes.c"
  $21 = (($19) + ($20))|0; //@line 22 "mcbits/benes.c"
  $8 = $21; //@line 22 "mcbits/benes.c"
  $22 = $5; //@line 23 "mcbits/benes.c"
  $23 = 1 << $22; //@line 23 "mcbits/benes.c"
  $24 = $7; //@line 23 "mcbits/benes.c"
  $25 = (($23) + ($24))|0; //@line 23 "mcbits/benes.c"
  $9 = $25; //@line 23 "mcbits/benes.c"
  $6 = 0; //@line 25 "mcbits/benes.c"
  while(1) {
   $26 = $6; //@line 25 "mcbits/benes.c"
   $27 = $10; //@line 25 "mcbits/benes.c"
   $28 = 1 << $27; //@line 25 "mcbits/benes.c"
   $29 = ($26|0)<($28|0); //@line 25 "mcbits/benes.c"
   if (!($29)) {
    break;
   }
   $30 = $3; //@line 27 "mcbits/benes.c"
   $31 = $8; //@line 27 "mcbits/benes.c"
   $32 = (($30) + ($31<<3)|0); //@line 27 "mcbits/benes.c"
   $33 = $32; //@line 27 "mcbits/benes.c"
   $34 = $33; //@line 27 "mcbits/benes.c"
   $35 = HEAP32[$34>>2]|0; //@line 27 "mcbits/benes.c"
   $36 = (($33) + 4)|0; //@line 27 "mcbits/benes.c"
   $37 = $36; //@line 27 "mcbits/benes.c"
   $38 = HEAP32[$37>>2]|0; //@line 27 "mcbits/benes.c"
   $39 = $3; //@line 27 "mcbits/benes.c"
   $40 = $9; //@line 27 "mcbits/benes.c"
   $41 = (($39) + ($40<<3)|0); //@line 27 "mcbits/benes.c"
   $42 = $41; //@line 27 "mcbits/benes.c"
   $43 = $42; //@line 27 "mcbits/benes.c"
   $44 = HEAP32[$43>>2]|0; //@line 27 "mcbits/benes.c"
   $45 = (($42) + 4)|0; //@line 27 "mcbits/benes.c"
   $46 = $45; //@line 27 "mcbits/benes.c"
   $47 = HEAP32[$46>>2]|0; //@line 27 "mcbits/benes.c"
   $48 = $35 ^ $44; //@line 27 "mcbits/benes.c"
   $49 = $38 ^ $47; //@line 27 "mcbits/benes.c"
   $50 = $11; //@line 27 "mcbits/benes.c"
   $51 = $50; //@line 27 "mcbits/benes.c"
   HEAP32[$51>>2] = $48; //@line 27 "mcbits/benes.c"
   $52 = (($50) + 4)|0; //@line 27 "mcbits/benes.c"
   $53 = $52; //@line 27 "mcbits/benes.c"
   HEAP32[$53>>2] = $49; //@line 27 "mcbits/benes.c"
   $54 = $4; //@line 28 "mcbits/benes.c"
   $55 = ((($54)) + 8|0); //@line 28 "mcbits/benes.c"
   $4 = $55; //@line 28 "mcbits/benes.c"
   $56 = $54; //@line 28 "mcbits/benes.c"
   $57 = $56; //@line 28 "mcbits/benes.c"
   $58 = HEAP32[$57>>2]|0; //@line 28 "mcbits/benes.c"
   $59 = (($56) + 4)|0; //@line 28 "mcbits/benes.c"
   $60 = $59; //@line 28 "mcbits/benes.c"
   $61 = HEAP32[$60>>2]|0; //@line 28 "mcbits/benes.c"
   $62 = $11; //@line 28 "mcbits/benes.c"
   $63 = $62; //@line 28 "mcbits/benes.c"
   $64 = HEAP32[$63>>2]|0; //@line 28 "mcbits/benes.c"
   $65 = (($62) + 4)|0; //@line 28 "mcbits/benes.c"
   $66 = $65; //@line 28 "mcbits/benes.c"
   $67 = HEAP32[$66>>2]|0; //@line 28 "mcbits/benes.c"
   $68 = $64 & $58; //@line 28 "mcbits/benes.c"
   $69 = $67 & $61; //@line 28 "mcbits/benes.c"
   $70 = $11; //@line 28 "mcbits/benes.c"
   $71 = $70; //@line 28 "mcbits/benes.c"
   HEAP32[$71>>2] = $68; //@line 28 "mcbits/benes.c"
   $72 = (($70) + 4)|0; //@line 28 "mcbits/benes.c"
   $73 = $72; //@line 28 "mcbits/benes.c"
   HEAP32[$73>>2] = $69; //@line 28 "mcbits/benes.c"
   $74 = $11; //@line 29 "mcbits/benes.c"
   $75 = $74; //@line 29 "mcbits/benes.c"
   $76 = HEAP32[$75>>2]|0; //@line 29 "mcbits/benes.c"
   $77 = (($74) + 4)|0; //@line 29 "mcbits/benes.c"
   $78 = $77; //@line 29 "mcbits/benes.c"
   $79 = HEAP32[$78>>2]|0; //@line 29 "mcbits/benes.c"
   $80 = $3; //@line 29 "mcbits/benes.c"
   $81 = $8; //@line 29 "mcbits/benes.c"
   $82 = (($80) + ($81<<3)|0); //@line 29 "mcbits/benes.c"
   $83 = $82; //@line 29 "mcbits/benes.c"
   $84 = $83; //@line 29 "mcbits/benes.c"
   $85 = HEAP32[$84>>2]|0; //@line 29 "mcbits/benes.c"
   $86 = (($83) + 4)|0; //@line 29 "mcbits/benes.c"
   $87 = $86; //@line 29 "mcbits/benes.c"
   $88 = HEAP32[$87>>2]|0; //@line 29 "mcbits/benes.c"
   $89 = $85 ^ $76; //@line 29 "mcbits/benes.c"
   $90 = $88 ^ $79; //@line 29 "mcbits/benes.c"
   $91 = $82; //@line 29 "mcbits/benes.c"
   $92 = $91; //@line 29 "mcbits/benes.c"
   HEAP32[$92>>2] = $89; //@line 29 "mcbits/benes.c"
   $93 = (($91) + 4)|0; //@line 29 "mcbits/benes.c"
   $94 = $93; //@line 29 "mcbits/benes.c"
   HEAP32[$94>>2] = $90; //@line 29 "mcbits/benes.c"
   $95 = $11; //@line 30 "mcbits/benes.c"
   $96 = $95; //@line 30 "mcbits/benes.c"
   $97 = HEAP32[$96>>2]|0; //@line 30 "mcbits/benes.c"
   $98 = (($95) + 4)|0; //@line 30 "mcbits/benes.c"
   $99 = $98; //@line 30 "mcbits/benes.c"
   $100 = HEAP32[$99>>2]|0; //@line 30 "mcbits/benes.c"
   $101 = $3; //@line 30 "mcbits/benes.c"
   $102 = $9; //@line 30 "mcbits/benes.c"
   $103 = (($101) + ($102<<3)|0); //@line 30 "mcbits/benes.c"
   $104 = $103; //@line 30 "mcbits/benes.c"
   $105 = $104; //@line 30 "mcbits/benes.c"
   $106 = HEAP32[$105>>2]|0; //@line 30 "mcbits/benes.c"
   $107 = (($104) + 4)|0; //@line 30 "mcbits/benes.c"
   $108 = $107; //@line 30 "mcbits/benes.c"
   $109 = HEAP32[$108>>2]|0; //@line 30 "mcbits/benes.c"
   $110 = $106 ^ $97; //@line 30 "mcbits/benes.c"
   $111 = $109 ^ $100; //@line 30 "mcbits/benes.c"
   $112 = $103; //@line 30 "mcbits/benes.c"
   $113 = $112; //@line 30 "mcbits/benes.c"
   HEAP32[$113>>2] = $110; //@line 30 "mcbits/benes.c"
   $114 = (($112) + 4)|0; //@line 30 "mcbits/benes.c"
   $115 = $114; //@line 30 "mcbits/benes.c"
   HEAP32[$115>>2] = $111; //@line 30 "mcbits/benes.c"
   $116 = $5; //@line 32 "mcbits/benes.c"
   $117 = (($116) + 1)|0; //@line 32 "mcbits/benes.c"
   $118 = 1 << $117; //@line 32 "mcbits/benes.c"
   $119 = $8; //@line 32 "mcbits/benes.c"
   $120 = (($119) + ($118))|0; //@line 32 "mcbits/benes.c"
   $8 = $120; //@line 32 "mcbits/benes.c"
   $121 = $5; //@line 33 "mcbits/benes.c"
   $122 = (($121) + 1)|0; //@line 33 "mcbits/benes.c"
   $123 = 1 << $122; //@line 33 "mcbits/benes.c"
   $124 = $9; //@line 33 "mcbits/benes.c"
   $125 = (($124) + ($123))|0; //@line 33 "mcbits/benes.c"
   $9 = $125; //@line 33 "mcbits/benes.c"
   $126 = $6; //@line 25 "mcbits/benes.c"
   $127 = (($126) + 1)|0; //@line 25 "mcbits/benes.c"
   $6 = $127; //@line 25 "mcbits/benes.c"
  }
  $128 = $7; //@line 20 "mcbits/benes.c"
  $129 = (($128) + 1)|0; //@line 20 "mcbits/benes.c"
  $7 = $129; //@line 20 "mcbits/benes.c"
 }
 STACKTOP = sp;return; //@line 36 "mcbits/benes.c"
}
function _into_vec($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 15 "mcbits/bm.c"
 while(1) {
  $5 = $4; //@line 15 "mcbits/bm.c"
  $6 = ($5|0)<(12); //@line 15 "mcbits/bm.c"
  if (!($6)) {
   break;
  }
  $7 = $3; //@line 17 "mcbits/bm.c"
  $8 = $7&65535; //@line 17 "mcbits/bm.c"
  $9 = $4; //@line 17 "mcbits/bm.c"
  $10 = $8 >> $9; //@line 17 "mcbits/bm.c"
  $11 = $10 & 1; //@line 17 "mcbits/bm.c"
  $12 = ($11|0)<(0); //@line 17 "mcbits/bm.c"
  $13 = $12 << 31 >> 31; //@line 17 "mcbits/bm.c"
  $14 = $2; //@line 17 "mcbits/bm.c"
  $15 = $4; //@line 17 "mcbits/bm.c"
  $16 = (($14) + ($15<<3)|0); //@line 17 "mcbits/bm.c"
  $17 = $16; //@line 17 "mcbits/bm.c"
  $18 = $17; //@line 17 "mcbits/bm.c"
  HEAP32[$18>>2] = $11; //@line 17 "mcbits/bm.c"
  $19 = (($17) + 4)|0; //@line 17 "mcbits/bm.c"
  $20 = $19; //@line 17 "mcbits/bm.c"
  HEAP32[$20>>2] = $13; //@line 17 "mcbits/bm.c"
  $21 = $2; //@line 18 "mcbits/bm.c"
  $22 = $4; //@line 18 "mcbits/bm.c"
  $23 = (($21) + ($22<<3)|0); //@line 18 "mcbits/bm.c"
  $24 = $23; //@line 18 "mcbits/bm.c"
  $25 = $24; //@line 18 "mcbits/bm.c"
  $26 = HEAP32[$25>>2]|0; //@line 18 "mcbits/bm.c"
  $27 = (($24) + 4)|0; //@line 18 "mcbits/bm.c"
  $28 = $27; //@line 18 "mcbits/bm.c"
  $29 = HEAP32[$28>>2]|0; //@line 18 "mcbits/bm.c"
  $30 = (_i64Subtract(0,0,($26|0),($29|0))|0); //@line 18 "mcbits/bm.c"
  $31 = tempRet0; //@line 18 "mcbits/bm.c"
  $32 = $2; //@line 18 "mcbits/bm.c"
  $33 = $4; //@line 18 "mcbits/bm.c"
  $34 = (($32) + ($33<<3)|0); //@line 18 "mcbits/bm.c"
  $35 = $34; //@line 18 "mcbits/bm.c"
  $36 = $35; //@line 18 "mcbits/bm.c"
  HEAP32[$36>>2] = $30; //@line 18 "mcbits/bm.c"
  $37 = (($35) + 4)|0; //@line 18 "mcbits/bm.c"
  $38 = $37; //@line 18 "mcbits/bm.c"
  HEAP32[$38>>2] = $31; //@line 18 "mcbits/bm.c"
  $39 = $4; //@line 15 "mcbits/bm.c"
  $40 = (($39) + 1)|0; //@line 15 "mcbits/bm.c"
  $4 = $40; //@line 15 "mcbits/bm.c"
 }
 STACKTOP = sp;return; //@line 20 "mcbits/bm.c"
}
function _vec_reduce($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $3 = sp_a;
 $1 = $0;
 $4 = 0; //@line 27 "mcbits/bm.c"
 $2 = 0; //@line 29 "mcbits/bm.c"
 while(1) {
  $5 = $2; //@line 29 "mcbits/bm.c"
  $6 = ($5|0)<(12); //@line 29 "mcbits/bm.c"
  if (!($6)) {
   break;
  }
  $7 = $1; //@line 31 "mcbits/bm.c"
  $8 = $2; //@line 31 "mcbits/bm.c"
  $9 = (($7) + ($8<<3)|0); //@line 31 "mcbits/bm.c"
  $10 = $9; //@line 31 "mcbits/bm.c"
  $11 = $10; //@line 31 "mcbits/bm.c"
  $12 = HEAP32[$11>>2]|0; //@line 31 "mcbits/bm.c"
  $13 = (($10) + 4)|0; //@line 31 "mcbits/bm.c"
  $14 = $13; //@line 31 "mcbits/bm.c"
  $15 = HEAP32[$14>>2]|0; //@line 31 "mcbits/bm.c"
  $16 = $2; //@line 31 "mcbits/bm.c"
  $17 = (($3) + ($16<<3)|0); //@line 31 "mcbits/bm.c"
  $18 = $17; //@line 31 "mcbits/bm.c"
  $19 = $18; //@line 31 "mcbits/bm.c"
  HEAP32[$19>>2] = $12; //@line 31 "mcbits/bm.c"
  $20 = (($18) + 4)|0; //@line 31 "mcbits/bm.c"
  $21 = $20; //@line 31 "mcbits/bm.c"
  HEAP32[$21>>2] = $15; //@line 31 "mcbits/bm.c"
  $22 = $2; //@line 29 "mcbits/bm.c"
  $23 = (($22) + 1)|0; //@line 29 "mcbits/bm.c"
  $2 = $23; //@line 29 "mcbits/bm.c"
 }
 $2 = 11; //@line 34 "mcbits/bm.c"
 while(1) {
  $24 = $2; //@line 34 "mcbits/bm.c"
  $25 = ($24|0)>=(0); //@line 34 "mcbits/bm.c"
  if (!($25)) {
   break;
  }
  $26 = $2; //@line 34 "mcbits/bm.c"
  $27 = (($3) + ($26<<3)|0); //@line 34 "mcbits/bm.c"
  $28 = $27; //@line 34 "mcbits/bm.c"
  $29 = $28; //@line 34 "mcbits/bm.c"
  $30 = HEAP32[$29>>2]|0; //@line 34 "mcbits/bm.c"
  $31 = (($28) + 4)|0; //@line 34 "mcbits/bm.c"
  $32 = $31; //@line 34 "mcbits/bm.c"
  $33 = HEAP32[$32>>2]|0; //@line 34 "mcbits/bm.c"
  $34 = $2; //@line 34 "mcbits/bm.c"
  $35 = (($3) + ($34<<3)|0); //@line 34 "mcbits/bm.c"
  $36 = $35; //@line 34 "mcbits/bm.c"
  $37 = $36; //@line 34 "mcbits/bm.c"
  $38 = HEAP32[$37>>2]|0; //@line 34 "mcbits/bm.c"
  $39 = (($36) + 4)|0; //@line 34 "mcbits/bm.c"
  $40 = $39; //@line 34 "mcbits/bm.c"
  $41 = HEAP32[$40>>2]|0; //@line 34 "mcbits/bm.c"
  $42 = $38 ^ $33; //@line 34 "mcbits/bm.c"
  $43 = $35; //@line 34 "mcbits/bm.c"
  $44 = $43; //@line 34 "mcbits/bm.c"
  HEAP32[$44>>2] = $42; //@line 34 "mcbits/bm.c"
  $45 = (($43) + 4)|0; //@line 34 "mcbits/bm.c"
  $46 = $45; //@line 34 "mcbits/bm.c"
  HEAP32[$46>>2] = $41; //@line 34 "mcbits/bm.c"
  $47 = $2; //@line 34 "mcbits/bm.c"
  $48 = (($47) + -1)|0; //@line 34 "mcbits/bm.c"
  $2 = $48; //@line 34 "mcbits/bm.c"
 }
 $2 = 11; //@line 35 "mcbits/bm.c"
 while(1) {
  $49 = $2; //@line 35 "mcbits/bm.c"
  $50 = ($49|0)>=(0); //@line 35 "mcbits/bm.c"
  if (!($50)) {
   break;
  }
  $51 = $2; //@line 35 "mcbits/bm.c"
  $52 = (($3) + ($51<<3)|0); //@line 35 "mcbits/bm.c"
  $53 = $52; //@line 35 "mcbits/bm.c"
  $54 = $53; //@line 35 "mcbits/bm.c"
  $55 = HEAP32[$54>>2]|0; //@line 35 "mcbits/bm.c"
  $56 = (($53) + 4)|0; //@line 35 "mcbits/bm.c"
  $57 = $56; //@line 35 "mcbits/bm.c"
  $58 = HEAP32[$57>>2]|0; //@line 35 "mcbits/bm.c"
  $59 = (_bitshift64Lshr(($55|0),($58|0),16)|0); //@line 35 "mcbits/bm.c"
  $60 = tempRet0; //@line 35 "mcbits/bm.c"
  $61 = $2; //@line 35 "mcbits/bm.c"
  $62 = (($3) + ($61<<3)|0); //@line 35 "mcbits/bm.c"
  $63 = $62; //@line 35 "mcbits/bm.c"
  $64 = $63; //@line 35 "mcbits/bm.c"
  $65 = HEAP32[$64>>2]|0; //@line 35 "mcbits/bm.c"
  $66 = (($63) + 4)|0; //@line 35 "mcbits/bm.c"
  $67 = $66; //@line 35 "mcbits/bm.c"
  $68 = HEAP32[$67>>2]|0; //@line 35 "mcbits/bm.c"
  $69 = $65 ^ $59; //@line 35 "mcbits/bm.c"
  $70 = $68 ^ $60; //@line 35 "mcbits/bm.c"
  $71 = $62; //@line 35 "mcbits/bm.c"
  $72 = $71; //@line 35 "mcbits/bm.c"
  HEAP32[$72>>2] = $69; //@line 35 "mcbits/bm.c"
  $73 = (($71) + 4)|0; //@line 35 "mcbits/bm.c"
  $74 = $73; //@line 35 "mcbits/bm.c"
  HEAP32[$74>>2] = $70; //@line 35 "mcbits/bm.c"
  $75 = $2; //@line 35 "mcbits/bm.c"
  $76 = (($75) + -1)|0; //@line 35 "mcbits/bm.c"
  $2 = $76; //@line 35 "mcbits/bm.c"
 }
 $2 = 11; //@line 36 "mcbits/bm.c"
 while(1) {
  $77 = $2; //@line 36 "mcbits/bm.c"
  $78 = ($77|0)>=(0); //@line 36 "mcbits/bm.c"
  if (!($78)) {
   break;
  }
  $79 = $2; //@line 36 "mcbits/bm.c"
  $80 = (($3) + ($79<<3)|0); //@line 36 "mcbits/bm.c"
  $81 = $80; //@line 36 "mcbits/bm.c"
  $82 = $81; //@line 36 "mcbits/bm.c"
  $83 = HEAP32[$82>>2]|0; //@line 36 "mcbits/bm.c"
  $84 = (($81) + 4)|0; //@line 36 "mcbits/bm.c"
  $85 = $84; //@line 36 "mcbits/bm.c"
  $86 = HEAP32[$85>>2]|0; //@line 36 "mcbits/bm.c"
  $87 = (_bitshift64Lshr(($83|0),($86|0),8)|0); //@line 36 "mcbits/bm.c"
  $88 = tempRet0; //@line 36 "mcbits/bm.c"
  $89 = $2; //@line 36 "mcbits/bm.c"
  $90 = (($3) + ($89<<3)|0); //@line 36 "mcbits/bm.c"
  $91 = $90; //@line 36 "mcbits/bm.c"
  $92 = $91; //@line 36 "mcbits/bm.c"
  $93 = HEAP32[$92>>2]|0; //@line 36 "mcbits/bm.c"
  $94 = (($91) + 4)|0; //@line 36 "mcbits/bm.c"
  $95 = $94; //@line 36 "mcbits/bm.c"
  $96 = HEAP32[$95>>2]|0; //@line 36 "mcbits/bm.c"
  $97 = $93 ^ $87; //@line 36 "mcbits/bm.c"
  $98 = $96 ^ $88; //@line 36 "mcbits/bm.c"
  $99 = $90; //@line 36 "mcbits/bm.c"
  $100 = $99; //@line 36 "mcbits/bm.c"
  HEAP32[$100>>2] = $97; //@line 36 "mcbits/bm.c"
  $101 = (($99) + 4)|0; //@line 36 "mcbits/bm.c"
  $102 = $101; //@line 36 "mcbits/bm.c"
  HEAP32[$102>>2] = $98; //@line 36 "mcbits/bm.c"
  $103 = $2; //@line 36 "mcbits/bm.c"
  $104 = (($103) + -1)|0; //@line 36 "mcbits/bm.c"
  $2 = $104; //@line 36 "mcbits/bm.c"
 }
 $2 = 11; //@line 37 "mcbits/bm.c"
 while(1) {
  $105 = $2; //@line 37 "mcbits/bm.c"
  $106 = ($105|0)>=(0); //@line 37 "mcbits/bm.c"
  if (!($106)) {
   break;
  }
  $107 = $2; //@line 37 "mcbits/bm.c"
  $108 = (($3) + ($107<<3)|0); //@line 37 "mcbits/bm.c"
  $109 = $108; //@line 37 "mcbits/bm.c"
  $110 = $109; //@line 37 "mcbits/bm.c"
  $111 = HEAP32[$110>>2]|0; //@line 37 "mcbits/bm.c"
  $112 = (($109) + 4)|0; //@line 37 "mcbits/bm.c"
  $113 = $112; //@line 37 "mcbits/bm.c"
  $114 = HEAP32[$113>>2]|0; //@line 37 "mcbits/bm.c"
  $115 = (_bitshift64Lshr(($111|0),($114|0),4)|0); //@line 37 "mcbits/bm.c"
  $116 = tempRet0; //@line 37 "mcbits/bm.c"
  $117 = $2; //@line 37 "mcbits/bm.c"
  $118 = (($3) + ($117<<3)|0); //@line 37 "mcbits/bm.c"
  $119 = $118; //@line 37 "mcbits/bm.c"
  $120 = $119; //@line 37 "mcbits/bm.c"
  $121 = HEAP32[$120>>2]|0; //@line 37 "mcbits/bm.c"
  $122 = (($119) + 4)|0; //@line 37 "mcbits/bm.c"
  $123 = $122; //@line 37 "mcbits/bm.c"
  $124 = HEAP32[$123>>2]|0; //@line 37 "mcbits/bm.c"
  $125 = $121 ^ $115; //@line 37 "mcbits/bm.c"
  $126 = $124 ^ $116; //@line 37 "mcbits/bm.c"
  $127 = $118; //@line 37 "mcbits/bm.c"
  $128 = $127; //@line 37 "mcbits/bm.c"
  HEAP32[$128>>2] = $125; //@line 37 "mcbits/bm.c"
  $129 = (($127) + 4)|0; //@line 37 "mcbits/bm.c"
  $130 = $129; //@line 37 "mcbits/bm.c"
  HEAP32[$130>>2] = $126; //@line 37 "mcbits/bm.c"
  $131 = $2; //@line 37 "mcbits/bm.c"
  $132 = (($131) + -1)|0; //@line 37 "mcbits/bm.c"
  $2 = $132; //@line 37 "mcbits/bm.c"
 }
 $2 = 11; //@line 38 "mcbits/bm.c"
 while(1) {
  $133 = $2; //@line 38 "mcbits/bm.c"
  $134 = ($133|0)>=(0); //@line 38 "mcbits/bm.c"
  $135 = $4;
  if (!($134)) {
   break;
  }
  $136 = $135&65535; //@line 40 "mcbits/bm.c"
  $137 = $136 << 1; //@line 40 "mcbits/bm.c"
  $138 = $137&65535; //@line 40 "mcbits/bm.c"
  $4 = $138; //@line 40 "mcbits/bm.c"
  $139 = $2; //@line 41 "mcbits/bm.c"
  $140 = (($3) + ($139<<3)|0); //@line 41 "mcbits/bm.c"
  $141 = $140; //@line 41 "mcbits/bm.c"
  $142 = $141; //@line 41 "mcbits/bm.c"
  $143 = HEAP32[$142>>2]|0; //@line 41 "mcbits/bm.c"
  $144 = (($141) + 4)|0; //@line 41 "mcbits/bm.c"
  $145 = $144; //@line 41 "mcbits/bm.c"
  $146 = HEAP32[$145>>2]|0; //@line 41 "mcbits/bm.c"
  $147 = $143 & 15; //@line 41 "mcbits/bm.c"
  $148 = 27030 >> $147; //@line 41 "mcbits/bm.c"
  $149 = $148 & 1; //@line 41 "mcbits/bm.c"
  $150 = $4; //@line 41 "mcbits/bm.c"
  $151 = $150&65535; //@line 41 "mcbits/bm.c"
  $152 = $151 | $149; //@line 41 "mcbits/bm.c"
  $153 = $152&65535; //@line 41 "mcbits/bm.c"
  $4 = $153; //@line 41 "mcbits/bm.c"
  $154 = $2; //@line 38 "mcbits/bm.c"
  $155 = (($154) + -1)|0; //@line 38 "mcbits/bm.c"
  $2 = $155; //@line 38 "mcbits/bm.c"
 }
 STACKTOP = sp;return ($135|0); //@line 44 "mcbits/bm.c"
}
function _mask_nonzero_64bit($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = sp_a;
 $1 = $0;
 $3 = $1; //@line 49 "mcbits/bm.c"
 $4 = $3&65535; //@line 49 "mcbits/bm.c"
 $5 = $2; //@line 49 "mcbits/bm.c"
 $6 = $5; //@line 49 "mcbits/bm.c"
 HEAP32[$6>>2] = $4; //@line 49 "mcbits/bm.c"
 $7 = (($5) + 4)|0; //@line 49 "mcbits/bm.c"
 $8 = $7; //@line 49 "mcbits/bm.c"
 HEAP32[$8>>2] = 0; //@line 49 "mcbits/bm.c"
 $9 = $2; //@line 51 "mcbits/bm.c"
 $10 = $9; //@line 51 "mcbits/bm.c"
 $11 = HEAP32[$10>>2]|0; //@line 51 "mcbits/bm.c"
 $12 = (($9) + 4)|0; //@line 51 "mcbits/bm.c"
 $13 = $12; //@line 51 "mcbits/bm.c"
 $14 = HEAP32[$13>>2]|0; //@line 51 "mcbits/bm.c"
 $15 = (_i64Subtract(($11|0),($14|0),1,0)|0); //@line 51 "mcbits/bm.c"
 $16 = tempRet0; //@line 51 "mcbits/bm.c"
 $17 = $2; //@line 51 "mcbits/bm.c"
 $18 = $17; //@line 51 "mcbits/bm.c"
 HEAP32[$18>>2] = $15; //@line 51 "mcbits/bm.c"
 $19 = (($17) + 4)|0; //@line 51 "mcbits/bm.c"
 $20 = $19; //@line 51 "mcbits/bm.c"
 HEAP32[$20>>2] = $16; //@line 51 "mcbits/bm.c"
 $21 = $2; //@line 52 "mcbits/bm.c"
 $22 = $21; //@line 52 "mcbits/bm.c"
 $23 = HEAP32[$22>>2]|0; //@line 52 "mcbits/bm.c"
 $24 = (($21) + 4)|0; //@line 52 "mcbits/bm.c"
 $25 = $24; //@line 52 "mcbits/bm.c"
 $26 = HEAP32[$25>>2]|0; //@line 52 "mcbits/bm.c"
 $27 = (_bitshift64Lshr(($23|0),($26|0),63)|0); //@line 52 "mcbits/bm.c"
 $28 = tempRet0; //@line 52 "mcbits/bm.c"
 $29 = $2; //@line 52 "mcbits/bm.c"
 $30 = $29; //@line 52 "mcbits/bm.c"
 HEAP32[$30>>2] = $27; //@line 52 "mcbits/bm.c"
 $31 = (($29) + 4)|0; //@line 52 "mcbits/bm.c"
 $32 = $31; //@line 52 "mcbits/bm.c"
 HEAP32[$32>>2] = $28; //@line 52 "mcbits/bm.c"
 $33 = $2; //@line 53 "mcbits/bm.c"
 $34 = $33; //@line 53 "mcbits/bm.c"
 $35 = HEAP32[$34>>2]|0; //@line 53 "mcbits/bm.c"
 $36 = (($33) + 4)|0; //@line 53 "mcbits/bm.c"
 $37 = $36; //@line 53 "mcbits/bm.c"
 $38 = HEAP32[$37>>2]|0; //@line 53 "mcbits/bm.c"
 $39 = (_i64Subtract(($35|0),($38|0),1,0)|0); //@line 53 "mcbits/bm.c"
 $40 = tempRet0; //@line 53 "mcbits/bm.c"
 $41 = $2; //@line 53 "mcbits/bm.c"
 $42 = $41; //@line 53 "mcbits/bm.c"
 HEAP32[$42>>2] = $39; //@line 53 "mcbits/bm.c"
 $43 = (($41) + 4)|0; //@line 53 "mcbits/bm.c"
 $44 = $43; //@line 53 "mcbits/bm.c"
 HEAP32[$44>>2] = $40; //@line 53 "mcbits/bm.c"
 $45 = $2; //@line 55 "mcbits/bm.c"
 $46 = $45; //@line 55 "mcbits/bm.c"
 $47 = HEAP32[$46>>2]|0; //@line 55 "mcbits/bm.c"
 $48 = (($45) + 4)|0; //@line 55 "mcbits/bm.c"
 $49 = $48; //@line 55 "mcbits/bm.c"
 $50 = HEAP32[$49>>2]|0; //@line 55 "mcbits/bm.c"
 tempRet0 = ($50); //@line 55 "mcbits/bm.c"
 STACKTOP = sp;return ($47|0); //@line 55 "mcbits/bm.c"
}
function _mask_leq_64bit($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp_a + 16|0;
 $5 = sp_a + 8|0;
 $6 = sp_a;
 $2 = $0;
 $3 = $1;
 $7 = $2; //@line 60 "mcbits/bm.c"
 $8 = $7&65535; //@line 60 "mcbits/bm.c"
 $9 = $4; //@line 60 "mcbits/bm.c"
 $10 = $9; //@line 60 "mcbits/bm.c"
 HEAP32[$10>>2] = $8; //@line 60 "mcbits/bm.c"
 $11 = (($9) + 4)|0; //@line 60 "mcbits/bm.c"
 $12 = $11; //@line 60 "mcbits/bm.c"
 HEAP32[$12>>2] = 0; //@line 60 "mcbits/bm.c"
 $13 = $3; //@line 61 "mcbits/bm.c"
 $14 = $13&65535; //@line 61 "mcbits/bm.c"
 $15 = $5; //@line 61 "mcbits/bm.c"
 $16 = $15; //@line 61 "mcbits/bm.c"
 HEAP32[$16>>2] = $14; //@line 61 "mcbits/bm.c"
 $17 = (($15) + 4)|0; //@line 61 "mcbits/bm.c"
 $18 = $17; //@line 61 "mcbits/bm.c"
 HEAP32[$18>>2] = 0; //@line 61 "mcbits/bm.c"
 $19 = $5; //@line 62 "mcbits/bm.c"
 $20 = $19; //@line 62 "mcbits/bm.c"
 $21 = HEAP32[$20>>2]|0; //@line 62 "mcbits/bm.c"
 $22 = (($19) + 4)|0; //@line 62 "mcbits/bm.c"
 $23 = $22; //@line 62 "mcbits/bm.c"
 $24 = HEAP32[$23>>2]|0; //@line 62 "mcbits/bm.c"
 $25 = $4; //@line 62 "mcbits/bm.c"
 $26 = $25; //@line 62 "mcbits/bm.c"
 $27 = HEAP32[$26>>2]|0; //@line 62 "mcbits/bm.c"
 $28 = (($25) + 4)|0; //@line 62 "mcbits/bm.c"
 $29 = $28; //@line 62 "mcbits/bm.c"
 $30 = HEAP32[$29>>2]|0; //@line 62 "mcbits/bm.c"
 $31 = (_i64Subtract(($21|0),($24|0),($27|0),($30|0))|0); //@line 62 "mcbits/bm.c"
 $32 = tempRet0; //@line 62 "mcbits/bm.c"
 $33 = $6; //@line 62 "mcbits/bm.c"
 $34 = $33; //@line 62 "mcbits/bm.c"
 HEAP32[$34>>2] = $31; //@line 62 "mcbits/bm.c"
 $35 = (($33) + 4)|0; //@line 62 "mcbits/bm.c"
 $36 = $35; //@line 62 "mcbits/bm.c"
 HEAP32[$36>>2] = $32; //@line 62 "mcbits/bm.c"
 $37 = $6; //@line 64 "mcbits/bm.c"
 $38 = $37; //@line 64 "mcbits/bm.c"
 $39 = HEAP32[$38>>2]|0; //@line 64 "mcbits/bm.c"
 $40 = (($37) + 4)|0; //@line 64 "mcbits/bm.c"
 $41 = $40; //@line 64 "mcbits/bm.c"
 $42 = HEAP32[$41>>2]|0; //@line 64 "mcbits/bm.c"
 $43 = (_bitshift64Lshr(($39|0),($42|0),63)|0); //@line 64 "mcbits/bm.c"
 $44 = tempRet0; //@line 64 "mcbits/bm.c"
 $45 = $6; //@line 64 "mcbits/bm.c"
 $46 = $45; //@line 64 "mcbits/bm.c"
 HEAP32[$46>>2] = $43; //@line 64 "mcbits/bm.c"
 $47 = (($45) + 4)|0; //@line 64 "mcbits/bm.c"
 $48 = $47; //@line 64 "mcbits/bm.c"
 HEAP32[$48>>2] = $44; //@line 64 "mcbits/bm.c"
 $49 = $6; //@line 65 "mcbits/bm.c"
 $50 = $49; //@line 65 "mcbits/bm.c"
 $51 = HEAP32[$50>>2]|0; //@line 65 "mcbits/bm.c"
 $52 = (($49) + 4)|0; //@line 65 "mcbits/bm.c"
 $53 = $52; //@line 65 "mcbits/bm.c"
 $54 = HEAP32[$53>>2]|0; //@line 65 "mcbits/bm.c"
 $55 = (_i64Subtract(($51|0),($54|0),1,0)|0); //@line 65 "mcbits/bm.c"
 $56 = tempRet0; //@line 65 "mcbits/bm.c"
 $57 = $6; //@line 65 "mcbits/bm.c"
 $58 = $57; //@line 65 "mcbits/bm.c"
 HEAP32[$58>>2] = $55; //@line 65 "mcbits/bm.c"
 $59 = (($57) + 4)|0; //@line 65 "mcbits/bm.c"
 $60 = $59; //@line 65 "mcbits/bm.c"
 HEAP32[$60>>2] = $56; //@line 65 "mcbits/bm.c"
 $61 = $6; //@line 67 "mcbits/bm.c"
 $62 = $61; //@line 67 "mcbits/bm.c"
 $63 = HEAP32[$62>>2]|0; //@line 67 "mcbits/bm.c"
 $64 = (($61) + 4)|0; //@line 67 "mcbits/bm.c"
 $65 = $64; //@line 67 "mcbits/bm.c"
 $66 = HEAP32[$65>>2]|0; //@line 67 "mcbits/bm.c"
 tempRet0 = ($66); //@line 67 "mcbits/bm.c"
 STACKTOP = sp;return ($63|0); //@line 67 "mcbits/bm.c"
}
function _vec_cmov($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $6 = sp_a;
 $4 = $0;
 $5 = $1;
 $8 = $6;
 $9 = $8;
 HEAP32[$9>>2] = $2;
 $10 = (($8) + 4)|0;
 $11 = $10;
 HEAP32[$11>>2] = $3;
 $7 = 0; //@line 74 "mcbits/bm.c"
 while(1) {
  $12 = $7; //@line 74 "mcbits/bm.c"
  $13 = ($12|0)<(12); //@line 74 "mcbits/bm.c"
  if (!($13)) {
   break;
  }
  $14 = $5; //@line 75 "mcbits/bm.c"
  $15 = $7; //@line 75 "mcbits/bm.c"
  $16 = (($14) + ($15<<3)|0); //@line 75 "mcbits/bm.c"
  $17 = $16; //@line 75 "mcbits/bm.c"
  $18 = $17; //@line 75 "mcbits/bm.c"
  $19 = HEAP32[$18>>2]|0; //@line 75 "mcbits/bm.c"
  $20 = (($17) + 4)|0; //@line 75 "mcbits/bm.c"
  $21 = $20; //@line 75 "mcbits/bm.c"
  $22 = HEAP32[$21>>2]|0; //@line 75 "mcbits/bm.c"
  $23 = $6; //@line 75 "mcbits/bm.c"
  $24 = $23; //@line 75 "mcbits/bm.c"
  $25 = HEAP32[$24>>2]|0; //@line 75 "mcbits/bm.c"
  $26 = (($23) + 4)|0; //@line 75 "mcbits/bm.c"
  $27 = $26; //@line 75 "mcbits/bm.c"
  $28 = HEAP32[$27>>2]|0; //@line 75 "mcbits/bm.c"
  $29 = $19 & $25; //@line 75 "mcbits/bm.c"
  $30 = $22 & $28; //@line 75 "mcbits/bm.c"
  $31 = $4; //@line 75 "mcbits/bm.c"
  $32 = $7; //@line 75 "mcbits/bm.c"
  $33 = (($31) + ($32<<3)|0); //@line 75 "mcbits/bm.c"
  $34 = $33; //@line 75 "mcbits/bm.c"
  $35 = $34; //@line 75 "mcbits/bm.c"
  $36 = HEAP32[$35>>2]|0; //@line 75 "mcbits/bm.c"
  $37 = (($34) + 4)|0; //@line 75 "mcbits/bm.c"
  $38 = $37; //@line 75 "mcbits/bm.c"
  $39 = HEAP32[$38>>2]|0; //@line 75 "mcbits/bm.c"
  $40 = $6; //@line 75 "mcbits/bm.c"
  $41 = $40; //@line 75 "mcbits/bm.c"
  $42 = HEAP32[$41>>2]|0; //@line 75 "mcbits/bm.c"
  $43 = (($40) + 4)|0; //@line 75 "mcbits/bm.c"
  $44 = $43; //@line 75 "mcbits/bm.c"
  $45 = HEAP32[$44>>2]|0; //@line 75 "mcbits/bm.c"
  $46 = $42 ^ -1; //@line 75 "mcbits/bm.c"
  $47 = $45 ^ -1; //@line 75 "mcbits/bm.c"
  $48 = $36 & $46; //@line 75 "mcbits/bm.c"
  $49 = $39 & $47; //@line 75 "mcbits/bm.c"
  $50 = $29 | $48; //@line 75 "mcbits/bm.c"
  $51 = $30 | $49; //@line 75 "mcbits/bm.c"
  $52 = $4; //@line 75 "mcbits/bm.c"
  $53 = $7; //@line 75 "mcbits/bm.c"
  $54 = (($52) + ($53<<3)|0); //@line 75 "mcbits/bm.c"
  $55 = $54; //@line 75 "mcbits/bm.c"
  $56 = $55; //@line 75 "mcbits/bm.c"
  HEAP32[$56>>2] = $50; //@line 75 "mcbits/bm.c"
  $57 = (($55) + 4)|0; //@line 75 "mcbits/bm.c"
  $58 = $57; //@line 75 "mcbits/bm.c"
  HEAP32[$58>>2] = $51; //@line 75 "mcbits/bm.c"
  $59 = $7; //@line 74 "mcbits/bm.c"
  $60 = (($59) + 1)|0; //@line 74 "mcbits/bm.c"
  $7 = $60; //@line 74 "mcbits/bm.c"
 }
 STACKTOP = sp;return; //@line 76 "mcbits/bm.c"
}
function _bm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(624|0);
 $7 = sp_a + 496|0;
 $8 = sp_a + 400|0;
 $9 = sp_a + 304|0;
 $10 = sp_a + 208|0;
 $11 = sp_a + 112|0;
 $12 = sp_a + 16|0;
 $13 = sp_a + 8|0;
 $14 = sp_a;
 $2 = $0;
 $3 = $1;
 $20 = $7; //@line 93 "mcbits/bm.c"
 $21 = $20; //@line 93 "mcbits/bm.c"
 HEAP32[$21>>2] = 1; //@line 93 "mcbits/bm.c"
 $22 = (($20) + 4)|0; //@line 93 "mcbits/bm.c"
 $23 = $22; //@line 93 "mcbits/bm.c"
 HEAP32[$23>>2] = 0; //@line 93 "mcbits/bm.c"
 $24 = $7; //@line 93 "mcbits/bm.c"
 $25 = $24; //@line 93 "mcbits/bm.c"
 $26 = HEAP32[$25>>2]|0; //@line 93 "mcbits/bm.c"
 $27 = (($24) + 4)|0; //@line 93 "mcbits/bm.c"
 $28 = $27; //@line 93 "mcbits/bm.c"
 $29 = HEAP32[$28>>2]|0; //@line 93 "mcbits/bm.c"
 $30 = (_bitshift64Shl(($26|0),($29|0),63)|0); //@line 93 "mcbits/bm.c"
 $31 = tempRet0; //@line 93 "mcbits/bm.c"
 $32 = $7; //@line 93 "mcbits/bm.c"
 $33 = $32; //@line 93 "mcbits/bm.c"
 HEAP32[$33>>2] = $30; //@line 93 "mcbits/bm.c"
 $34 = (($32) + 4)|0; //@line 93 "mcbits/bm.c"
 $35 = $34; //@line 93 "mcbits/bm.c"
 HEAP32[$35>>2] = $31; //@line 93 "mcbits/bm.c"
 $36 = $8; //@line 94 "mcbits/bm.c"
 $37 = $36; //@line 94 "mcbits/bm.c"
 HEAP32[$37>>2] = 1; //@line 94 "mcbits/bm.c"
 $38 = (($36) + 4)|0; //@line 94 "mcbits/bm.c"
 $39 = $38; //@line 94 "mcbits/bm.c"
 HEAP32[$39>>2] = 0; //@line 94 "mcbits/bm.c"
 $40 = $8; //@line 94 "mcbits/bm.c"
 $41 = $40; //@line 94 "mcbits/bm.c"
 $42 = HEAP32[$41>>2]|0; //@line 94 "mcbits/bm.c"
 $43 = (($40) + 4)|0; //@line 94 "mcbits/bm.c"
 $44 = $43; //@line 94 "mcbits/bm.c"
 $45 = HEAP32[$44>>2]|0; //@line 94 "mcbits/bm.c"
 $46 = (_bitshift64Shl(($42|0),($45|0),62)|0); //@line 94 "mcbits/bm.c"
 $47 = tempRet0; //@line 94 "mcbits/bm.c"
 $48 = $8; //@line 94 "mcbits/bm.c"
 $49 = $48; //@line 94 "mcbits/bm.c"
 HEAP32[$49>>2] = $46; //@line 94 "mcbits/bm.c"
 $50 = (($48) + 4)|0; //@line 94 "mcbits/bm.c"
 $51 = $50; //@line 94 "mcbits/bm.c"
 HEAP32[$51>>2] = $47; //@line 94 "mcbits/bm.c"
 $4 = 1; //@line 96 "mcbits/bm.c"
 while(1) {
  $52 = $4; //@line 96 "mcbits/bm.c"
  $53 = $52&65535; //@line 96 "mcbits/bm.c"
  $54 = ($53|0)<(12); //@line 96 "mcbits/bm.c"
  if (!($54)) {
   break;
  }
  $55 = $4; //@line 97 "mcbits/bm.c"
  $56 = $55&65535; //@line 97 "mcbits/bm.c"
  $57 = (($7) + ($56<<3)|0); //@line 97 "mcbits/bm.c"
  $58 = $57; //@line 97 "mcbits/bm.c"
  $59 = $58; //@line 97 "mcbits/bm.c"
  HEAP32[$59>>2] = 0; //@line 97 "mcbits/bm.c"
  $60 = (($58) + 4)|0; //@line 97 "mcbits/bm.c"
  $61 = $60; //@line 97 "mcbits/bm.c"
  HEAP32[$61>>2] = 0; //@line 97 "mcbits/bm.c"
  $62 = $4; //@line 97 "mcbits/bm.c"
  $63 = $62&65535; //@line 97 "mcbits/bm.c"
  $64 = (($8) + ($63<<3)|0); //@line 97 "mcbits/bm.c"
  $65 = $64; //@line 97 "mcbits/bm.c"
  $66 = $65; //@line 97 "mcbits/bm.c"
  HEAP32[$66>>2] = 0; //@line 97 "mcbits/bm.c"
  $67 = (($65) + 4)|0; //@line 97 "mcbits/bm.c"
  $68 = $67; //@line 97 "mcbits/bm.c"
  HEAP32[$68>>2] = 0; //@line 97 "mcbits/bm.c"
  $69 = $4; //@line 96 "mcbits/bm.c"
  $70 = (($69) + 1)<<16>>16; //@line 96 "mcbits/bm.c"
  $4 = $70; //@line 96 "mcbits/bm.c"
 }
 $17 = 1; //@line 99 "mcbits/bm.c"
 $6 = 0; //@line 100 "mcbits/bm.c"
 $5 = 0; //@line 104 "mcbits/bm.c"
 while(1) {
  $71 = $5; //@line 104 "mcbits/bm.c"
  $72 = $71&65535; //@line 104 "mcbits/bm.c"
  $73 = ($72|0)<(124); //@line 104 "mcbits/bm.c"
  if (!($73)) {
   break;
  }
  $74 = $5; //@line 108 "mcbits/bm.c"
  $75 = $74&65535; //@line 108 "mcbits/bm.c"
  $76 = ($75|0)<(64); //@line 108 "mcbits/bm.c"
  $4 = 0;
  L8: do {
   if ($76) {
    while(1) {
     $77 = $4; //@line 109 "mcbits/bm.c"
     $78 = $77&65535; //@line 109 "mcbits/bm.c"
     $79 = ($78|0)<(12); //@line 109 "mcbits/bm.c"
     if (!($79)) {
      break L8;
     }
     $80 = $3; //@line 110 "mcbits/bm.c"
     $81 = $4; //@line 110 "mcbits/bm.c"
     $82 = $81&65535; //@line 110 "mcbits/bm.c"
     $83 = (($80) + ($82<<3)|0); //@line 110 "mcbits/bm.c"
     $84 = $83; //@line 110 "mcbits/bm.c"
     $85 = $84; //@line 110 "mcbits/bm.c"
     $86 = HEAP32[$85>>2]|0; //@line 110 "mcbits/bm.c"
     $87 = (($84) + 4)|0; //@line 110 "mcbits/bm.c"
     $88 = $87; //@line 110 "mcbits/bm.c"
     $89 = HEAP32[$88>>2]|0; //@line 110 "mcbits/bm.c"
     $90 = $5; //@line 110 "mcbits/bm.c"
     $91 = $90&65535; //@line 110 "mcbits/bm.c"
     $92 = (63 - ($91))|0; //@line 110 "mcbits/bm.c"
     $93 = (_bitshift64Shl(($86|0),($89|0),($92|0))|0); //@line 110 "mcbits/bm.c"
     $94 = tempRet0; //@line 110 "mcbits/bm.c"
     $95 = $4; //@line 110 "mcbits/bm.c"
     $96 = $95&65535; //@line 110 "mcbits/bm.c"
     $97 = (($10) + ($96<<3)|0); //@line 110 "mcbits/bm.c"
     $98 = $97; //@line 110 "mcbits/bm.c"
     $99 = $98; //@line 110 "mcbits/bm.c"
     HEAP32[$99>>2] = $93; //@line 110 "mcbits/bm.c"
     $100 = (($98) + 4)|0; //@line 110 "mcbits/bm.c"
     $101 = $100; //@line 110 "mcbits/bm.c"
     HEAP32[$101>>2] = $94; //@line 110 "mcbits/bm.c"
     $102 = $4; //@line 109 "mcbits/bm.c"
     $103 = (($102) + 1)<<16>>16; //@line 109 "mcbits/bm.c"
     $4 = $103; //@line 109 "mcbits/bm.c"
    }
   } else {
    while(1) {
     $104 = $4; //@line 113 "mcbits/bm.c"
     $105 = $104&65535; //@line 113 "mcbits/bm.c"
     $106 = ($105|0)<(12); //@line 113 "mcbits/bm.c"
     if (!($106)) {
      break L8;
     }
     $107 = $3; //@line 114 "mcbits/bm.c"
     $108 = $4; //@line 114 "mcbits/bm.c"
     $109 = $108&65535; //@line 114 "mcbits/bm.c"
     $110 = (($107) + ($109<<3)|0); //@line 114 "mcbits/bm.c"
     $111 = $110; //@line 114 "mcbits/bm.c"
     $112 = $111; //@line 114 "mcbits/bm.c"
     $113 = HEAP32[$112>>2]|0; //@line 114 "mcbits/bm.c"
     $114 = (($111) + 4)|0; //@line 114 "mcbits/bm.c"
     $115 = $114; //@line 114 "mcbits/bm.c"
     $116 = HEAP32[$115>>2]|0; //@line 114 "mcbits/bm.c"
     $117 = $5; //@line 114 "mcbits/bm.c"
     $118 = $117&65535; //@line 114 "mcbits/bm.c"
     $119 = (($118) - 63)|0; //@line 114 "mcbits/bm.c"
     $120 = (_bitshift64Lshr(($113|0),($116|0),($119|0))|0); //@line 114 "mcbits/bm.c"
     $121 = tempRet0; //@line 114 "mcbits/bm.c"
     $122 = $3; //@line 114 "mcbits/bm.c"
     $123 = ((($122)) + 96|0); //@line 114 "mcbits/bm.c"
     $124 = $4; //@line 114 "mcbits/bm.c"
     $125 = $124&65535; //@line 114 "mcbits/bm.c"
     $126 = (($123) + ($125<<3)|0); //@line 114 "mcbits/bm.c"
     $127 = $126; //@line 114 "mcbits/bm.c"
     $128 = $127; //@line 114 "mcbits/bm.c"
     $129 = HEAP32[$128>>2]|0; //@line 114 "mcbits/bm.c"
     $130 = (($127) + 4)|0; //@line 114 "mcbits/bm.c"
     $131 = $130; //@line 114 "mcbits/bm.c"
     $132 = HEAP32[$131>>2]|0; //@line 114 "mcbits/bm.c"
     $133 = $5; //@line 114 "mcbits/bm.c"
     $134 = $133&65535; //@line 114 "mcbits/bm.c"
     $135 = (127 - ($134))|0; //@line 114 "mcbits/bm.c"
     $136 = (_bitshift64Shl(($129|0),($132|0),($135|0))|0); //@line 114 "mcbits/bm.c"
     $137 = tempRet0; //@line 114 "mcbits/bm.c"
     $138 = $120 | $136; //@line 114 "mcbits/bm.c"
     $139 = $121 | $137; //@line 114 "mcbits/bm.c"
     $140 = $4; //@line 114 "mcbits/bm.c"
     $141 = $140&65535; //@line 114 "mcbits/bm.c"
     $142 = (($10) + ($141<<3)|0); //@line 114 "mcbits/bm.c"
     $143 = $142; //@line 114 "mcbits/bm.c"
     $144 = $143; //@line 114 "mcbits/bm.c"
     HEAP32[$144>>2] = $138; //@line 114 "mcbits/bm.c"
     $145 = (($143) + 4)|0; //@line 114 "mcbits/bm.c"
     $146 = $145; //@line 114 "mcbits/bm.c"
     HEAP32[$146>>2] = $139; //@line 114 "mcbits/bm.c"
     $147 = $4; //@line 113 "mcbits/bm.c"
     $148 = (($147) + 1)<<16>>16; //@line 113 "mcbits/bm.c"
     $4 = $148; //@line 113 "mcbits/bm.c"
    }
   }
  } while(0);
  _vec_mul($9,$7,$10); //@line 116 "mcbits/bm.c"
  $149 = (_vec_reduce($9)|0); //@line 117 "mcbits/bm.c"
  $16 = $149; //@line 117 "mcbits/bm.c"
  $150 = $17; //@line 121 "mcbits/bm.c"
  $151 = (_gf_inv($150)|0); //@line 121 "mcbits/bm.c"
  $18 = $151; //@line 121 "mcbits/bm.c"
  $152 = $16; //@line 122 "mcbits/bm.c"
  $153 = $18; //@line 122 "mcbits/bm.c"
  $154 = (_gf_mul($152,$153)|0); //@line 122 "mcbits/bm.c"
  $19 = $154; //@line 122 "mcbits/bm.c"
  $155 = $19; //@line 123 "mcbits/bm.c"
  _into_vec($11,$155); //@line 123 "mcbits/bm.c"
  _vec_mul($12,$11,$8); //@line 124 "mcbits/bm.c"
  $4 = 0; //@line 126 "mcbits/bm.c"
  while(1) {
   $156 = $4; //@line 126 "mcbits/bm.c"
   $157 = $156&65535; //@line 126 "mcbits/bm.c"
   $158 = ($157|0)<(12); //@line 126 "mcbits/bm.c"
   if (!($158)) {
    break;
   }
   $159 = $4; //@line 126 "mcbits/bm.c"
   $160 = $159&65535; //@line 126 "mcbits/bm.c"
   $161 = (($7) + ($160<<3)|0); //@line 126 "mcbits/bm.c"
   $162 = $161; //@line 126 "mcbits/bm.c"
   $163 = $162; //@line 126 "mcbits/bm.c"
   $164 = HEAP32[$163>>2]|0; //@line 126 "mcbits/bm.c"
   $165 = (($162) + 4)|0; //@line 126 "mcbits/bm.c"
   $166 = $165; //@line 126 "mcbits/bm.c"
   $167 = HEAP32[$166>>2]|0; //@line 126 "mcbits/bm.c"
   $168 = $4; //@line 126 "mcbits/bm.c"
   $169 = $168&65535; //@line 126 "mcbits/bm.c"
   $170 = (($12) + ($169<<3)|0); //@line 126 "mcbits/bm.c"
   $171 = $170; //@line 126 "mcbits/bm.c"
   $172 = $171; //@line 126 "mcbits/bm.c"
   $173 = HEAP32[$172>>2]|0; //@line 126 "mcbits/bm.c"
   $174 = (($171) + 4)|0; //@line 126 "mcbits/bm.c"
   $175 = $174; //@line 126 "mcbits/bm.c"
   $176 = HEAP32[$175>>2]|0; //@line 126 "mcbits/bm.c"
   $177 = $173 ^ $164; //@line 126 "mcbits/bm.c"
   $178 = $176 ^ $167; //@line 126 "mcbits/bm.c"
   $179 = $170; //@line 126 "mcbits/bm.c"
   $180 = $179; //@line 126 "mcbits/bm.c"
   HEAP32[$180>>2] = $177; //@line 126 "mcbits/bm.c"
   $181 = (($179) + 4)|0; //@line 126 "mcbits/bm.c"
   $182 = $181; //@line 126 "mcbits/bm.c"
   HEAP32[$182>>2] = $178; //@line 126 "mcbits/bm.c"
   $183 = $4; //@line 126 "mcbits/bm.c"
   $184 = (($183) + 1)<<16>>16; //@line 126 "mcbits/bm.c"
   $4 = $184; //@line 126 "mcbits/bm.c"
  }
  $185 = $16; //@line 128 "mcbits/bm.c"
  $186 = (_mask_nonzero_64bit($185)|0); //@line 128 "mcbits/bm.c"
  $187 = tempRet0; //@line 128 "mcbits/bm.c"
  $188 = $13; //@line 128 "mcbits/bm.c"
  $189 = $188; //@line 128 "mcbits/bm.c"
  HEAP32[$189>>2] = $186; //@line 128 "mcbits/bm.c"
  $190 = (($188) + 4)|0; //@line 128 "mcbits/bm.c"
  $191 = $190; //@line 128 "mcbits/bm.c"
  HEAP32[$191>>2] = $187; //@line 128 "mcbits/bm.c"
  $192 = $6; //@line 129 "mcbits/bm.c"
  $193 = $192&65535; //@line 129 "mcbits/bm.c"
  $194 = $193<<1; //@line 129 "mcbits/bm.c"
  $195 = $194&65535; //@line 129 "mcbits/bm.c"
  $196 = $5; //@line 129 "mcbits/bm.c"
  $197 = (_mask_leq_64bit($195,$196)|0); //@line 129 "mcbits/bm.c"
  $198 = tempRet0; //@line 129 "mcbits/bm.c"
  $199 = $14; //@line 129 "mcbits/bm.c"
  $200 = $199; //@line 129 "mcbits/bm.c"
  HEAP32[$200>>2] = $197; //@line 129 "mcbits/bm.c"
  $201 = (($199) + 4)|0; //@line 129 "mcbits/bm.c"
  $202 = $201; //@line 129 "mcbits/bm.c"
  HEAP32[$202>>2] = $198; //@line 129 "mcbits/bm.c"
  $203 = $13; //@line 130 "mcbits/bm.c"
  $204 = $203; //@line 130 "mcbits/bm.c"
  $205 = HEAP32[$204>>2]|0; //@line 130 "mcbits/bm.c"
  $206 = (($203) + 4)|0; //@line 130 "mcbits/bm.c"
  $207 = $206; //@line 130 "mcbits/bm.c"
  $208 = HEAP32[$207>>2]|0; //@line 130 "mcbits/bm.c"
  $209 = $14; //@line 130 "mcbits/bm.c"
  $210 = $209; //@line 130 "mcbits/bm.c"
  $211 = HEAP32[$210>>2]|0; //@line 130 "mcbits/bm.c"
  $212 = (($209) + 4)|0; //@line 130 "mcbits/bm.c"
  $213 = $212; //@line 130 "mcbits/bm.c"
  $214 = HEAP32[$213>>2]|0; //@line 130 "mcbits/bm.c"
  $215 = $205 & $211; //@line 130 "mcbits/bm.c"
  $208 & $214; //@line 130 "mcbits/bm.c"
  $216 = $215 & 65535; //@line 130 "mcbits/bm.c"
  $217 = $216&65535; //@line 130 "mcbits/bm.c"
  $15 = $217; //@line 130 "mcbits/bm.c"
  $218 = $13; //@line 132 "mcbits/bm.c"
  $219 = $218; //@line 132 "mcbits/bm.c"
  $220 = HEAP32[$219>>2]|0; //@line 132 "mcbits/bm.c"
  $221 = (($218) + 4)|0; //@line 132 "mcbits/bm.c"
  $222 = $221; //@line 132 "mcbits/bm.c"
  $223 = HEAP32[$222>>2]|0; //@line 132 "mcbits/bm.c"
  $224 = $14; //@line 132 "mcbits/bm.c"
  $225 = $224; //@line 132 "mcbits/bm.c"
  $226 = HEAP32[$225>>2]|0; //@line 132 "mcbits/bm.c"
  $227 = (($224) + 4)|0; //@line 132 "mcbits/bm.c"
  $228 = $227; //@line 132 "mcbits/bm.c"
  $229 = HEAP32[$228>>2]|0; //@line 132 "mcbits/bm.c"
  $230 = $220 & $226; //@line 132 "mcbits/bm.c"
  $231 = $223 & $229; //@line 132 "mcbits/bm.c"
  _vec_cmov($8,$7,$230,$231); //@line 132 "mcbits/bm.c"
  _vec_copy($7,$12); //@line 133 "mcbits/bm.c"
  $232 = $16; //@line 135 "mcbits/bm.c"
  $233 = $232&65535; //@line 135 "mcbits/bm.c"
  $234 = $15; //@line 135 "mcbits/bm.c"
  $235 = $234&65535; //@line 135 "mcbits/bm.c"
  $236 = $233 & $235; //@line 135 "mcbits/bm.c"
  $237 = $17; //@line 135 "mcbits/bm.c"
  $238 = $237&65535; //@line 135 "mcbits/bm.c"
  $239 = $15; //@line 135 "mcbits/bm.c"
  $240 = $239&65535; //@line 135 "mcbits/bm.c"
  $241 = $240 ^ -1; //@line 135 "mcbits/bm.c"
  $242 = $238 & $241; //@line 135 "mcbits/bm.c"
  $243 = $236 | $242; //@line 135 "mcbits/bm.c"
  $244 = $243&65535; //@line 135 "mcbits/bm.c"
  $17 = $244; //@line 135 "mcbits/bm.c"
  $245 = $5; //@line 136 "mcbits/bm.c"
  $246 = $245&65535; //@line 136 "mcbits/bm.c"
  $247 = (($246) + 1)|0; //@line 136 "mcbits/bm.c"
  $248 = $6; //@line 136 "mcbits/bm.c"
  $249 = $248&65535; //@line 136 "mcbits/bm.c"
  $250 = (($247) - ($249))|0; //@line 136 "mcbits/bm.c"
  $251 = $15; //@line 136 "mcbits/bm.c"
  $252 = $251&65535; //@line 136 "mcbits/bm.c"
  $253 = $250 & $252; //@line 136 "mcbits/bm.c"
  $254 = $6; //@line 136 "mcbits/bm.c"
  $255 = $254&65535; //@line 136 "mcbits/bm.c"
  $256 = $15; //@line 136 "mcbits/bm.c"
  $257 = $256&65535; //@line 136 "mcbits/bm.c"
  $258 = $257 ^ -1; //@line 136 "mcbits/bm.c"
  $259 = $255 & $258; //@line 136 "mcbits/bm.c"
  $260 = $253 | $259; //@line 136 "mcbits/bm.c"
  $261 = $260&65535; //@line 136 "mcbits/bm.c"
  $6 = $261; //@line 136 "mcbits/bm.c"
  $4 = 0; //@line 138 "mcbits/bm.c"
  while(1) {
   $262 = $4; //@line 138 "mcbits/bm.c"
   $263 = $262&65535; //@line 138 "mcbits/bm.c"
   $264 = ($263|0)<(12); //@line 138 "mcbits/bm.c"
   if (!($264)) {
    break;
   }
   $265 = $4; //@line 139 "mcbits/bm.c"
   $266 = $265&65535; //@line 139 "mcbits/bm.c"
   $267 = (($8) + ($266<<3)|0); //@line 139 "mcbits/bm.c"
   $268 = $267; //@line 139 "mcbits/bm.c"
   $269 = $268; //@line 139 "mcbits/bm.c"
   $270 = HEAP32[$269>>2]|0; //@line 139 "mcbits/bm.c"
   $271 = (($268) + 4)|0; //@line 139 "mcbits/bm.c"
   $272 = $271; //@line 139 "mcbits/bm.c"
   $273 = HEAP32[$272>>2]|0; //@line 139 "mcbits/bm.c"
   $274 = (_bitshift64Lshr(($270|0),($273|0),1)|0); //@line 139 "mcbits/bm.c"
   $275 = tempRet0; //@line 139 "mcbits/bm.c"
   $276 = $267; //@line 139 "mcbits/bm.c"
   $277 = $276; //@line 139 "mcbits/bm.c"
   HEAP32[$277>>2] = $274; //@line 139 "mcbits/bm.c"
   $278 = (($276) + 4)|0; //@line 139 "mcbits/bm.c"
   $279 = $278; //@line 139 "mcbits/bm.c"
   HEAP32[$279>>2] = $275; //@line 139 "mcbits/bm.c"
   $280 = $4; //@line 138 "mcbits/bm.c"
   $281 = (($280) + 1)<<16>>16; //@line 138 "mcbits/bm.c"
   $4 = $281; //@line 138 "mcbits/bm.c"
  }
  $282 = $5; //@line 104 "mcbits/bm.c"
  $283 = (($282) + 1)<<16>>16; //@line 104 "mcbits/bm.c"
  $5 = $283; //@line 104 "mcbits/bm.c"
 }
 $284 = $2; //@line 142 "mcbits/bm.c"
 _vec_copy($284,$7); //@line 142 "mcbits/bm.c"
 $4 = 0; //@line 144 "mcbits/bm.c"
 while(1) {
  $285 = $4; //@line 144 "mcbits/bm.c"
  $286 = $285&65535; //@line 144 "mcbits/bm.c"
  $287 = ($286|0)<(12); //@line 144 "mcbits/bm.c"
  if (!($287)) {
   break;
  }
  $288 = $2; //@line 145 "mcbits/bm.c"
  $289 = $4; //@line 145 "mcbits/bm.c"
  $290 = $289&65535; //@line 145 "mcbits/bm.c"
  $291 = (($288) + ($290<<3)|0); //@line 145 "mcbits/bm.c"
  $292 = $291; //@line 145 "mcbits/bm.c"
  $293 = $292; //@line 145 "mcbits/bm.c"
  $294 = HEAP32[$293>>2]|0; //@line 145 "mcbits/bm.c"
  $295 = (($292) + 4)|0; //@line 145 "mcbits/bm.c"
  $296 = $295; //@line 145 "mcbits/bm.c"
  $297 = HEAP32[$296>>2]|0; //@line 145 "mcbits/bm.c"
  $298 = (_bitshift64Lshr(($294|0),($297|0),1)|0); //@line 145 "mcbits/bm.c"
  $299 = tempRet0; //@line 145 "mcbits/bm.c"
  $300 = $291; //@line 145 "mcbits/bm.c"
  $301 = $300; //@line 145 "mcbits/bm.c"
  HEAP32[$301>>2] = $298; //@line 145 "mcbits/bm.c"
  $302 = (($300) + 4)|0; //@line 145 "mcbits/bm.c"
  $303 = $302; //@line 145 "mcbits/bm.c"
  HEAP32[$303>>2] = $299; //@line 145 "mcbits/bm.c"
  $304 = $4; //@line 144 "mcbits/bm.c"
  $305 = (($304) + 1)<<16>>16; //@line 144 "mcbits/bm.c"
  $4 = $305; //@line 144 "mcbits/bm.c"
 }
 STACKTOP = sp;return; //@line 146 "mcbits/bm.c"
}
function _acc($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, label = 0, sp = 0;
 var sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $4 = sp_a + 16|0;
 $6 = sp_a + 8|0;
 $7 = sp_a;
 $3 = $0;
 $8 = $4;
 $9 = $8;
 HEAP32[$9>>2] = $1;
 $10 = (($8) + 4)|0;
 $11 = $10;
 HEAP32[$11>>2] = $2;
 $12 = $4; //@line 87 "mcbits/decrypt.c"
 $13 = $12; //@line 87 "mcbits/decrypt.c"
 $14 = HEAP32[$13>>2]|0; //@line 87 "mcbits/decrypt.c"
 $15 = (($12) + 4)|0; //@line 87 "mcbits/decrypt.c"
 $16 = $15; //@line 87 "mcbits/decrypt.c"
 $17 = HEAP32[$16>>2]|0; //@line 87 "mcbits/decrypt.c"
 $18 = $6; //@line 87 "mcbits/decrypt.c"
 $19 = $18; //@line 87 "mcbits/decrypt.c"
 HEAP32[$19>>2] = $14; //@line 87 "mcbits/decrypt.c"
 $20 = (($18) + 4)|0; //@line 87 "mcbits/decrypt.c"
 $21 = $20; //@line 87 "mcbits/decrypt.c"
 HEAP32[$21>>2] = $17; //@line 87 "mcbits/decrypt.c"
 $5 = 0; //@line 90 "mcbits/decrypt.c"
 while(1) {
  $22 = $5; //@line 90 "mcbits/decrypt.c"
  $23 = ($22|0)<(8); //@line 90 "mcbits/decrypt.c"
  if (!($23)) {
   break;
  }
  $24 = $3; //@line 92 "mcbits/decrypt.c"
  $25 = $5; //@line 92 "mcbits/decrypt.c"
  $26 = (($24) + ($25<<3)|0); //@line 92 "mcbits/decrypt.c"
  $27 = $26; //@line 92 "mcbits/decrypt.c"
  $28 = $27; //@line 92 "mcbits/decrypt.c"
  $29 = HEAP32[$28>>2]|0; //@line 92 "mcbits/decrypt.c"
  $30 = (($27) + 4)|0; //@line 92 "mcbits/decrypt.c"
  $31 = $30; //@line 92 "mcbits/decrypt.c"
  $32 = HEAP32[$31>>2]|0; //@line 92 "mcbits/decrypt.c"
  $33 = $6; //@line 92 "mcbits/decrypt.c"
  $34 = $33; //@line 92 "mcbits/decrypt.c"
  $35 = HEAP32[$34>>2]|0; //@line 92 "mcbits/decrypt.c"
  $36 = (($33) + 4)|0; //@line 92 "mcbits/decrypt.c"
  $37 = $36; //@line 92 "mcbits/decrypt.c"
  $38 = HEAP32[$37>>2]|0; //@line 92 "mcbits/decrypt.c"
  $39 = $29 ^ $35; //@line 92 "mcbits/decrypt.c"
  $40 = $32 ^ $38; //@line 92 "mcbits/decrypt.c"
  $41 = $7; //@line 92 "mcbits/decrypt.c"
  $42 = $41; //@line 92 "mcbits/decrypt.c"
  HEAP32[$42>>2] = $39; //@line 92 "mcbits/decrypt.c"
  $43 = (($41) + 4)|0; //@line 92 "mcbits/decrypt.c"
  $44 = $43; //@line 92 "mcbits/decrypt.c"
  HEAP32[$44>>2] = $40; //@line 92 "mcbits/decrypt.c"
  $45 = $3; //@line 93 "mcbits/decrypt.c"
  $46 = $5; //@line 93 "mcbits/decrypt.c"
  $47 = (($45) + ($46<<3)|0); //@line 93 "mcbits/decrypt.c"
  $48 = $47; //@line 93 "mcbits/decrypt.c"
  $49 = $48; //@line 93 "mcbits/decrypt.c"
  $50 = HEAP32[$49>>2]|0; //@line 93 "mcbits/decrypt.c"
  $51 = (($48) + 4)|0; //@line 93 "mcbits/decrypt.c"
  $52 = $51; //@line 93 "mcbits/decrypt.c"
  $53 = HEAP32[$52>>2]|0; //@line 93 "mcbits/decrypt.c"
  $54 = $6; //@line 93 "mcbits/decrypt.c"
  $55 = $54; //@line 93 "mcbits/decrypt.c"
  $56 = HEAP32[$55>>2]|0; //@line 93 "mcbits/decrypt.c"
  $57 = (($54) + 4)|0; //@line 93 "mcbits/decrypt.c"
  $58 = $57; //@line 93 "mcbits/decrypt.c"
  $59 = HEAP32[$58>>2]|0; //@line 93 "mcbits/decrypt.c"
  $60 = $50 & $56; //@line 93 "mcbits/decrypt.c"
  $61 = $53 & $59; //@line 93 "mcbits/decrypt.c"
  $62 = $6; //@line 93 "mcbits/decrypt.c"
  $63 = $62; //@line 93 "mcbits/decrypt.c"
  HEAP32[$63>>2] = $60; //@line 93 "mcbits/decrypt.c"
  $64 = (($62) + 4)|0; //@line 93 "mcbits/decrypt.c"
  $65 = $64; //@line 93 "mcbits/decrypt.c"
  HEAP32[$65>>2] = $61; //@line 93 "mcbits/decrypt.c"
  $66 = $7; //@line 95 "mcbits/decrypt.c"
  $67 = $66; //@line 95 "mcbits/decrypt.c"
  $68 = HEAP32[$67>>2]|0; //@line 95 "mcbits/decrypt.c"
  $69 = (($66) + 4)|0; //@line 95 "mcbits/decrypt.c"
  $70 = $69; //@line 95 "mcbits/decrypt.c"
  $71 = HEAP32[$70>>2]|0; //@line 95 "mcbits/decrypt.c"
  $72 = $3; //@line 95 "mcbits/decrypt.c"
  $73 = $5; //@line 95 "mcbits/decrypt.c"
  $74 = (($72) + ($73<<3)|0); //@line 95 "mcbits/decrypt.c"
  $75 = $74; //@line 95 "mcbits/decrypt.c"
  $76 = $75; //@line 95 "mcbits/decrypt.c"
  HEAP32[$76>>2] = $68; //@line 95 "mcbits/decrypt.c"
  $77 = (($75) + 4)|0; //@line 95 "mcbits/decrypt.c"
  $78 = $77; //@line 95 "mcbits/decrypt.c"
  HEAP32[$78>>2] = $71; //@line 95 "mcbits/decrypt.c"
  $79 = $5; //@line 90 "mcbits/decrypt.c"
  $80 = (($79) + 1)|0; //@line 90 "mcbits/decrypt.c"
  $5 = $80; //@line 90 "mcbits/decrypt.c"
 }
 STACKTOP = sp;return; //@line 97 "mcbits/decrypt.c"
}
function _weight($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 var sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 80|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(80|0);
 $4 = sp_a;
 $1 = $0;
 $2 = 0; //@line 111 "mcbits/decrypt.c"
 while(1) {
  $5 = $2; //@line 111 "mcbits/decrypt.c"
  $6 = ($5|0)<(8); //@line 111 "mcbits/decrypt.c"
  if (!($6)) {
   break;
  }
  $7 = $2; //@line 112 "mcbits/decrypt.c"
  $8 = (($4) + ($7<<3)|0); //@line 112 "mcbits/decrypt.c"
  $9 = $8; //@line 112 "mcbits/decrypt.c"
  $10 = $9; //@line 112 "mcbits/decrypt.c"
  HEAP32[$10>>2] = 0; //@line 112 "mcbits/decrypt.c"
  $11 = (($9) + 4)|0; //@line 112 "mcbits/decrypt.c"
  $12 = $11; //@line 112 "mcbits/decrypt.c"
  HEAP32[$12>>2] = 0; //@line 112 "mcbits/decrypt.c"
  $13 = $2; //@line 111 "mcbits/decrypt.c"
  $14 = (($13) + 1)|0; //@line 111 "mcbits/decrypt.c"
  $2 = $14; //@line 111 "mcbits/decrypt.c"
 }
 $2 = 0; //@line 114 "mcbits/decrypt.c"
 while(1) {
  $15 = $2; //@line 114 "mcbits/decrypt.c"
  $16 = ($15|0)<(64); //@line 114 "mcbits/decrypt.c"
  if (!($16)) {
   break;
  }
  $17 = $1; //@line 115 "mcbits/decrypt.c"
  $18 = $2; //@line 115 "mcbits/decrypt.c"
  $19 = (($17) + ($18<<3)|0); //@line 115 "mcbits/decrypt.c"
  $20 = $19; //@line 115 "mcbits/decrypt.c"
  $21 = $20; //@line 115 "mcbits/decrypt.c"
  $22 = HEAP32[$21>>2]|0; //@line 115 "mcbits/decrypt.c"
  $23 = (($20) + 4)|0; //@line 115 "mcbits/decrypt.c"
  $24 = $23; //@line 115 "mcbits/decrypt.c"
  $25 = HEAP32[$24>>2]|0; //@line 115 "mcbits/decrypt.c"
  _acc($4,$22,$25); //@line 115 "mcbits/decrypt.c"
  $26 = $2; //@line 114 "mcbits/decrypt.c"
  $27 = (($26) + 1)|0; //@line 114 "mcbits/decrypt.c"
  $2 = $27; //@line 114 "mcbits/decrypt.c"
 }
 _transpose_8x64($4); //@line 117 "mcbits/decrypt.c"
 $3 = 0; //@line 121 "mcbits/decrypt.c"
 $2 = 0; //@line 122 "mcbits/decrypt.c"
 while(1) {
  $28 = $2; //@line 122 "mcbits/decrypt.c"
  $29 = ($28|0)<(64); //@line 122 "mcbits/decrypt.c"
  if (!($29)) {
   break;
  }
  $30 = $2; //@line 123 "mcbits/decrypt.c"
  $31 = (($4) + ($30)|0); //@line 123 "mcbits/decrypt.c"
  $32 = HEAP8[$31>>0]|0; //@line 123 "mcbits/decrypt.c"
  $33 = $32&255; //@line 123 "mcbits/decrypt.c"
  $34 = $3; //@line 123 "mcbits/decrypt.c"
  $35 = (($34) + ($33))|0; //@line 123 "mcbits/decrypt.c"
  $3 = $35; //@line 123 "mcbits/decrypt.c"
  $36 = $2; //@line 122 "mcbits/decrypt.c"
  $37 = (($36) + 1)|0; //@line 122 "mcbits/decrypt.c"
  $2 = $37; //@line 122 "mcbits/decrypt.c"
 }
 $38 = $3; //@line 125 "mcbits/decrypt.c"
 STACKTOP = sp;return ($38|0); //@line 125 "mcbits/decrypt.c"
}
function _syndrome_adjust($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 var sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $2 = 0; //@line 134 "mcbits/decrypt.c"
 while(1) {
  $3 = $2; //@line 134 "mcbits/decrypt.c"
  $4 = ($3|0)<(12); //@line 134 "mcbits/decrypt.c"
  if (!($4)) {
   break;
  }
  $5 = $1; //@line 136 "mcbits/decrypt.c"
  $6 = ((($5)) + 96|0); //@line 136 "mcbits/decrypt.c"
  $7 = $2; //@line 136 "mcbits/decrypt.c"
  $8 = (($6) + ($7<<3)|0); //@line 136 "mcbits/decrypt.c"
  $9 = $8; //@line 136 "mcbits/decrypt.c"
  $10 = $9; //@line 136 "mcbits/decrypt.c"
  $11 = HEAP32[$10>>2]|0; //@line 136 "mcbits/decrypt.c"
  $12 = (($9) + 4)|0; //@line 136 "mcbits/decrypt.c"
  $13 = $12; //@line 136 "mcbits/decrypt.c"
  $14 = HEAP32[$13>>2]|0; //@line 136 "mcbits/decrypt.c"
  $15 = (_bitshift64Shl(($11|0),($14|0),4)|0); //@line 136 "mcbits/decrypt.c"
  $16 = tempRet0; //@line 136 "mcbits/decrypt.c"
  $17 = $8; //@line 136 "mcbits/decrypt.c"
  $18 = $17; //@line 136 "mcbits/decrypt.c"
  HEAP32[$18>>2] = $15; //@line 136 "mcbits/decrypt.c"
  $19 = (($17) + 4)|0; //@line 136 "mcbits/decrypt.c"
  $20 = $19; //@line 136 "mcbits/decrypt.c"
  HEAP32[$20>>2] = $16; //@line 136 "mcbits/decrypt.c"
  $21 = $1; //@line 137 "mcbits/decrypt.c"
  $22 = ((($21)) + 96|0); //@line 137 "mcbits/decrypt.c"
  $23 = $2; //@line 137 "mcbits/decrypt.c"
  $24 = (($22) + ($23<<3)|0); //@line 137 "mcbits/decrypt.c"
  $25 = $24; //@line 137 "mcbits/decrypt.c"
  $26 = $25; //@line 137 "mcbits/decrypt.c"
  $27 = HEAP32[$26>>2]|0; //@line 137 "mcbits/decrypt.c"
  $28 = (($25) + 4)|0; //@line 137 "mcbits/decrypt.c"
  $29 = $28; //@line 137 "mcbits/decrypt.c"
  $30 = HEAP32[$29>>2]|0; //@line 137 "mcbits/decrypt.c"
  $31 = (_bitshift64Lshr(($27|0),($30|0),4)|0); //@line 137 "mcbits/decrypt.c"
  $32 = tempRet0; //@line 137 "mcbits/decrypt.c"
  $33 = $24; //@line 137 "mcbits/decrypt.c"
  $34 = $33; //@line 137 "mcbits/decrypt.c"
  HEAP32[$34>>2] = $31; //@line 137 "mcbits/decrypt.c"
  $35 = (($33) + 4)|0; //@line 137 "mcbits/decrypt.c"
  $36 = $35; //@line 137 "mcbits/decrypt.c"
  HEAP32[$36>>2] = $32; //@line 137 "mcbits/decrypt.c"
  $37 = $2; //@line 134 "mcbits/decrypt.c"
  $38 = (($37) + 1)|0; //@line 134 "mcbits/decrypt.c"
  $2 = $38; //@line 134 "mcbits/decrypt.c"
 }
 STACKTOP = sp;return; //@line 139 "mcbits/decrypt.c"
}
function _decrypt_mcbits($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0;
 var $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 25872|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(25872|0);
 $8 = sp_a + 25832|0;
 $9 = sp_a + 25824|0;
 $10 = sp_a + 19680|0;
 $11 = sp_a + 13536|0;
 $12 = sp_a + 7392|0;
 $13 = sp_a + 6880|0;
 $14 = sp_a + 6688|0;
 $15 = sp_a + 6496|0;
 $16 = sp_a + 6400|0;
 $17 = sp_a + 5888|0;
 $18 = sp_a;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 0; //@line 164 "mcbits/decrypt.c"
 while(1) {
  $19 = $6; //@line 164 "mcbits/decrypt.c"
  $20 = ($19|0)<(736); //@line 164 "mcbits/decrypt.c"
  if (!($20)) {
   break;
  }
  $21 = $4; //@line 165 "mcbits/decrypt.c"
  $22 = ((($21)) + 96|0); //@line 165 "mcbits/decrypt.c"
  $23 = $6; //@line 165 "mcbits/decrypt.c"
  $24 = $23<<3; //@line 165 "mcbits/decrypt.c"
  $25 = (($22) + ($24)|0); //@line 165 "mcbits/decrypt.c"
  $26 = (_load8($25)|0); //@line 165 "mcbits/decrypt.c"
  $27 = tempRet0; //@line 165 "mcbits/decrypt.c"
  $28 = $6; //@line 165 "mcbits/decrypt.c"
  $29 = (($18) + ($28<<3)|0); //@line 165 "mcbits/decrypt.c"
  $30 = $29; //@line 165 "mcbits/decrypt.c"
  $31 = $30; //@line 165 "mcbits/decrypt.c"
  HEAP32[$31>>2] = $26; //@line 165 "mcbits/decrypt.c"
  $32 = (($30) + 4)|0; //@line 165 "mcbits/decrypt.c"
  $33 = $32; //@line 165 "mcbits/decrypt.c"
  HEAP32[$33>>2] = $27; //@line 165 "mcbits/decrypt.c"
  $34 = $6; //@line 164 "mcbits/decrypt.c"
  $35 = (($34) + 1)|0; //@line 164 "mcbits/decrypt.c"
  $6 = $35; //@line 164 "mcbits/decrypt.c"
 }
 $36 = $5; //@line 167 "mcbits/decrypt.c"
 _preprocess($17,$36); //@line 167 "mcbits/decrypt.c"
 _benes_compact($17,$18,1); //@line 168 "mcbits/decrypt.c"
 $37 = $4; //@line 169 "mcbits/decrypt.c"
 _scaling($11,$10,$37,$17); //@line 169 "mcbits/decrypt.c"
 _fft_tr($14,$11); //@line 170 "mcbits/decrypt.c"
 _syndrome_adjust($14); //@line 171 "mcbits/decrypt.c"
 _bm($16,$14); //@line 172 "mcbits/decrypt.c"
 _fft($12,$16); //@line 173 "mcbits/decrypt.c"
 $6 = 0; //@line 175 "mcbits/decrypt.c"
 while(1) {
  $38 = $6; //@line 175 "mcbits/decrypt.c"
  $39 = ($38|0)<(64); //@line 175 "mcbits/decrypt.c"
  if (!($39)) {
   break;
  }
  $40 = $6; //@line 177 "mcbits/decrypt.c"
  $41 = (($12) + (($40*96)|0)|0); //@line 177 "mcbits/decrypt.c"
  $42 = (_vec_or($41)|0); //@line 177 "mcbits/decrypt.c"
  $43 = tempRet0; //@line 177 "mcbits/decrypt.c"
  $44 = $6; //@line 177 "mcbits/decrypt.c"
  $45 = (($13) + ($44<<3)|0); //@line 177 "mcbits/decrypt.c"
  $46 = $45; //@line 177 "mcbits/decrypt.c"
  $47 = $46; //@line 177 "mcbits/decrypt.c"
  HEAP32[$47>>2] = $42; //@line 177 "mcbits/decrypt.c"
  $48 = (($46) + 4)|0; //@line 177 "mcbits/decrypt.c"
  $49 = $48; //@line 177 "mcbits/decrypt.c"
  HEAP32[$49>>2] = $43; //@line 177 "mcbits/decrypt.c"
  $50 = $6; //@line 178 "mcbits/decrypt.c"
  $51 = (($13) + ($50<<3)|0); //@line 178 "mcbits/decrypt.c"
  $52 = $51; //@line 178 "mcbits/decrypt.c"
  $53 = $52; //@line 178 "mcbits/decrypt.c"
  $54 = HEAP32[$53>>2]|0; //@line 178 "mcbits/decrypt.c"
  $55 = (($52) + 4)|0; //@line 178 "mcbits/decrypt.c"
  $56 = $55; //@line 178 "mcbits/decrypt.c"
  $57 = HEAP32[$56>>2]|0; //@line 178 "mcbits/decrypt.c"
  $58 = $54 ^ -1; //@line 178 "mcbits/decrypt.c"
  $59 = $57 ^ -1; //@line 178 "mcbits/decrypt.c"
  $60 = $6; //@line 178 "mcbits/decrypt.c"
  $61 = (($13) + ($60<<3)|0); //@line 178 "mcbits/decrypt.c"
  $62 = $61; //@line 178 "mcbits/decrypt.c"
  $63 = $62; //@line 178 "mcbits/decrypt.c"
  HEAP32[$63>>2] = $58; //@line 178 "mcbits/decrypt.c"
  $64 = (($62) + 4)|0; //@line 178 "mcbits/decrypt.c"
  $65 = $64; //@line 178 "mcbits/decrypt.c"
  HEAP32[$65>>2] = $59; //@line 178 "mcbits/decrypt.c"
  $66 = $6; //@line 175 "mcbits/decrypt.c"
  $67 = (($66) + 1)|0; //@line 175 "mcbits/decrypt.c"
  $6 = $67; //@line 175 "mcbits/decrypt.c"
 }
 _scaling_inv($11,$10,$13); //@line 185 "mcbits/decrypt.c"
 _fft_tr($15,$11); //@line 186 "mcbits/decrypt.c"
 _syndrome_adjust($15); //@line 187 "mcbits/decrypt.c"
 $68 = $9; //@line 189 "mcbits/decrypt.c"
 $69 = $68; //@line 189 "mcbits/decrypt.c"
 HEAP32[$69>>2] = 0; //@line 189 "mcbits/decrypt.c"
 $70 = (($68) + 4)|0; //@line 189 "mcbits/decrypt.c"
 $71 = $70; //@line 189 "mcbits/decrypt.c"
 HEAP32[$71>>2] = 0; //@line 189 "mcbits/decrypt.c"
 $6 = 0; //@line 190 "mcbits/decrypt.c"
 while(1) {
  $72 = $6; //@line 190 "mcbits/decrypt.c"
  $73 = ($72|0)<(2); //@line 190 "mcbits/decrypt.c"
  if (!($73)) {
   break;
  }
  $7 = 0; //@line 191 "mcbits/decrypt.c"
  while(1) {
   $74 = $7; //@line 191 "mcbits/decrypt.c"
   $75 = ($74|0)<(12); //@line 191 "mcbits/decrypt.c"
   $76 = $6;
   if (!($75)) {
    break;
   }
   $77 = (($14) + (($76*96)|0)|0); //@line 192 "mcbits/decrypt.c"
   $78 = $7; //@line 192 "mcbits/decrypt.c"
   $79 = (($77) + ($78<<3)|0); //@line 192 "mcbits/decrypt.c"
   $80 = $79; //@line 192 "mcbits/decrypt.c"
   $81 = $80; //@line 192 "mcbits/decrypt.c"
   $82 = HEAP32[$81>>2]|0; //@line 192 "mcbits/decrypt.c"
   $83 = (($80) + 4)|0; //@line 192 "mcbits/decrypt.c"
   $84 = $83; //@line 192 "mcbits/decrypt.c"
   $85 = HEAP32[$84>>2]|0; //@line 192 "mcbits/decrypt.c"
   $86 = $6; //@line 192 "mcbits/decrypt.c"
   $87 = (($15) + (($86*96)|0)|0); //@line 192 "mcbits/decrypt.c"
   $88 = $7; //@line 192 "mcbits/decrypt.c"
   $89 = (($87) + ($88<<3)|0); //@line 192 "mcbits/decrypt.c"
   $90 = $89; //@line 192 "mcbits/decrypt.c"
   $91 = $90; //@line 192 "mcbits/decrypt.c"
   $92 = HEAP32[$91>>2]|0; //@line 192 "mcbits/decrypt.c"
   $93 = (($90) + 4)|0; //@line 192 "mcbits/decrypt.c"
   $94 = $93; //@line 192 "mcbits/decrypt.c"
   $95 = HEAP32[$94>>2]|0; //@line 192 "mcbits/decrypt.c"
   $96 = $82 ^ $92; //@line 192 "mcbits/decrypt.c"
   $97 = $85 ^ $95; //@line 192 "mcbits/decrypt.c"
   $98 = $9; //@line 192 "mcbits/decrypt.c"
   $99 = $98; //@line 192 "mcbits/decrypt.c"
   $100 = HEAP32[$99>>2]|0; //@line 192 "mcbits/decrypt.c"
   $101 = (($98) + 4)|0; //@line 192 "mcbits/decrypt.c"
   $102 = $101; //@line 192 "mcbits/decrypt.c"
   $103 = HEAP32[$102>>2]|0; //@line 192 "mcbits/decrypt.c"
   $104 = $100 | $96; //@line 192 "mcbits/decrypt.c"
   $105 = $103 | $97; //@line 192 "mcbits/decrypt.c"
   $106 = $9; //@line 192 "mcbits/decrypt.c"
   $107 = $106; //@line 192 "mcbits/decrypt.c"
   HEAP32[$107>>2] = $104; //@line 192 "mcbits/decrypt.c"
   $108 = (($106) + 4)|0; //@line 192 "mcbits/decrypt.c"
   $109 = $108; //@line 192 "mcbits/decrypt.c"
   HEAP32[$109>>2] = $105; //@line 192 "mcbits/decrypt.c"
   $110 = $7; //@line 191 "mcbits/decrypt.c"
   $111 = (($110) + 1)|0; //@line 191 "mcbits/decrypt.c"
   $7 = $111; //@line 191 "mcbits/decrypt.c"
  }
  $112 = (($76) + 1)|0; //@line 190 "mcbits/decrypt.c"
  $6 = $112; //@line 190 "mcbits/decrypt.c"
 }
 $113 = $9; //@line 194 "mcbits/decrypt.c"
 $114 = $113; //@line 194 "mcbits/decrypt.c"
 $115 = HEAP32[$114>>2]|0; //@line 194 "mcbits/decrypt.c"
 $116 = (($113) + 4)|0; //@line 194 "mcbits/decrypt.c"
 $117 = $116; //@line 194 "mcbits/decrypt.c"
 $118 = HEAP32[$117>>2]|0; //@line 194 "mcbits/decrypt.c"
 $119 = $9; //@line 194 "mcbits/decrypt.c"
 $120 = $119; //@line 194 "mcbits/decrypt.c"
 $121 = HEAP32[$120>>2]|0; //@line 194 "mcbits/decrypt.c"
 $122 = (($119) + 4)|0; //@line 194 "mcbits/decrypt.c"
 $123 = $122; //@line 194 "mcbits/decrypt.c"
 $124 = HEAP32[$123>>2]|0; //@line 194 "mcbits/decrypt.c"
 $125 = $121 | $118; //@line 194 "mcbits/decrypt.c"
 $126 = $9; //@line 194 "mcbits/decrypt.c"
 $127 = $126; //@line 194 "mcbits/decrypt.c"
 HEAP32[$127>>2] = $125; //@line 194 "mcbits/decrypt.c"
 $128 = (($126) + 4)|0; //@line 194 "mcbits/decrypt.c"
 $129 = $128; //@line 194 "mcbits/decrypt.c"
 HEAP32[$129>>2] = $124; //@line 194 "mcbits/decrypt.c"
 $130 = $9; //@line 195 "mcbits/decrypt.c"
 $131 = $130; //@line 195 "mcbits/decrypt.c"
 $132 = HEAP32[$131>>2]|0; //@line 195 "mcbits/decrypt.c"
 $133 = (($130) + 4)|0; //@line 195 "mcbits/decrypt.c"
 $134 = $133; //@line 195 "mcbits/decrypt.c"
 $135 = HEAP32[$134>>2]|0; //@line 195 "mcbits/decrypt.c"
 $136 = (_bitshift64Lshr(($132|0),($135|0),16)|0); //@line 195 "mcbits/decrypt.c"
 $137 = tempRet0; //@line 195 "mcbits/decrypt.c"
 $138 = $9; //@line 195 "mcbits/decrypt.c"
 $139 = $138; //@line 195 "mcbits/decrypt.c"
 $140 = HEAP32[$139>>2]|0; //@line 195 "mcbits/decrypt.c"
 $141 = (($138) + 4)|0; //@line 195 "mcbits/decrypt.c"
 $142 = $141; //@line 195 "mcbits/decrypt.c"
 $143 = HEAP32[$142>>2]|0; //@line 195 "mcbits/decrypt.c"
 $144 = $140 | $136; //@line 195 "mcbits/decrypt.c"
 $145 = $143 | $137; //@line 195 "mcbits/decrypt.c"
 $146 = $9; //@line 195 "mcbits/decrypt.c"
 $147 = $146; //@line 195 "mcbits/decrypt.c"
 HEAP32[$147>>2] = $144; //@line 195 "mcbits/decrypt.c"
 $148 = (($146) + 4)|0; //@line 195 "mcbits/decrypt.c"
 $149 = $148; //@line 195 "mcbits/decrypt.c"
 HEAP32[$149>>2] = $145; //@line 195 "mcbits/decrypt.c"
 $150 = $9; //@line 196 "mcbits/decrypt.c"
 $151 = $150; //@line 196 "mcbits/decrypt.c"
 $152 = HEAP32[$151>>2]|0; //@line 196 "mcbits/decrypt.c"
 $153 = (($150) + 4)|0; //@line 196 "mcbits/decrypt.c"
 $154 = $153; //@line 196 "mcbits/decrypt.c"
 $155 = HEAP32[$154>>2]|0; //@line 196 "mcbits/decrypt.c"
 $156 = (_bitshift64Lshr(($152|0),($155|0),8)|0); //@line 196 "mcbits/decrypt.c"
 $157 = tempRet0; //@line 196 "mcbits/decrypt.c"
 $158 = $9; //@line 196 "mcbits/decrypt.c"
 $159 = $158; //@line 196 "mcbits/decrypt.c"
 $160 = HEAP32[$159>>2]|0; //@line 196 "mcbits/decrypt.c"
 $161 = (($158) + 4)|0; //@line 196 "mcbits/decrypt.c"
 $162 = $161; //@line 196 "mcbits/decrypt.c"
 $163 = HEAP32[$162>>2]|0; //@line 196 "mcbits/decrypt.c"
 $164 = $160 | $156; //@line 196 "mcbits/decrypt.c"
 $165 = $163 | $157; //@line 196 "mcbits/decrypt.c"
 $166 = $9; //@line 196 "mcbits/decrypt.c"
 $167 = $166; //@line 196 "mcbits/decrypt.c"
 HEAP32[$167>>2] = $164; //@line 196 "mcbits/decrypt.c"
 $168 = (($166) + 4)|0; //@line 196 "mcbits/decrypt.c"
 $169 = $168; //@line 196 "mcbits/decrypt.c"
 HEAP32[$169>>2] = $165; //@line 196 "mcbits/decrypt.c"
 $170 = $9; //@line 197 "mcbits/decrypt.c"
 $171 = $170; //@line 197 "mcbits/decrypt.c"
 $172 = HEAP32[$171>>2]|0; //@line 197 "mcbits/decrypt.c"
 $173 = (($170) + 4)|0; //@line 197 "mcbits/decrypt.c"
 $174 = $173; //@line 197 "mcbits/decrypt.c"
 $175 = HEAP32[$174>>2]|0; //@line 197 "mcbits/decrypt.c"
 $176 = $172 & 255; //@line 197 "mcbits/decrypt.c"
 $177 = $8; //@line 197 "mcbits/decrypt.c"
 $178 = $177; //@line 197 "mcbits/decrypt.c"
 HEAP32[$178>>2] = $176; //@line 197 "mcbits/decrypt.c"
 $179 = (($177) + 4)|0; //@line 197 "mcbits/decrypt.c"
 $180 = $179; //@line 197 "mcbits/decrypt.c"
 HEAP32[$180>>2] = 0; //@line 197 "mcbits/decrypt.c"
 _benes_compact($13,$18,0); //@line 200 "mcbits/decrypt.c"
 $6 = 0; //@line 202 "mcbits/decrypt.c"
 while(1) {
  $181 = $6; //@line 202 "mcbits/decrypt.c"
  $182 = ($181|0)<(64); //@line 202 "mcbits/decrypt.c"
  if (!($182)) {
   break;
  }
  $183 = $3; //@line 203 "mcbits/decrypt.c"
  $184 = $6; //@line 203 "mcbits/decrypt.c"
  $185 = $184<<3; //@line 203 "mcbits/decrypt.c"
  $186 = (($183) + ($185)|0); //@line 203 "mcbits/decrypt.c"
  $187 = $6; //@line 203 "mcbits/decrypt.c"
  $188 = (($13) + ($187<<3)|0); //@line 203 "mcbits/decrypt.c"
  $189 = $188; //@line 203 "mcbits/decrypt.c"
  $190 = $189; //@line 203 "mcbits/decrypt.c"
  $191 = HEAP32[$190>>2]|0; //@line 203 "mcbits/decrypt.c"
  $192 = (($189) + 4)|0; //@line 203 "mcbits/decrypt.c"
  $193 = $192; //@line 203 "mcbits/decrypt.c"
  $194 = HEAP32[$193>>2]|0; //@line 203 "mcbits/decrypt.c"
  _store8($186,$191,$194); //@line 203 "mcbits/decrypt.c"
  $195 = $6; //@line 202 "mcbits/decrypt.c"
  $196 = (($195) + 1)|0; //@line 202 "mcbits/decrypt.c"
  $6 = $196; //@line 202 "mcbits/decrypt.c"
 }
 $197 = (_weight($13)|0); //@line 207 "mcbits/decrypt.c"
 $198 = $197 ^ 62; //@line 207 "mcbits/decrypt.c"
 $199 = ($198|0)<(0); //@line 207 "mcbits/decrypt.c"
 $200 = $199 << 31 >> 31; //@line 207 "mcbits/decrypt.c"
 $201 = $8; //@line 207 "mcbits/decrypt.c"
 $202 = $201; //@line 207 "mcbits/decrypt.c"
 $203 = HEAP32[$202>>2]|0; //@line 207 "mcbits/decrypt.c"
 $204 = (($201) + 4)|0; //@line 207 "mcbits/decrypt.c"
 $205 = $204; //@line 207 "mcbits/decrypt.c"
 $206 = HEAP32[$205>>2]|0; //@line 207 "mcbits/decrypt.c"
 $207 = $203 | $198; //@line 207 "mcbits/decrypt.c"
 $208 = $206 | $200; //@line 207 "mcbits/decrypt.c"
 $209 = $8; //@line 207 "mcbits/decrypt.c"
 $210 = $209; //@line 207 "mcbits/decrypt.c"
 HEAP32[$210>>2] = $207; //@line 207 "mcbits/decrypt.c"
 $211 = (($209) + 4)|0; //@line 207 "mcbits/decrypt.c"
 $212 = $211; //@line 207 "mcbits/decrypt.c"
 HEAP32[$212>>2] = $208; //@line 207 "mcbits/decrypt.c"
 $213 = $8; //@line 208 "mcbits/decrypt.c"
 $214 = $213; //@line 208 "mcbits/decrypt.c"
 $215 = HEAP32[$214>>2]|0; //@line 208 "mcbits/decrypt.c"
 $216 = (($213) + 4)|0; //@line 208 "mcbits/decrypt.c"
 $217 = $216; //@line 208 "mcbits/decrypt.c"
 $218 = HEAP32[$217>>2]|0; //@line 208 "mcbits/decrypt.c"
 $219 = (_i64Subtract(($215|0),($218|0),1,0)|0); //@line 208 "mcbits/decrypt.c"
 $220 = tempRet0; //@line 208 "mcbits/decrypt.c"
 $221 = $8; //@line 208 "mcbits/decrypt.c"
 $222 = $221; //@line 208 "mcbits/decrypt.c"
 HEAP32[$222>>2] = $219; //@line 208 "mcbits/decrypt.c"
 $223 = (($221) + 4)|0; //@line 208 "mcbits/decrypt.c"
 $224 = $223; //@line 208 "mcbits/decrypt.c"
 HEAP32[$224>>2] = $220; //@line 208 "mcbits/decrypt.c"
 $225 = $8; //@line 209 "mcbits/decrypt.c"
 $226 = $225; //@line 209 "mcbits/decrypt.c"
 $227 = HEAP32[$226>>2]|0; //@line 209 "mcbits/decrypt.c"
 $228 = (($225) + 4)|0; //@line 209 "mcbits/decrypt.c"
 $229 = $228; //@line 209 "mcbits/decrypt.c"
 $230 = HEAP32[$229>>2]|0; //@line 209 "mcbits/decrypt.c"
 $231 = (_bitshift64Lshr(($227|0),($230|0),63)|0); //@line 209 "mcbits/decrypt.c"
 $232 = tempRet0; //@line 209 "mcbits/decrypt.c"
 $233 = $8; //@line 209 "mcbits/decrypt.c"
 $234 = $233; //@line 209 "mcbits/decrypt.c"
 HEAP32[$234>>2] = $231; //@line 209 "mcbits/decrypt.c"
 $235 = (($233) + 4)|0; //@line 209 "mcbits/decrypt.c"
 $236 = $235; //@line 209 "mcbits/decrypt.c"
 HEAP32[$236>>2] = $232; //@line 209 "mcbits/decrypt.c"
 $237 = $8; //@line 211 "mcbits/decrypt.c"
 $238 = $237; //@line 211 "mcbits/decrypt.c"
 $239 = HEAP32[$238>>2]|0; //@line 211 "mcbits/decrypt.c"
 $240 = (($237) + 4)|0; //@line 211 "mcbits/decrypt.c"
 $241 = $240; //@line 211 "mcbits/decrypt.c"
 $242 = HEAP32[$241>>2]|0; //@line 211 "mcbits/decrypt.c"
 $243 = (_i64Subtract(($239|0),($242|0),1,0)|0); //@line 211 "mcbits/decrypt.c"
 $244 = tempRet0; //@line 211 "mcbits/decrypt.c"
 STACKTOP = sp;return ($243|0); //@line 211 "mcbits/decrypt.c"
}
function _preprocess($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 68 "mcbits/decrypt.c"
 while(1) {
  $5 = $4; //@line 68 "mcbits/decrypt.c"
  $6 = ($5|0)<(64); //@line 68 "mcbits/decrypt.c"
  if (!($6)) {
   break;
  }
  $7 = $2; //@line 69 "mcbits/decrypt.c"
  $8 = $4; //@line 69 "mcbits/decrypt.c"
  $9 = (($7) + ($8<<3)|0); //@line 69 "mcbits/decrypt.c"
  $10 = $9; //@line 69 "mcbits/decrypt.c"
  $11 = $10; //@line 69 "mcbits/decrypt.c"
  HEAP32[$11>>2] = 0; //@line 69 "mcbits/decrypt.c"
  $12 = (($10) + 4)|0; //@line 69 "mcbits/decrypt.c"
  $13 = $12; //@line 69 "mcbits/decrypt.c"
  HEAP32[$13>>2] = 0; //@line 69 "mcbits/decrypt.c"
  $14 = $4; //@line 68 "mcbits/decrypt.c"
  $15 = (($14) + 1)|0; //@line 68 "mcbits/decrypt.c"
  $4 = $15; //@line 68 "mcbits/decrypt.c"
 }
 $4 = 0; //@line 71 "mcbits/decrypt.c"
 while(1) {
  $16 = $4; //@line 71 "mcbits/decrypt.c"
  $17 = ($16|0)<(11); //@line 71 "mcbits/decrypt.c"
  if (!($17)) {
   break;
  }
  $18 = $3; //@line 72 "mcbits/decrypt.c"
  $19 = $4; //@line 72 "mcbits/decrypt.c"
  $20 = $19<<3; //@line 72 "mcbits/decrypt.c"
  $21 = (($18) + ($20)|0); //@line 72 "mcbits/decrypt.c"
  $22 = (_load8($21)|0); //@line 72 "mcbits/decrypt.c"
  $23 = tempRet0; //@line 72 "mcbits/decrypt.c"
  $24 = $2; //@line 72 "mcbits/decrypt.c"
  $25 = $4; //@line 72 "mcbits/decrypt.c"
  $26 = (($24) + ($25<<3)|0); //@line 72 "mcbits/decrypt.c"
  $27 = $26; //@line 72 "mcbits/decrypt.c"
  $28 = $27; //@line 72 "mcbits/decrypt.c"
  HEAP32[$28>>2] = $22; //@line 72 "mcbits/decrypt.c"
  $29 = (($27) + 4)|0; //@line 72 "mcbits/decrypt.c"
  $30 = $29; //@line 72 "mcbits/decrypt.c"
  HEAP32[$30>>2] = $23; //@line 72 "mcbits/decrypt.c"
  $31 = $4; //@line 71 "mcbits/decrypt.c"
  $32 = (($31) + 1)|0; //@line 71 "mcbits/decrypt.c"
  $4 = $32; //@line 71 "mcbits/decrypt.c"
 }
 $4 = 4; //@line 74 "mcbits/decrypt.c"
 while(1) {
  $33 = $4; //@line 74 "mcbits/decrypt.c"
  $34 = ($33|0)>=(0); //@line 74 "mcbits/decrypt.c"
  if (!($34)) {
   break;
  }
  $35 = $2; //@line 76 "mcbits/decrypt.c"
  $36 = ((($35)) + 88|0); //@line 76 "mcbits/decrypt.c"
  $37 = $36; //@line 76 "mcbits/decrypt.c"
  $38 = $37; //@line 76 "mcbits/decrypt.c"
  $39 = HEAP32[$38>>2]|0; //@line 76 "mcbits/decrypt.c"
  $40 = (($37) + 4)|0; //@line 76 "mcbits/decrypt.c"
  $41 = $40; //@line 76 "mcbits/decrypt.c"
  $42 = HEAP32[$41>>2]|0; //@line 76 "mcbits/decrypt.c"
  $43 = (_bitshift64Shl(($39|0),($42|0),8)|0); //@line 76 "mcbits/decrypt.c"
  $44 = tempRet0; //@line 76 "mcbits/decrypt.c"
  $45 = $36; //@line 76 "mcbits/decrypt.c"
  $46 = $45; //@line 76 "mcbits/decrypt.c"
  HEAP32[$46>>2] = $43; //@line 76 "mcbits/decrypt.c"
  $47 = (($45) + 4)|0; //@line 76 "mcbits/decrypt.c"
  $48 = $47; //@line 76 "mcbits/decrypt.c"
  HEAP32[$48>>2] = $44; //@line 76 "mcbits/decrypt.c"
  $49 = $3; //@line 77 "mcbits/decrypt.c"
  $50 = $4; //@line 77 "mcbits/decrypt.c"
  $51 = (88 + ($50))|0; //@line 77 "mcbits/decrypt.c"
  $52 = (($49) + ($51)|0); //@line 77 "mcbits/decrypt.c"
  $53 = HEAP8[$52>>0]|0; //@line 77 "mcbits/decrypt.c"
  $54 = $53&255; //@line 77 "mcbits/decrypt.c"
  $55 = $2; //@line 77 "mcbits/decrypt.c"
  $56 = ((($55)) + 88|0); //@line 77 "mcbits/decrypt.c"
  $57 = $56; //@line 77 "mcbits/decrypt.c"
  $58 = $57; //@line 77 "mcbits/decrypt.c"
  $59 = HEAP32[$58>>2]|0; //@line 77 "mcbits/decrypt.c"
  $60 = (($57) + 4)|0; //@line 77 "mcbits/decrypt.c"
  $61 = $60; //@line 77 "mcbits/decrypt.c"
  $62 = HEAP32[$61>>2]|0; //@line 77 "mcbits/decrypt.c"
  $63 = $59 | $54; //@line 77 "mcbits/decrypt.c"
  $64 = $56; //@line 77 "mcbits/decrypt.c"
  $65 = $64; //@line 77 "mcbits/decrypt.c"
  HEAP32[$65>>2] = $63; //@line 77 "mcbits/decrypt.c"
  $66 = (($64) + 4)|0; //@line 77 "mcbits/decrypt.c"
  $67 = $66; //@line 77 "mcbits/decrypt.c"
  HEAP32[$67>>2] = $62; //@line 77 "mcbits/decrypt.c"
  $68 = $4; //@line 74 "mcbits/decrypt.c"
  $69 = (($68) + -1)|0; //@line 74 "mcbits/decrypt.c"
  $4 = $69; //@line 74 "mcbits/decrypt.c"
 }
 STACKTOP = sp;return; //@line 79 "mcbits/decrypt.c"
}
function _scaling($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 6368|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(6368|0);
 $10 = sp_a + 6240|0;
 $11 = sp_a + 96|0;
 $12 = sp_a;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $8 = 0; //@line 25 "mcbits/decrypt.c"
 while(1) {
  $13 = $8; //@line 25 "mcbits/decrypt.c"
  $14 = ($13|0)<(12); //@line 25 "mcbits/decrypt.c"
  if (!($14)) {
   break;
  }
  $15 = $6; //@line 26 "mcbits/decrypt.c"
  $16 = $8; //@line 26 "mcbits/decrypt.c"
  $17 = $16<<3; //@line 26 "mcbits/decrypt.c"
  $18 = (($15) + ($17)|0); //@line 26 "mcbits/decrypt.c"
  $19 = (_load8($18)|0); //@line 26 "mcbits/decrypt.c"
  $20 = tempRet0; //@line 26 "mcbits/decrypt.c"
  $21 = $8; //@line 26 "mcbits/decrypt.c"
  $22 = (($10) + ($21<<3)|0); //@line 26 "mcbits/decrypt.c"
  $23 = $22; //@line 26 "mcbits/decrypt.c"
  $24 = $23; //@line 26 "mcbits/decrypt.c"
  HEAP32[$24>>2] = $19; //@line 26 "mcbits/decrypt.c"
  $25 = (($23) + 4)|0; //@line 26 "mcbits/decrypt.c"
  $26 = $25; //@line 26 "mcbits/decrypt.c"
  HEAP32[$26>>2] = $20; //@line 26 "mcbits/decrypt.c"
  $27 = $8; //@line 25 "mcbits/decrypt.c"
  $28 = (($27) + 1)|0; //@line 25 "mcbits/decrypt.c"
  $8 = $28; //@line 25 "mcbits/decrypt.c"
 }
 _fft($11,$10); //@line 28 "mcbits/decrypt.c"
 $8 = 0; //@line 30 "mcbits/decrypt.c"
 while(1) {
  $29 = $8; //@line 30 "mcbits/decrypt.c"
  $30 = ($29|0)<(64); //@line 30 "mcbits/decrypt.c"
  if (!($30)) {
   break;
  }
  $31 = $8; //@line 31 "mcbits/decrypt.c"
  $32 = (($11) + (($31*96)|0)|0); //@line 31 "mcbits/decrypt.c"
  $33 = $8; //@line 31 "mcbits/decrypt.c"
  $34 = (($11) + (($33*96)|0)|0); //@line 31 "mcbits/decrypt.c"
  _vec_sq($32,$34); //@line 31 "mcbits/decrypt.c"
  $35 = $8; //@line 30 "mcbits/decrypt.c"
  $36 = (($35) + 1)|0; //@line 30 "mcbits/decrypt.c"
  $8 = $36; //@line 30 "mcbits/decrypt.c"
 }
 $37 = $5; //@line 33 "mcbits/decrypt.c"
 _vec_copy($37,$11); //@line 33 "mcbits/decrypt.c"
 $8 = 1; //@line 35 "mcbits/decrypt.c"
 while(1) {
  $38 = $8; //@line 35 "mcbits/decrypt.c"
  $39 = ($38|0)<(64); //@line 35 "mcbits/decrypt.c"
  if (!($39)) {
   break;
  }
  $40 = $5; //@line 36 "mcbits/decrypt.c"
  $41 = $8; //@line 36 "mcbits/decrypt.c"
  $42 = (($40) + (($41*96)|0)|0); //@line 36 "mcbits/decrypt.c"
  $43 = $5; //@line 36 "mcbits/decrypt.c"
  $44 = $8; //@line 36 "mcbits/decrypt.c"
  $45 = (($44) - 1)|0; //@line 36 "mcbits/decrypt.c"
  $46 = (($43) + (($45*96)|0)|0); //@line 36 "mcbits/decrypt.c"
  $47 = $8; //@line 36 "mcbits/decrypt.c"
  $48 = (($11) + (($47*96)|0)|0); //@line 36 "mcbits/decrypt.c"
  _vec_mul($42,$46,$48); //@line 36 "mcbits/decrypt.c"
  $49 = $8; //@line 35 "mcbits/decrypt.c"
  $50 = (($49) + 1)|0; //@line 35 "mcbits/decrypt.c"
  $8 = $50; //@line 35 "mcbits/decrypt.c"
 }
 $51 = $5; //@line 38 "mcbits/decrypt.c"
 $52 = ((($51)) + 6048|0); //@line 38 "mcbits/decrypt.c"
 _vec_inv($12,$52); //@line 38 "mcbits/decrypt.c"
 $8 = 62; //@line 40 "mcbits/decrypt.c"
 while(1) {
  $53 = $8; //@line 40 "mcbits/decrypt.c"
  $54 = ($53|0)>=(0); //@line 40 "mcbits/decrypt.c"
  $55 = $5;
  if (!($54)) {
   break;
  }
  $56 = $8; //@line 42 "mcbits/decrypt.c"
  $57 = (($56) + 1)|0; //@line 42 "mcbits/decrypt.c"
  $58 = (($55) + (($57*96)|0)|0); //@line 42 "mcbits/decrypt.c"
  $59 = $5; //@line 42 "mcbits/decrypt.c"
  $60 = $8; //@line 42 "mcbits/decrypt.c"
  $61 = (($59) + (($60*96)|0)|0); //@line 42 "mcbits/decrypt.c"
  _vec_mul($58,$12,$61); //@line 42 "mcbits/decrypt.c"
  $62 = $8; //@line 43 "mcbits/decrypt.c"
  $63 = (($62) + 1)|0; //@line 43 "mcbits/decrypt.c"
  $64 = (($11) + (($63*96)|0)|0); //@line 43 "mcbits/decrypt.c"
  _vec_mul($12,$12,$64); //@line 43 "mcbits/decrypt.c"
  $65 = $8; //@line 40 "mcbits/decrypt.c"
  $66 = (($65) + -1)|0; //@line 40 "mcbits/decrypt.c"
  $8 = $66; //@line 40 "mcbits/decrypt.c"
 }
 _vec_copy($55,$12); //@line 46 "mcbits/decrypt.c"
 $8 = 0; //@line 50 "mcbits/decrypt.c"
 while(1) {
  $67 = $8; //@line 50 "mcbits/decrypt.c"
  $68 = ($67|0)<(64); //@line 50 "mcbits/decrypt.c"
  if (!($68)) {
   break;
  }
  $9 = 0; //@line 51 "mcbits/decrypt.c"
  while(1) {
   $69 = $9; //@line 51 "mcbits/decrypt.c"
   $70 = ($69|0)<(12); //@line 51 "mcbits/decrypt.c"
   if (!($70)) {
    break;
   }
   $71 = $5; //@line 52 "mcbits/decrypt.c"
   $72 = $8; //@line 52 "mcbits/decrypt.c"
   $73 = (($71) + (($72*96)|0)|0); //@line 52 "mcbits/decrypt.c"
   $74 = $9; //@line 52 "mcbits/decrypt.c"
   $75 = (($73) + ($74<<3)|0); //@line 52 "mcbits/decrypt.c"
   $76 = $75; //@line 52 "mcbits/decrypt.c"
   $77 = $76; //@line 52 "mcbits/decrypt.c"
   $78 = HEAP32[$77>>2]|0; //@line 52 "mcbits/decrypt.c"
   $79 = (($76) + 4)|0; //@line 52 "mcbits/decrypt.c"
   $80 = $79; //@line 52 "mcbits/decrypt.c"
   $81 = HEAP32[$80>>2]|0; //@line 52 "mcbits/decrypt.c"
   $82 = $7; //@line 52 "mcbits/decrypt.c"
   $83 = $8; //@line 52 "mcbits/decrypt.c"
   $84 = (($82) + ($83<<3)|0); //@line 52 "mcbits/decrypt.c"
   $85 = $84; //@line 52 "mcbits/decrypt.c"
   $86 = $85; //@line 52 "mcbits/decrypt.c"
   $87 = HEAP32[$86>>2]|0; //@line 52 "mcbits/decrypt.c"
   $88 = (($85) + 4)|0; //@line 52 "mcbits/decrypt.c"
   $89 = $88; //@line 52 "mcbits/decrypt.c"
   $90 = HEAP32[$89>>2]|0; //@line 52 "mcbits/decrypt.c"
   $91 = $78 & $87; //@line 52 "mcbits/decrypt.c"
   $92 = $81 & $90; //@line 52 "mcbits/decrypt.c"
   $93 = $4; //@line 52 "mcbits/decrypt.c"
   $94 = $8; //@line 52 "mcbits/decrypt.c"
   $95 = (($93) + (($94*96)|0)|0); //@line 52 "mcbits/decrypt.c"
   $96 = $9; //@line 52 "mcbits/decrypt.c"
   $97 = (($95) + ($96<<3)|0); //@line 52 "mcbits/decrypt.c"
   $98 = $97; //@line 52 "mcbits/decrypt.c"
   $99 = $98; //@line 52 "mcbits/decrypt.c"
   HEAP32[$99>>2] = $91; //@line 52 "mcbits/decrypt.c"
   $100 = (($98) + 4)|0; //@line 52 "mcbits/decrypt.c"
   $101 = $100; //@line 52 "mcbits/decrypt.c"
   HEAP32[$101>>2] = $92; //@line 52 "mcbits/decrypt.c"
   $102 = $9; //@line 51 "mcbits/decrypt.c"
   $103 = (($102) + 1)|0; //@line 51 "mcbits/decrypt.c"
   $9 = $103; //@line 51 "mcbits/decrypt.c"
  }
  $104 = $8; //@line 50 "mcbits/decrypt.c"
  $105 = (($104) + 1)|0; //@line 50 "mcbits/decrypt.c"
  $8 = $105; //@line 50 "mcbits/decrypt.c"
 }
 STACKTOP = sp;return; //@line 53 "mcbits/decrypt.c"
}
function _scaling_inv($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 0; //@line 59 "mcbits/decrypt.c"
 while(1) {
  $8 = $6; //@line 59 "mcbits/decrypt.c"
  $9 = ($8|0)<(64); //@line 59 "mcbits/decrypt.c"
  if (!($9)) {
   break;
  }
  $7 = 0; //@line 60 "mcbits/decrypt.c"
  while(1) {
   $10 = $7; //@line 60 "mcbits/decrypt.c"
   $11 = ($10|0)<(12); //@line 60 "mcbits/decrypt.c"
   if (!($11)) {
    break;
   }
   $12 = $4; //@line 61 "mcbits/decrypt.c"
   $13 = $6; //@line 61 "mcbits/decrypt.c"
   $14 = (($12) + (($13*96)|0)|0); //@line 61 "mcbits/decrypt.c"
   $15 = $7; //@line 61 "mcbits/decrypt.c"
   $16 = (($14) + ($15<<3)|0); //@line 61 "mcbits/decrypt.c"
   $17 = $16; //@line 61 "mcbits/decrypt.c"
   $18 = $17; //@line 61 "mcbits/decrypt.c"
   $19 = HEAP32[$18>>2]|0; //@line 61 "mcbits/decrypt.c"
   $20 = (($17) + 4)|0; //@line 61 "mcbits/decrypt.c"
   $21 = $20; //@line 61 "mcbits/decrypt.c"
   $22 = HEAP32[$21>>2]|0; //@line 61 "mcbits/decrypt.c"
   $23 = $5; //@line 61 "mcbits/decrypt.c"
   $24 = $6; //@line 61 "mcbits/decrypt.c"
   $25 = (($23) + ($24<<3)|0); //@line 61 "mcbits/decrypt.c"
   $26 = $25; //@line 61 "mcbits/decrypt.c"
   $27 = $26; //@line 61 "mcbits/decrypt.c"
   $28 = HEAP32[$27>>2]|0; //@line 61 "mcbits/decrypt.c"
   $29 = (($26) + 4)|0; //@line 61 "mcbits/decrypt.c"
   $30 = $29; //@line 61 "mcbits/decrypt.c"
   $31 = HEAP32[$30>>2]|0; //@line 61 "mcbits/decrypt.c"
   $32 = $19 & $28; //@line 61 "mcbits/decrypt.c"
   $33 = $22 & $31; //@line 61 "mcbits/decrypt.c"
   $34 = $3; //@line 61 "mcbits/decrypt.c"
   $35 = $6; //@line 61 "mcbits/decrypt.c"
   $36 = (($34) + (($35*96)|0)|0); //@line 61 "mcbits/decrypt.c"
   $37 = $7; //@line 61 "mcbits/decrypt.c"
   $38 = (($36) + ($37<<3)|0); //@line 61 "mcbits/decrypt.c"
   $39 = $38; //@line 61 "mcbits/decrypt.c"
   $40 = $39; //@line 61 "mcbits/decrypt.c"
   HEAP32[$40>>2] = $32; //@line 61 "mcbits/decrypt.c"
   $41 = (($39) + 4)|0; //@line 61 "mcbits/decrypt.c"
   $42 = $41; //@line 61 "mcbits/decrypt.c"
   HEAP32[$42>>2] = $33; //@line 61 "mcbits/decrypt.c"
   $43 = $7; //@line 60 "mcbits/decrypt.c"
   $44 = (($43) + 1)|0; //@line 60 "mcbits/decrypt.c"
   $7 = $44; //@line 60 "mcbits/decrypt.c"
  }
  $45 = $6; //@line 59 "mcbits/decrypt.c"
  $46 = (($45) + 1)|0; //@line 59 "mcbits/decrypt.c"
  $6 = $46; //@line 59 "mcbits/decrypt.c"
 }
 STACKTOP = sp;return; //@line 62 "mcbits/decrypt.c"
}
function _gen_e($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 1168|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1168|0);
 $5 = sp_a + 1040|0;
 $6 = sp_a + 512|0;
 $7 = sp_a + 504|0;
 $8 = sp_a + 496|0;
 $9 = sp_a;
 $1 = $0;
 $10 = $7; //@line 16 "mcbits/encrypt.c"
 $11 = $10; //@line 16 "mcbits/encrypt.c"
 HEAP32[$11>>2] = 1; //@line 16 "mcbits/encrypt.c"
 $12 = (($10) + 4)|0; //@line 16 "mcbits/encrypt.c"
 $13 = $12; //@line 16 "mcbits/encrypt.c"
 HEAP32[$13>>2] = 0; //@line 16 "mcbits/encrypt.c"
 while(1) {
  _randombytes($5,124,0); //@line 22 "mcbits/encrypt.c"
  $2 = 0; //@line 24 "mcbits/encrypt.c"
  while(1) {
   $14 = $2; //@line 24 "mcbits/encrypt.c"
   $15 = ($14|0)<(62); //@line 24 "mcbits/encrypt.c"
   if (!($15)) {
    break;
   }
   $16 = $2; //@line 25 "mcbits/encrypt.c"
   $17 = (($5) + ($16<<1)|0); //@line 25 "mcbits/encrypt.c"
   $18 = HEAP16[$17>>1]|0; //@line 25 "mcbits/encrypt.c"
   $19 = $18&65535; //@line 25 "mcbits/encrypt.c"
   $20 = $19 & 4095; //@line 25 "mcbits/encrypt.c"
   $21 = $20&65535; //@line 25 "mcbits/encrypt.c"
   HEAP16[$17>>1] = $21; //@line 25 "mcbits/encrypt.c"
   $22 = $2; //@line 24 "mcbits/encrypt.c"
   $23 = (($22) + 1)|0; //@line 24 "mcbits/encrypt.c"
   $2 = $23; //@line 24 "mcbits/encrypt.c"
  }
  $4 = 0; //@line 27 "mcbits/encrypt.c"
  $2 = 1; //@line 28 "mcbits/encrypt.c"
  while(1) {
   $24 = $2; //@line 28 "mcbits/encrypt.c"
   $25 = ($24|0)<(62); //@line 28 "mcbits/encrypt.c"
   if (!($25)) {
    break;
   }
   $3 = 0; //@line 29 "mcbits/encrypt.c"
   while(1) {
    $26 = $3; //@line 29 "mcbits/encrypt.c"
    $27 = $2; //@line 29 "mcbits/encrypt.c"
    $28 = ($26|0)<($27|0); //@line 29 "mcbits/encrypt.c"
    $29 = $2;
    if (!($28)) {
     break;
    }
    $30 = (($5) + ($29<<1)|0); //@line 30 "mcbits/encrypt.c"
    $31 = HEAP16[$30>>1]|0; //@line 30 "mcbits/encrypt.c"
    $32 = $31&65535; //@line 30 "mcbits/encrypt.c"
    $33 = $3; //@line 30 "mcbits/encrypt.c"
    $34 = (($5) + ($33<<1)|0); //@line 30 "mcbits/encrypt.c"
    $35 = HEAP16[$34>>1]|0; //@line 30 "mcbits/encrypt.c"
    $36 = $35&65535; //@line 30 "mcbits/encrypt.c"
    $37 = ($32|0)==($36|0); //@line 30 "mcbits/encrypt.c"
    if ($37) {
     $4 = 1; //@line 31 "mcbits/encrypt.c"
    }
    $38 = $3; //@line 29 "mcbits/encrypt.c"
    $39 = (($38) + 1)|0; //@line 29 "mcbits/encrypt.c"
    $3 = $39; //@line 29 "mcbits/encrypt.c"
   }
   $40 = (($29) + 1)|0; //@line 28 "mcbits/encrypt.c"
   $2 = $40; //@line 28 "mcbits/encrypt.c"
  }
  $41 = $4; //@line 33 "mcbits/encrypt.c"
  $42 = ($41|0)==(0); //@line 33 "mcbits/encrypt.c"
  if ($42) {
   break;
  }
 }
 $3 = 0; //@line 37 "mcbits/encrypt.c"
 while(1) {
  $43 = $3; //@line 37 "mcbits/encrypt.c"
  $44 = ($43|0)<(62); //@line 37 "mcbits/encrypt.c"
  if (!($44)) {
   break;
  }
  $45 = $7; //@line 38 "mcbits/encrypt.c"
  $46 = $45; //@line 38 "mcbits/encrypt.c"
  $47 = HEAP32[$46>>2]|0; //@line 38 "mcbits/encrypt.c"
  $48 = (($45) + 4)|0; //@line 38 "mcbits/encrypt.c"
  $49 = $48; //@line 38 "mcbits/encrypt.c"
  $50 = HEAP32[$49>>2]|0; //@line 38 "mcbits/encrypt.c"
  $51 = $3; //@line 38 "mcbits/encrypt.c"
  $52 = (($5) + ($51<<1)|0); //@line 38 "mcbits/encrypt.c"
  $53 = HEAP16[$52>>1]|0; //@line 38 "mcbits/encrypt.c"
  $54 = $53&65535; //@line 38 "mcbits/encrypt.c"
  $55 = $54 & 63; //@line 38 "mcbits/encrypt.c"
  $56 = (_bitshift64Shl(($47|0),($50|0),($55|0))|0); //@line 38 "mcbits/encrypt.c"
  $57 = tempRet0; //@line 38 "mcbits/encrypt.c"
  $58 = $3; //@line 38 "mcbits/encrypt.c"
  $59 = (($9) + ($58<<3)|0); //@line 38 "mcbits/encrypt.c"
  $60 = $59; //@line 38 "mcbits/encrypt.c"
  $61 = $60; //@line 38 "mcbits/encrypt.c"
  HEAP32[$61>>2] = $56; //@line 38 "mcbits/encrypt.c"
  $62 = (($60) + 4)|0; //@line 38 "mcbits/encrypt.c"
  $63 = $62; //@line 38 "mcbits/encrypt.c"
  HEAP32[$63>>2] = $57; //@line 38 "mcbits/encrypt.c"
  $64 = $3; //@line 37 "mcbits/encrypt.c"
  $65 = (($64) + 1)|0; //@line 37 "mcbits/encrypt.c"
  $3 = $65; //@line 37 "mcbits/encrypt.c"
 }
 $2 = 0; //@line 40 "mcbits/encrypt.c"
 while(1) {
  $66 = $2; //@line 40 "mcbits/encrypt.c"
  $67 = ($66|0)<(64); //@line 40 "mcbits/encrypt.c"
  if (!($67)) {
   break;
  }
  $68 = $2; //@line 42 "mcbits/encrypt.c"
  $69 = (($6) + ($68<<3)|0); //@line 42 "mcbits/encrypt.c"
  $70 = $69; //@line 42 "mcbits/encrypt.c"
  $71 = $70; //@line 42 "mcbits/encrypt.c"
  HEAP32[$71>>2] = 0; //@line 42 "mcbits/encrypt.c"
  $72 = (($70) + 4)|0; //@line 42 "mcbits/encrypt.c"
  $73 = $72; //@line 42 "mcbits/encrypt.c"
  HEAP32[$73>>2] = 0; //@line 42 "mcbits/encrypt.c"
  $3 = 0; //@line 44 "mcbits/encrypt.c"
  while(1) {
   $74 = $3; //@line 44 "mcbits/encrypt.c"
   $75 = ($74|0)<(62); //@line 44 "mcbits/encrypt.c"
   $76 = $2;
   if (!($75)) {
    break;
   }
   $77 = $3; //@line 46 "mcbits/encrypt.c"
   $78 = (($5) + ($77<<1)|0); //@line 46 "mcbits/encrypt.c"
   $79 = HEAP16[$78>>1]|0; //@line 46 "mcbits/encrypt.c"
   $80 = $79&65535; //@line 46 "mcbits/encrypt.c"
   $81 = $80 >> 6; //@line 46 "mcbits/encrypt.c"
   $82 = $76 ^ $81; //@line 46 "mcbits/encrypt.c"
   $83 = ($82|0)<(0); //@line 46 "mcbits/encrypt.c"
   $84 = $83 << 31 >> 31; //@line 46 "mcbits/encrypt.c"
   $85 = $8; //@line 46 "mcbits/encrypt.c"
   $86 = $85; //@line 46 "mcbits/encrypt.c"
   HEAP32[$86>>2] = $82; //@line 46 "mcbits/encrypt.c"
   $87 = (($85) + 4)|0; //@line 46 "mcbits/encrypt.c"
   $88 = $87; //@line 46 "mcbits/encrypt.c"
   HEAP32[$88>>2] = $84; //@line 46 "mcbits/encrypt.c"
   $89 = $8; //@line 47 "mcbits/encrypt.c"
   $90 = $89; //@line 47 "mcbits/encrypt.c"
   $91 = HEAP32[$90>>2]|0; //@line 47 "mcbits/encrypt.c"
   $92 = (($89) + 4)|0; //@line 47 "mcbits/encrypt.c"
   $93 = $92; //@line 47 "mcbits/encrypt.c"
   $94 = HEAP32[$93>>2]|0; //@line 47 "mcbits/encrypt.c"
   $95 = (_i64Subtract(($91|0),($94|0),1,0)|0); //@line 47 "mcbits/encrypt.c"
   $96 = tempRet0; //@line 47 "mcbits/encrypt.c"
   $97 = $8; //@line 47 "mcbits/encrypt.c"
   $98 = $97; //@line 47 "mcbits/encrypt.c"
   HEAP32[$98>>2] = $95; //@line 47 "mcbits/encrypt.c"
   $99 = (($97) + 4)|0; //@line 47 "mcbits/encrypt.c"
   $100 = $99; //@line 47 "mcbits/encrypt.c"
   HEAP32[$100>>2] = $96; //@line 47 "mcbits/encrypt.c"
   $101 = $8; //@line 48 "mcbits/encrypt.c"
   $102 = $101; //@line 48 "mcbits/encrypt.c"
   $103 = HEAP32[$102>>2]|0; //@line 48 "mcbits/encrypt.c"
   $104 = (($101) + 4)|0; //@line 48 "mcbits/encrypt.c"
   $105 = $104; //@line 48 "mcbits/encrypt.c"
   $106 = HEAP32[$105>>2]|0; //@line 48 "mcbits/encrypt.c"
   $107 = (_bitshift64Lshr(($103|0),($106|0),63)|0); //@line 48 "mcbits/encrypt.c"
   $108 = tempRet0; //@line 48 "mcbits/encrypt.c"
   $109 = $8; //@line 48 "mcbits/encrypt.c"
   $110 = $109; //@line 48 "mcbits/encrypt.c"
   HEAP32[$110>>2] = $107; //@line 48 "mcbits/encrypt.c"
   $111 = (($109) + 4)|0; //@line 48 "mcbits/encrypt.c"
   $112 = $111; //@line 48 "mcbits/encrypt.c"
   HEAP32[$112>>2] = $108; //@line 48 "mcbits/encrypt.c"
   $113 = $8; //@line 49 "mcbits/encrypt.c"
   $114 = $113; //@line 49 "mcbits/encrypt.c"
   $115 = HEAP32[$114>>2]|0; //@line 49 "mcbits/encrypt.c"
   $116 = (($113) + 4)|0; //@line 49 "mcbits/encrypt.c"
   $117 = $116; //@line 49 "mcbits/encrypt.c"
   $118 = HEAP32[$117>>2]|0; //@line 49 "mcbits/encrypt.c"
   $119 = (_i64Subtract(0,0,($115|0),($118|0))|0); //@line 49 "mcbits/encrypt.c"
   $120 = tempRet0; //@line 49 "mcbits/encrypt.c"
   $121 = $8; //@line 49 "mcbits/encrypt.c"
   $122 = $121; //@line 49 "mcbits/encrypt.c"
   HEAP32[$122>>2] = $119; //@line 49 "mcbits/encrypt.c"
   $123 = (($121) + 4)|0; //@line 49 "mcbits/encrypt.c"
   $124 = $123; //@line 49 "mcbits/encrypt.c"
   HEAP32[$124>>2] = $120; //@line 49 "mcbits/encrypt.c"
   $125 = $3; //@line 51 "mcbits/encrypt.c"
   $126 = (($9) + ($125<<3)|0); //@line 51 "mcbits/encrypt.c"
   $127 = $126; //@line 51 "mcbits/encrypt.c"
   $128 = $127; //@line 51 "mcbits/encrypt.c"
   $129 = HEAP32[$128>>2]|0; //@line 51 "mcbits/encrypt.c"
   $130 = (($127) + 4)|0; //@line 51 "mcbits/encrypt.c"
   $131 = $130; //@line 51 "mcbits/encrypt.c"
   $132 = HEAP32[$131>>2]|0; //@line 51 "mcbits/encrypt.c"
   $133 = $8; //@line 51 "mcbits/encrypt.c"
   $134 = $133; //@line 51 "mcbits/encrypt.c"
   $135 = HEAP32[$134>>2]|0; //@line 51 "mcbits/encrypt.c"
   $136 = (($133) + 4)|0; //@line 51 "mcbits/encrypt.c"
   $137 = $136; //@line 51 "mcbits/encrypt.c"
   $138 = HEAP32[$137>>2]|0; //@line 51 "mcbits/encrypt.c"
   $139 = $129 & $135; //@line 51 "mcbits/encrypt.c"
   $140 = $132 & $138; //@line 51 "mcbits/encrypt.c"
   $141 = $2; //@line 51 "mcbits/encrypt.c"
   $142 = (($6) + ($141<<3)|0); //@line 51 "mcbits/encrypt.c"
   $143 = $142; //@line 51 "mcbits/encrypt.c"
   $144 = $143; //@line 51 "mcbits/encrypt.c"
   $145 = HEAP32[$144>>2]|0; //@line 51 "mcbits/encrypt.c"
   $146 = (($143) + 4)|0; //@line 51 "mcbits/encrypt.c"
   $147 = $146; //@line 51 "mcbits/encrypt.c"
   $148 = HEAP32[$147>>2]|0; //@line 51 "mcbits/encrypt.c"
   $149 = $145 | $139; //@line 51 "mcbits/encrypt.c"
   $150 = $148 | $140; //@line 51 "mcbits/encrypt.c"
   $151 = $142; //@line 51 "mcbits/encrypt.c"
   $152 = $151; //@line 51 "mcbits/encrypt.c"
   HEAP32[$152>>2] = $149; //@line 51 "mcbits/encrypt.c"
   $153 = (($151) + 4)|0; //@line 51 "mcbits/encrypt.c"
   $154 = $153; //@line 51 "mcbits/encrypt.c"
   HEAP32[$154>>2] = $150; //@line 51 "mcbits/encrypt.c"
   $155 = $3; //@line 44 "mcbits/encrypt.c"
   $156 = (($155) + 1)|0; //@line 44 "mcbits/encrypt.c"
   $3 = $156; //@line 44 "mcbits/encrypt.c"
  }
  $157 = (($76) + 1)|0; //@line 40 "mcbits/encrypt.c"
  $2 = $157; //@line 40 "mcbits/encrypt.c"
 }
 $2 = 0; //@line 55 "mcbits/encrypt.c"
 while(1) {
  $158 = $2; //@line 55 "mcbits/encrypt.c"
  $159 = ($158|0)<(64); //@line 55 "mcbits/encrypt.c"
  if (!($159)) {
   break;
  }
  $160 = $1; //@line 56 "mcbits/encrypt.c"
  $161 = $2; //@line 56 "mcbits/encrypt.c"
  $162 = $161<<3; //@line 56 "mcbits/encrypt.c"
  $163 = (($160) + ($162)|0); //@line 56 "mcbits/encrypt.c"
  $164 = $2; //@line 56 "mcbits/encrypt.c"
  $165 = (($6) + ($164<<3)|0); //@line 56 "mcbits/encrypt.c"
  $166 = $165; //@line 56 "mcbits/encrypt.c"
  $167 = $166; //@line 56 "mcbits/encrypt.c"
  $168 = HEAP32[$167>>2]|0; //@line 56 "mcbits/encrypt.c"
  $169 = (($166) + 4)|0; //@line 56 "mcbits/encrypt.c"
  $170 = $169; //@line 56 "mcbits/encrypt.c"
  $171 = HEAP32[$170>>2]|0; //@line 56 "mcbits/encrypt.c"
  _store8($163,$168,$171); //@line 56 "mcbits/encrypt.c"
  $172 = $2; //@line 55 "mcbits/encrypt.c"
  $173 = (($172) + 1)|0; //@line 55 "mcbits/encrypt.c"
  $2 = $173; //@line 55 "mcbits/encrypt.c"
 }
 STACKTOP = sp;return; //@line 57 "mcbits/encrypt.c"
}
function _syndrome($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0;
 var $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, dest = 0, label = 0, sp = 0, sp_a = 0, src = 0, stop = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 960|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(960|0);
 $11 = sp_a + 488|0;
 $12 = sp_a + 64|0;
 $13 = sp_a;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $15 = $5; //@line 63 "mcbits/encrypt.c"
 $16 = ((($15)) + 93|0); //@line 63 "mcbits/encrypt.c"
 $9 = $16; //@line 63 "mcbits/encrypt.c"
 $10 = 53; //@line 64 "mcbits/encrypt.c"
 $17 = $3; //@line 74 "mcbits/encrypt.c"
 $18 = $5; //@line 74 "mcbits/encrypt.c"
 dest=$17; src=$18; stop=dest+93|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0)); //@line 74 "mcbits/encrypt.c"
 $19 = ((($11)) + 416|0); //@line 76 "mcbits/encrypt.c"
 $20 = $19; //@line 76 "mcbits/encrypt.c"
 $21 = $20; //@line 76 "mcbits/encrypt.c"
 HEAP32[$21>>2] = 0; //@line 76 "mcbits/encrypt.c"
 $22 = (($20) + 4)|0; //@line 76 "mcbits/encrypt.c"
 $23 = $22; //@line 76 "mcbits/encrypt.c"
 HEAP32[$23>>2] = 0; //@line 76 "mcbits/encrypt.c"
 $24 = $9; //@line 77 "mcbits/encrypt.c"
 _memcpy(($11|0),($24|0),419)|0; //@line 77 "mcbits/encrypt.c"
 $6 = 0; //@line 79 "mcbits/encrypt.c"
 while(1) {
  $25 = $6; //@line 79 "mcbits/encrypt.c"
  $26 = ($25|0)<(744); //@line 79 "mcbits/encrypt.c"
  if (!($26)) {
   break;
  }
  $8 = 0; //@line 81 "mcbits/encrypt.c"
  while(1) {
   $27 = $8; //@line 81 "mcbits/encrypt.c"
   $28 = ($27|0)<(8); //@line 81 "mcbits/encrypt.c"
   if (!($28)) {
    break;
   }
   $29 = ((($12)) + 416|0); //@line 83 "mcbits/encrypt.c"
   $30 = $29; //@line 83 "mcbits/encrypt.c"
   $31 = $30; //@line 83 "mcbits/encrypt.c"
   HEAP32[$31>>2] = 0; //@line 83 "mcbits/encrypt.c"
   $32 = (($30) + 4)|0; //@line 83 "mcbits/encrypt.c"
   $33 = $32; //@line 83 "mcbits/encrypt.c"
   HEAP32[$33>>2] = 0; //@line 83 "mcbits/encrypt.c"
   $34 = $4; //@line 84 "mcbits/encrypt.c"
   $35 = $6; //@line 84 "mcbits/encrypt.c"
   $36 = $8; //@line 84 "mcbits/encrypt.c"
   $37 = (($35) + ($36))|0; //@line 84 "mcbits/encrypt.c"
   $38 = ($37*419)|0; //@line 84 "mcbits/encrypt.c"
   $39 = (($34) + ($38)|0); //@line 84 "mcbits/encrypt.c"
   _memcpy(($12|0),($39|0),419)|0; //@line 84 "mcbits/encrypt.c"
   $40 = $8; //@line 86 "mcbits/encrypt.c"
   $41 = (($13) + ($40<<3)|0); //@line 86 "mcbits/encrypt.c"
   $42 = $41; //@line 86 "mcbits/encrypt.c"
   $43 = $42; //@line 86 "mcbits/encrypt.c"
   HEAP32[$43>>2] = 0; //@line 86 "mcbits/encrypt.c"
   $44 = (($42) + 4)|0; //@line 86 "mcbits/encrypt.c"
   $45 = $44; //@line 86 "mcbits/encrypt.c"
   HEAP32[$45>>2] = 0; //@line 86 "mcbits/encrypt.c"
   $7 = 0; //@line 87 "mcbits/encrypt.c"
   while(1) {
    $46 = $7; //@line 87 "mcbits/encrypt.c"
    $47 = ($46|0)<(53); //@line 87 "mcbits/encrypt.c"
    if (!($47)) {
     break;
    }
    $48 = $7; //@line 88 "mcbits/encrypt.c"
    $49 = (($11) + ($48<<3)|0); //@line 88 "mcbits/encrypt.c"
    $50 = $49; //@line 88 "mcbits/encrypt.c"
    $51 = $50; //@line 88 "mcbits/encrypt.c"
    $52 = HEAP32[$51>>2]|0; //@line 88 "mcbits/encrypt.c"
    $53 = (($50) + 4)|0; //@line 88 "mcbits/encrypt.c"
    $54 = $53; //@line 88 "mcbits/encrypt.c"
    $55 = HEAP32[$54>>2]|0; //@line 88 "mcbits/encrypt.c"
    $56 = $7; //@line 88 "mcbits/encrypt.c"
    $57 = (($12) + ($56<<3)|0); //@line 88 "mcbits/encrypt.c"
    $58 = $57; //@line 88 "mcbits/encrypt.c"
    $59 = $58; //@line 88 "mcbits/encrypt.c"
    $60 = HEAP32[$59>>2]|0; //@line 88 "mcbits/encrypt.c"
    $61 = (($58) + 4)|0; //@line 88 "mcbits/encrypt.c"
    $62 = $61; //@line 88 "mcbits/encrypt.c"
    $63 = HEAP32[$62>>2]|0; //@line 88 "mcbits/encrypt.c"
    $64 = $52 & $60; //@line 88 "mcbits/encrypt.c"
    $65 = $55 & $63; //@line 88 "mcbits/encrypt.c"
    $66 = $8; //@line 88 "mcbits/encrypt.c"
    $67 = (($13) + ($66<<3)|0); //@line 88 "mcbits/encrypt.c"
    $68 = $67; //@line 88 "mcbits/encrypt.c"
    $69 = $68; //@line 88 "mcbits/encrypt.c"
    $70 = HEAP32[$69>>2]|0; //@line 88 "mcbits/encrypt.c"
    $71 = (($68) + 4)|0; //@line 88 "mcbits/encrypt.c"
    $72 = $71; //@line 88 "mcbits/encrypt.c"
    $73 = HEAP32[$72>>2]|0; //@line 88 "mcbits/encrypt.c"
    $74 = $70 ^ $64; //@line 88 "mcbits/encrypt.c"
    $75 = $73 ^ $65; //@line 88 "mcbits/encrypt.c"
    $76 = $67; //@line 88 "mcbits/encrypt.c"
    $77 = $76; //@line 88 "mcbits/encrypt.c"
    HEAP32[$77>>2] = $74; //@line 88 "mcbits/encrypt.c"
    $78 = (($76) + 4)|0; //@line 88 "mcbits/encrypt.c"
    $79 = $78; //@line 88 "mcbits/encrypt.c"
    HEAP32[$79>>2] = $75; //@line 88 "mcbits/encrypt.c"
    $80 = $7; //@line 87 "mcbits/encrypt.c"
    $81 = (($80) + 1)|0; //@line 87 "mcbits/encrypt.c"
    $7 = $81; //@line 87 "mcbits/encrypt.c"
   }
   $82 = $8; //@line 81 "mcbits/encrypt.c"
   $83 = (($82) + 1)|0; //@line 81 "mcbits/encrypt.c"
   $8 = $83; //@line 81 "mcbits/encrypt.c"
  }
  $14 = 0; //@line 91 "mcbits/encrypt.c"
  $8 = 7; //@line 93 "mcbits/encrypt.c"
  while(1) {
   $84 = $8; //@line 93 "mcbits/encrypt.c"
   $85 = ($84|0)>=(0); //@line 93 "mcbits/encrypt.c"
   if (!($85)) {
    break;
   }
   $86 = $8; //@line 93 "mcbits/encrypt.c"
   $87 = (($13) + ($86<<3)|0); //@line 93 "mcbits/encrypt.c"
   $88 = $87; //@line 93 "mcbits/encrypt.c"
   $89 = $88; //@line 93 "mcbits/encrypt.c"
   $90 = HEAP32[$89>>2]|0; //@line 93 "mcbits/encrypt.c"
   $91 = (($88) + 4)|0; //@line 93 "mcbits/encrypt.c"
   $92 = $91; //@line 93 "mcbits/encrypt.c"
   $93 = HEAP32[$92>>2]|0; //@line 93 "mcbits/encrypt.c"
   $94 = $8; //@line 93 "mcbits/encrypt.c"
   $95 = (($13) + ($94<<3)|0); //@line 93 "mcbits/encrypt.c"
   $96 = $95; //@line 93 "mcbits/encrypt.c"
   $97 = $96; //@line 93 "mcbits/encrypt.c"
   $98 = HEAP32[$97>>2]|0; //@line 93 "mcbits/encrypt.c"
   $99 = (($96) + 4)|0; //@line 93 "mcbits/encrypt.c"
   $100 = $99; //@line 93 "mcbits/encrypt.c"
   $101 = HEAP32[$100>>2]|0; //@line 93 "mcbits/encrypt.c"
   $102 = $98 ^ $93; //@line 93 "mcbits/encrypt.c"
   $103 = $95; //@line 93 "mcbits/encrypt.c"
   $104 = $103; //@line 93 "mcbits/encrypt.c"
   HEAP32[$104>>2] = $102; //@line 93 "mcbits/encrypt.c"
   $105 = (($103) + 4)|0; //@line 93 "mcbits/encrypt.c"
   $106 = $105; //@line 93 "mcbits/encrypt.c"
   HEAP32[$106>>2] = $101; //@line 93 "mcbits/encrypt.c"
   $107 = $8; //@line 93 "mcbits/encrypt.c"
   $108 = (($107) + -1)|0; //@line 93 "mcbits/encrypt.c"
   $8 = $108; //@line 93 "mcbits/encrypt.c"
  }
  $8 = 7; //@line 94 "mcbits/encrypt.c"
  while(1) {
   $109 = $8; //@line 94 "mcbits/encrypt.c"
   $110 = ($109|0)>=(0); //@line 94 "mcbits/encrypt.c"
   if (!($110)) {
    break;
   }
   $111 = $8; //@line 94 "mcbits/encrypt.c"
   $112 = (($13) + ($111<<3)|0); //@line 94 "mcbits/encrypt.c"
   $113 = $112; //@line 94 "mcbits/encrypt.c"
   $114 = $113; //@line 94 "mcbits/encrypt.c"
   $115 = HEAP32[$114>>2]|0; //@line 94 "mcbits/encrypt.c"
   $116 = (($113) + 4)|0; //@line 94 "mcbits/encrypt.c"
   $117 = $116; //@line 94 "mcbits/encrypt.c"
   $118 = HEAP32[$117>>2]|0; //@line 94 "mcbits/encrypt.c"
   $119 = (_bitshift64Lshr(($115|0),($118|0),16)|0); //@line 94 "mcbits/encrypt.c"
   $120 = tempRet0; //@line 94 "mcbits/encrypt.c"
   $121 = $8; //@line 94 "mcbits/encrypt.c"
   $122 = (($13) + ($121<<3)|0); //@line 94 "mcbits/encrypt.c"
   $123 = $122; //@line 94 "mcbits/encrypt.c"
   $124 = $123; //@line 94 "mcbits/encrypt.c"
   $125 = HEAP32[$124>>2]|0; //@line 94 "mcbits/encrypt.c"
   $126 = (($123) + 4)|0; //@line 94 "mcbits/encrypt.c"
   $127 = $126; //@line 94 "mcbits/encrypt.c"
   $128 = HEAP32[$127>>2]|0; //@line 94 "mcbits/encrypt.c"
   $129 = $125 ^ $119; //@line 94 "mcbits/encrypt.c"
   $130 = $128 ^ $120; //@line 94 "mcbits/encrypt.c"
   $131 = $122; //@line 94 "mcbits/encrypt.c"
   $132 = $131; //@line 94 "mcbits/encrypt.c"
   HEAP32[$132>>2] = $129; //@line 94 "mcbits/encrypt.c"
   $133 = (($131) + 4)|0; //@line 94 "mcbits/encrypt.c"
   $134 = $133; //@line 94 "mcbits/encrypt.c"
   HEAP32[$134>>2] = $130; //@line 94 "mcbits/encrypt.c"
   $135 = $8; //@line 94 "mcbits/encrypt.c"
   $136 = (($135) + -1)|0; //@line 94 "mcbits/encrypt.c"
   $8 = $136; //@line 94 "mcbits/encrypt.c"
  }
  $8 = 7; //@line 95 "mcbits/encrypt.c"
  while(1) {
   $137 = $8; //@line 95 "mcbits/encrypt.c"
   $138 = ($137|0)>=(0); //@line 95 "mcbits/encrypt.c"
   if (!($138)) {
    break;
   }
   $139 = $8; //@line 95 "mcbits/encrypt.c"
   $140 = (($13) + ($139<<3)|0); //@line 95 "mcbits/encrypt.c"
   $141 = $140; //@line 95 "mcbits/encrypt.c"
   $142 = $141; //@line 95 "mcbits/encrypt.c"
   $143 = HEAP32[$142>>2]|0; //@line 95 "mcbits/encrypt.c"
   $144 = (($141) + 4)|0; //@line 95 "mcbits/encrypt.c"
   $145 = $144; //@line 95 "mcbits/encrypt.c"
   $146 = HEAP32[$145>>2]|0; //@line 95 "mcbits/encrypt.c"
   $147 = (_bitshift64Lshr(($143|0),($146|0),8)|0); //@line 95 "mcbits/encrypt.c"
   $148 = tempRet0; //@line 95 "mcbits/encrypt.c"
   $149 = $8; //@line 95 "mcbits/encrypt.c"
   $150 = (($13) + ($149<<3)|0); //@line 95 "mcbits/encrypt.c"
   $151 = $150; //@line 95 "mcbits/encrypt.c"
   $152 = $151; //@line 95 "mcbits/encrypt.c"
   $153 = HEAP32[$152>>2]|0; //@line 95 "mcbits/encrypt.c"
   $154 = (($151) + 4)|0; //@line 95 "mcbits/encrypt.c"
   $155 = $154; //@line 95 "mcbits/encrypt.c"
   $156 = HEAP32[$155>>2]|0; //@line 95 "mcbits/encrypt.c"
   $157 = $153 ^ $147; //@line 95 "mcbits/encrypt.c"
   $158 = $156 ^ $148; //@line 95 "mcbits/encrypt.c"
   $159 = $150; //@line 95 "mcbits/encrypt.c"
   $160 = $159; //@line 95 "mcbits/encrypt.c"
   HEAP32[$160>>2] = $157; //@line 95 "mcbits/encrypt.c"
   $161 = (($159) + 4)|0; //@line 95 "mcbits/encrypt.c"
   $162 = $161; //@line 95 "mcbits/encrypt.c"
   HEAP32[$162>>2] = $158; //@line 95 "mcbits/encrypt.c"
   $163 = $8; //@line 95 "mcbits/encrypt.c"
   $164 = (($163) + -1)|0; //@line 95 "mcbits/encrypt.c"
   $8 = $164; //@line 95 "mcbits/encrypt.c"
  }
  $8 = 7; //@line 96 "mcbits/encrypt.c"
  while(1) {
   $165 = $8; //@line 96 "mcbits/encrypt.c"
   $166 = ($165|0)>=(0); //@line 96 "mcbits/encrypt.c"
   if (!($166)) {
    break;
   }
   $167 = $8; //@line 96 "mcbits/encrypt.c"
   $168 = (($13) + ($167<<3)|0); //@line 96 "mcbits/encrypt.c"
   $169 = $168; //@line 96 "mcbits/encrypt.c"
   $170 = $169; //@line 96 "mcbits/encrypt.c"
   $171 = HEAP32[$170>>2]|0; //@line 96 "mcbits/encrypt.c"
   $172 = (($169) + 4)|0; //@line 96 "mcbits/encrypt.c"
   $173 = $172; //@line 96 "mcbits/encrypt.c"
   $174 = HEAP32[$173>>2]|0; //@line 96 "mcbits/encrypt.c"
   $175 = (_bitshift64Lshr(($171|0),($174|0),4)|0); //@line 96 "mcbits/encrypt.c"
   $176 = tempRet0; //@line 96 "mcbits/encrypt.c"
   $177 = $8; //@line 96 "mcbits/encrypt.c"
   $178 = (($13) + ($177<<3)|0); //@line 96 "mcbits/encrypt.c"
   $179 = $178; //@line 96 "mcbits/encrypt.c"
   $180 = $179; //@line 96 "mcbits/encrypt.c"
   $181 = HEAP32[$180>>2]|0; //@line 96 "mcbits/encrypt.c"
   $182 = (($179) + 4)|0; //@line 96 "mcbits/encrypt.c"
   $183 = $182; //@line 96 "mcbits/encrypt.c"
   $184 = HEAP32[$183>>2]|0; //@line 96 "mcbits/encrypt.c"
   $185 = $181 ^ $175; //@line 96 "mcbits/encrypt.c"
   $186 = $184 ^ $176; //@line 96 "mcbits/encrypt.c"
   $187 = $178; //@line 96 "mcbits/encrypt.c"
   $188 = $187; //@line 96 "mcbits/encrypt.c"
   HEAP32[$188>>2] = $185; //@line 96 "mcbits/encrypt.c"
   $189 = (($187) + 4)|0; //@line 96 "mcbits/encrypt.c"
   $190 = $189; //@line 96 "mcbits/encrypt.c"
   HEAP32[$190>>2] = $186; //@line 96 "mcbits/encrypt.c"
   $191 = $8; //@line 96 "mcbits/encrypt.c"
   $192 = (($191) + -1)|0; //@line 96 "mcbits/encrypt.c"
   $8 = $192; //@line 96 "mcbits/encrypt.c"
  }
  $8 = 7; //@line 97 "mcbits/encrypt.c"
  while(1) {
   $193 = $8; //@line 97 "mcbits/encrypt.c"
   $194 = ($193|0)>=(0); //@line 97 "mcbits/encrypt.c"
   $195 = $14;
   $196 = $195&255;
   if (!($194)) {
    break;
   }
   $197 = $196 << 1; //@line 99 "mcbits/encrypt.c"
   $198 = $197&255; //@line 99 "mcbits/encrypt.c"
   $14 = $198; //@line 99 "mcbits/encrypt.c"
   $199 = $8; //@line 100 "mcbits/encrypt.c"
   $200 = (($13) + ($199<<3)|0); //@line 100 "mcbits/encrypt.c"
   $201 = $200; //@line 100 "mcbits/encrypt.c"
   $202 = $201; //@line 100 "mcbits/encrypt.c"
   $203 = HEAP32[$202>>2]|0; //@line 100 "mcbits/encrypt.c"
   $204 = (($201) + 4)|0; //@line 100 "mcbits/encrypt.c"
   $205 = $204; //@line 100 "mcbits/encrypt.c"
   $206 = HEAP32[$205>>2]|0; //@line 100 "mcbits/encrypt.c"
   $207 = $203 & 15; //@line 100 "mcbits/encrypt.c"
   $208 = 27030 >> $207; //@line 100 "mcbits/encrypt.c"
   $209 = $208 & 1; //@line 100 "mcbits/encrypt.c"
   $210 = $14; //@line 100 "mcbits/encrypt.c"
   $211 = $210&255; //@line 100 "mcbits/encrypt.c"
   $212 = $211 | $209; //@line 100 "mcbits/encrypt.c"
   $213 = $212&255; //@line 100 "mcbits/encrypt.c"
   $14 = $213; //@line 100 "mcbits/encrypt.c"
   $214 = $8; //@line 97 "mcbits/encrypt.c"
   $215 = (($214) + -1)|0; //@line 97 "mcbits/encrypt.c"
   $8 = $215; //@line 97 "mcbits/encrypt.c"
  }
  $216 = $3; //@line 103 "mcbits/encrypt.c"
  $217 = $6; //@line 103 "mcbits/encrypt.c"
  $218 = (($217|0) / 8)&-1; //@line 103 "mcbits/encrypt.c"
  $219 = (($216) + ($218)|0); //@line 103 "mcbits/encrypt.c"
  $220 = HEAP8[$219>>0]|0; //@line 103 "mcbits/encrypt.c"
  $221 = $220&255; //@line 103 "mcbits/encrypt.c"
  $222 = $221 ^ $196; //@line 103 "mcbits/encrypt.c"
  $223 = $222&255; //@line 103 "mcbits/encrypt.c"
  HEAP8[$219>>0] = $223; //@line 103 "mcbits/encrypt.c"
  $224 = $6; //@line 79 "mcbits/encrypt.c"
  $225 = (($224) + 8)|0; //@line 79 "mcbits/encrypt.c"
  $6 = $225; //@line 79 "mcbits/encrypt.c"
 }
 STACKTOP = sp;return; //@line 105 "mcbits/encrypt.c"
}
function _encrypt_mcbits($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = $4; //@line 109 "mcbits/encrypt.c"
 _gen_e($6); //@line 109 "mcbits/encrypt.c"
 $7 = $3; //@line 110 "mcbits/encrypt.c"
 $8 = $5; //@line 110 "mcbits/encrypt.c"
 $9 = $4; //@line 110 "mcbits/encrypt.c"
 _syndrome($7,$8,$9); //@line 110 "mcbits/encrypt.c"
 STACKTOP = sp;return; //@line 111 "mcbits/encrypt.c"
}
function _radix_conversions($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 var sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = 0; //@line 24 "mcbits/fft.c"
 while(1) {
  $5 = $3; //@line 24 "mcbits/fft.c"
  $6 = ($5|0)<=(4); //@line 24 "mcbits/fft.c"
  if (!($6)) {
   break;
  }
  $2 = 0; //@line 26 "mcbits/fft.c"
  while(1) {
   $7 = $2; //@line 26 "mcbits/fft.c"
   $8 = ($7|0)<(12); //@line 26 "mcbits/fft.c"
   if (!($8)) {
    break;
   }
   $4 = 4; //@line 27 "mcbits/fft.c"
   while(1) {
    $9 = $4; //@line 27 "mcbits/fft.c"
    $10 = $3; //@line 27 "mcbits/fft.c"
    $11 = ($9|0)>=($10|0); //@line 27 "mcbits/fft.c"
    if (!($11)) {
     break;
    }
    $12 = $1; //@line 29 "mcbits/fft.c"
    $13 = $2; //@line 29 "mcbits/fft.c"
    $14 = (($12) + ($13<<3)|0); //@line 29 "mcbits/fft.c"
    $15 = $14; //@line 29 "mcbits/fft.c"
    $16 = $15; //@line 29 "mcbits/fft.c"
    $17 = HEAP32[$16>>2]|0; //@line 29 "mcbits/fft.c"
    $18 = (($15) + 4)|0; //@line 29 "mcbits/fft.c"
    $19 = $18; //@line 29 "mcbits/fft.c"
    $20 = HEAP32[$19>>2]|0; //@line 29 "mcbits/fft.c"
    $21 = $4; //@line 29 "mcbits/fft.c"
    $22 = (200 + ($21<<4)|0); //@line 29 "mcbits/fft.c"
    $23 = $22; //@line 29 "mcbits/fft.c"
    $24 = $23; //@line 29 "mcbits/fft.c"
    $25 = HEAP32[$24>>2]|0; //@line 29 "mcbits/fft.c"
    $26 = (($23) + 4)|0; //@line 29 "mcbits/fft.c"
    $27 = $26; //@line 29 "mcbits/fft.c"
    $28 = HEAP32[$27>>2]|0; //@line 29 "mcbits/fft.c"
    $29 = $17 & $25; //@line 29 "mcbits/fft.c"
    $30 = $20 & $28; //@line 29 "mcbits/fft.c"
    $31 = $4; //@line 29 "mcbits/fft.c"
    $32 = 1 << $31; //@line 29 "mcbits/fft.c"
    $33 = (_bitshift64Lshr(($29|0),($30|0),($32|0))|0); //@line 29 "mcbits/fft.c"
    $34 = tempRet0; //@line 29 "mcbits/fft.c"
    $35 = $1; //@line 29 "mcbits/fft.c"
    $36 = $2; //@line 29 "mcbits/fft.c"
    $37 = (($35) + ($36<<3)|0); //@line 29 "mcbits/fft.c"
    $38 = $37; //@line 29 "mcbits/fft.c"
    $39 = $38; //@line 29 "mcbits/fft.c"
    $40 = HEAP32[$39>>2]|0; //@line 29 "mcbits/fft.c"
    $41 = (($38) + 4)|0; //@line 29 "mcbits/fft.c"
    $42 = $41; //@line 29 "mcbits/fft.c"
    $43 = HEAP32[$42>>2]|0; //@line 29 "mcbits/fft.c"
    $44 = $40 ^ $33; //@line 29 "mcbits/fft.c"
    $45 = $43 ^ $34; //@line 29 "mcbits/fft.c"
    $46 = $37; //@line 29 "mcbits/fft.c"
    $47 = $46; //@line 29 "mcbits/fft.c"
    HEAP32[$47>>2] = $44; //@line 29 "mcbits/fft.c"
    $48 = (($46) + 4)|0; //@line 29 "mcbits/fft.c"
    $49 = $48; //@line 29 "mcbits/fft.c"
    HEAP32[$49>>2] = $45; //@line 29 "mcbits/fft.c"
    $50 = $1; //@line 30 "mcbits/fft.c"
    $51 = $2; //@line 30 "mcbits/fft.c"
    $52 = (($50) + ($51<<3)|0); //@line 30 "mcbits/fft.c"
    $53 = $52; //@line 30 "mcbits/fft.c"
    $54 = $53; //@line 30 "mcbits/fft.c"
    $55 = HEAP32[$54>>2]|0; //@line 30 "mcbits/fft.c"
    $56 = (($53) + 4)|0; //@line 30 "mcbits/fft.c"
    $57 = $56; //@line 30 "mcbits/fft.c"
    $58 = HEAP32[$57>>2]|0; //@line 30 "mcbits/fft.c"
    $59 = $4; //@line 30 "mcbits/fft.c"
    $60 = (200 + ($59<<4)|0); //@line 30 "mcbits/fft.c"
    $61 = ((($60)) + 8|0); //@line 30 "mcbits/fft.c"
    $62 = $61; //@line 30 "mcbits/fft.c"
    $63 = $62; //@line 30 "mcbits/fft.c"
    $64 = HEAP32[$63>>2]|0; //@line 30 "mcbits/fft.c"
    $65 = (($62) + 4)|0; //@line 30 "mcbits/fft.c"
    $66 = $65; //@line 30 "mcbits/fft.c"
    $67 = HEAP32[$66>>2]|0; //@line 30 "mcbits/fft.c"
    $68 = $55 & $64; //@line 30 "mcbits/fft.c"
    $69 = $58 & $67; //@line 30 "mcbits/fft.c"
    $70 = $4; //@line 30 "mcbits/fft.c"
    $71 = 1 << $70; //@line 30 "mcbits/fft.c"
    $72 = (_bitshift64Lshr(($68|0),($69|0),($71|0))|0); //@line 30 "mcbits/fft.c"
    $73 = tempRet0; //@line 30 "mcbits/fft.c"
    $74 = $1; //@line 30 "mcbits/fft.c"
    $75 = $2; //@line 30 "mcbits/fft.c"
    $76 = (($74) + ($75<<3)|0); //@line 30 "mcbits/fft.c"
    $77 = $76; //@line 30 "mcbits/fft.c"
    $78 = $77; //@line 30 "mcbits/fft.c"
    $79 = HEAP32[$78>>2]|0; //@line 30 "mcbits/fft.c"
    $80 = (($77) + 4)|0; //@line 30 "mcbits/fft.c"
    $81 = $80; //@line 30 "mcbits/fft.c"
    $82 = HEAP32[$81>>2]|0; //@line 30 "mcbits/fft.c"
    $83 = $79 ^ $72; //@line 30 "mcbits/fft.c"
    $84 = $82 ^ $73; //@line 30 "mcbits/fft.c"
    $85 = $76; //@line 30 "mcbits/fft.c"
    $86 = $85; //@line 30 "mcbits/fft.c"
    HEAP32[$86>>2] = $83; //@line 30 "mcbits/fft.c"
    $87 = (($85) + 4)|0; //@line 30 "mcbits/fft.c"
    $88 = $87; //@line 30 "mcbits/fft.c"
    HEAP32[$88>>2] = $84; //@line 30 "mcbits/fft.c"
    $89 = $4; //@line 27 "mcbits/fft.c"
    $90 = (($89) + -1)|0; //@line 27 "mcbits/fft.c"
    $4 = $90; //@line 27 "mcbits/fft.c"
   }
   $91 = $2; //@line 26 "mcbits/fft.c"
   $92 = (($91) + 1)|0; //@line 26 "mcbits/fft.c"
   $2 = $92; //@line 26 "mcbits/fft.c"
  }
  $93 = $1; //@line 33 "mcbits/fft.c"
  $94 = $1; //@line 33 "mcbits/fft.c"
  $95 = $3; //@line 33 "mcbits/fft.c"
  $96 = (280 + (($95*96)|0)|0); //@line 33 "mcbits/fft.c"
  _vec_mul($93,$94,$96); //@line 33 "mcbits/fft.c"
  $97 = $3; //@line 24 "mcbits/fft.c"
  $98 = (($97) + 1)|0; //@line 24 "mcbits/fft.c"
  $3 = $98; //@line 24 "mcbits/fft.c"
 }
 STACKTOP = sp;return; //@line 35 "mcbits/fft.c"
}
function _butterflies($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 6192|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(6192|0);
 $9 = sp_a + 6056|0;
 $10 = sp_a + 8|0;
 $11 = sp_a;
 $2 = $0;
 $3 = $1;
 _memcpy(($10|0),(760|0),6048)|0; //@line 42 "mcbits/fft.c"
 $12 = $11; //@line 47 "mcbits/fft.c"
 $13 = $12; //@line 47 "mcbits/fft.c"
 HEAP32[$13>>2] = 0; //@line 47 "mcbits/fft.c"
 $14 = (($12) + 4)|0; //@line 47 "mcbits/fft.c"
 $15 = $14; //@line 47 "mcbits/fft.c"
 HEAP32[$15>>2] = 0; //@line 47 "mcbits/fft.c"
 $5 = 0; //@line 63 "mcbits/fft.c"
 while(1) {
  $16 = $5; //@line 63 "mcbits/fft.c"
  $17 = ($16|0)<(64); //@line 63 "mcbits/fft.c"
  $4 = 0;
  if (!($17)) {
   break;
  }
  while(1) {
   $18 = $4; //@line 64 "mcbits/fft.c"
   $19 = ($18|0)<(12); //@line 64 "mcbits/fft.c"
   if (!($19)) {
    break;
   }
   $20 = $3; //@line 66 "mcbits/fft.c"
   $21 = $4; //@line 66 "mcbits/fft.c"
   $22 = (($20) + ($21<<3)|0); //@line 66 "mcbits/fft.c"
   $23 = $22; //@line 66 "mcbits/fft.c"
   $24 = $23; //@line 66 "mcbits/fft.c"
   $25 = HEAP32[$24>>2]|0; //@line 66 "mcbits/fft.c"
   $26 = (($23) + 4)|0; //@line 66 "mcbits/fft.c"
   $27 = $26; //@line 66 "mcbits/fft.c"
   $28 = HEAP32[$27>>2]|0; //@line 66 "mcbits/fft.c"
   $29 = $5; //@line 66 "mcbits/fft.c"
   $30 = (15285 + ($29)|0); //@line 66 "mcbits/fft.c"
   $31 = HEAP8[$30>>0]|0; //@line 66 "mcbits/fft.c"
   $32 = $31&255; //@line 66 "mcbits/fft.c"
   $33 = (_bitshift64Lshr(($25|0),($28|0),($32|0))|0); //@line 66 "mcbits/fft.c"
   $34 = tempRet0; //@line 66 "mcbits/fft.c"
   $35 = $33 & 1; //@line 66 "mcbits/fft.c"
   $36 = $2; //@line 66 "mcbits/fft.c"
   $37 = $5; //@line 66 "mcbits/fft.c"
   $38 = (($36) + (($37*96)|0)|0); //@line 66 "mcbits/fft.c"
   $39 = $4; //@line 66 "mcbits/fft.c"
   $40 = (($38) + ($39<<3)|0); //@line 66 "mcbits/fft.c"
   $41 = $40; //@line 66 "mcbits/fft.c"
   $42 = $41; //@line 66 "mcbits/fft.c"
   HEAP32[$42>>2] = $35; //@line 66 "mcbits/fft.c"
   $43 = (($41) + 4)|0; //@line 66 "mcbits/fft.c"
   $44 = $43; //@line 66 "mcbits/fft.c"
   HEAP32[$44>>2] = 0; //@line 66 "mcbits/fft.c"
   $45 = $2; //@line 67 "mcbits/fft.c"
   $46 = $5; //@line 67 "mcbits/fft.c"
   $47 = (($45) + (($46*96)|0)|0); //@line 67 "mcbits/fft.c"
   $48 = $4; //@line 67 "mcbits/fft.c"
   $49 = (($47) + ($48<<3)|0); //@line 67 "mcbits/fft.c"
   $50 = $49; //@line 67 "mcbits/fft.c"
   $51 = $50; //@line 67 "mcbits/fft.c"
   $52 = HEAP32[$51>>2]|0; //@line 67 "mcbits/fft.c"
   $53 = (($50) + 4)|0; //@line 67 "mcbits/fft.c"
   $54 = $53; //@line 67 "mcbits/fft.c"
   $55 = HEAP32[$54>>2]|0; //@line 67 "mcbits/fft.c"
   $56 = (_i64Subtract(0,0,($52|0),($55|0))|0); //@line 67 "mcbits/fft.c"
   $57 = tempRet0; //@line 67 "mcbits/fft.c"
   $58 = $2; //@line 67 "mcbits/fft.c"
   $59 = $5; //@line 67 "mcbits/fft.c"
   $60 = (($58) + (($59*96)|0)|0); //@line 67 "mcbits/fft.c"
   $61 = $4; //@line 67 "mcbits/fft.c"
   $62 = (($60) + ($61<<3)|0); //@line 67 "mcbits/fft.c"
   $63 = $62; //@line 67 "mcbits/fft.c"
   $64 = $63; //@line 67 "mcbits/fft.c"
   HEAP32[$64>>2] = $56; //@line 67 "mcbits/fft.c"
   $65 = (($63) + 4)|0; //@line 67 "mcbits/fft.c"
   $66 = $65; //@line 67 "mcbits/fft.c"
   HEAP32[$66>>2] = $57; //@line 67 "mcbits/fft.c"
   $67 = $4; //@line 64 "mcbits/fft.c"
   $68 = (($67) + 1)|0; //@line 64 "mcbits/fft.c"
   $4 = $68; //@line 64 "mcbits/fft.c"
  }
  $69 = $5; //@line 63 "mcbits/fft.c"
  $70 = (($69) + 1)|0; //@line 63 "mcbits/fft.c"
  $5 = $70; //@line 63 "mcbits/fft.c"
 }
 while(1) {
  $71 = $4; //@line 72 "mcbits/fft.c"
  $72 = ($71|0)<=(5); //@line 72 "mcbits/fft.c"
  if (!($72)) {
   break;
  }
  $73 = $4; //@line 74 "mcbits/fft.c"
  $74 = 1 << $73; //@line 74 "mcbits/fft.c"
  $7 = $74; //@line 74 "mcbits/fft.c"
  $5 = 0; //@line 76 "mcbits/fft.c"
  while(1) {
   $75 = $5; //@line 76 "mcbits/fft.c"
   $76 = ($75|0)<(64); //@line 76 "mcbits/fft.c"
   if (!($76)) {
    break;
   }
   $77 = $5; //@line 78 "mcbits/fft.c"
   $6 = $77; //@line 78 "mcbits/fft.c"
   while(1) {
    $78 = $6; //@line 78 "mcbits/fft.c"
    $79 = $5; //@line 78 "mcbits/fft.c"
    $80 = $7; //@line 78 "mcbits/fft.c"
    $81 = (($79) + ($80))|0; //@line 78 "mcbits/fft.c"
    $82 = ($78|0)<($81|0); //@line 78 "mcbits/fft.c"
    if (!($82)) {
     break;
    }
    $83 = $2; //@line 80 "mcbits/fft.c"
    $84 = $6; //@line 80 "mcbits/fft.c"
    $85 = $7; //@line 80 "mcbits/fft.c"
    $86 = (($84) + ($85))|0; //@line 80 "mcbits/fft.c"
    $87 = (($83) + (($86*96)|0)|0); //@line 80 "mcbits/fft.c"
    $88 = $11; //@line 80 "mcbits/fft.c"
    $89 = $88; //@line 80 "mcbits/fft.c"
    $90 = HEAP32[$89>>2]|0; //@line 80 "mcbits/fft.c"
    $91 = (($88) + 4)|0; //@line 80 "mcbits/fft.c"
    $92 = $91; //@line 80 "mcbits/fft.c"
    $93 = HEAP32[$92>>2]|0; //@line 80 "mcbits/fft.c"
    $94 = $6; //@line 80 "mcbits/fft.c"
    $95 = $5; //@line 80 "mcbits/fft.c"
    $96 = (($94) - ($95))|0; //@line 80 "mcbits/fft.c"
    $97 = ($96|0)<(0); //@line 80 "mcbits/fft.c"
    $98 = $97 << 31 >> 31; //@line 80 "mcbits/fft.c"
    $99 = (_i64Add(($90|0),($93|0),($96|0),($98|0))|0); //@line 80 "mcbits/fft.c"
    $100 = tempRet0; //@line 80 "mcbits/fft.c"
    $101 = (($10) + (($99*96)|0)|0); //@line 80 "mcbits/fft.c"
    _vec_mul($9,$87,$101); //@line 80 "mcbits/fft.c"
    $8 = 0; //@line 82 "mcbits/fft.c"
    while(1) {
     $102 = $8; //@line 82 "mcbits/fft.c"
     $103 = ($102|0)<(12); //@line 82 "mcbits/fft.c"
     if (!($103)) {
      break;
     }
     $104 = $8; //@line 82 "mcbits/fft.c"
     $105 = (($9) + ($104<<3)|0); //@line 82 "mcbits/fft.c"
     $106 = $105; //@line 82 "mcbits/fft.c"
     $107 = $106; //@line 82 "mcbits/fft.c"
     $108 = HEAP32[$107>>2]|0; //@line 82 "mcbits/fft.c"
     $109 = (($106) + 4)|0; //@line 82 "mcbits/fft.c"
     $110 = $109; //@line 82 "mcbits/fft.c"
     $111 = HEAP32[$110>>2]|0; //@line 82 "mcbits/fft.c"
     $112 = $2; //@line 82 "mcbits/fft.c"
     $113 = $6; //@line 82 "mcbits/fft.c"
     $114 = (($112) + (($113*96)|0)|0); //@line 82 "mcbits/fft.c"
     $115 = $8; //@line 82 "mcbits/fft.c"
     $116 = (($114) + ($115<<3)|0); //@line 82 "mcbits/fft.c"
     $117 = $116; //@line 82 "mcbits/fft.c"
     $118 = $117; //@line 82 "mcbits/fft.c"
     $119 = HEAP32[$118>>2]|0; //@line 82 "mcbits/fft.c"
     $120 = (($117) + 4)|0; //@line 82 "mcbits/fft.c"
     $121 = $120; //@line 82 "mcbits/fft.c"
     $122 = HEAP32[$121>>2]|0; //@line 82 "mcbits/fft.c"
     $123 = $119 ^ $108; //@line 82 "mcbits/fft.c"
     $124 = $122 ^ $111; //@line 82 "mcbits/fft.c"
     $125 = $116; //@line 82 "mcbits/fft.c"
     $126 = $125; //@line 82 "mcbits/fft.c"
     HEAP32[$126>>2] = $123; //@line 82 "mcbits/fft.c"
     $127 = (($125) + 4)|0; //@line 82 "mcbits/fft.c"
     $128 = $127; //@line 82 "mcbits/fft.c"
     HEAP32[$128>>2] = $124; //@line 82 "mcbits/fft.c"
     $129 = $8; //@line 82 "mcbits/fft.c"
     $130 = (($129) + 1)|0; //@line 82 "mcbits/fft.c"
     $8 = $130; //@line 82 "mcbits/fft.c"
    }
    $8 = 0; //@line 83 "mcbits/fft.c"
    while(1) {
     $131 = $8; //@line 83 "mcbits/fft.c"
     $132 = ($131|0)<(12); //@line 83 "mcbits/fft.c"
     if (!($132)) {
      break;
     }
     $133 = $2; //@line 83 "mcbits/fft.c"
     $134 = $6; //@line 83 "mcbits/fft.c"
     $135 = (($133) + (($134*96)|0)|0); //@line 83 "mcbits/fft.c"
     $136 = $8; //@line 83 "mcbits/fft.c"
     $137 = (($135) + ($136<<3)|0); //@line 83 "mcbits/fft.c"
     $138 = $137; //@line 83 "mcbits/fft.c"
     $139 = $138; //@line 83 "mcbits/fft.c"
     $140 = HEAP32[$139>>2]|0; //@line 83 "mcbits/fft.c"
     $141 = (($138) + 4)|0; //@line 83 "mcbits/fft.c"
     $142 = $141; //@line 83 "mcbits/fft.c"
     $143 = HEAP32[$142>>2]|0; //@line 83 "mcbits/fft.c"
     $144 = $2; //@line 83 "mcbits/fft.c"
     $145 = $6; //@line 83 "mcbits/fft.c"
     $146 = $7; //@line 83 "mcbits/fft.c"
     $147 = (($145) + ($146))|0; //@line 83 "mcbits/fft.c"
     $148 = (($144) + (($147*96)|0)|0); //@line 83 "mcbits/fft.c"
     $149 = $8; //@line 83 "mcbits/fft.c"
     $150 = (($148) + ($149<<3)|0); //@line 83 "mcbits/fft.c"
     $151 = $150; //@line 83 "mcbits/fft.c"
     $152 = $151; //@line 83 "mcbits/fft.c"
     $153 = HEAP32[$152>>2]|0; //@line 83 "mcbits/fft.c"
     $154 = (($151) + 4)|0; //@line 83 "mcbits/fft.c"
     $155 = $154; //@line 83 "mcbits/fft.c"
     $156 = HEAP32[$155>>2]|0; //@line 83 "mcbits/fft.c"
     $157 = $153 ^ $140; //@line 83 "mcbits/fft.c"
     $158 = $156 ^ $143; //@line 83 "mcbits/fft.c"
     $159 = $150; //@line 83 "mcbits/fft.c"
     $160 = $159; //@line 83 "mcbits/fft.c"
     HEAP32[$160>>2] = $157; //@line 83 "mcbits/fft.c"
     $161 = (($159) + 4)|0; //@line 83 "mcbits/fft.c"
     $162 = $161; //@line 83 "mcbits/fft.c"
     HEAP32[$162>>2] = $158; //@line 83 "mcbits/fft.c"
     $163 = $8; //@line 83 "mcbits/fft.c"
     $164 = (($163) + 1)|0; //@line 83 "mcbits/fft.c"
     $8 = $164; //@line 83 "mcbits/fft.c"
    }
    $165 = $6; //@line 78 "mcbits/fft.c"
    $166 = (($165) + 1)|0; //@line 78 "mcbits/fft.c"
    $6 = $166; //@line 78 "mcbits/fft.c"
   }
   $167 = $7; //@line 76 "mcbits/fft.c"
   $168 = $167<<1; //@line 76 "mcbits/fft.c"
   $169 = $5; //@line 76 "mcbits/fft.c"
   $170 = (($169) + ($168))|0; //@line 76 "mcbits/fft.c"
   $5 = $170; //@line 76 "mcbits/fft.c"
  }
  $171 = $4; //@line 87 "mcbits/fft.c"
  $172 = 1 << $171; //@line 87 "mcbits/fft.c"
  $173 = ($172|0)<(0); //@line 87 "mcbits/fft.c"
  $174 = $173 << 31 >> 31; //@line 87 "mcbits/fft.c"
  $175 = $11; //@line 87 "mcbits/fft.c"
  $176 = $175; //@line 87 "mcbits/fft.c"
  $177 = HEAP32[$176>>2]|0; //@line 87 "mcbits/fft.c"
  $178 = (($175) + 4)|0; //@line 87 "mcbits/fft.c"
  $179 = $178; //@line 87 "mcbits/fft.c"
  $180 = HEAP32[$179>>2]|0; //@line 87 "mcbits/fft.c"
  $181 = (_i64Add(($177|0),($180|0),($172|0),($174|0))|0); //@line 87 "mcbits/fft.c"
  $182 = tempRet0; //@line 87 "mcbits/fft.c"
  $183 = $11; //@line 87 "mcbits/fft.c"
  $184 = $183; //@line 87 "mcbits/fft.c"
  HEAP32[$184>>2] = $181; //@line 87 "mcbits/fft.c"
  $185 = (($183) + 4)|0; //@line 87 "mcbits/fft.c"
  $186 = $185; //@line 87 "mcbits/fft.c"
  HEAP32[$186>>2] = $182; //@line 87 "mcbits/fft.c"
  $187 = $4; //@line 72 "mcbits/fft.c"
  $188 = (($187) + 1)|0; //@line 72 "mcbits/fft.c"
  $4 = $188; //@line 72 "mcbits/fft.c"
 }
 STACKTOP = sp;return; //@line 90 "mcbits/fft.c"
}
function _fft($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $3; //@line 94 "mcbits/fft.c"
 _radix_conversions($4); //@line 94 "mcbits/fft.c"
 $5 = $2; //@line 95 "mcbits/fft.c"
 $6 = $3; //@line 95 "mcbits/fft.c"
 _butterflies($5,$6); //@line 95 "mcbits/fft.c"
 STACKTOP = sp;return; //@line 96 "mcbits/fft.c"
}
function _radix_conversions_tr($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0;
 var $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0;
 var $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0;
 var $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $3 = 5; //@line 31 "mcbits/fft_tr.c"
 while(1) {
  $5 = $3; //@line 31 "mcbits/fft_tr.c"
  $6 = ($5|0)>=(0); //@line 31 "mcbits/fft_tr.c"
  if (!($6)) {
   break;
  }
  $7 = $3; //@line 33 "mcbits/fft_tr.c"
  $8 = ($7|0)<(5); //@line 33 "mcbits/fft_tr.c"
  if ($8) {
   $9 = $1; //@line 35 "mcbits/fft_tr.c"
   $10 = $1; //@line 35 "mcbits/fft_tr.c"
   $11 = $3; //@line 35 "mcbits/fft_tr.c"
   $12 = (6808 + (($11*192)|0)|0); //@line 35 "mcbits/fft_tr.c"
   _vec_mul($9,$10,$12); //@line 35 "mcbits/fft_tr.c"
   $13 = $1; //@line 36 "mcbits/fft_tr.c"
   $14 = ((($13)) + 96|0); //@line 36 "mcbits/fft_tr.c"
   $15 = $1; //@line 36 "mcbits/fft_tr.c"
   $16 = ((($15)) + 96|0); //@line 36 "mcbits/fft_tr.c"
   $17 = $3; //@line 36 "mcbits/fft_tr.c"
   $18 = (6808 + (($17*192)|0)|0); //@line 36 "mcbits/fft_tr.c"
   $19 = ((($18)) + 96|0); //@line 36 "mcbits/fft_tr.c"
   _vec_mul($14,$16,$19); //@line 36 "mcbits/fft_tr.c"
  }
  $2 = 0; //@line 39 "mcbits/fft_tr.c"
  while(1) {
   $20 = $2; //@line 39 "mcbits/fft_tr.c"
   $21 = ($20|0)<(12); //@line 39 "mcbits/fft_tr.c"
   if (!($21)) {
    break;
   }
   $22 = $3; //@line 40 "mcbits/fft_tr.c"
   $4 = $22; //@line 40 "mcbits/fft_tr.c"
   while(1) {
    $23 = $4; //@line 40 "mcbits/fft_tr.c"
    $24 = ($23|0)<=(4); //@line 40 "mcbits/fft_tr.c"
    if (!($24)) {
     break;
    }
    $25 = $1; //@line 42 "mcbits/fft_tr.c"
    $26 = $2; //@line 42 "mcbits/fft_tr.c"
    $27 = (($25) + ($26<<3)|0); //@line 42 "mcbits/fft_tr.c"
    $28 = $27; //@line 42 "mcbits/fft_tr.c"
    $29 = $28; //@line 42 "mcbits/fft_tr.c"
    $30 = HEAP32[$29>>2]|0; //@line 42 "mcbits/fft_tr.c"
    $31 = (($28) + 4)|0; //@line 42 "mcbits/fft_tr.c"
    $32 = $31; //@line 42 "mcbits/fft_tr.c"
    $33 = HEAP32[$32>>2]|0; //@line 42 "mcbits/fft_tr.c"
    $34 = $4; //@line 42 "mcbits/fft_tr.c"
    $35 = (7768 + ($34<<4)|0); //@line 42 "mcbits/fft_tr.c"
    $36 = $35; //@line 42 "mcbits/fft_tr.c"
    $37 = $36; //@line 42 "mcbits/fft_tr.c"
    $38 = HEAP32[$37>>2]|0; //@line 42 "mcbits/fft_tr.c"
    $39 = (($36) + 4)|0; //@line 42 "mcbits/fft_tr.c"
    $40 = $39; //@line 42 "mcbits/fft_tr.c"
    $41 = HEAP32[$40>>2]|0; //@line 42 "mcbits/fft_tr.c"
    $42 = $30 & $38; //@line 42 "mcbits/fft_tr.c"
    $43 = $33 & $41; //@line 42 "mcbits/fft_tr.c"
    $44 = $4; //@line 42 "mcbits/fft_tr.c"
    $45 = 1 << $44; //@line 42 "mcbits/fft_tr.c"
    $46 = (_bitshift64Shl(($42|0),($43|0),($45|0))|0); //@line 42 "mcbits/fft_tr.c"
    $47 = tempRet0; //@line 42 "mcbits/fft_tr.c"
    $48 = $1; //@line 42 "mcbits/fft_tr.c"
    $49 = $2; //@line 42 "mcbits/fft_tr.c"
    $50 = (($48) + ($49<<3)|0); //@line 42 "mcbits/fft_tr.c"
    $51 = $50; //@line 42 "mcbits/fft_tr.c"
    $52 = $51; //@line 42 "mcbits/fft_tr.c"
    $53 = HEAP32[$52>>2]|0; //@line 42 "mcbits/fft_tr.c"
    $54 = (($51) + 4)|0; //@line 42 "mcbits/fft_tr.c"
    $55 = $54; //@line 42 "mcbits/fft_tr.c"
    $56 = HEAP32[$55>>2]|0; //@line 42 "mcbits/fft_tr.c"
    $57 = $53 ^ $46; //@line 42 "mcbits/fft_tr.c"
    $58 = $56 ^ $47; //@line 42 "mcbits/fft_tr.c"
    $59 = $50; //@line 42 "mcbits/fft_tr.c"
    $60 = $59; //@line 42 "mcbits/fft_tr.c"
    HEAP32[$60>>2] = $57; //@line 42 "mcbits/fft_tr.c"
    $61 = (($59) + 4)|0; //@line 42 "mcbits/fft_tr.c"
    $62 = $61; //@line 42 "mcbits/fft_tr.c"
    HEAP32[$62>>2] = $58; //@line 42 "mcbits/fft_tr.c"
    $63 = $1; //@line 43 "mcbits/fft_tr.c"
    $64 = $2; //@line 43 "mcbits/fft_tr.c"
    $65 = (($63) + ($64<<3)|0); //@line 43 "mcbits/fft_tr.c"
    $66 = $65; //@line 43 "mcbits/fft_tr.c"
    $67 = $66; //@line 43 "mcbits/fft_tr.c"
    $68 = HEAP32[$67>>2]|0; //@line 43 "mcbits/fft_tr.c"
    $69 = (($66) + 4)|0; //@line 43 "mcbits/fft_tr.c"
    $70 = $69; //@line 43 "mcbits/fft_tr.c"
    $71 = HEAP32[$70>>2]|0; //@line 43 "mcbits/fft_tr.c"
    $72 = $4; //@line 43 "mcbits/fft_tr.c"
    $73 = (7768 + ($72<<4)|0); //@line 43 "mcbits/fft_tr.c"
    $74 = ((($73)) + 8|0); //@line 43 "mcbits/fft_tr.c"
    $75 = $74; //@line 43 "mcbits/fft_tr.c"
    $76 = $75; //@line 43 "mcbits/fft_tr.c"
    $77 = HEAP32[$76>>2]|0; //@line 43 "mcbits/fft_tr.c"
    $78 = (($75) + 4)|0; //@line 43 "mcbits/fft_tr.c"
    $79 = $78; //@line 43 "mcbits/fft_tr.c"
    $80 = HEAP32[$79>>2]|0; //@line 43 "mcbits/fft_tr.c"
    $81 = $68 & $77; //@line 43 "mcbits/fft_tr.c"
    $82 = $71 & $80; //@line 43 "mcbits/fft_tr.c"
    $83 = $4; //@line 43 "mcbits/fft_tr.c"
    $84 = 1 << $83; //@line 43 "mcbits/fft_tr.c"
    $85 = (_bitshift64Shl(($81|0),($82|0),($84|0))|0); //@line 43 "mcbits/fft_tr.c"
    $86 = tempRet0; //@line 43 "mcbits/fft_tr.c"
    $87 = $1; //@line 43 "mcbits/fft_tr.c"
    $88 = $2; //@line 43 "mcbits/fft_tr.c"
    $89 = (($87) + ($88<<3)|0); //@line 43 "mcbits/fft_tr.c"
    $90 = $89; //@line 43 "mcbits/fft_tr.c"
    $91 = $90; //@line 43 "mcbits/fft_tr.c"
    $92 = HEAP32[$91>>2]|0; //@line 43 "mcbits/fft_tr.c"
    $93 = (($90) + 4)|0; //@line 43 "mcbits/fft_tr.c"
    $94 = $93; //@line 43 "mcbits/fft_tr.c"
    $95 = HEAP32[$94>>2]|0; //@line 43 "mcbits/fft_tr.c"
    $96 = $92 ^ $85; //@line 43 "mcbits/fft_tr.c"
    $97 = $95 ^ $86; //@line 43 "mcbits/fft_tr.c"
    $98 = $89; //@line 43 "mcbits/fft_tr.c"
    $99 = $98; //@line 43 "mcbits/fft_tr.c"
    HEAP32[$99>>2] = $96; //@line 43 "mcbits/fft_tr.c"
    $100 = (($98) + 4)|0; //@line 43 "mcbits/fft_tr.c"
    $101 = $100; //@line 43 "mcbits/fft_tr.c"
    HEAP32[$101>>2] = $97; //@line 43 "mcbits/fft_tr.c"
    $102 = $1; //@line 45 "mcbits/fft_tr.c"
    $103 = ((($102)) + 96|0); //@line 45 "mcbits/fft_tr.c"
    $104 = $2; //@line 45 "mcbits/fft_tr.c"
    $105 = (($103) + ($104<<3)|0); //@line 45 "mcbits/fft_tr.c"
    $106 = $105; //@line 45 "mcbits/fft_tr.c"
    $107 = $106; //@line 45 "mcbits/fft_tr.c"
    $108 = HEAP32[$107>>2]|0; //@line 45 "mcbits/fft_tr.c"
    $109 = (($106) + 4)|0; //@line 45 "mcbits/fft_tr.c"
    $110 = $109; //@line 45 "mcbits/fft_tr.c"
    $111 = HEAP32[$110>>2]|0; //@line 45 "mcbits/fft_tr.c"
    $112 = $4; //@line 45 "mcbits/fft_tr.c"
    $113 = (7768 + ($112<<4)|0); //@line 45 "mcbits/fft_tr.c"
    $114 = $113; //@line 45 "mcbits/fft_tr.c"
    $115 = $114; //@line 45 "mcbits/fft_tr.c"
    $116 = HEAP32[$115>>2]|0; //@line 45 "mcbits/fft_tr.c"
    $117 = (($114) + 4)|0; //@line 45 "mcbits/fft_tr.c"
    $118 = $117; //@line 45 "mcbits/fft_tr.c"
    $119 = HEAP32[$118>>2]|0; //@line 45 "mcbits/fft_tr.c"
    $120 = $108 & $116; //@line 45 "mcbits/fft_tr.c"
    $121 = $111 & $119; //@line 45 "mcbits/fft_tr.c"
    $122 = $4; //@line 45 "mcbits/fft_tr.c"
    $123 = 1 << $122; //@line 45 "mcbits/fft_tr.c"
    $124 = (_bitshift64Shl(($120|0),($121|0),($123|0))|0); //@line 45 "mcbits/fft_tr.c"
    $125 = tempRet0; //@line 45 "mcbits/fft_tr.c"
    $126 = $1; //@line 45 "mcbits/fft_tr.c"
    $127 = ((($126)) + 96|0); //@line 45 "mcbits/fft_tr.c"
    $128 = $2; //@line 45 "mcbits/fft_tr.c"
    $129 = (($127) + ($128<<3)|0); //@line 45 "mcbits/fft_tr.c"
    $130 = $129; //@line 45 "mcbits/fft_tr.c"
    $131 = $130; //@line 45 "mcbits/fft_tr.c"
    $132 = HEAP32[$131>>2]|0; //@line 45 "mcbits/fft_tr.c"
    $133 = (($130) + 4)|0; //@line 45 "mcbits/fft_tr.c"
    $134 = $133; //@line 45 "mcbits/fft_tr.c"
    $135 = HEAP32[$134>>2]|0; //@line 45 "mcbits/fft_tr.c"
    $136 = $132 ^ $124; //@line 45 "mcbits/fft_tr.c"
    $137 = $135 ^ $125; //@line 45 "mcbits/fft_tr.c"
    $138 = $129; //@line 45 "mcbits/fft_tr.c"
    $139 = $138; //@line 45 "mcbits/fft_tr.c"
    HEAP32[$139>>2] = $136; //@line 45 "mcbits/fft_tr.c"
    $140 = (($138) + 4)|0; //@line 45 "mcbits/fft_tr.c"
    $141 = $140; //@line 45 "mcbits/fft_tr.c"
    HEAP32[$141>>2] = $137; //@line 45 "mcbits/fft_tr.c"
    $142 = $1; //@line 46 "mcbits/fft_tr.c"
    $143 = ((($142)) + 96|0); //@line 46 "mcbits/fft_tr.c"
    $144 = $2; //@line 46 "mcbits/fft_tr.c"
    $145 = (($143) + ($144<<3)|0); //@line 46 "mcbits/fft_tr.c"
    $146 = $145; //@line 46 "mcbits/fft_tr.c"
    $147 = $146; //@line 46 "mcbits/fft_tr.c"
    $148 = HEAP32[$147>>2]|0; //@line 46 "mcbits/fft_tr.c"
    $149 = (($146) + 4)|0; //@line 46 "mcbits/fft_tr.c"
    $150 = $149; //@line 46 "mcbits/fft_tr.c"
    $151 = HEAP32[$150>>2]|0; //@line 46 "mcbits/fft_tr.c"
    $152 = $4; //@line 46 "mcbits/fft_tr.c"
    $153 = (7768 + ($152<<4)|0); //@line 46 "mcbits/fft_tr.c"
    $154 = ((($153)) + 8|0); //@line 46 "mcbits/fft_tr.c"
    $155 = $154; //@line 46 "mcbits/fft_tr.c"
    $156 = $155; //@line 46 "mcbits/fft_tr.c"
    $157 = HEAP32[$156>>2]|0; //@line 46 "mcbits/fft_tr.c"
    $158 = (($155) + 4)|0; //@line 46 "mcbits/fft_tr.c"
    $159 = $158; //@line 46 "mcbits/fft_tr.c"
    $160 = HEAP32[$159>>2]|0; //@line 46 "mcbits/fft_tr.c"
    $161 = $148 & $157; //@line 46 "mcbits/fft_tr.c"
    $162 = $151 & $160; //@line 46 "mcbits/fft_tr.c"
    $163 = $4; //@line 46 "mcbits/fft_tr.c"
    $164 = 1 << $163; //@line 46 "mcbits/fft_tr.c"
    $165 = (_bitshift64Shl(($161|0),($162|0),($164|0))|0); //@line 46 "mcbits/fft_tr.c"
    $166 = tempRet0; //@line 46 "mcbits/fft_tr.c"
    $167 = $1; //@line 46 "mcbits/fft_tr.c"
    $168 = ((($167)) + 96|0); //@line 46 "mcbits/fft_tr.c"
    $169 = $2; //@line 46 "mcbits/fft_tr.c"
    $170 = (($168) + ($169<<3)|0); //@line 46 "mcbits/fft_tr.c"
    $171 = $170; //@line 46 "mcbits/fft_tr.c"
    $172 = $171; //@line 46 "mcbits/fft_tr.c"
    $173 = HEAP32[$172>>2]|0; //@line 46 "mcbits/fft_tr.c"
    $174 = (($171) + 4)|0; //@line 46 "mcbits/fft_tr.c"
    $175 = $174; //@line 46 "mcbits/fft_tr.c"
    $176 = HEAP32[$175>>2]|0; //@line 46 "mcbits/fft_tr.c"
    $177 = $173 ^ $165; //@line 46 "mcbits/fft_tr.c"
    $178 = $176 ^ $166; //@line 46 "mcbits/fft_tr.c"
    $179 = $170; //@line 46 "mcbits/fft_tr.c"
    $180 = $179; //@line 46 "mcbits/fft_tr.c"
    HEAP32[$180>>2] = $177; //@line 46 "mcbits/fft_tr.c"
    $181 = (($179) + 4)|0; //@line 46 "mcbits/fft_tr.c"
    $182 = $181; //@line 46 "mcbits/fft_tr.c"
    HEAP32[$182>>2] = $178; //@line 46 "mcbits/fft_tr.c"
    $183 = $4; //@line 40 "mcbits/fft_tr.c"
    $184 = (($183) + 1)|0; //@line 40 "mcbits/fft_tr.c"
    $4 = $184; //@line 40 "mcbits/fft_tr.c"
   }
   $185 = $2; //@line 39 "mcbits/fft_tr.c"
   $186 = (($185) + 1)|0; //@line 39 "mcbits/fft_tr.c"
   $2 = $186; //@line 39 "mcbits/fft_tr.c"
  }
  $2 = 0; //@line 49 "mcbits/fft_tr.c"
  while(1) {
   $187 = $2; //@line 49 "mcbits/fft_tr.c"
   $188 = ($187|0)<(12); //@line 49 "mcbits/fft_tr.c"
   if (!($188)) {
    break;
   }
   $189 = $1; //@line 51 "mcbits/fft_tr.c"
   $190 = $2; //@line 51 "mcbits/fft_tr.c"
   $191 = (($189) + ($190<<3)|0); //@line 51 "mcbits/fft_tr.c"
   $192 = $191; //@line 51 "mcbits/fft_tr.c"
   $193 = $192; //@line 51 "mcbits/fft_tr.c"
   $194 = HEAP32[$193>>2]|0; //@line 51 "mcbits/fft_tr.c"
   $195 = (($192) + 4)|0; //@line 51 "mcbits/fft_tr.c"
   $196 = $195; //@line 51 "mcbits/fft_tr.c"
   $197 = HEAP32[$196>>2]|0; //@line 51 "mcbits/fft_tr.c"
   $198 = (7848); //@line 51 "mcbits/fft_tr.c"
   $199 = $198; //@line 51 "mcbits/fft_tr.c"
   $200 = HEAP32[$199>>2]|0; //@line 51 "mcbits/fft_tr.c"
   $201 = (($198) + 4)|0; //@line 51 "mcbits/fft_tr.c"
   $202 = $201; //@line 51 "mcbits/fft_tr.c"
   $203 = HEAP32[$202>>2]|0; //@line 51 "mcbits/fft_tr.c"
   $194 & $200; //@line 51 "mcbits/fft_tr.c"
   $204 = $197 & $203; //@line 51 "mcbits/fft_tr.c"
   $205 = $1; //@line 51 "mcbits/fft_tr.c"
   $206 = ((($205)) + 96|0); //@line 51 "mcbits/fft_tr.c"
   $207 = $2; //@line 51 "mcbits/fft_tr.c"
   $208 = (($206) + ($207<<3)|0); //@line 51 "mcbits/fft_tr.c"
   $209 = $208; //@line 51 "mcbits/fft_tr.c"
   $210 = $209; //@line 51 "mcbits/fft_tr.c"
   $211 = HEAP32[$210>>2]|0; //@line 51 "mcbits/fft_tr.c"
   $212 = (($209) + 4)|0; //@line 51 "mcbits/fft_tr.c"
   $213 = $212; //@line 51 "mcbits/fft_tr.c"
   $214 = HEAP32[$213>>2]|0; //@line 51 "mcbits/fft_tr.c"
   $215 = $211 ^ $204; //@line 51 "mcbits/fft_tr.c"
   $216 = $208; //@line 51 "mcbits/fft_tr.c"
   $217 = $216; //@line 51 "mcbits/fft_tr.c"
   HEAP32[$217>>2] = $215; //@line 51 "mcbits/fft_tr.c"
   $218 = (($216) + 4)|0; //@line 51 "mcbits/fft_tr.c"
   $219 = $218; //@line 51 "mcbits/fft_tr.c"
   HEAP32[$219>>2] = $214; //@line 51 "mcbits/fft_tr.c"
   $220 = $1; //@line 52 "mcbits/fft_tr.c"
   $221 = ((($220)) + 96|0); //@line 52 "mcbits/fft_tr.c"
   $222 = $2; //@line 52 "mcbits/fft_tr.c"
   $223 = (($221) + ($222<<3)|0); //@line 52 "mcbits/fft_tr.c"
   $224 = $223; //@line 52 "mcbits/fft_tr.c"
   $225 = $224; //@line 52 "mcbits/fft_tr.c"
   $226 = HEAP32[$225>>2]|0; //@line 52 "mcbits/fft_tr.c"
   $227 = (($224) + 4)|0; //@line 52 "mcbits/fft_tr.c"
   $228 = $227; //@line 52 "mcbits/fft_tr.c"
   $229 = HEAP32[$228>>2]|0; //@line 52 "mcbits/fft_tr.c"
   $230 = (7856); //@line 52 "mcbits/fft_tr.c"
   $231 = $230; //@line 52 "mcbits/fft_tr.c"
   $232 = HEAP32[$231>>2]|0; //@line 52 "mcbits/fft_tr.c"
   $233 = (($230) + 4)|0; //@line 52 "mcbits/fft_tr.c"
   $234 = $233; //@line 52 "mcbits/fft_tr.c"
   $235 = HEAP32[$234>>2]|0; //@line 52 "mcbits/fft_tr.c"
   $236 = $226 & $232; //@line 52 "mcbits/fft_tr.c"
   $229 & $235; //@line 52 "mcbits/fft_tr.c"
   $237 = $1; //@line 52 "mcbits/fft_tr.c"
   $238 = ((($237)) + 96|0); //@line 52 "mcbits/fft_tr.c"
   $239 = $2; //@line 52 "mcbits/fft_tr.c"
   $240 = (($238) + ($239<<3)|0); //@line 52 "mcbits/fft_tr.c"
   $241 = $240; //@line 52 "mcbits/fft_tr.c"
   $242 = $241; //@line 52 "mcbits/fft_tr.c"
   $243 = HEAP32[$242>>2]|0; //@line 52 "mcbits/fft_tr.c"
   $244 = (($241) + 4)|0; //@line 52 "mcbits/fft_tr.c"
   $245 = $244; //@line 52 "mcbits/fft_tr.c"
   $246 = HEAP32[$245>>2]|0; //@line 52 "mcbits/fft_tr.c"
   $247 = $246 ^ $236; //@line 52 "mcbits/fft_tr.c"
   $248 = $240; //@line 52 "mcbits/fft_tr.c"
   $249 = $248; //@line 52 "mcbits/fft_tr.c"
   HEAP32[$249>>2] = $243; //@line 52 "mcbits/fft_tr.c"
   $250 = (($248) + 4)|0; //@line 52 "mcbits/fft_tr.c"
   $251 = $250; //@line 52 "mcbits/fft_tr.c"
   HEAP32[$251>>2] = $247; //@line 52 "mcbits/fft_tr.c"
   $252 = $2; //@line 49 "mcbits/fft_tr.c"
   $253 = (($252) + 1)|0; //@line 49 "mcbits/fft_tr.c"
   $2 = $253; //@line 49 "mcbits/fft_tr.c"
  }
  $254 = $3; //@line 31 "mcbits/fft_tr.c"
  $255 = (($254) + -1)|0; //@line 31 "mcbits/fft_tr.c"
  $3 = $255; //@line 31 "mcbits/fft_tr.c"
 }
 STACKTOP = sp;return; //@line 55 "mcbits/fft_tr.c"
}
function _butterflies_tr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;
 var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;
 var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;
 var $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0;
 var $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0;
 var $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0;
 var $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0;
 var $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0;
 var $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0;
 var $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0;
 var $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0;
 var $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0;
 var $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0;
 var $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0;
 var $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0;
 var $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0;
 var $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0;
 var $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0;
 var $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0;
 var $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0;
 var $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0;
 var $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0;
 var $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0;
 var $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0;
 var $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0;
 var $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0;
 var $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0;
 var $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0;
 var $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0;
 var $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0;
 var $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0;
 var $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0;
 var $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0;
 var $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0;
 var $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0;
 var $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0;
 var $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0;
 var $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0;
 var $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0;
 var $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0;
 var $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0;
 var $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0;
 var $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0;
 var $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0;
 var $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0;
 var $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0;
 var $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0;
 var $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0;
 var $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0;
 var $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0;
 var $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0;
 var $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0;
 var $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0;
 var $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0;
 var $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0;
 var $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0;
 var $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0;
 var $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0;
 var $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0;
 var $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0;
 var $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0;
 var $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0;
 var $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0;
 var $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0;
 var $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0;
 var $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0;
 var $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0;
 var $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0;
 var $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0;
 var $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0;
 var $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0;
 var $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0;
 var $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0;
 var $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0, $233 = 0, $2330 = 0;
 var $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0, $2348 = 0, $2349 = 0;
 var $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0, $2366 = 0, $2367 = 0;
 var $2368 = 0, $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0, $2380 = 0, $2381 = 0, $2382 = 0, $2383 = 0, $2384 = 0, $2385 = 0;
 var $2386 = 0, $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0, $2390 = 0, $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0, $2401 = 0, $2402 = 0;
 var $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2420 = 0;
 var $2421 = 0, $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0, $2438 = 0, $2439 = 0;
 var $244 = 0, $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0, $2456 = 0, $2457 = 0;
 var $2458 = 0, $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0, $2474 = 0, $2475 = 0;
 var $2476 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0, $2492 = 0, $2493 = 0;
 var $2494 = 0, $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0, $251 = 0, $2510 = 0;
 var $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0, $2528 = 0, $2529 = 0;
 var $253 = 0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2546 = 0, $2547 = 0;
 var $2548 = 0, $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0, $2564 = 0, $2565 = 0;
 var $2566 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0, $2582 = 0, $2583 = 0;
 var $2584 = 0, $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0;
 var $2601 = 0, $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0, $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0, $2618 = 0, $2619 = 0;
 var $262 = 0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0;
 var $2638 = 0, $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0, $2654 = 0, $2655 = 0;
 var $2656 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0, $2671 = 0, $2672 = 0, $2673 = 0;
 var $2674 = 0, $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0, $2689 = 0, $269 = 0, $2690 = 0, $2691 = 0;
 var $2692 = 0, $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0, $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0, $2708 = 0, $2709 = 0;
 var $271 = 0, $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0, $2723 = 0, $2724 = 0, $2725 = 0, $2726 = 0, $2727 = 0;
 var $2728 = 0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0, $2744 = 0, $2745 = 0;
 var $2746 = 0, $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0, $2762 = 0, $2763 = 0;
 var $2764 = 0, $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0, $278 = 0, $2780 = 0, $2781 = 0;
 var $2782 = 0, $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0, $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0, $2797 = 0, $2798 = 0, $2799 = 0, $28 = 0;
 var $280 = 0, $2800 = 0, $2801 = 0, $2802 = 0, $2803 = 0, $2804 = 0, $2805 = 0, $2806 = 0, $2807 = 0, $2808 = 0, $2809 = 0, $281 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2813 = 0, $2814 = 0, $2815 = 0, $2816 = 0, $2817 = 0;
 var $2818 = 0, $2819 = 0, $282 = 0, $2820 = 0, $2821 = 0, $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0, $2826 = 0, $2827 = 0, $2828 = 0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0, $2832 = 0, $2833 = 0, $2834 = 0, $2835 = 0;
 var $2836 = 0, $2837 = 0, $2838 = 0, $2839 = 0, $284 = 0, $2840 = 0, $2841 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0, $2850 = 0, $2851 = 0, $2852 = 0, $2853 = 0;
 var $2854 = 0, $2855 = 0, $2856 = 0, $2857 = 0, $2858 = 0, $2859 = 0, $286 = 0, $2860 = 0, $2861 = 0, $2862 = 0, $2863 = 0, $2864 = 0, $2865 = 0, $2866 = 0, $2867 = 0, $2868 = 0, $2869 = 0, $287 = 0, $2870 = 0, $2871 = 0;
 var $2872 = 0, $2873 = 0, $2874 = 0, $2875 = 0, $2876 = 0, $2877 = 0, $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $2885 = 0, $2886 = 0, $2887 = 0, $2888 = 0, $2889 = 0, $289 = 0;
 var $2890 = 0, $2891 = 0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0, $2896 = 0, $2897 = 0, $2898 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $2902 = 0, $2903 = 0, $2904 = 0, $2905 = 0, $2906 = 0, $2907 = 0;
 var $2908 = 0, $2909 = 0, $291 = 0, $2910 = 0, $2911 = 0, $2912 = 0, $2913 = 0, $2914 = 0, $2915 = 0, $2916 = 0, $2917 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2921 = 0, $2922 = 0, $2923 = 0, $2924 = 0, $2925 = 0;
 var $2926 = 0, $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2934 = 0, $2935 = 0, $2936 = 0, $2937 = 0, $2938 = 0, $2939 = 0, $294 = 0, $2940 = 0, $2941 = 0, $2942 = 0, $2943 = 0;
 var $2944 = 0, $2945 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $2949 = 0, $295 = 0, $2950 = 0, $2951 = 0, $2952 = 0, $2953 = 0, $2954 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $2959 = 0, $296 = 0, $2960 = 0, $2961 = 0;
 var $2962 = 0, $2963 = 0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0, $2968 = 0, $2969 = 0, $297 = 0, $2970 = 0, $2971 = 0, $2972 = 0, $2973 = 0, $2974 = 0, $2975 = 0, $2976 = 0, $2977 = 0, $2978 = 0, $2979 = 0, $298 = 0;
 var $2980 = 0, $2981 = 0, $2982 = 0, $2983 = 0, $2984 = 0, $2985 = 0, $2986 = 0, $2987 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2991 = 0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0, $2996 = 0, $2997 = 0, $2998 = 0;
 var $2999 = 0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $3001 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0, $3013 = 0, $3014 = 0;
 var $3015 = 0, $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0, $3023 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0, $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0, $3031 = 0, $3032 = 0;
 var $3033 = 0, $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0, $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0, $3049 = 0, $305 = 0, $3050 = 0;
 var $3051 = 0, $3052 = 0, $3053 = 0, $3054 = 0, $3055 = 0, $3056 = 0, $3057 = 0, $3058 = 0, $3059 = 0, $306 = 0, $3060 = 0, $3061 = 0, $3062 = 0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0, $3067 = 0, $3068 = 0, $3069 = 0;
 var $307 = 0, $3070 = 0, $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3080 = 0, $3081 = 0, $3082 = 0, $3083 = 0, $3084 = 0, $3085 = 0, $3086 = 0, $3087 = 0;
 var $3088 = 0, $3089 = 0, $309 = 0, $3090 = 0, $3091 = 0, $3092 = 0, $3093 = 0, $3094 = 0, $3095 = 0, $3096 = 0, $3097 = 0, $3098 = 0, $3099 = 0, $31 = 0, $310 = 0, $3100 = 0, $3101 = 0, $3102 = 0, $3103 = 0, $3104 = 0;
 var $3105 = 0, $3106 = 0, $3107 = 0, $3108 = 0, $3109 = 0, $311 = 0, $3110 = 0, $3111 = 0, $3112 = 0, $3113 = 0, $3114 = 0, $3115 = 0, $3116 = 0, $3117 = 0, $3118 = 0, $3119 = 0, $312 = 0, $3120 = 0, $3121 = 0, $3122 = 0;
 var $3123 = 0, $3124 = 0, $3125 = 0, $3126 = 0, $3127 = 0, $3128 = 0, $3129 = 0, $313 = 0, $3130 = 0, $3131 = 0, $3132 = 0, $3133 = 0, $3134 = 0, $3135 = 0, $3136 = 0, $3137 = 0, $3138 = 0, $3139 = 0, $314 = 0, $3140 = 0;
 var $3141 = 0, $3142 = 0, $3143 = 0, $3144 = 0, $3145 = 0, $3146 = 0, $3147 = 0, $3148 = 0, $3149 = 0, $315 = 0, $3150 = 0, $3151 = 0, $3152 = 0, $3153 = 0, $3154 = 0, $3155 = 0, $3156 = 0, $3157 = 0, $3158 = 0, $3159 = 0;
 var $316 = 0, $3160 = 0, $3161 = 0, $3162 = 0, $3163 = 0, $3164 = 0, $3165 = 0, $3166 = 0, $3167 = 0, $3168 = 0, $3169 = 0, $317 = 0, $3170 = 0, $3171 = 0, $3172 = 0, $3173 = 0, $3174 = 0, $3175 = 0, $3176 = 0, $3177 = 0;
 var $3178 = 0, $3179 = 0, $318 = 0, $3180 = 0, $3181 = 0, $3182 = 0, $3183 = 0, $3184 = 0, $3185 = 0, $3186 = 0, $3187 = 0, $3188 = 0, $3189 = 0, $319 = 0, $3190 = 0, $3191 = 0, $3192 = 0, $3193 = 0, $3194 = 0, $3195 = 0;
 var $3196 = 0, $3197 = 0, $3198 = 0, $3199 = 0, $32 = 0, $320 = 0, $3200 = 0, $3201 = 0, $3202 = 0, $3203 = 0, $3204 = 0, $3205 = 0, $3206 = 0, $3207 = 0, $3208 = 0, $3209 = 0, $321 = 0, $3210 = 0, $3211 = 0, $3212 = 0;
 var $3213 = 0, $3214 = 0, $3215 = 0, $3216 = 0, $3217 = 0, $3218 = 0, $3219 = 0, $322 = 0, $3220 = 0, $3221 = 0, $3222 = 0, $3223 = 0, $3224 = 0, $3225 = 0, $3226 = 0, $3227 = 0, $3228 = 0, $3229 = 0, $323 = 0, $3230 = 0;
 var $3231 = 0, $3232 = 0, $3233 = 0, $3234 = 0, $3235 = 0, $3236 = 0, $3237 = 0, $3238 = 0, $3239 = 0, $324 = 0, $3240 = 0, $3241 = 0, $3242 = 0, $3243 = 0, $3244 = 0, $3245 = 0, $3246 = 0, $3247 = 0, $3248 = 0, $3249 = 0;
 var $325 = 0, $3250 = 0, $3251 = 0, $3252 = 0, $3253 = 0, $3254 = 0, $3255 = 0, $3256 = 0, $3257 = 0, $3258 = 0, $3259 = 0, $326 = 0, $3260 = 0, $3261 = 0, $3262 = 0, $3263 = 0, $3264 = 0, $3265 = 0, $3266 = 0, $3267 = 0;
 var $3268 = 0, $3269 = 0, $327 = 0, $3270 = 0, $3271 = 0, $3272 = 0, $3273 = 0, $3274 = 0, $3275 = 0, $3276 = 0, $3277 = 0, $3278 = 0, $3279 = 0, $328 = 0, $3280 = 0, $3281 = 0, $3282 = 0, $3283 = 0, $3284 = 0, $3285 = 0;
 var $3286 = 0, $3287 = 0, $3288 = 0, $3289 = 0, $329 = 0, $3290 = 0, $3291 = 0, $3292 = 0, $3293 = 0, $3294 = 0, $3295 = 0, $3296 = 0, $3297 = 0, $3298 = 0, $3299 = 0, $33 = 0, $330 = 0, $3300 = 0, $3301 = 0, $3302 = 0;
 var $3303 = 0, $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $3309 = 0, $331 = 0, $3310 = 0, $3311 = 0, $3312 = 0, $3313 = 0, $3314 = 0, $3315 = 0, $3316 = 0, $3317 = 0, $3318 = 0, $3319 = 0, $332 = 0, $3320 = 0;
 var $3321 = 0, $3322 = 0, $3323 = 0, $3324 = 0, $3325 = 0, $3326 = 0, $3327 = 0, $3328 = 0, $3329 = 0, $333 = 0, $3330 = 0, $3331 = 0, $3332 = 0, $3333 = 0, $3334 = 0, $3335 = 0, $3336 = 0, $3337 = 0, $3338 = 0, $3339 = 0;
 var $334 = 0, $3340 = 0, $3341 = 0, $3342 = 0, $3343 = 0, $3344 = 0, $3345 = 0, $3346 = 0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0, $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $3354 = 0, $3355 = 0, $3356 = 0, $3357 = 0;
 var $3358 = 0, $3359 = 0, $336 = 0, $3360 = 0, $3361 = 0, $3362 = 0, $3363 = 0, $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0, $3368 = 0, $3369 = 0, $337 = 0, $3370 = 0, $3371 = 0, $3372 = 0, $3373 = 0, $3374 = 0, $3375 = 0;
 var $3376 = 0, $3377 = 0, $3378 = 0, $3379 = 0, $338 = 0, $3380 = 0, $3381 = 0, $3382 = 0, $3383 = 0, $3384 = 0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0, $3389 = 0, $339 = 0, $3390 = 0, $3391 = 0, $3392 = 0, $3393 = 0;
 var $3394 = 0, $3395 = 0, $3396 = 0, $3397 = 0, $3398 = 0, $3399 = 0, $34 = 0, $340 = 0, $3400 = 0, $3401 = 0, $3402 = 0, $3403 = 0, $3404 = 0, $3405 = 0, $3406 = 0, $3407 = 0, $3408 = 0, $3409 = 0, $341 = 0, $3410 = 0;
 var $3411 = 0, $3412 = 0, $3413 = 0, $3414 = 0, $3415 = 0, $3416 = 0, $3417 = 0, $3418 = 0, $3419 = 0, $342 = 0, $3420 = 0, $3421 = 0, $3422 = 0, $3423 = 0, $3424 = 0, $3425 = 0, $3426 = 0, $3427 = 0, $3428 = 0, $3429 = 0;
 var $343 = 0, $3430 = 0, $3431 = 0, $3432 = 0, $3433 = 0, $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0, $3441 = 0, $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0, $3446 = 0, $3447 = 0;
 var $3448 = 0, $3449 = 0, $345 = 0, $3450 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0, $3460 = 0, $3461 = 0, $3462 = 0, $3463 = 0, $3464 = 0, $3465 = 0;
 var $3466 = 0, $3467 = 0, $3468 = 0, $3469 = 0, $347 = 0, $3470 = 0, $3471 = 0, $3472 = 0, $3473 = 0, $3474 = 0, $3475 = 0, $3476 = 0, $3477 = 0, $3478 = 0, $3479 = 0, $348 = 0, $3480 = 0, $3481 = 0, $3482 = 0, $3483 = 0;
 var $3484 = 0, $3485 = 0, $3486 = 0, $3487 = 0, $3488 = 0, $3489 = 0, $349 = 0, $3490 = 0, $3491 = 0, $3492 = 0, $3493 = 0, $3494 = 0, $3495 = 0, $3496 = 0, $3497 = 0, $3498 = 0, $3499 = 0, $35 = 0, $350 = 0, $3500 = 0;
 var $3501 = 0, $3502 = 0, $3503 = 0, $3504 = 0, $3505 = 0, $3506 = 0, $3507 = 0, $3508 = 0, $3509 = 0, $351 = 0, $3510 = 0, $3511 = 0, $3512 = 0, $3513 = 0, $3514 = 0, $3515 = 0, $3516 = 0, $3517 = 0, $3518 = 0, $3519 = 0;
 var $352 = 0, $3520 = 0, $3521 = 0, $3522 = 0, $3523 = 0, $3524 = 0, $3525 = 0, $3526 = 0, $3527 = 0, $3528 = 0, $3529 = 0, $353 = 0, $3530 = 0, $3531 = 0, $3532 = 0, $3533 = 0, $3534 = 0, $3535 = 0, $3536 = 0, $3537 = 0;
 var $3538 = 0, $3539 = 0, $354 = 0, $3540 = 0, $3541 = 0, $3542 = 0, $3543 = 0, $3544 = 0, $3545 = 0, $3546 = 0, $3547 = 0, $3548 = 0, $3549 = 0, $355 = 0, $3550 = 0, $3551 = 0, $3552 = 0, $3553 = 0, $3554 = 0, $3555 = 0;
 var $3556 = 0, $3557 = 0, $3558 = 0, $3559 = 0, $356 = 0, $3560 = 0, $3561 = 0, $3562 = 0, $3563 = 0, $3564 = 0, $3565 = 0, $3566 = 0, $3567 = 0, $3568 = 0, $3569 = 0, $357 = 0, $3570 = 0, $3571 = 0, $3572 = 0, $3573 = 0;
 var $3574 = 0, $3575 = 0, $3576 = 0, $3577 = 0, $3578 = 0, $3579 = 0, $358 = 0, $3580 = 0, $3581 = 0, $3582 = 0, $3583 = 0, $3584 = 0, $3585 = 0, $3586 = 0, $3587 = 0, $3588 = 0, $3589 = 0, $359 = 0, $3590 = 0, $3591 = 0;
 var $3592 = 0, $3593 = 0, $3594 = 0, $3595 = 0, $3596 = 0, $3597 = 0, $3598 = 0, $3599 = 0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0, $3602 = 0, $3603 = 0, $3604 = 0, $3605 = 0, $3606 = 0, $3607 = 0, $3608 = 0, $3609 = 0;
 var $361 = 0, $3610 = 0, $3611 = 0, $3612 = 0, $3613 = 0, $3614 = 0, $3615 = 0, $3616 = 0, $3617 = 0, $3618 = 0, $3619 = 0, $362 = 0, $3620 = 0, $3621 = 0, $3622 = 0, $3623 = 0, $3624 = 0, $3625 = 0, $3626 = 0, $3627 = 0;
 var $3628 = 0, $3629 = 0, $363 = 0, $3630 = 0, $3631 = 0, $3632 = 0, $3633 = 0, $3634 = 0, $3635 = 0, $3636 = 0, $3637 = 0, $3638 = 0, $3639 = 0, $364 = 0, $3640 = 0, $3641 = 0, $3642 = 0, $3643 = 0, $3644 = 0, $3645 = 0;
 var $3646 = 0, $3647 = 0, $3648 = 0, $3649 = 0, $365 = 0, $3650 = 0, $3651 = 0, $3652 = 0, $3653 = 0, $3654 = 0, $3655 = 0, $3656 = 0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0, $3662 = 0, $3663 = 0;
 var $3664 = 0, $3665 = 0, $3666 = 0, $3667 = 0, $3668 = 0, $3669 = 0, $367 = 0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0, $3676 = 0, $3677 = 0, $3678 = 0, $3679 = 0, $368 = 0, $3680 = 0, $3681 = 0;
 var $3682 = 0, $3683 = 0, $3684 = 0, $3685 = 0, $3686 = 0, $3687 = 0, $3688 = 0, $3689 = 0, $369 = 0, $3690 = 0, $3691 = 0, $3692 = 0, $3693 = 0, $3694 = 0, $3695 = 0, $3696 = 0, $3697 = 0, $3698 = 0, $3699 = 0, $37 = 0;
 var $370 = 0, $3700 = 0, $3701 = 0, $3702 = 0, $3703 = 0, $3704 = 0, $3705 = 0, $3706 = 0, $3707 = 0, $3708 = 0, $3709 = 0, $371 = 0, $3710 = 0, $3711 = 0, $3712 = 0, $3713 = 0, $3714 = 0, $3715 = 0, $3716 = 0, $3717 = 0;
 var $3718 = 0, $3719 = 0, $372 = 0, $3720 = 0, $3721 = 0, $3722 = 0, $3723 = 0, $3724 = 0, $3725 = 0, $3726 = 0, $3727 = 0, $3728 = 0, $3729 = 0, $373 = 0, $3730 = 0, $3731 = 0, $3732 = 0, $3733 = 0, $3734 = 0, $3735 = 0;
 var $3736 = 0, $3737 = 0, $3738 = 0, $3739 = 0, $374 = 0, $3740 = 0, $3741 = 0, $3742 = 0, $3743 = 0, $3744 = 0, $3745 = 0, $3746 = 0, $3747 = 0, $3748 = 0, $3749 = 0, $375 = 0, $3750 = 0, $3751 = 0, $3752 = 0, $3753 = 0;
 var $3754 = 0, $3755 = 0, $3756 = 0, $3757 = 0, $3758 = 0, $3759 = 0, $376 = 0, $3760 = 0, $3761 = 0, $3762 = 0, $3763 = 0, $3764 = 0, $3765 = 0, $3766 = 0, $3767 = 0, $3768 = 0, $3769 = 0, $377 = 0, $3770 = 0, $3771 = 0;
 var $3772 = 0, $3773 = 0, $3774 = 0, $3775 = 0, $3776 = 0, $3777 = 0, $3778 = 0, $3779 = 0, $378 = 0, $3780 = 0, $3781 = 0, $3782 = 0, $3783 = 0, $3784 = 0, $3785 = 0, $3786 = 0, $3787 = 0, $3788 = 0, $3789 = 0, $379 = 0;
 var $3790 = 0, $3791 = 0, $3792 = 0, $3793 = 0, $3794 = 0, $3795 = 0, $3796 = 0, $3797 = 0, $3798 = 0, $3799 = 0, $38 = 0, $380 = 0, $3800 = 0, $3801 = 0, $3802 = 0, $3803 = 0, $3804 = 0, $3805 = 0, $3806 = 0, $3807 = 0;
 var $3808 = 0, $3809 = 0, $381 = 0, $3810 = 0, $3811 = 0, $3812 = 0, $3813 = 0, $3814 = 0, $3815 = 0, $3816 = 0, $3817 = 0, $3818 = 0, $3819 = 0, $382 = 0, $3820 = 0, $3821 = 0, $3822 = 0, $3823 = 0, $3824 = 0, $3825 = 0;
 var $3826 = 0, $3827 = 0, $3828 = 0, $3829 = 0, $383 = 0, $3830 = 0, $3831 = 0, $3832 = 0, $3833 = 0, $3834 = 0, $3835 = 0, $3836 = 0, $3837 = 0, $3838 = 0, $3839 = 0, $384 = 0, $3840 = 0, $3841 = 0, $3842 = 0, $3843 = 0;
 var $3844 = 0, $3845 = 0, $3846 = 0, $3847 = 0, $3848 = 0, $3849 = 0, $385 = 0, $3850 = 0, $3851 = 0, $3852 = 0, $3853 = 0, $3854 = 0, $3855 = 0, $3856 = 0, $3857 = 0, $3858 = 0, $3859 = 0, $386 = 0, $3860 = 0, $3861 = 0;
 var $3862 = 0, $3863 = 0, $3864 = 0, $3865 = 0, $3866 = 0, $3867 = 0, $3868 = 0, $3869 = 0, $387 = 0, $3870 = 0, $3871 = 0, $3872 = 0, $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0, $3878 = 0, $3879 = 0, $388 = 0;
 var $3880 = 0, $3881 = 0, $3882 = 0, $3883 = 0, $3884 = 0, $3885 = 0, $3886 = 0, $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0, $3890 = 0, $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0, $3895 = 0, $3896 = 0, $3897 = 0, $3898 = 0;
 var $3899 = 0, $39 = 0, $390 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0, $3909 = 0, $391 = 0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0, $3914 = 0, $3915 = 0;
 var $3916 = 0, $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0, $3920 = 0, $3921 = 0, $3922 = 0, $3923 = 0, $3924 = 0, $3925 = 0, $3926 = 0, $3927 = 0, $3928 = 0, $3929 = 0, $393 = 0, $3930 = 0, $3931 = 0, $3932 = 0, $3933 = 0;
 var $3934 = 0, $3935 = 0, $3936 = 0, $3937 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3940 = 0, $3941 = 0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3946 = 0, $3947 = 0, $3948 = 0, $3949 = 0, $395 = 0, $3950 = 0, $3951 = 0;
 var $3952 = 0, $3953 = 0, $3954 = 0, $3955 = 0, $3956 = 0, $3957 = 0, $3958 = 0, $3959 = 0, $396 = 0, $3960 = 0, $3961 = 0, $3962 = 0, $3963 = 0, $3964 = 0, $3965 = 0, $3966 = 0, $3967 = 0, $3968 = 0, $3969 = 0, $397 = 0;
 var $3970 = 0, $3971 = 0, $3972 = 0, $3973 = 0, $3974 = 0, $3975 = 0, $3976 = 0, $3977 = 0, $3978 = 0, $3979 = 0, $398 = 0, $3980 = 0, $3981 = 0, $3982 = 0, $3983 = 0, $3984 = 0, $3985 = 0, $3986 = 0, $3987 = 0, $3988 = 0;
 var $3989 = 0, $399 = 0, $3990 = 0, $3991 = 0, $3992 = 0, $3993 = 0, $3994 = 0, $3995 = 0, $3996 = 0, $3997 = 0, $3998 = 0, $3999 = 0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0, $4001 = 0, $4002 = 0, $4003 = 0, $4004 = 0;
 var $4005 = 0, $4006 = 0, $4007 = 0, $4008 = 0, $4009 = 0, $401 = 0, $4010 = 0, $4011 = 0, $4012 = 0, $4013 = 0, $4014 = 0, $4015 = 0, $4016 = 0, $4017 = 0, $4018 = 0, $4019 = 0, $402 = 0, $4020 = 0, $4021 = 0, $4022 = 0;
 var $4023 = 0, $4024 = 0, $4025 = 0, $4026 = 0, $4027 = 0, $4028 = 0, $4029 = 0, $403 = 0, $4030 = 0, $4031 = 0, $4032 = 0, $4033 = 0, $4034 = 0, $4035 = 0, $4036 = 0, $4037 = 0, $4038 = 0, $4039 = 0, $404 = 0, $4040 = 0;
 var $4041 = 0, $4042 = 0, $4043 = 0, $4044 = 0, $4045 = 0, $4046 = 0, $4047 = 0, $4048 = 0, $4049 = 0, $405 = 0, $4050 = 0, $4051 = 0, $4052 = 0, $4053 = 0, $4054 = 0, $4055 = 0, $4056 = 0, $4057 = 0, $4058 = 0, $4059 = 0;
 var $406 = 0, $4060 = 0, $4061 = 0, $4062 = 0, $4063 = 0, $4064 = 0, $4065 = 0, $4066 = 0, $4067 = 0, $4068 = 0, $4069 = 0, $407 = 0, $4070 = 0, $4071 = 0, $4072 = 0, $4073 = 0, $4074 = 0, $4075 = 0, $4076 = 0, $4077 = 0;
 var $4078 = 0, $4079 = 0, $408 = 0, $4080 = 0, $4081 = 0, $4082 = 0, $4083 = 0, $4084 = 0, $4085 = 0, $4086 = 0, $4087 = 0, $4088 = 0, $4089 = 0, $409 = 0, $4090 = 0, $4091 = 0, $4092 = 0, $4093 = 0, $4094 = 0, $4095 = 0;
 var $4096 = 0, $4097 = 0, $4098 = 0, $4099 = 0, $41 = 0, $410 = 0, $4100 = 0, $4101 = 0, $4102 = 0, $4103 = 0, $4104 = 0, $4105 = 0, $4106 = 0, $4107 = 0, $4108 = 0, $4109 = 0, $411 = 0, $4110 = 0, $4111 = 0, $4112 = 0;
 var $4113 = 0, $4114 = 0, $4115 = 0, $4116 = 0, $4117 = 0, $4118 = 0, $4119 = 0, $412 = 0, $4120 = 0, $4121 = 0, $4122 = 0, $4123 = 0, $4124 = 0, $4125 = 0, $4126 = 0, $4127 = 0, $4128 = 0, $4129 = 0, $413 = 0, $4130 = 0;
 var $4131 = 0, $4132 = 0, $4133 = 0, $4134 = 0, $4135 = 0, $4136 = 0, $4137 = 0, $4138 = 0, $4139 = 0, $414 = 0, $4140 = 0, $4141 = 0, $4142 = 0, $4143 = 0, $4144 = 0, $4145 = 0, $4146 = 0, $4147 = 0, $4148 = 0, $4149 = 0;
 var $415 = 0, $4150 = 0, $4151 = 0, $4152 = 0, $4153 = 0, $4154 = 0, $4155 = 0, $4156 = 0, $4157 = 0, $4158 = 0, $4159 = 0, $416 = 0, $4160 = 0, $4161 = 0, $4162 = 0, $4163 = 0, $4164 = 0, $4165 = 0, $4166 = 0, $4167 = 0;
 var $4168 = 0, $4169 = 0, $417 = 0, $4170 = 0, $4171 = 0, $4172 = 0, $4173 = 0, $4174 = 0, $4175 = 0, $4176 = 0, $4177 = 0, $4178 = 0, $4179 = 0, $418 = 0, $4180 = 0, $4181 = 0, $4182 = 0, $4183 = 0, $4184 = 0, $4185 = 0;
 var $4186 = 0, $4187 = 0, $4188 = 0, $4189 = 0, $419 = 0, $4190 = 0, $4191 = 0, $4192 = 0, $4193 = 0, $4194 = 0, $4195 = 0, $4196 = 0, $4197 = 0, $4198 = 0, $4199 = 0, $42 = 0, $420 = 0, $4200 = 0, $4201 = 0, $4202 = 0;
 var $4203 = 0, $4204 = 0, $4205 = 0, $4206 = 0, $4207 = 0, $4208 = 0, $4209 = 0, $421 = 0, $4210 = 0, $4211 = 0, $4212 = 0, $4213 = 0, $4214 = 0, $4215 = 0, $4216 = 0, $4217 = 0, $4218 = 0, $4219 = 0, $422 = 0, $4220 = 0;
 var $4221 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0;
 var $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0;
 var $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0;
 var $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0;
 var $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0;
 var $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0;
 var $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0;
 var $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0;
 var $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0;
 var $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0;
 var $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0;
 var $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0;
 var $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0;
 var $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0;
 var $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0;
 var $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0;
 var $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0;
 var $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0;
 var $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0;
 var $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0;
 var $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0;
 var $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0;
 var $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0;
 var $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0;
 var $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0;
 var $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0;
 var $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0;
 var $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0;
 var $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0;
 var $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0;
 var $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0;
 var $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0;
 var label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 1232|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1232|0);
 $9 = sp_a + 1096|0;
 $10 = sp_a + 520|0;
 $11 = sp_a + 8|0;
 $12 = sp_a;
 $2 = $0;
 $3 = $1;
 $13 = $12; //@line 70 "mcbits/fft_tr.c"
 $14 = $13; //@line 70 "mcbits/fft_tr.c"
 HEAP32[$14>>2] = 63; //@line 70 "mcbits/fft_tr.c"
 $15 = (($13) + 4)|0; //@line 70 "mcbits/fft_tr.c"
 $16 = $15; //@line 70 "mcbits/fft_tr.c"
 HEAP32[$16>>2] = 0; //@line 70 "mcbits/fft_tr.c"
 $4 = 5; //@line 88 "mcbits/fft_tr.c"
 while(1) {
  $17 = $4; //@line 88 "mcbits/fft_tr.c"
  $18 = ($17|0)>=(0); //@line 88 "mcbits/fft_tr.c"
  if (!($18)) {
   break;
  }
  $19 = $4; //@line 90 "mcbits/fft_tr.c"
  $20 = 1 << $19; //@line 90 "mcbits/fft_tr.c"
  $7 = $20; //@line 90 "mcbits/fft_tr.c"
  $21 = $7; //@line 91 "mcbits/fft_tr.c"
  $22 = ($21|0)<(0); //@line 91 "mcbits/fft_tr.c"
  $23 = $22 << 31 >> 31; //@line 91 "mcbits/fft_tr.c"
  $24 = $12; //@line 91 "mcbits/fft_tr.c"
  $25 = $24; //@line 91 "mcbits/fft_tr.c"
  $26 = HEAP32[$25>>2]|0; //@line 91 "mcbits/fft_tr.c"
  $27 = (($24) + 4)|0; //@line 91 "mcbits/fft_tr.c"
  $28 = $27; //@line 91 "mcbits/fft_tr.c"
  $29 = HEAP32[$28>>2]|0; //@line 91 "mcbits/fft_tr.c"
  $30 = (_i64Subtract(($26|0),($29|0),($21|0),($23|0))|0); //@line 91 "mcbits/fft_tr.c"
  $31 = tempRet0; //@line 91 "mcbits/fft_tr.c"
  $32 = $12; //@line 91 "mcbits/fft_tr.c"
  $33 = $32; //@line 91 "mcbits/fft_tr.c"
  HEAP32[$33>>2] = $30; //@line 91 "mcbits/fft_tr.c"
  $34 = (($32) + 4)|0; //@line 91 "mcbits/fft_tr.c"
  $35 = $34; //@line 91 "mcbits/fft_tr.c"
  HEAP32[$35>>2] = $31; //@line 91 "mcbits/fft_tr.c"
  $5 = 0; //@line 93 "mcbits/fft_tr.c"
  while(1) {
   $36 = $5; //@line 93 "mcbits/fft_tr.c"
   $37 = ($36|0)<(64); //@line 93 "mcbits/fft_tr.c"
   if (!($37)) {
    break;
   }
   $38 = $5; //@line 94 "mcbits/fft_tr.c"
   $6 = $38; //@line 94 "mcbits/fft_tr.c"
   while(1) {
    $39 = $6; //@line 94 "mcbits/fft_tr.c"
    $40 = $5; //@line 94 "mcbits/fft_tr.c"
    $41 = $7; //@line 94 "mcbits/fft_tr.c"
    $42 = (($40) + ($41))|0; //@line 94 "mcbits/fft_tr.c"
    $43 = ($39|0)<($42|0); //@line 94 "mcbits/fft_tr.c"
    if (!($43)) {
     break;
    }
    $8 = 0; //@line 96 "mcbits/fft_tr.c"
    while(1) {
     $44 = $8; //@line 96 "mcbits/fft_tr.c"
     $45 = ($44|0)<(12); //@line 96 "mcbits/fft_tr.c"
     if (!($45)) {
      break;
     }
     $46 = $3; //@line 96 "mcbits/fft_tr.c"
     $47 = $6; //@line 96 "mcbits/fft_tr.c"
     $48 = (($46) + (($47*96)|0)|0); //@line 96 "mcbits/fft_tr.c"
     $49 = $8; //@line 96 "mcbits/fft_tr.c"
     $50 = (($48) + ($49<<3)|0); //@line 96 "mcbits/fft_tr.c"
     $51 = $50; //@line 96 "mcbits/fft_tr.c"
     $52 = $51; //@line 96 "mcbits/fft_tr.c"
     $53 = HEAP32[$52>>2]|0; //@line 96 "mcbits/fft_tr.c"
     $54 = (($51) + 4)|0; //@line 96 "mcbits/fft_tr.c"
     $55 = $54; //@line 96 "mcbits/fft_tr.c"
     $56 = HEAP32[$55>>2]|0; //@line 96 "mcbits/fft_tr.c"
     $57 = $3; //@line 96 "mcbits/fft_tr.c"
     $58 = $6; //@line 96 "mcbits/fft_tr.c"
     $59 = $7; //@line 96 "mcbits/fft_tr.c"
     $60 = (($58) + ($59))|0; //@line 96 "mcbits/fft_tr.c"
     $61 = (($57) + (($60*96)|0)|0); //@line 96 "mcbits/fft_tr.c"
     $62 = $8; //@line 96 "mcbits/fft_tr.c"
     $63 = (($61) + ($62<<3)|0); //@line 96 "mcbits/fft_tr.c"
     $64 = $63; //@line 96 "mcbits/fft_tr.c"
     $65 = $64; //@line 96 "mcbits/fft_tr.c"
     $66 = HEAP32[$65>>2]|0; //@line 96 "mcbits/fft_tr.c"
     $67 = (($64) + 4)|0; //@line 96 "mcbits/fft_tr.c"
     $68 = $67; //@line 96 "mcbits/fft_tr.c"
     $69 = HEAP32[$68>>2]|0; //@line 96 "mcbits/fft_tr.c"
     $70 = $53 ^ $66; //@line 96 "mcbits/fft_tr.c"
     $71 = $56 ^ $69; //@line 96 "mcbits/fft_tr.c"
     $72 = $3; //@line 96 "mcbits/fft_tr.c"
     $73 = $6; //@line 96 "mcbits/fft_tr.c"
     $74 = (($72) + (($73*96)|0)|0); //@line 96 "mcbits/fft_tr.c"
     $75 = $8; //@line 96 "mcbits/fft_tr.c"
     $76 = (($74) + ($75<<3)|0); //@line 96 "mcbits/fft_tr.c"
     $77 = $76; //@line 96 "mcbits/fft_tr.c"
     $78 = $77; //@line 96 "mcbits/fft_tr.c"
     HEAP32[$78>>2] = $70; //@line 96 "mcbits/fft_tr.c"
     $79 = (($77) + 4)|0; //@line 96 "mcbits/fft_tr.c"
     $80 = $79; //@line 96 "mcbits/fft_tr.c"
     HEAP32[$80>>2] = $71; //@line 96 "mcbits/fft_tr.c"
     $81 = $8; //@line 96 "mcbits/fft_tr.c"
     $82 = (($81) + 1)|0; //@line 96 "mcbits/fft_tr.c"
     $8 = $82; //@line 96 "mcbits/fft_tr.c"
    }
    $83 = $3; //@line 97 "mcbits/fft_tr.c"
    $84 = $6; //@line 97 "mcbits/fft_tr.c"
    $85 = (($83) + (($84*96)|0)|0); //@line 97 "mcbits/fft_tr.c"
    $86 = $12; //@line 97 "mcbits/fft_tr.c"
    $87 = $86; //@line 97 "mcbits/fft_tr.c"
    $88 = HEAP32[$87>>2]|0; //@line 97 "mcbits/fft_tr.c"
    $89 = (($86) + 4)|0; //@line 97 "mcbits/fft_tr.c"
    $90 = $89; //@line 97 "mcbits/fft_tr.c"
    $91 = HEAP32[$90>>2]|0; //@line 97 "mcbits/fft_tr.c"
    $92 = $6; //@line 97 "mcbits/fft_tr.c"
    $93 = $5; //@line 97 "mcbits/fft_tr.c"
    $94 = (($92) - ($93))|0; //@line 97 "mcbits/fft_tr.c"
    $95 = ($94|0)<(0); //@line 97 "mcbits/fft_tr.c"
    $96 = $95 << 31 >> 31; //@line 97 "mcbits/fft_tr.c"
    $97 = (_i64Add(($88|0),($91|0),($94|0),($96|0))|0); //@line 97 "mcbits/fft_tr.c"
    $98 = tempRet0; //@line 97 "mcbits/fft_tr.c"
    $99 = (760 + (($97*96)|0)|0); //@line 97 "mcbits/fft_tr.c"
    _vec_mul($9,$85,$99); //@line 97 "mcbits/fft_tr.c"
    $8 = 0; //@line 98 "mcbits/fft_tr.c"
    while(1) {
     $100 = $8; //@line 98 "mcbits/fft_tr.c"
     $101 = ($100|0)<(12); //@line 98 "mcbits/fft_tr.c"
     if (!($101)) {
      break;
     }
     $102 = $3; //@line 98 "mcbits/fft_tr.c"
     $103 = $6; //@line 98 "mcbits/fft_tr.c"
     $104 = $7; //@line 98 "mcbits/fft_tr.c"
     $105 = (($103) + ($104))|0; //@line 98 "mcbits/fft_tr.c"
     $106 = (($102) + (($105*96)|0)|0); //@line 98 "mcbits/fft_tr.c"
     $107 = $8; //@line 98 "mcbits/fft_tr.c"
     $108 = (($106) + ($107<<3)|0); //@line 98 "mcbits/fft_tr.c"
     $109 = $108; //@line 98 "mcbits/fft_tr.c"
     $110 = $109; //@line 98 "mcbits/fft_tr.c"
     $111 = HEAP32[$110>>2]|0; //@line 98 "mcbits/fft_tr.c"
     $112 = (($109) + 4)|0; //@line 98 "mcbits/fft_tr.c"
     $113 = $112; //@line 98 "mcbits/fft_tr.c"
     $114 = HEAP32[$113>>2]|0; //@line 98 "mcbits/fft_tr.c"
     $115 = $8; //@line 98 "mcbits/fft_tr.c"
     $116 = (($9) + ($115<<3)|0); //@line 98 "mcbits/fft_tr.c"
     $117 = $116; //@line 98 "mcbits/fft_tr.c"
     $118 = $117; //@line 98 "mcbits/fft_tr.c"
     $119 = HEAP32[$118>>2]|0; //@line 98 "mcbits/fft_tr.c"
     $120 = (($117) + 4)|0; //@line 98 "mcbits/fft_tr.c"
     $121 = $120; //@line 98 "mcbits/fft_tr.c"
     $122 = HEAP32[$121>>2]|0; //@line 98 "mcbits/fft_tr.c"
     $123 = $111 ^ $119; //@line 98 "mcbits/fft_tr.c"
     $124 = $114 ^ $122; //@line 98 "mcbits/fft_tr.c"
     $125 = $3; //@line 98 "mcbits/fft_tr.c"
     $126 = $6; //@line 98 "mcbits/fft_tr.c"
     $127 = $7; //@line 98 "mcbits/fft_tr.c"
     $128 = (($126) + ($127))|0; //@line 98 "mcbits/fft_tr.c"
     $129 = (($125) + (($128*96)|0)|0); //@line 98 "mcbits/fft_tr.c"
     $130 = $8; //@line 98 "mcbits/fft_tr.c"
     $131 = (($129) + ($130<<3)|0); //@line 98 "mcbits/fft_tr.c"
     $132 = $131; //@line 98 "mcbits/fft_tr.c"
     $133 = $132; //@line 98 "mcbits/fft_tr.c"
     HEAP32[$133>>2] = $123; //@line 98 "mcbits/fft_tr.c"
     $134 = (($132) + 4)|0; //@line 98 "mcbits/fft_tr.c"
     $135 = $134; //@line 98 "mcbits/fft_tr.c"
     HEAP32[$135>>2] = $124; //@line 98 "mcbits/fft_tr.c"
     $136 = $8; //@line 98 "mcbits/fft_tr.c"
     $137 = (($136) + 1)|0; //@line 98 "mcbits/fft_tr.c"
     $8 = $137; //@line 98 "mcbits/fft_tr.c"
    }
    $138 = $6; //@line 94 "mcbits/fft_tr.c"
    $139 = (($138) + 1)|0; //@line 94 "mcbits/fft_tr.c"
    $6 = $139; //@line 94 "mcbits/fft_tr.c"
   }
   $140 = $7; //@line 93 "mcbits/fft_tr.c"
   $141 = $140<<1; //@line 93 "mcbits/fft_tr.c"
   $142 = $5; //@line 93 "mcbits/fft_tr.c"
   $143 = (($142) + ($141))|0; //@line 93 "mcbits/fft_tr.c"
   $5 = $143; //@line 93 "mcbits/fft_tr.c"
  }
  $144 = $4; //@line 88 "mcbits/fft_tr.c"
  $145 = (($144) + -1)|0; //@line 88 "mcbits/fft_tr.c"
  $4 = $145; //@line 88 "mcbits/fft_tr.c"
 }
 $4 = 0; //@line 104 "mcbits/fft_tr.c"
 while(1) {
  $146 = $4; //@line 104 "mcbits/fft_tr.c"
  $147 = ($146|0)<(12); //@line 104 "mcbits/fft_tr.c"
  if (!($147)) {
   break;
  }
  $5 = 0; //@line 106 "mcbits/fft_tr.c"
  while(1) {
   $148 = $5; //@line 106 "mcbits/fft_tr.c"
   $149 = ($148|0)<(64); //@line 106 "mcbits/fft_tr.c"
   if (!($149)) {
    break;
   }
   $150 = $3; //@line 107 "mcbits/fft_tr.c"
   $151 = $5; //@line 107 "mcbits/fft_tr.c"
   $152 = (($150) + (($151*96)|0)|0); //@line 107 "mcbits/fft_tr.c"
   $153 = $4; //@line 107 "mcbits/fft_tr.c"
   $154 = (($152) + ($153<<3)|0); //@line 107 "mcbits/fft_tr.c"
   $155 = $154; //@line 107 "mcbits/fft_tr.c"
   $156 = $155; //@line 107 "mcbits/fft_tr.c"
   $157 = HEAP32[$156>>2]|0; //@line 107 "mcbits/fft_tr.c"
   $158 = (($155) + 4)|0; //@line 107 "mcbits/fft_tr.c"
   $159 = $158; //@line 107 "mcbits/fft_tr.c"
   $160 = HEAP32[$159>>2]|0; //@line 107 "mcbits/fft_tr.c"
   $161 = $5; //@line 107 "mcbits/fft_tr.c"
   $162 = (15349 + ($161)|0); //@line 107 "mcbits/fft_tr.c"
   $163 = HEAP8[$162>>0]|0; //@line 107 "mcbits/fft_tr.c"
   $164 = $163&255; //@line 107 "mcbits/fft_tr.c"
   $165 = (($11) + ($164<<3)|0); //@line 107 "mcbits/fft_tr.c"
   $166 = $165; //@line 107 "mcbits/fft_tr.c"
   $167 = $166; //@line 107 "mcbits/fft_tr.c"
   HEAP32[$167>>2] = $157; //@line 107 "mcbits/fft_tr.c"
   $168 = (($166) + 4)|0; //@line 107 "mcbits/fft_tr.c"
   $169 = $168; //@line 107 "mcbits/fft_tr.c"
   HEAP32[$169>>2] = $160; //@line 107 "mcbits/fft_tr.c"
   $170 = $5; //@line 106 "mcbits/fft_tr.c"
   $171 = (($170) + 1)|0; //@line 106 "mcbits/fft_tr.c"
   $5 = $171; //@line 106 "mcbits/fft_tr.c"
  }
  _transpose_64x64_compact($11,$11); //@line 109 "mcbits/fft_tr.c"
  $5 = 0; //@line 111 "mcbits/fft_tr.c"
  while(1) {
   $172 = $5; //@line 111 "mcbits/fft_tr.c"
   $173 = ($172|0)<(64); //@line 111 "mcbits/fft_tr.c"
   if (!($173)) {
    break;
   }
   $174 = $5; //@line 112 "mcbits/fft_tr.c"
   $175 = (($11) + ($174<<3)|0); //@line 112 "mcbits/fft_tr.c"
   $176 = $175; //@line 112 "mcbits/fft_tr.c"
   $177 = $176; //@line 112 "mcbits/fft_tr.c"
   $178 = HEAP32[$177>>2]|0; //@line 112 "mcbits/fft_tr.c"
   $179 = (($176) + 4)|0; //@line 112 "mcbits/fft_tr.c"
   $180 = $179; //@line 112 "mcbits/fft_tr.c"
   $181 = HEAP32[$180>>2]|0; //@line 112 "mcbits/fft_tr.c"
   $182 = $3; //@line 112 "mcbits/fft_tr.c"
   $183 = $5; //@line 112 "mcbits/fft_tr.c"
   $184 = (($182) + (($183*96)|0)|0); //@line 112 "mcbits/fft_tr.c"
   $185 = $4; //@line 112 "mcbits/fft_tr.c"
   $186 = (($184) + ($185<<3)|0); //@line 112 "mcbits/fft_tr.c"
   $187 = $186; //@line 112 "mcbits/fft_tr.c"
   $188 = $187; //@line 112 "mcbits/fft_tr.c"
   HEAP32[$188>>2] = $178; //@line 112 "mcbits/fft_tr.c"
   $189 = (($187) + 4)|0; //@line 112 "mcbits/fft_tr.c"
   $190 = $189; //@line 112 "mcbits/fft_tr.c"
   HEAP32[$190>>2] = $181; //@line 112 "mcbits/fft_tr.c"
   $191 = $5; //@line 111 "mcbits/fft_tr.c"
   $192 = (($191) + 1)|0; //@line 111 "mcbits/fft_tr.c"
   $5 = $192; //@line 111 "mcbits/fft_tr.c"
  }
  $193 = $4; //@line 104 "mcbits/fft_tr.c"
  $194 = (($193) + 1)|0; //@line 104 "mcbits/fft_tr.c"
  $4 = $194; //@line 104 "mcbits/fft_tr.c"
 }
 $195 = $3; //@line 117 "mcbits/fft_tr.c"
 $196 = ((($195)) + 3072|0); //@line 117 "mcbits/fft_tr.c"
 _vec_copy($10,$196); //@line 117 "mcbits/fft_tr.c"
 $8 = 0; //@line 117 "mcbits/fft_tr.c"
 while(1) {
  $197 = $8; //@line 117 "mcbits/fft_tr.c"
  $198 = ($197|0)<(12); //@line 117 "mcbits/fft_tr.c"
  if (!($198)) {
   break;
  }
  $199 = $3; //@line 117 "mcbits/fft_tr.c"
  $200 = ((($199)) + 3168|0); //@line 117 "mcbits/fft_tr.c"
  $201 = $8; //@line 117 "mcbits/fft_tr.c"
  $202 = (($200) + ($201<<3)|0); //@line 117 "mcbits/fft_tr.c"
  $203 = $202; //@line 117 "mcbits/fft_tr.c"
  $204 = $203; //@line 117 "mcbits/fft_tr.c"
  $205 = HEAP32[$204>>2]|0; //@line 117 "mcbits/fft_tr.c"
  $206 = (($203) + 4)|0; //@line 117 "mcbits/fft_tr.c"
  $207 = $206; //@line 117 "mcbits/fft_tr.c"
  $208 = HEAP32[$207>>2]|0; //@line 117 "mcbits/fft_tr.c"
  $209 = $3; //@line 117 "mcbits/fft_tr.c"
  $210 = ((($209)) + 3072|0); //@line 117 "mcbits/fft_tr.c"
  $211 = $8; //@line 117 "mcbits/fft_tr.c"
  $212 = (($210) + ($211<<3)|0); //@line 117 "mcbits/fft_tr.c"
  $213 = $212; //@line 117 "mcbits/fft_tr.c"
  $214 = $213; //@line 117 "mcbits/fft_tr.c"
  $215 = HEAP32[$214>>2]|0; //@line 117 "mcbits/fft_tr.c"
  $216 = (($213) + 4)|0; //@line 117 "mcbits/fft_tr.c"
  $217 = $216; //@line 117 "mcbits/fft_tr.c"
  $218 = HEAP32[$217>>2]|0; //@line 117 "mcbits/fft_tr.c"
  $219 = $205 ^ $215; //@line 117 "mcbits/fft_tr.c"
  $220 = $208 ^ $218; //@line 117 "mcbits/fft_tr.c"
  $221 = $3; //@line 117 "mcbits/fft_tr.c"
  $222 = ((($221)) + 3168|0); //@line 117 "mcbits/fft_tr.c"
  $223 = $8; //@line 117 "mcbits/fft_tr.c"
  $224 = (($222) + ($223<<3)|0); //@line 117 "mcbits/fft_tr.c"
  $225 = $224; //@line 117 "mcbits/fft_tr.c"
  $226 = $225; //@line 117 "mcbits/fft_tr.c"
  HEAP32[$226>>2] = $219; //@line 117 "mcbits/fft_tr.c"
  $227 = (($225) + 4)|0; //@line 117 "mcbits/fft_tr.c"
  $228 = $227; //@line 117 "mcbits/fft_tr.c"
  HEAP32[$228>>2] = $220; //@line 117 "mcbits/fft_tr.c"
  $229 = $8; //@line 117 "mcbits/fft_tr.c"
  $230 = (($229) + 1)|0; //@line 117 "mcbits/fft_tr.c"
  $8 = $230; //@line 117 "mcbits/fft_tr.c"
 }
 $231 = ((($10)) + 96|0); //@line 118 "mcbits/fft_tr.c"
 $232 = $3; //@line 118 "mcbits/fft_tr.c"
 $233 = ((($232)) + 3168|0); //@line 118 "mcbits/fft_tr.c"
 _vec_copy($231,$233); //@line 118 "mcbits/fft_tr.c"
 $8 = 0; //@line 118 "mcbits/fft_tr.c"
 while(1) {
  $234 = $8; //@line 118 "mcbits/fft_tr.c"
  $235 = ($234|0)<(12); //@line 118 "mcbits/fft_tr.c"
  if (!($235)) {
   break;
  }
  $236 = $3; //@line 118 "mcbits/fft_tr.c"
  $237 = ((($236)) + 3360|0); //@line 118 "mcbits/fft_tr.c"
  $238 = $8; //@line 118 "mcbits/fft_tr.c"
  $239 = (($237) + ($238<<3)|0); //@line 118 "mcbits/fft_tr.c"
  $240 = $239; //@line 118 "mcbits/fft_tr.c"
  $241 = $240; //@line 118 "mcbits/fft_tr.c"
  $242 = HEAP32[$241>>2]|0; //@line 118 "mcbits/fft_tr.c"
  $243 = (($240) + 4)|0; //@line 118 "mcbits/fft_tr.c"
  $244 = $243; //@line 118 "mcbits/fft_tr.c"
  $245 = HEAP32[$244>>2]|0; //@line 118 "mcbits/fft_tr.c"
  $246 = $3; //@line 118 "mcbits/fft_tr.c"
  $247 = ((($246)) + 3168|0); //@line 118 "mcbits/fft_tr.c"
  $248 = $8; //@line 118 "mcbits/fft_tr.c"
  $249 = (($247) + ($248<<3)|0); //@line 118 "mcbits/fft_tr.c"
  $250 = $249; //@line 118 "mcbits/fft_tr.c"
  $251 = $250; //@line 118 "mcbits/fft_tr.c"
  $252 = HEAP32[$251>>2]|0; //@line 118 "mcbits/fft_tr.c"
  $253 = (($250) + 4)|0; //@line 118 "mcbits/fft_tr.c"
  $254 = $253; //@line 118 "mcbits/fft_tr.c"
  $255 = HEAP32[$254>>2]|0; //@line 118 "mcbits/fft_tr.c"
  $256 = $242 ^ $252; //@line 118 "mcbits/fft_tr.c"
  $257 = $245 ^ $255; //@line 118 "mcbits/fft_tr.c"
  $258 = $3; //@line 118 "mcbits/fft_tr.c"
  $259 = ((($258)) + 3360|0); //@line 118 "mcbits/fft_tr.c"
  $260 = $8; //@line 118 "mcbits/fft_tr.c"
  $261 = (($259) + ($260<<3)|0); //@line 118 "mcbits/fft_tr.c"
  $262 = $261; //@line 118 "mcbits/fft_tr.c"
  $263 = $262; //@line 118 "mcbits/fft_tr.c"
  HEAP32[$263>>2] = $256; //@line 118 "mcbits/fft_tr.c"
  $264 = (($262) + 4)|0; //@line 118 "mcbits/fft_tr.c"
  $265 = $264; //@line 118 "mcbits/fft_tr.c"
  HEAP32[$265>>2] = $257; //@line 118 "mcbits/fft_tr.c"
  $266 = $8; //@line 118 "mcbits/fft_tr.c"
  $267 = (($266) + 1)|0; //@line 118 "mcbits/fft_tr.c"
  $8 = $267; //@line 118 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 119 "mcbits/fft_tr.c"
 while(1) {
  $268 = $8; //@line 119 "mcbits/fft_tr.c"
  $269 = ($268|0)<(12); //@line 119 "mcbits/fft_tr.c"
  if (!($269)) {
   break;
  }
  $270 = $8; //@line 119 "mcbits/fft_tr.c"
  $271 = (($10) + ($270<<3)|0); //@line 119 "mcbits/fft_tr.c"
  $272 = $271; //@line 119 "mcbits/fft_tr.c"
  $273 = $272; //@line 119 "mcbits/fft_tr.c"
  $274 = HEAP32[$273>>2]|0; //@line 119 "mcbits/fft_tr.c"
  $275 = (($272) + 4)|0; //@line 119 "mcbits/fft_tr.c"
  $276 = $275; //@line 119 "mcbits/fft_tr.c"
  $277 = HEAP32[$276>>2]|0; //@line 119 "mcbits/fft_tr.c"
  $278 = $3; //@line 119 "mcbits/fft_tr.c"
  $279 = ((($278)) + 3360|0); //@line 119 "mcbits/fft_tr.c"
  $280 = $8; //@line 119 "mcbits/fft_tr.c"
  $281 = (($279) + ($280<<3)|0); //@line 119 "mcbits/fft_tr.c"
  $282 = $281; //@line 119 "mcbits/fft_tr.c"
  $283 = $282; //@line 119 "mcbits/fft_tr.c"
  $284 = HEAP32[$283>>2]|0; //@line 119 "mcbits/fft_tr.c"
  $285 = (($282) + 4)|0; //@line 119 "mcbits/fft_tr.c"
  $286 = $285; //@line 119 "mcbits/fft_tr.c"
  $287 = HEAP32[$286>>2]|0; //@line 119 "mcbits/fft_tr.c"
  $288 = $274 ^ $284; //@line 119 "mcbits/fft_tr.c"
  $289 = $277 ^ $287; //@line 119 "mcbits/fft_tr.c"
  $290 = $8; //@line 119 "mcbits/fft_tr.c"
  $291 = (($10) + ($290<<3)|0); //@line 119 "mcbits/fft_tr.c"
  $292 = $291; //@line 119 "mcbits/fft_tr.c"
  $293 = $292; //@line 119 "mcbits/fft_tr.c"
  HEAP32[$293>>2] = $288; //@line 119 "mcbits/fft_tr.c"
  $294 = (($292) + 4)|0; //@line 119 "mcbits/fft_tr.c"
  $295 = $294; //@line 119 "mcbits/fft_tr.c"
  HEAP32[$295>>2] = $289; //@line 119 "mcbits/fft_tr.c"
  $296 = $8; //@line 119 "mcbits/fft_tr.c"
  $297 = (($296) + 1)|0; //@line 119 "mcbits/fft_tr.c"
  $8 = $297; //@line 119 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 119 "mcbits/fft_tr.c"
 while(1) {
  $298 = $8; //@line 119 "mcbits/fft_tr.c"
  $299 = ($298|0)<(12); //@line 119 "mcbits/fft_tr.c"
  if (!($299)) {
   break;
  }
  $300 = $3; //@line 119 "mcbits/fft_tr.c"
  $301 = ((($300)) + 3264|0); //@line 119 "mcbits/fft_tr.c"
  $302 = $8; //@line 119 "mcbits/fft_tr.c"
  $303 = (($301) + ($302<<3)|0); //@line 119 "mcbits/fft_tr.c"
  $304 = $303; //@line 119 "mcbits/fft_tr.c"
  $305 = $304; //@line 119 "mcbits/fft_tr.c"
  $306 = HEAP32[$305>>2]|0; //@line 119 "mcbits/fft_tr.c"
  $307 = (($304) + 4)|0; //@line 119 "mcbits/fft_tr.c"
  $308 = $307; //@line 119 "mcbits/fft_tr.c"
  $309 = HEAP32[$308>>2]|0; //@line 119 "mcbits/fft_tr.c"
  $310 = $3; //@line 119 "mcbits/fft_tr.c"
  $311 = ((($310)) + 3360|0); //@line 119 "mcbits/fft_tr.c"
  $312 = $8; //@line 119 "mcbits/fft_tr.c"
  $313 = (($311) + ($312<<3)|0); //@line 119 "mcbits/fft_tr.c"
  $314 = $313; //@line 119 "mcbits/fft_tr.c"
  $315 = $314; //@line 119 "mcbits/fft_tr.c"
  $316 = HEAP32[$315>>2]|0; //@line 119 "mcbits/fft_tr.c"
  $317 = (($314) + 4)|0; //@line 119 "mcbits/fft_tr.c"
  $318 = $317; //@line 119 "mcbits/fft_tr.c"
  $319 = HEAP32[$318>>2]|0; //@line 119 "mcbits/fft_tr.c"
  $320 = $306 ^ $316; //@line 119 "mcbits/fft_tr.c"
  $321 = $309 ^ $319; //@line 119 "mcbits/fft_tr.c"
  $322 = $3; //@line 119 "mcbits/fft_tr.c"
  $323 = ((($322)) + 3264|0); //@line 119 "mcbits/fft_tr.c"
  $324 = $8; //@line 119 "mcbits/fft_tr.c"
  $325 = (($323) + ($324<<3)|0); //@line 119 "mcbits/fft_tr.c"
  $326 = $325; //@line 119 "mcbits/fft_tr.c"
  $327 = $326; //@line 119 "mcbits/fft_tr.c"
  HEAP32[$327>>2] = $320; //@line 119 "mcbits/fft_tr.c"
  $328 = (($326) + 4)|0; //@line 119 "mcbits/fft_tr.c"
  $329 = $328; //@line 119 "mcbits/fft_tr.c"
  HEAP32[$329>>2] = $321; //@line 119 "mcbits/fft_tr.c"
  $330 = $8; //@line 119 "mcbits/fft_tr.c"
  $331 = (($330) + 1)|0; //@line 119 "mcbits/fft_tr.c"
  $8 = $331; //@line 119 "mcbits/fft_tr.c"
 }
 $332 = ((($10)) + 192|0); //@line 120 "mcbits/fft_tr.c"
 $333 = $3; //@line 120 "mcbits/fft_tr.c"
 $334 = ((($333)) + 3264|0); //@line 120 "mcbits/fft_tr.c"
 _vec_copy($332,$334); //@line 120 "mcbits/fft_tr.c"
 $8 = 0; //@line 120 "mcbits/fft_tr.c"
 while(1) {
  $335 = $8; //@line 120 "mcbits/fft_tr.c"
  $336 = ($335|0)<(12); //@line 120 "mcbits/fft_tr.c"
  if (!($336)) {
   break;
  }
  $337 = $3; //@line 120 "mcbits/fft_tr.c"
  $338 = ((($337)) + 3648|0); //@line 120 "mcbits/fft_tr.c"
  $339 = $8; //@line 120 "mcbits/fft_tr.c"
  $340 = (($338) + ($339<<3)|0); //@line 120 "mcbits/fft_tr.c"
  $341 = $340; //@line 120 "mcbits/fft_tr.c"
  $342 = $341; //@line 120 "mcbits/fft_tr.c"
  $343 = HEAP32[$342>>2]|0; //@line 120 "mcbits/fft_tr.c"
  $344 = (($341) + 4)|0; //@line 120 "mcbits/fft_tr.c"
  $345 = $344; //@line 120 "mcbits/fft_tr.c"
  $346 = HEAP32[$345>>2]|0; //@line 120 "mcbits/fft_tr.c"
  $347 = $3; //@line 120 "mcbits/fft_tr.c"
  $348 = ((($347)) + 3264|0); //@line 120 "mcbits/fft_tr.c"
  $349 = $8; //@line 120 "mcbits/fft_tr.c"
  $350 = (($348) + ($349<<3)|0); //@line 120 "mcbits/fft_tr.c"
  $351 = $350; //@line 120 "mcbits/fft_tr.c"
  $352 = $351; //@line 120 "mcbits/fft_tr.c"
  $353 = HEAP32[$352>>2]|0; //@line 120 "mcbits/fft_tr.c"
  $354 = (($351) + 4)|0; //@line 120 "mcbits/fft_tr.c"
  $355 = $354; //@line 120 "mcbits/fft_tr.c"
  $356 = HEAP32[$355>>2]|0; //@line 120 "mcbits/fft_tr.c"
  $357 = $343 ^ $353; //@line 120 "mcbits/fft_tr.c"
  $358 = $346 ^ $356; //@line 120 "mcbits/fft_tr.c"
  $359 = $3; //@line 120 "mcbits/fft_tr.c"
  $360 = ((($359)) + 3648|0); //@line 120 "mcbits/fft_tr.c"
  $361 = $8; //@line 120 "mcbits/fft_tr.c"
  $362 = (($360) + ($361<<3)|0); //@line 120 "mcbits/fft_tr.c"
  $363 = $362; //@line 120 "mcbits/fft_tr.c"
  $364 = $363; //@line 120 "mcbits/fft_tr.c"
  HEAP32[$364>>2] = $357; //@line 120 "mcbits/fft_tr.c"
  $365 = (($363) + 4)|0; //@line 120 "mcbits/fft_tr.c"
  $366 = $365; //@line 120 "mcbits/fft_tr.c"
  HEAP32[$366>>2] = $358; //@line 120 "mcbits/fft_tr.c"
  $367 = $8; //@line 120 "mcbits/fft_tr.c"
  $368 = (($367) + 1)|0; //@line 120 "mcbits/fft_tr.c"
  $8 = $368; //@line 120 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 121 "mcbits/fft_tr.c"
 while(1) {
  $369 = $8; //@line 121 "mcbits/fft_tr.c"
  $370 = ($369|0)<(12); //@line 121 "mcbits/fft_tr.c"
  if (!($370)) {
   break;
  }
  $371 = $8; //@line 121 "mcbits/fft_tr.c"
  $372 = (($10) + ($371<<3)|0); //@line 121 "mcbits/fft_tr.c"
  $373 = $372; //@line 121 "mcbits/fft_tr.c"
  $374 = $373; //@line 121 "mcbits/fft_tr.c"
  $375 = HEAP32[$374>>2]|0; //@line 121 "mcbits/fft_tr.c"
  $376 = (($373) + 4)|0; //@line 121 "mcbits/fft_tr.c"
  $377 = $376; //@line 121 "mcbits/fft_tr.c"
  $378 = HEAP32[$377>>2]|0; //@line 121 "mcbits/fft_tr.c"
  $379 = $3; //@line 121 "mcbits/fft_tr.c"
  $380 = ((($379)) + 3648|0); //@line 121 "mcbits/fft_tr.c"
  $381 = $8; //@line 121 "mcbits/fft_tr.c"
  $382 = (($380) + ($381<<3)|0); //@line 121 "mcbits/fft_tr.c"
  $383 = $382; //@line 121 "mcbits/fft_tr.c"
  $384 = $383; //@line 121 "mcbits/fft_tr.c"
  $385 = HEAP32[$384>>2]|0; //@line 121 "mcbits/fft_tr.c"
  $386 = (($383) + 4)|0; //@line 121 "mcbits/fft_tr.c"
  $387 = $386; //@line 121 "mcbits/fft_tr.c"
  $388 = HEAP32[$387>>2]|0; //@line 121 "mcbits/fft_tr.c"
  $389 = $375 ^ $385; //@line 121 "mcbits/fft_tr.c"
  $390 = $378 ^ $388; //@line 121 "mcbits/fft_tr.c"
  $391 = $8; //@line 121 "mcbits/fft_tr.c"
  $392 = (($10) + ($391<<3)|0); //@line 121 "mcbits/fft_tr.c"
  $393 = $392; //@line 121 "mcbits/fft_tr.c"
  $394 = $393; //@line 121 "mcbits/fft_tr.c"
  HEAP32[$394>>2] = $389; //@line 121 "mcbits/fft_tr.c"
  $395 = (($393) + 4)|0; //@line 121 "mcbits/fft_tr.c"
  $396 = $395; //@line 121 "mcbits/fft_tr.c"
  HEAP32[$396>>2] = $390; //@line 121 "mcbits/fft_tr.c"
  $397 = $8; //@line 121 "mcbits/fft_tr.c"
  $398 = (($397) + 1)|0; //@line 121 "mcbits/fft_tr.c"
  $8 = $398; //@line 121 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 121 "mcbits/fft_tr.c"
 while(1) {
  $399 = $8; //@line 121 "mcbits/fft_tr.c"
  $400 = ($399|0)<(12); //@line 121 "mcbits/fft_tr.c"
  if (!($400)) {
   break;
  }
  $401 = $3; //@line 121 "mcbits/fft_tr.c"
  $402 = ((($401)) + 3744|0); //@line 121 "mcbits/fft_tr.c"
  $403 = $8; //@line 121 "mcbits/fft_tr.c"
  $404 = (($402) + ($403<<3)|0); //@line 121 "mcbits/fft_tr.c"
  $405 = $404; //@line 121 "mcbits/fft_tr.c"
  $406 = $405; //@line 121 "mcbits/fft_tr.c"
  $407 = HEAP32[$406>>2]|0; //@line 121 "mcbits/fft_tr.c"
  $408 = (($405) + 4)|0; //@line 121 "mcbits/fft_tr.c"
  $409 = $408; //@line 121 "mcbits/fft_tr.c"
  $410 = HEAP32[$409>>2]|0; //@line 121 "mcbits/fft_tr.c"
  $411 = $3; //@line 121 "mcbits/fft_tr.c"
  $412 = ((($411)) + 3648|0); //@line 121 "mcbits/fft_tr.c"
  $413 = $8; //@line 121 "mcbits/fft_tr.c"
  $414 = (($412) + ($413<<3)|0); //@line 121 "mcbits/fft_tr.c"
  $415 = $414; //@line 121 "mcbits/fft_tr.c"
  $416 = $415; //@line 121 "mcbits/fft_tr.c"
  $417 = HEAP32[$416>>2]|0; //@line 121 "mcbits/fft_tr.c"
  $418 = (($415) + 4)|0; //@line 121 "mcbits/fft_tr.c"
  $419 = $418; //@line 121 "mcbits/fft_tr.c"
  $420 = HEAP32[$419>>2]|0; //@line 121 "mcbits/fft_tr.c"
  $421 = $407 ^ $417; //@line 121 "mcbits/fft_tr.c"
  $422 = $410 ^ $420; //@line 121 "mcbits/fft_tr.c"
  $423 = $3; //@line 121 "mcbits/fft_tr.c"
  $424 = ((($423)) + 3744|0); //@line 121 "mcbits/fft_tr.c"
  $425 = $8; //@line 121 "mcbits/fft_tr.c"
  $426 = (($424) + ($425<<3)|0); //@line 121 "mcbits/fft_tr.c"
  $427 = $426; //@line 121 "mcbits/fft_tr.c"
  $428 = $427; //@line 121 "mcbits/fft_tr.c"
  HEAP32[$428>>2] = $421; //@line 121 "mcbits/fft_tr.c"
  $429 = (($427) + 4)|0; //@line 121 "mcbits/fft_tr.c"
  $430 = $429; //@line 121 "mcbits/fft_tr.c"
  HEAP32[$430>>2] = $422; //@line 121 "mcbits/fft_tr.c"
  $431 = $8; //@line 121 "mcbits/fft_tr.c"
  $432 = (($431) + 1)|0; //@line 121 "mcbits/fft_tr.c"
  $8 = $432; //@line 121 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 122 "mcbits/fft_tr.c"
 while(1) {
  $433 = $8; //@line 122 "mcbits/fft_tr.c"
  $434 = ($433|0)<(12); //@line 122 "mcbits/fft_tr.c"
  if (!($434)) {
   break;
  }
  $435 = ((($10)) + 96|0); //@line 122 "mcbits/fft_tr.c"
  $436 = $8; //@line 122 "mcbits/fft_tr.c"
  $437 = (($435) + ($436<<3)|0); //@line 122 "mcbits/fft_tr.c"
  $438 = $437; //@line 122 "mcbits/fft_tr.c"
  $439 = $438; //@line 122 "mcbits/fft_tr.c"
  $440 = HEAP32[$439>>2]|0; //@line 122 "mcbits/fft_tr.c"
  $441 = (($438) + 4)|0; //@line 122 "mcbits/fft_tr.c"
  $442 = $441; //@line 122 "mcbits/fft_tr.c"
  $443 = HEAP32[$442>>2]|0; //@line 122 "mcbits/fft_tr.c"
  $444 = $3; //@line 122 "mcbits/fft_tr.c"
  $445 = ((($444)) + 3744|0); //@line 122 "mcbits/fft_tr.c"
  $446 = $8; //@line 122 "mcbits/fft_tr.c"
  $447 = (($445) + ($446<<3)|0); //@line 122 "mcbits/fft_tr.c"
  $448 = $447; //@line 122 "mcbits/fft_tr.c"
  $449 = $448; //@line 122 "mcbits/fft_tr.c"
  $450 = HEAP32[$449>>2]|0; //@line 122 "mcbits/fft_tr.c"
  $451 = (($448) + 4)|0; //@line 122 "mcbits/fft_tr.c"
  $452 = $451; //@line 122 "mcbits/fft_tr.c"
  $453 = HEAP32[$452>>2]|0; //@line 122 "mcbits/fft_tr.c"
  $454 = $440 ^ $450; //@line 122 "mcbits/fft_tr.c"
  $455 = $443 ^ $453; //@line 122 "mcbits/fft_tr.c"
  $456 = ((($10)) + 96|0); //@line 122 "mcbits/fft_tr.c"
  $457 = $8; //@line 122 "mcbits/fft_tr.c"
  $458 = (($456) + ($457<<3)|0); //@line 122 "mcbits/fft_tr.c"
  $459 = $458; //@line 122 "mcbits/fft_tr.c"
  $460 = $459; //@line 122 "mcbits/fft_tr.c"
  HEAP32[$460>>2] = $454; //@line 122 "mcbits/fft_tr.c"
  $461 = (($459) + 4)|0; //@line 122 "mcbits/fft_tr.c"
  $462 = $461; //@line 122 "mcbits/fft_tr.c"
  HEAP32[$462>>2] = $455; //@line 122 "mcbits/fft_tr.c"
  $463 = $8; //@line 122 "mcbits/fft_tr.c"
  $464 = (($463) + 1)|0; //@line 122 "mcbits/fft_tr.c"
  $8 = $464; //@line 122 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 122 "mcbits/fft_tr.c"
 while(1) {
  $465 = $8; //@line 122 "mcbits/fft_tr.c"
  $466 = ($465|0)<(12); //@line 122 "mcbits/fft_tr.c"
  if (!($466)) {
   break;
  }
  $467 = $3; //@line 122 "mcbits/fft_tr.c"
  $468 = ((($467)) + 3552|0); //@line 122 "mcbits/fft_tr.c"
  $469 = $8; //@line 122 "mcbits/fft_tr.c"
  $470 = (($468) + ($469<<3)|0); //@line 122 "mcbits/fft_tr.c"
  $471 = $470; //@line 122 "mcbits/fft_tr.c"
  $472 = $471; //@line 122 "mcbits/fft_tr.c"
  $473 = HEAP32[$472>>2]|0; //@line 122 "mcbits/fft_tr.c"
  $474 = (($471) + 4)|0; //@line 122 "mcbits/fft_tr.c"
  $475 = $474; //@line 122 "mcbits/fft_tr.c"
  $476 = HEAP32[$475>>2]|0; //@line 122 "mcbits/fft_tr.c"
  $477 = $3; //@line 122 "mcbits/fft_tr.c"
  $478 = ((($477)) + 3744|0); //@line 122 "mcbits/fft_tr.c"
  $479 = $8; //@line 122 "mcbits/fft_tr.c"
  $480 = (($478) + ($479<<3)|0); //@line 122 "mcbits/fft_tr.c"
  $481 = $480; //@line 122 "mcbits/fft_tr.c"
  $482 = $481; //@line 122 "mcbits/fft_tr.c"
  $483 = HEAP32[$482>>2]|0; //@line 122 "mcbits/fft_tr.c"
  $484 = (($481) + 4)|0; //@line 122 "mcbits/fft_tr.c"
  $485 = $484; //@line 122 "mcbits/fft_tr.c"
  $486 = HEAP32[$485>>2]|0; //@line 122 "mcbits/fft_tr.c"
  $487 = $473 ^ $483; //@line 122 "mcbits/fft_tr.c"
  $488 = $476 ^ $486; //@line 122 "mcbits/fft_tr.c"
  $489 = $3; //@line 122 "mcbits/fft_tr.c"
  $490 = ((($489)) + 3552|0); //@line 122 "mcbits/fft_tr.c"
  $491 = $8; //@line 122 "mcbits/fft_tr.c"
  $492 = (($490) + ($491<<3)|0); //@line 122 "mcbits/fft_tr.c"
  $493 = $492; //@line 122 "mcbits/fft_tr.c"
  $494 = $493; //@line 122 "mcbits/fft_tr.c"
  HEAP32[$494>>2] = $487; //@line 122 "mcbits/fft_tr.c"
  $495 = (($493) + 4)|0; //@line 122 "mcbits/fft_tr.c"
  $496 = $495; //@line 122 "mcbits/fft_tr.c"
  HEAP32[$496>>2] = $488; //@line 122 "mcbits/fft_tr.c"
  $497 = $8; //@line 122 "mcbits/fft_tr.c"
  $498 = (($497) + 1)|0; //@line 122 "mcbits/fft_tr.c"
  $8 = $498; //@line 122 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 123 "mcbits/fft_tr.c"
 while(1) {
  $499 = $8; //@line 123 "mcbits/fft_tr.c"
  $500 = ($499|0)<(12); //@line 123 "mcbits/fft_tr.c"
  if (!($500)) {
   break;
  }
  $501 = $8; //@line 123 "mcbits/fft_tr.c"
  $502 = (($10) + ($501<<3)|0); //@line 123 "mcbits/fft_tr.c"
  $503 = $502; //@line 123 "mcbits/fft_tr.c"
  $504 = $503; //@line 123 "mcbits/fft_tr.c"
  $505 = HEAP32[$504>>2]|0; //@line 123 "mcbits/fft_tr.c"
  $506 = (($503) + 4)|0; //@line 123 "mcbits/fft_tr.c"
  $507 = $506; //@line 123 "mcbits/fft_tr.c"
  $508 = HEAP32[$507>>2]|0; //@line 123 "mcbits/fft_tr.c"
  $509 = $3; //@line 123 "mcbits/fft_tr.c"
  $510 = ((($509)) + 3552|0); //@line 123 "mcbits/fft_tr.c"
  $511 = $8; //@line 123 "mcbits/fft_tr.c"
  $512 = (($510) + ($511<<3)|0); //@line 123 "mcbits/fft_tr.c"
  $513 = $512; //@line 123 "mcbits/fft_tr.c"
  $514 = $513; //@line 123 "mcbits/fft_tr.c"
  $515 = HEAP32[$514>>2]|0; //@line 123 "mcbits/fft_tr.c"
  $516 = (($513) + 4)|0; //@line 123 "mcbits/fft_tr.c"
  $517 = $516; //@line 123 "mcbits/fft_tr.c"
  $518 = HEAP32[$517>>2]|0; //@line 123 "mcbits/fft_tr.c"
  $519 = $505 ^ $515; //@line 123 "mcbits/fft_tr.c"
  $520 = $508 ^ $518; //@line 123 "mcbits/fft_tr.c"
  $521 = $8; //@line 123 "mcbits/fft_tr.c"
  $522 = (($10) + ($521<<3)|0); //@line 123 "mcbits/fft_tr.c"
  $523 = $522; //@line 123 "mcbits/fft_tr.c"
  $524 = $523; //@line 123 "mcbits/fft_tr.c"
  HEAP32[$524>>2] = $519; //@line 123 "mcbits/fft_tr.c"
  $525 = (($523) + 4)|0; //@line 123 "mcbits/fft_tr.c"
  $526 = $525; //@line 123 "mcbits/fft_tr.c"
  HEAP32[$526>>2] = $520; //@line 123 "mcbits/fft_tr.c"
  $527 = $8; //@line 123 "mcbits/fft_tr.c"
  $528 = (($527) + 1)|0; //@line 123 "mcbits/fft_tr.c"
  $8 = $528; //@line 123 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 123 "mcbits/fft_tr.c"
 while(1) {
  $529 = $8; //@line 123 "mcbits/fft_tr.c"
  $530 = ($529|0)<(12); //@line 123 "mcbits/fft_tr.c"
  if (!($530)) {
   break;
  }
  $531 = $3; //@line 123 "mcbits/fft_tr.c"
  $532 = ((($531)) + 3456|0); //@line 123 "mcbits/fft_tr.c"
  $533 = $8; //@line 123 "mcbits/fft_tr.c"
  $534 = (($532) + ($533<<3)|0); //@line 123 "mcbits/fft_tr.c"
  $535 = $534; //@line 123 "mcbits/fft_tr.c"
  $536 = $535; //@line 123 "mcbits/fft_tr.c"
  $537 = HEAP32[$536>>2]|0; //@line 123 "mcbits/fft_tr.c"
  $538 = (($535) + 4)|0; //@line 123 "mcbits/fft_tr.c"
  $539 = $538; //@line 123 "mcbits/fft_tr.c"
  $540 = HEAP32[$539>>2]|0; //@line 123 "mcbits/fft_tr.c"
  $541 = $3; //@line 123 "mcbits/fft_tr.c"
  $542 = ((($541)) + 3552|0); //@line 123 "mcbits/fft_tr.c"
  $543 = $8; //@line 123 "mcbits/fft_tr.c"
  $544 = (($542) + ($543<<3)|0); //@line 123 "mcbits/fft_tr.c"
  $545 = $544; //@line 123 "mcbits/fft_tr.c"
  $546 = $545; //@line 123 "mcbits/fft_tr.c"
  $547 = HEAP32[$546>>2]|0; //@line 123 "mcbits/fft_tr.c"
  $548 = (($545) + 4)|0; //@line 123 "mcbits/fft_tr.c"
  $549 = $548; //@line 123 "mcbits/fft_tr.c"
  $550 = HEAP32[$549>>2]|0; //@line 123 "mcbits/fft_tr.c"
  $551 = $537 ^ $547; //@line 123 "mcbits/fft_tr.c"
  $552 = $540 ^ $550; //@line 123 "mcbits/fft_tr.c"
  $553 = $3; //@line 123 "mcbits/fft_tr.c"
  $554 = ((($553)) + 3456|0); //@line 123 "mcbits/fft_tr.c"
  $555 = $8; //@line 123 "mcbits/fft_tr.c"
  $556 = (($554) + ($555<<3)|0); //@line 123 "mcbits/fft_tr.c"
  $557 = $556; //@line 123 "mcbits/fft_tr.c"
  $558 = $557; //@line 123 "mcbits/fft_tr.c"
  HEAP32[$558>>2] = $551; //@line 123 "mcbits/fft_tr.c"
  $559 = (($557) + 4)|0; //@line 123 "mcbits/fft_tr.c"
  $560 = $559; //@line 123 "mcbits/fft_tr.c"
  HEAP32[$560>>2] = $552; //@line 123 "mcbits/fft_tr.c"
  $561 = $8; //@line 123 "mcbits/fft_tr.c"
  $562 = (($561) + 1)|0; //@line 123 "mcbits/fft_tr.c"
  $8 = $562; //@line 123 "mcbits/fft_tr.c"
 }
 $563 = ((($10)) + 288|0); //@line 124 "mcbits/fft_tr.c"
 $564 = $3; //@line 124 "mcbits/fft_tr.c"
 $565 = ((($564)) + 3456|0); //@line 124 "mcbits/fft_tr.c"
 _vec_copy($563,$565); //@line 124 "mcbits/fft_tr.c"
 $8 = 0; //@line 124 "mcbits/fft_tr.c"
 while(1) {
  $566 = $8; //@line 124 "mcbits/fft_tr.c"
  $567 = ($566|0)<(12); //@line 124 "mcbits/fft_tr.c"
  if (!($567)) {
   break;
  }
  $568 = $3; //@line 124 "mcbits/fft_tr.c"
  $569 = ((($568)) + 4224|0); //@line 124 "mcbits/fft_tr.c"
  $570 = $8; //@line 124 "mcbits/fft_tr.c"
  $571 = (($569) + ($570<<3)|0); //@line 124 "mcbits/fft_tr.c"
  $572 = $571; //@line 124 "mcbits/fft_tr.c"
  $573 = $572; //@line 124 "mcbits/fft_tr.c"
  $574 = HEAP32[$573>>2]|0; //@line 124 "mcbits/fft_tr.c"
  $575 = (($572) + 4)|0; //@line 124 "mcbits/fft_tr.c"
  $576 = $575; //@line 124 "mcbits/fft_tr.c"
  $577 = HEAP32[$576>>2]|0; //@line 124 "mcbits/fft_tr.c"
  $578 = $3; //@line 124 "mcbits/fft_tr.c"
  $579 = ((($578)) + 3456|0); //@line 124 "mcbits/fft_tr.c"
  $580 = $8; //@line 124 "mcbits/fft_tr.c"
  $581 = (($579) + ($580<<3)|0); //@line 124 "mcbits/fft_tr.c"
  $582 = $581; //@line 124 "mcbits/fft_tr.c"
  $583 = $582; //@line 124 "mcbits/fft_tr.c"
  $584 = HEAP32[$583>>2]|0; //@line 124 "mcbits/fft_tr.c"
  $585 = (($582) + 4)|0; //@line 124 "mcbits/fft_tr.c"
  $586 = $585; //@line 124 "mcbits/fft_tr.c"
  $587 = HEAP32[$586>>2]|0; //@line 124 "mcbits/fft_tr.c"
  $588 = $574 ^ $584; //@line 124 "mcbits/fft_tr.c"
  $589 = $577 ^ $587; //@line 124 "mcbits/fft_tr.c"
  $590 = $3; //@line 124 "mcbits/fft_tr.c"
  $591 = ((($590)) + 4224|0); //@line 124 "mcbits/fft_tr.c"
  $592 = $8; //@line 124 "mcbits/fft_tr.c"
  $593 = (($591) + ($592<<3)|0); //@line 124 "mcbits/fft_tr.c"
  $594 = $593; //@line 124 "mcbits/fft_tr.c"
  $595 = $594; //@line 124 "mcbits/fft_tr.c"
  HEAP32[$595>>2] = $588; //@line 124 "mcbits/fft_tr.c"
  $596 = (($594) + 4)|0; //@line 124 "mcbits/fft_tr.c"
  $597 = $596; //@line 124 "mcbits/fft_tr.c"
  HEAP32[$597>>2] = $589; //@line 124 "mcbits/fft_tr.c"
  $598 = $8; //@line 124 "mcbits/fft_tr.c"
  $599 = (($598) + 1)|0; //@line 124 "mcbits/fft_tr.c"
  $8 = $599; //@line 124 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 125 "mcbits/fft_tr.c"
 while(1) {
  $600 = $8; //@line 125 "mcbits/fft_tr.c"
  $601 = ($600|0)<(12); //@line 125 "mcbits/fft_tr.c"
  if (!($601)) {
   break;
  }
  $602 = $8; //@line 125 "mcbits/fft_tr.c"
  $603 = (($10) + ($602<<3)|0); //@line 125 "mcbits/fft_tr.c"
  $604 = $603; //@line 125 "mcbits/fft_tr.c"
  $605 = $604; //@line 125 "mcbits/fft_tr.c"
  $606 = HEAP32[$605>>2]|0; //@line 125 "mcbits/fft_tr.c"
  $607 = (($604) + 4)|0; //@line 125 "mcbits/fft_tr.c"
  $608 = $607; //@line 125 "mcbits/fft_tr.c"
  $609 = HEAP32[$608>>2]|0; //@line 125 "mcbits/fft_tr.c"
  $610 = $3; //@line 125 "mcbits/fft_tr.c"
  $611 = ((($610)) + 4224|0); //@line 125 "mcbits/fft_tr.c"
  $612 = $8; //@line 125 "mcbits/fft_tr.c"
  $613 = (($611) + ($612<<3)|0); //@line 125 "mcbits/fft_tr.c"
  $614 = $613; //@line 125 "mcbits/fft_tr.c"
  $615 = $614; //@line 125 "mcbits/fft_tr.c"
  $616 = HEAP32[$615>>2]|0; //@line 125 "mcbits/fft_tr.c"
  $617 = (($614) + 4)|0; //@line 125 "mcbits/fft_tr.c"
  $618 = $617; //@line 125 "mcbits/fft_tr.c"
  $619 = HEAP32[$618>>2]|0; //@line 125 "mcbits/fft_tr.c"
  $620 = $606 ^ $616; //@line 125 "mcbits/fft_tr.c"
  $621 = $609 ^ $619; //@line 125 "mcbits/fft_tr.c"
  $622 = $8; //@line 125 "mcbits/fft_tr.c"
  $623 = (($10) + ($622<<3)|0); //@line 125 "mcbits/fft_tr.c"
  $624 = $623; //@line 125 "mcbits/fft_tr.c"
  $625 = $624; //@line 125 "mcbits/fft_tr.c"
  HEAP32[$625>>2] = $620; //@line 125 "mcbits/fft_tr.c"
  $626 = (($624) + 4)|0; //@line 125 "mcbits/fft_tr.c"
  $627 = $626; //@line 125 "mcbits/fft_tr.c"
  HEAP32[$627>>2] = $621; //@line 125 "mcbits/fft_tr.c"
  $628 = $8; //@line 125 "mcbits/fft_tr.c"
  $629 = (($628) + 1)|0; //@line 125 "mcbits/fft_tr.c"
  $8 = $629; //@line 125 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 125 "mcbits/fft_tr.c"
 while(1) {
  $630 = $8; //@line 125 "mcbits/fft_tr.c"
  $631 = ($630|0)<(12); //@line 125 "mcbits/fft_tr.c"
  if (!($631)) {
   break;
  }
  $632 = $3; //@line 125 "mcbits/fft_tr.c"
  $633 = ((($632)) + 4320|0); //@line 125 "mcbits/fft_tr.c"
  $634 = $8; //@line 125 "mcbits/fft_tr.c"
  $635 = (($633) + ($634<<3)|0); //@line 125 "mcbits/fft_tr.c"
  $636 = $635; //@line 125 "mcbits/fft_tr.c"
  $637 = $636; //@line 125 "mcbits/fft_tr.c"
  $638 = HEAP32[$637>>2]|0; //@line 125 "mcbits/fft_tr.c"
  $639 = (($636) + 4)|0; //@line 125 "mcbits/fft_tr.c"
  $640 = $639; //@line 125 "mcbits/fft_tr.c"
  $641 = HEAP32[$640>>2]|0; //@line 125 "mcbits/fft_tr.c"
  $642 = $3; //@line 125 "mcbits/fft_tr.c"
  $643 = ((($642)) + 4224|0); //@line 125 "mcbits/fft_tr.c"
  $644 = $8; //@line 125 "mcbits/fft_tr.c"
  $645 = (($643) + ($644<<3)|0); //@line 125 "mcbits/fft_tr.c"
  $646 = $645; //@line 125 "mcbits/fft_tr.c"
  $647 = $646; //@line 125 "mcbits/fft_tr.c"
  $648 = HEAP32[$647>>2]|0; //@line 125 "mcbits/fft_tr.c"
  $649 = (($646) + 4)|0; //@line 125 "mcbits/fft_tr.c"
  $650 = $649; //@line 125 "mcbits/fft_tr.c"
  $651 = HEAP32[$650>>2]|0; //@line 125 "mcbits/fft_tr.c"
  $652 = $638 ^ $648; //@line 125 "mcbits/fft_tr.c"
  $653 = $641 ^ $651; //@line 125 "mcbits/fft_tr.c"
  $654 = $3; //@line 125 "mcbits/fft_tr.c"
  $655 = ((($654)) + 4320|0); //@line 125 "mcbits/fft_tr.c"
  $656 = $8; //@line 125 "mcbits/fft_tr.c"
  $657 = (($655) + ($656<<3)|0); //@line 125 "mcbits/fft_tr.c"
  $658 = $657; //@line 125 "mcbits/fft_tr.c"
  $659 = $658; //@line 125 "mcbits/fft_tr.c"
  HEAP32[$659>>2] = $652; //@line 125 "mcbits/fft_tr.c"
  $660 = (($658) + 4)|0; //@line 125 "mcbits/fft_tr.c"
  $661 = $660; //@line 125 "mcbits/fft_tr.c"
  HEAP32[$661>>2] = $653; //@line 125 "mcbits/fft_tr.c"
  $662 = $8; //@line 125 "mcbits/fft_tr.c"
  $663 = (($662) + 1)|0; //@line 125 "mcbits/fft_tr.c"
  $8 = $663; //@line 125 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 126 "mcbits/fft_tr.c"
 while(1) {
  $664 = $8; //@line 126 "mcbits/fft_tr.c"
  $665 = ($664|0)<(12); //@line 126 "mcbits/fft_tr.c"
  if (!($665)) {
   break;
  }
  $666 = ((($10)) + 96|0); //@line 126 "mcbits/fft_tr.c"
  $667 = $8; //@line 126 "mcbits/fft_tr.c"
  $668 = (($666) + ($667<<3)|0); //@line 126 "mcbits/fft_tr.c"
  $669 = $668; //@line 126 "mcbits/fft_tr.c"
  $670 = $669; //@line 126 "mcbits/fft_tr.c"
  $671 = HEAP32[$670>>2]|0; //@line 126 "mcbits/fft_tr.c"
  $672 = (($669) + 4)|0; //@line 126 "mcbits/fft_tr.c"
  $673 = $672; //@line 126 "mcbits/fft_tr.c"
  $674 = HEAP32[$673>>2]|0; //@line 126 "mcbits/fft_tr.c"
  $675 = $3; //@line 126 "mcbits/fft_tr.c"
  $676 = ((($675)) + 4320|0); //@line 126 "mcbits/fft_tr.c"
  $677 = $8; //@line 126 "mcbits/fft_tr.c"
  $678 = (($676) + ($677<<3)|0); //@line 126 "mcbits/fft_tr.c"
  $679 = $678; //@line 126 "mcbits/fft_tr.c"
  $680 = $679; //@line 126 "mcbits/fft_tr.c"
  $681 = HEAP32[$680>>2]|0; //@line 126 "mcbits/fft_tr.c"
  $682 = (($679) + 4)|0; //@line 126 "mcbits/fft_tr.c"
  $683 = $682; //@line 126 "mcbits/fft_tr.c"
  $684 = HEAP32[$683>>2]|0; //@line 126 "mcbits/fft_tr.c"
  $685 = $671 ^ $681; //@line 126 "mcbits/fft_tr.c"
  $686 = $674 ^ $684; //@line 126 "mcbits/fft_tr.c"
  $687 = ((($10)) + 96|0); //@line 126 "mcbits/fft_tr.c"
  $688 = $8; //@line 126 "mcbits/fft_tr.c"
  $689 = (($687) + ($688<<3)|0); //@line 126 "mcbits/fft_tr.c"
  $690 = $689; //@line 126 "mcbits/fft_tr.c"
  $691 = $690; //@line 126 "mcbits/fft_tr.c"
  HEAP32[$691>>2] = $685; //@line 126 "mcbits/fft_tr.c"
  $692 = (($690) + 4)|0; //@line 126 "mcbits/fft_tr.c"
  $693 = $692; //@line 126 "mcbits/fft_tr.c"
  HEAP32[$693>>2] = $686; //@line 126 "mcbits/fft_tr.c"
  $694 = $8; //@line 126 "mcbits/fft_tr.c"
  $695 = (($694) + 1)|0; //@line 126 "mcbits/fft_tr.c"
  $8 = $695; //@line 126 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 126 "mcbits/fft_tr.c"
 while(1) {
  $696 = $8; //@line 126 "mcbits/fft_tr.c"
  $697 = ($696|0)<(12); //@line 126 "mcbits/fft_tr.c"
  if (!($697)) {
   break;
  }
  $698 = $3; //@line 126 "mcbits/fft_tr.c"
  $699 = ((($698)) + 4512|0); //@line 126 "mcbits/fft_tr.c"
  $700 = $8; //@line 126 "mcbits/fft_tr.c"
  $701 = (($699) + ($700<<3)|0); //@line 126 "mcbits/fft_tr.c"
  $702 = $701; //@line 126 "mcbits/fft_tr.c"
  $703 = $702; //@line 126 "mcbits/fft_tr.c"
  $704 = HEAP32[$703>>2]|0; //@line 126 "mcbits/fft_tr.c"
  $705 = (($702) + 4)|0; //@line 126 "mcbits/fft_tr.c"
  $706 = $705; //@line 126 "mcbits/fft_tr.c"
  $707 = HEAP32[$706>>2]|0; //@line 126 "mcbits/fft_tr.c"
  $708 = $3; //@line 126 "mcbits/fft_tr.c"
  $709 = ((($708)) + 4320|0); //@line 126 "mcbits/fft_tr.c"
  $710 = $8; //@line 126 "mcbits/fft_tr.c"
  $711 = (($709) + ($710<<3)|0); //@line 126 "mcbits/fft_tr.c"
  $712 = $711; //@line 126 "mcbits/fft_tr.c"
  $713 = $712; //@line 126 "mcbits/fft_tr.c"
  $714 = HEAP32[$713>>2]|0; //@line 126 "mcbits/fft_tr.c"
  $715 = (($712) + 4)|0; //@line 126 "mcbits/fft_tr.c"
  $716 = $715; //@line 126 "mcbits/fft_tr.c"
  $717 = HEAP32[$716>>2]|0; //@line 126 "mcbits/fft_tr.c"
  $718 = $704 ^ $714; //@line 126 "mcbits/fft_tr.c"
  $719 = $707 ^ $717; //@line 126 "mcbits/fft_tr.c"
  $720 = $3; //@line 126 "mcbits/fft_tr.c"
  $721 = ((($720)) + 4512|0); //@line 126 "mcbits/fft_tr.c"
  $722 = $8; //@line 126 "mcbits/fft_tr.c"
  $723 = (($721) + ($722<<3)|0); //@line 126 "mcbits/fft_tr.c"
  $724 = $723; //@line 126 "mcbits/fft_tr.c"
  $725 = $724; //@line 126 "mcbits/fft_tr.c"
  HEAP32[$725>>2] = $718; //@line 126 "mcbits/fft_tr.c"
  $726 = (($724) + 4)|0; //@line 126 "mcbits/fft_tr.c"
  $727 = $726; //@line 126 "mcbits/fft_tr.c"
  HEAP32[$727>>2] = $719; //@line 126 "mcbits/fft_tr.c"
  $728 = $8; //@line 126 "mcbits/fft_tr.c"
  $729 = (($728) + 1)|0; //@line 126 "mcbits/fft_tr.c"
  $8 = $729; //@line 126 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 127 "mcbits/fft_tr.c"
 while(1) {
  $730 = $8; //@line 127 "mcbits/fft_tr.c"
  $731 = ($730|0)<(12); //@line 127 "mcbits/fft_tr.c"
  if (!($731)) {
   break;
  }
  $732 = $8; //@line 127 "mcbits/fft_tr.c"
  $733 = (($10) + ($732<<3)|0); //@line 127 "mcbits/fft_tr.c"
  $734 = $733; //@line 127 "mcbits/fft_tr.c"
  $735 = $734; //@line 127 "mcbits/fft_tr.c"
  $736 = HEAP32[$735>>2]|0; //@line 127 "mcbits/fft_tr.c"
  $737 = (($734) + 4)|0; //@line 127 "mcbits/fft_tr.c"
  $738 = $737; //@line 127 "mcbits/fft_tr.c"
  $739 = HEAP32[$738>>2]|0; //@line 127 "mcbits/fft_tr.c"
  $740 = $3; //@line 127 "mcbits/fft_tr.c"
  $741 = ((($740)) + 4512|0); //@line 127 "mcbits/fft_tr.c"
  $742 = $8; //@line 127 "mcbits/fft_tr.c"
  $743 = (($741) + ($742<<3)|0); //@line 127 "mcbits/fft_tr.c"
  $744 = $743; //@line 127 "mcbits/fft_tr.c"
  $745 = $744; //@line 127 "mcbits/fft_tr.c"
  $746 = HEAP32[$745>>2]|0; //@line 127 "mcbits/fft_tr.c"
  $747 = (($744) + 4)|0; //@line 127 "mcbits/fft_tr.c"
  $748 = $747; //@line 127 "mcbits/fft_tr.c"
  $749 = HEAP32[$748>>2]|0; //@line 127 "mcbits/fft_tr.c"
  $750 = $736 ^ $746; //@line 127 "mcbits/fft_tr.c"
  $751 = $739 ^ $749; //@line 127 "mcbits/fft_tr.c"
  $752 = $8; //@line 127 "mcbits/fft_tr.c"
  $753 = (($10) + ($752<<3)|0); //@line 127 "mcbits/fft_tr.c"
  $754 = $753; //@line 127 "mcbits/fft_tr.c"
  $755 = $754; //@line 127 "mcbits/fft_tr.c"
  HEAP32[$755>>2] = $750; //@line 127 "mcbits/fft_tr.c"
  $756 = (($754) + 4)|0; //@line 127 "mcbits/fft_tr.c"
  $757 = $756; //@line 127 "mcbits/fft_tr.c"
  HEAP32[$757>>2] = $751; //@line 127 "mcbits/fft_tr.c"
  $758 = $8; //@line 127 "mcbits/fft_tr.c"
  $759 = (($758) + 1)|0; //@line 127 "mcbits/fft_tr.c"
  $8 = $759; //@line 127 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 127 "mcbits/fft_tr.c"
 while(1) {
  $760 = $8; //@line 127 "mcbits/fft_tr.c"
  $761 = ($760|0)<(12); //@line 127 "mcbits/fft_tr.c"
  if (!($761)) {
   break;
  }
  $762 = $3; //@line 127 "mcbits/fft_tr.c"
  $763 = ((($762)) + 4416|0); //@line 127 "mcbits/fft_tr.c"
  $764 = $8; //@line 127 "mcbits/fft_tr.c"
  $765 = (($763) + ($764<<3)|0); //@line 127 "mcbits/fft_tr.c"
  $766 = $765; //@line 127 "mcbits/fft_tr.c"
  $767 = $766; //@line 127 "mcbits/fft_tr.c"
  $768 = HEAP32[$767>>2]|0; //@line 127 "mcbits/fft_tr.c"
  $769 = (($766) + 4)|0; //@line 127 "mcbits/fft_tr.c"
  $770 = $769; //@line 127 "mcbits/fft_tr.c"
  $771 = HEAP32[$770>>2]|0; //@line 127 "mcbits/fft_tr.c"
  $772 = $3; //@line 127 "mcbits/fft_tr.c"
  $773 = ((($772)) + 4512|0); //@line 127 "mcbits/fft_tr.c"
  $774 = $8; //@line 127 "mcbits/fft_tr.c"
  $775 = (($773) + ($774<<3)|0); //@line 127 "mcbits/fft_tr.c"
  $776 = $775; //@line 127 "mcbits/fft_tr.c"
  $777 = $776; //@line 127 "mcbits/fft_tr.c"
  $778 = HEAP32[$777>>2]|0; //@line 127 "mcbits/fft_tr.c"
  $779 = (($776) + 4)|0; //@line 127 "mcbits/fft_tr.c"
  $780 = $779; //@line 127 "mcbits/fft_tr.c"
  $781 = HEAP32[$780>>2]|0; //@line 127 "mcbits/fft_tr.c"
  $782 = $768 ^ $778; //@line 127 "mcbits/fft_tr.c"
  $783 = $771 ^ $781; //@line 127 "mcbits/fft_tr.c"
  $784 = $3; //@line 127 "mcbits/fft_tr.c"
  $785 = ((($784)) + 4416|0); //@line 127 "mcbits/fft_tr.c"
  $786 = $8; //@line 127 "mcbits/fft_tr.c"
  $787 = (($785) + ($786<<3)|0); //@line 127 "mcbits/fft_tr.c"
  $788 = $787; //@line 127 "mcbits/fft_tr.c"
  $789 = $788; //@line 127 "mcbits/fft_tr.c"
  HEAP32[$789>>2] = $782; //@line 127 "mcbits/fft_tr.c"
  $790 = (($788) + 4)|0; //@line 127 "mcbits/fft_tr.c"
  $791 = $790; //@line 127 "mcbits/fft_tr.c"
  HEAP32[$791>>2] = $783; //@line 127 "mcbits/fft_tr.c"
  $792 = $8; //@line 127 "mcbits/fft_tr.c"
  $793 = (($792) + 1)|0; //@line 127 "mcbits/fft_tr.c"
  $8 = $793; //@line 127 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 128 "mcbits/fft_tr.c"
 while(1) {
  $794 = $8; //@line 128 "mcbits/fft_tr.c"
  $795 = ($794|0)<(12); //@line 128 "mcbits/fft_tr.c"
  if (!($795)) {
   break;
  }
  $796 = ((($10)) + 192|0); //@line 128 "mcbits/fft_tr.c"
  $797 = $8; //@line 128 "mcbits/fft_tr.c"
  $798 = (($796) + ($797<<3)|0); //@line 128 "mcbits/fft_tr.c"
  $799 = $798; //@line 128 "mcbits/fft_tr.c"
  $800 = $799; //@line 128 "mcbits/fft_tr.c"
  $801 = HEAP32[$800>>2]|0; //@line 128 "mcbits/fft_tr.c"
  $802 = (($799) + 4)|0; //@line 128 "mcbits/fft_tr.c"
  $803 = $802; //@line 128 "mcbits/fft_tr.c"
  $804 = HEAP32[$803>>2]|0; //@line 128 "mcbits/fft_tr.c"
  $805 = $3; //@line 128 "mcbits/fft_tr.c"
  $806 = ((($805)) + 4416|0); //@line 128 "mcbits/fft_tr.c"
  $807 = $8; //@line 128 "mcbits/fft_tr.c"
  $808 = (($806) + ($807<<3)|0); //@line 128 "mcbits/fft_tr.c"
  $809 = $808; //@line 128 "mcbits/fft_tr.c"
  $810 = $809; //@line 128 "mcbits/fft_tr.c"
  $811 = HEAP32[$810>>2]|0; //@line 128 "mcbits/fft_tr.c"
  $812 = (($809) + 4)|0; //@line 128 "mcbits/fft_tr.c"
  $813 = $812; //@line 128 "mcbits/fft_tr.c"
  $814 = HEAP32[$813>>2]|0; //@line 128 "mcbits/fft_tr.c"
  $815 = $801 ^ $811; //@line 128 "mcbits/fft_tr.c"
  $816 = $804 ^ $814; //@line 128 "mcbits/fft_tr.c"
  $817 = ((($10)) + 192|0); //@line 128 "mcbits/fft_tr.c"
  $818 = $8; //@line 128 "mcbits/fft_tr.c"
  $819 = (($817) + ($818<<3)|0); //@line 128 "mcbits/fft_tr.c"
  $820 = $819; //@line 128 "mcbits/fft_tr.c"
  $821 = $820; //@line 128 "mcbits/fft_tr.c"
  HEAP32[$821>>2] = $815; //@line 128 "mcbits/fft_tr.c"
  $822 = (($820) + 4)|0; //@line 128 "mcbits/fft_tr.c"
  $823 = $822; //@line 128 "mcbits/fft_tr.c"
  HEAP32[$823>>2] = $816; //@line 128 "mcbits/fft_tr.c"
  $824 = $8; //@line 128 "mcbits/fft_tr.c"
  $825 = (($824) + 1)|0; //@line 128 "mcbits/fft_tr.c"
  $8 = $825; //@line 128 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 128 "mcbits/fft_tr.c"
 while(1) {
  $826 = $8; //@line 128 "mcbits/fft_tr.c"
  $827 = ($826|0)<(12); //@line 128 "mcbits/fft_tr.c"
  if (!($827)) {
   break;
  }
  $828 = $3; //@line 128 "mcbits/fft_tr.c"
  $829 = ((($828)) + 4032|0); //@line 128 "mcbits/fft_tr.c"
  $830 = $8; //@line 128 "mcbits/fft_tr.c"
  $831 = (($829) + ($830<<3)|0); //@line 128 "mcbits/fft_tr.c"
  $832 = $831; //@line 128 "mcbits/fft_tr.c"
  $833 = $832; //@line 128 "mcbits/fft_tr.c"
  $834 = HEAP32[$833>>2]|0; //@line 128 "mcbits/fft_tr.c"
  $835 = (($832) + 4)|0; //@line 128 "mcbits/fft_tr.c"
  $836 = $835; //@line 128 "mcbits/fft_tr.c"
  $837 = HEAP32[$836>>2]|0; //@line 128 "mcbits/fft_tr.c"
  $838 = $3; //@line 128 "mcbits/fft_tr.c"
  $839 = ((($838)) + 4416|0); //@line 128 "mcbits/fft_tr.c"
  $840 = $8; //@line 128 "mcbits/fft_tr.c"
  $841 = (($839) + ($840<<3)|0); //@line 128 "mcbits/fft_tr.c"
  $842 = $841; //@line 128 "mcbits/fft_tr.c"
  $843 = $842; //@line 128 "mcbits/fft_tr.c"
  $844 = HEAP32[$843>>2]|0; //@line 128 "mcbits/fft_tr.c"
  $845 = (($842) + 4)|0; //@line 128 "mcbits/fft_tr.c"
  $846 = $845; //@line 128 "mcbits/fft_tr.c"
  $847 = HEAP32[$846>>2]|0; //@line 128 "mcbits/fft_tr.c"
  $848 = $834 ^ $844; //@line 128 "mcbits/fft_tr.c"
  $849 = $837 ^ $847; //@line 128 "mcbits/fft_tr.c"
  $850 = $3; //@line 128 "mcbits/fft_tr.c"
  $851 = ((($850)) + 4032|0); //@line 128 "mcbits/fft_tr.c"
  $852 = $8; //@line 128 "mcbits/fft_tr.c"
  $853 = (($851) + ($852<<3)|0); //@line 128 "mcbits/fft_tr.c"
  $854 = $853; //@line 128 "mcbits/fft_tr.c"
  $855 = $854; //@line 128 "mcbits/fft_tr.c"
  HEAP32[$855>>2] = $848; //@line 128 "mcbits/fft_tr.c"
  $856 = (($854) + 4)|0; //@line 128 "mcbits/fft_tr.c"
  $857 = $856; //@line 128 "mcbits/fft_tr.c"
  HEAP32[$857>>2] = $849; //@line 128 "mcbits/fft_tr.c"
  $858 = $8; //@line 128 "mcbits/fft_tr.c"
  $859 = (($858) + 1)|0; //@line 128 "mcbits/fft_tr.c"
  $8 = $859; //@line 128 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 129 "mcbits/fft_tr.c"
 while(1) {
  $860 = $8; //@line 129 "mcbits/fft_tr.c"
  $861 = ($860|0)<(12); //@line 129 "mcbits/fft_tr.c"
  if (!($861)) {
   break;
  }
  $862 = $8; //@line 129 "mcbits/fft_tr.c"
  $863 = (($10) + ($862<<3)|0); //@line 129 "mcbits/fft_tr.c"
  $864 = $863; //@line 129 "mcbits/fft_tr.c"
  $865 = $864; //@line 129 "mcbits/fft_tr.c"
  $866 = HEAP32[$865>>2]|0; //@line 129 "mcbits/fft_tr.c"
  $867 = (($864) + 4)|0; //@line 129 "mcbits/fft_tr.c"
  $868 = $867; //@line 129 "mcbits/fft_tr.c"
  $869 = HEAP32[$868>>2]|0; //@line 129 "mcbits/fft_tr.c"
  $870 = $3; //@line 129 "mcbits/fft_tr.c"
  $871 = ((($870)) + 4032|0); //@line 129 "mcbits/fft_tr.c"
  $872 = $8; //@line 129 "mcbits/fft_tr.c"
  $873 = (($871) + ($872<<3)|0); //@line 129 "mcbits/fft_tr.c"
  $874 = $873; //@line 129 "mcbits/fft_tr.c"
  $875 = $874; //@line 129 "mcbits/fft_tr.c"
  $876 = HEAP32[$875>>2]|0; //@line 129 "mcbits/fft_tr.c"
  $877 = (($874) + 4)|0; //@line 129 "mcbits/fft_tr.c"
  $878 = $877; //@line 129 "mcbits/fft_tr.c"
  $879 = HEAP32[$878>>2]|0; //@line 129 "mcbits/fft_tr.c"
  $880 = $866 ^ $876; //@line 129 "mcbits/fft_tr.c"
  $881 = $869 ^ $879; //@line 129 "mcbits/fft_tr.c"
  $882 = $8; //@line 129 "mcbits/fft_tr.c"
  $883 = (($10) + ($882<<3)|0); //@line 129 "mcbits/fft_tr.c"
  $884 = $883; //@line 129 "mcbits/fft_tr.c"
  $885 = $884; //@line 129 "mcbits/fft_tr.c"
  HEAP32[$885>>2] = $880; //@line 129 "mcbits/fft_tr.c"
  $886 = (($884) + 4)|0; //@line 129 "mcbits/fft_tr.c"
  $887 = $886; //@line 129 "mcbits/fft_tr.c"
  HEAP32[$887>>2] = $881; //@line 129 "mcbits/fft_tr.c"
  $888 = $8; //@line 129 "mcbits/fft_tr.c"
  $889 = (($888) + 1)|0; //@line 129 "mcbits/fft_tr.c"
  $8 = $889; //@line 129 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 129 "mcbits/fft_tr.c"
 while(1) {
  $890 = $8; //@line 129 "mcbits/fft_tr.c"
  $891 = ($890|0)<(12); //@line 129 "mcbits/fft_tr.c"
  if (!($891)) {
   break;
  }
  $892 = $3; //@line 129 "mcbits/fft_tr.c"
  $893 = ((($892)) + 4128|0); //@line 129 "mcbits/fft_tr.c"
  $894 = $8; //@line 129 "mcbits/fft_tr.c"
  $895 = (($893) + ($894<<3)|0); //@line 129 "mcbits/fft_tr.c"
  $896 = $895; //@line 129 "mcbits/fft_tr.c"
  $897 = $896; //@line 129 "mcbits/fft_tr.c"
  $898 = HEAP32[$897>>2]|0; //@line 129 "mcbits/fft_tr.c"
  $899 = (($896) + 4)|0; //@line 129 "mcbits/fft_tr.c"
  $900 = $899; //@line 129 "mcbits/fft_tr.c"
  $901 = HEAP32[$900>>2]|0; //@line 129 "mcbits/fft_tr.c"
  $902 = $3; //@line 129 "mcbits/fft_tr.c"
  $903 = ((($902)) + 4032|0); //@line 129 "mcbits/fft_tr.c"
  $904 = $8; //@line 129 "mcbits/fft_tr.c"
  $905 = (($903) + ($904<<3)|0); //@line 129 "mcbits/fft_tr.c"
  $906 = $905; //@line 129 "mcbits/fft_tr.c"
  $907 = $906; //@line 129 "mcbits/fft_tr.c"
  $908 = HEAP32[$907>>2]|0; //@line 129 "mcbits/fft_tr.c"
  $909 = (($906) + 4)|0; //@line 129 "mcbits/fft_tr.c"
  $910 = $909; //@line 129 "mcbits/fft_tr.c"
  $911 = HEAP32[$910>>2]|0; //@line 129 "mcbits/fft_tr.c"
  $912 = $898 ^ $908; //@line 129 "mcbits/fft_tr.c"
  $913 = $901 ^ $911; //@line 129 "mcbits/fft_tr.c"
  $914 = $3; //@line 129 "mcbits/fft_tr.c"
  $915 = ((($914)) + 4128|0); //@line 129 "mcbits/fft_tr.c"
  $916 = $8; //@line 129 "mcbits/fft_tr.c"
  $917 = (($915) + ($916<<3)|0); //@line 129 "mcbits/fft_tr.c"
  $918 = $917; //@line 129 "mcbits/fft_tr.c"
  $919 = $918; //@line 129 "mcbits/fft_tr.c"
  HEAP32[$919>>2] = $912; //@line 129 "mcbits/fft_tr.c"
  $920 = (($918) + 4)|0; //@line 129 "mcbits/fft_tr.c"
  $921 = $920; //@line 129 "mcbits/fft_tr.c"
  HEAP32[$921>>2] = $913; //@line 129 "mcbits/fft_tr.c"
  $922 = $8; //@line 129 "mcbits/fft_tr.c"
  $923 = (($922) + 1)|0; //@line 129 "mcbits/fft_tr.c"
  $8 = $923; //@line 129 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 130 "mcbits/fft_tr.c"
 while(1) {
  $924 = $8; //@line 130 "mcbits/fft_tr.c"
  $925 = ($924|0)<(12); //@line 130 "mcbits/fft_tr.c"
  if (!($925)) {
   break;
  }
  $926 = ((($10)) + 96|0); //@line 130 "mcbits/fft_tr.c"
  $927 = $8; //@line 130 "mcbits/fft_tr.c"
  $928 = (($926) + ($927<<3)|0); //@line 130 "mcbits/fft_tr.c"
  $929 = $928; //@line 130 "mcbits/fft_tr.c"
  $930 = $929; //@line 130 "mcbits/fft_tr.c"
  $931 = HEAP32[$930>>2]|0; //@line 130 "mcbits/fft_tr.c"
  $932 = (($929) + 4)|0; //@line 130 "mcbits/fft_tr.c"
  $933 = $932; //@line 130 "mcbits/fft_tr.c"
  $934 = HEAP32[$933>>2]|0; //@line 130 "mcbits/fft_tr.c"
  $935 = $3; //@line 130 "mcbits/fft_tr.c"
  $936 = ((($935)) + 4128|0); //@line 130 "mcbits/fft_tr.c"
  $937 = $8; //@line 130 "mcbits/fft_tr.c"
  $938 = (($936) + ($937<<3)|0); //@line 130 "mcbits/fft_tr.c"
  $939 = $938; //@line 130 "mcbits/fft_tr.c"
  $940 = $939; //@line 130 "mcbits/fft_tr.c"
  $941 = HEAP32[$940>>2]|0; //@line 130 "mcbits/fft_tr.c"
  $942 = (($939) + 4)|0; //@line 130 "mcbits/fft_tr.c"
  $943 = $942; //@line 130 "mcbits/fft_tr.c"
  $944 = HEAP32[$943>>2]|0; //@line 130 "mcbits/fft_tr.c"
  $945 = $931 ^ $941; //@line 130 "mcbits/fft_tr.c"
  $946 = $934 ^ $944; //@line 130 "mcbits/fft_tr.c"
  $947 = ((($10)) + 96|0); //@line 130 "mcbits/fft_tr.c"
  $948 = $8; //@line 130 "mcbits/fft_tr.c"
  $949 = (($947) + ($948<<3)|0); //@line 130 "mcbits/fft_tr.c"
  $950 = $949; //@line 130 "mcbits/fft_tr.c"
  $951 = $950; //@line 130 "mcbits/fft_tr.c"
  HEAP32[$951>>2] = $945; //@line 130 "mcbits/fft_tr.c"
  $952 = (($950) + 4)|0; //@line 130 "mcbits/fft_tr.c"
  $953 = $952; //@line 130 "mcbits/fft_tr.c"
  HEAP32[$953>>2] = $946; //@line 130 "mcbits/fft_tr.c"
  $954 = $8; //@line 130 "mcbits/fft_tr.c"
  $955 = (($954) + 1)|0; //@line 130 "mcbits/fft_tr.c"
  $8 = $955; //@line 130 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 130 "mcbits/fft_tr.c"
 while(1) {
  $956 = $8; //@line 130 "mcbits/fft_tr.c"
  $957 = ($956|0)<(12); //@line 130 "mcbits/fft_tr.c"
  if (!($957)) {
   break;
  }
  $958 = $3; //@line 130 "mcbits/fft_tr.c"
  $959 = ((($958)) + 3936|0); //@line 130 "mcbits/fft_tr.c"
  $960 = $8; //@line 130 "mcbits/fft_tr.c"
  $961 = (($959) + ($960<<3)|0); //@line 130 "mcbits/fft_tr.c"
  $962 = $961; //@line 130 "mcbits/fft_tr.c"
  $963 = $962; //@line 130 "mcbits/fft_tr.c"
  $964 = HEAP32[$963>>2]|0; //@line 130 "mcbits/fft_tr.c"
  $965 = (($962) + 4)|0; //@line 130 "mcbits/fft_tr.c"
  $966 = $965; //@line 130 "mcbits/fft_tr.c"
  $967 = HEAP32[$966>>2]|0; //@line 130 "mcbits/fft_tr.c"
  $968 = $3; //@line 130 "mcbits/fft_tr.c"
  $969 = ((($968)) + 4128|0); //@line 130 "mcbits/fft_tr.c"
  $970 = $8; //@line 130 "mcbits/fft_tr.c"
  $971 = (($969) + ($970<<3)|0); //@line 130 "mcbits/fft_tr.c"
  $972 = $971; //@line 130 "mcbits/fft_tr.c"
  $973 = $972; //@line 130 "mcbits/fft_tr.c"
  $974 = HEAP32[$973>>2]|0; //@line 130 "mcbits/fft_tr.c"
  $975 = (($972) + 4)|0; //@line 130 "mcbits/fft_tr.c"
  $976 = $975; //@line 130 "mcbits/fft_tr.c"
  $977 = HEAP32[$976>>2]|0; //@line 130 "mcbits/fft_tr.c"
  $978 = $964 ^ $974; //@line 130 "mcbits/fft_tr.c"
  $979 = $967 ^ $977; //@line 130 "mcbits/fft_tr.c"
  $980 = $3; //@line 130 "mcbits/fft_tr.c"
  $981 = ((($980)) + 3936|0); //@line 130 "mcbits/fft_tr.c"
  $982 = $8; //@line 130 "mcbits/fft_tr.c"
  $983 = (($981) + ($982<<3)|0); //@line 130 "mcbits/fft_tr.c"
  $984 = $983; //@line 130 "mcbits/fft_tr.c"
  $985 = $984; //@line 130 "mcbits/fft_tr.c"
  HEAP32[$985>>2] = $978; //@line 130 "mcbits/fft_tr.c"
  $986 = (($984) + 4)|0; //@line 130 "mcbits/fft_tr.c"
  $987 = $986; //@line 130 "mcbits/fft_tr.c"
  HEAP32[$987>>2] = $979; //@line 130 "mcbits/fft_tr.c"
  $988 = $8; //@line 130 "mcbits/fft_tr.c"
  $989 = (($988) + 1)|0; //@line 130 "mcbits/fft_tr.c"
  $8 = $989; //@line 130 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 131 "mcbits/fft_tr.c"
 while(1) {
  $990 = $8; //@line 131 "mcbits/fft_tr.c"
  $991 = ($990|0)<(12); //@line 131 "mcbits/fft_tr.c"
  if (!($991)) {
   break;
  }
  $992 = $8; //@line 131 "mcbits/fft_tr.c"
  $993 = (($10) + ($992<<3)|0); //@line 131 "mcbits/fft_tr.c"
  $994 = $993; //@line 131 "mcbits/fft_tr.c"
  $995 = $994; //@line 131 "mcbits/fft_tr.c"
  $996 = HEAP32[$995>>2]|0; //@line 131 "mcbits/fft_tr.c"
  $997 = (($994) + 4)|0; //@line 131 "mcbits/fft_tr.c"
  $998 = $997; //@line 131 "mcbits/fft_tr.c"
  $999 = HEAP32[$998>>2]|0; //@line 131 "mcbits/fft_tr.c"
  $1000 = $3; //@line 131 "mcbits/fft_tr.c"
  $1001 = ((($1000)) + 3936|0); //@line 131 "mcbits/fft_tr.c"
  $1002 = $8; //@line 131 "mcbits/fft_tr.c"
  $1003 = (($1001) + ($1002<<3)|0); //@line 131 "mcbits/fft_tr.c"
  $1004 = $1003; //@line 131 "mcbits/fft_tr.c"
  $1005 = $1004; //@line 131 "mcbits/fft_tr.c"
  $1006 = HEAP32[$1005>>2]|0; //@line 131 "mcbits/fft_tr.c"
  $1007 = (($1004) + 4)|0; //@line 131 "mcbits/fft_tr.c"
  $1008 = $1007; //@line 131 "mcbits/fft_tr.c"
  $1009 = HEAP32[$1008>>2]|0; //@line 131 "mcbits/fft_tr.c"
  $1010 = $996 ^ $1006; //@line 131 "mcbits/fft_tr.c"
  $1011 = $999 ^ $1009; //@line 131 "mcbits/fft_tr.c"
  $1012 = $8; //@line 131 "mcbits/fft_tr.c"
  $1013 = (($10) + ($1012<<3)|0); //@line 131 "mcbits/fft_tr.c"
  $1014 = $1013; //@line 131 "mcbits/fft_tr.c"
  $1015 = $1014; //@line 131 "mcbits/fft_tr.c"
  HEAP32[$1015>>2] = $1010; //@line 131 "mcbits/fft_tr.c"
  $1016 = (($1014) + 4)|0; //@line 131 "mcbits/fft_tr.c"
  $1017 = $1016; //@line 131 "mcbits/fft_tr.c"
  HEAP32[$1017>>2] = $1011; //@line 131 "mcbits/fft_tr.c"
  $1018 = $8; //@line 131 "mcbits/fft_tr.c"
  $1019 = (($1018) + 1)|0; //@line 131 "mcbits/fft_tr.c"
  $8 = $1019; //@line 131 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 131 "mcbits/fft_tr.c"
 while(1) {
  $1020 = $8; //@line 131 "mcbits/fft_tr.c"
  $1021 = ($1020|0)<(12); //@line 131 "mcbits/fft_tr.c"
  if (!($1021)) {
   break;
  }
  $1022 = $3; //@line 131 "mcbits/fft_tr.c"
  $1023 = ((($1022)) + 3840|0); //@line 131 "mcbits/fft_tr.c"
  $1024 = $8; //@line 131 "mcbits/fft_tr.c"
  $1025 = (($1023) + ($1024<<3)|0); //@line 131 "mcbits/fft_tr.c"
  $1026 = $1025; //@line 131 "mcbits/fft_tr.c"
  $1027 = $1026; //@line 131 "mcbits/fft_tr.c"
  $1028 = HEAP32[$1027>>2]|0; //@line 131 "mcbits/fft_tr.c"
  $1029 = (($1026) + 4)|0; //@line 131 "mcbits/fft_tr.c"
  $1030 = $1029; //@line 131 "mcbits/fft_tr.c"
  $1031 = HEAP32[$1030>>2]|0; //@line 131 "mcbits/fft_tr.c"
  $1032 = $3; //@line 131 "mcbits/fft_tr.c"
  $1033 = ((($1032)) + 3936|0); //@line 131 "mcbits/fft_tr.c"
  $1034 = $8; //@line 131 "mcbits/fft_tr.c"
  $1035 = (($1033) + ($1034<<3)|0); //@line 131 "mcbits/fft_tr.c"
  $1036 = $1035; //@line 131 "mcbits/fft_tr.c"
  $1037 = $1036; //@line 131 "mcbits/fft_tr.c"
  $1038 = HEAP32[$1037>>2]|0; //@line 131 "mcbits/fft_tr.c"
  $1039 = (($1036) + 4)|0; //@line 131 "mcbits/fft_tr.c"
  $1040 = $1039; //@line 131 "mcbits/fft_tr.c"
  $1041 = HEAP32[$1040>>2]|0; //@line 131 "mcbits/fft_tr.c"
  $1042 = $1028 ^ $1038; //@line 131 "mcbits/fft_tr.c"
  $1043 = $1031 ^ $1041; //@line 131 "mcbits/fft_tr.c"
  $1044 = $3; //@line 131 "mcbits/fft_tr.c"
  $1045 = ((($1044)) + 3840|0); //@line 131 "mcbits/fft_tr.c"
  $1046 = $8; //@line 131 "mcbits/fft_tr.c"
  $1047 = (($1045) + ($1046<<3)|0); //@line 131 "mcbits/fft_tr.c"
  $1048 = $1047; //@line 131 "mcbits/fft_tr.c"
  $1049 = $1048; //@line 131 "mcbits/fft_tr.c"
  HEAP32[$1049>>2] = $1042; //@line 131 "mcbits/fft_tr.c"
  $1050 = (($1048) + 4)|0; //@line 131 "mcbits/fft_tr.c"
  $1051 = $1050; //@line 131 "mcbits/fft_tr.c"
  HEAP32[$1051>>2] = $1043; //@line 131 "mcbits/fft_tr.c"
  $1052 = $8; //@line 131 "mcbits/fft_tr.c"
  $1053 = (($1052) + 1)|0; //@line 131 "mcbits/fft_tr.c"
  $8 = $1053; //@line 131 "mcbits/fft_tr.c"
 }
 $1054 = ((($10)) + 384|0); //@line 132 "mcbits/fft_tr.c"
 $1055 = $3; //@line 132 "mcbits/fft_tr.c"
 $1056 = ((($1055)) + 3840|0); //@line 132 "mcbits/fft_tr.c"
 _vec_copy($1054,$1056); //@line 132 "mcbits/fft_tr.c"
 $8 = 0; //@line 132 "mcbits/fft_tr.c"
 while(1) {
  $1057 = $8; //@line 132 "mcbits/fft_tr.c"
  $1058 = ($1057|0)<(12); //@line 132 "mcbits/fft_tr.c"
  if (!($1058)) {
   break;
  }
  $1059 = $3; //@line 132 "mcbits/fft_tr.c"
  $1060 = ((($1059)) + 5376|0); //@line 132 "mcbits/fft_tr.c"
  $1061 = $8; //@line 132 "mcbits/fft_tr.c"
  $1062 = (($1060) + ($1061<<3)|0); //@line 132 "mcbits/fft_tr.c"
  $1063 = $1062; //@line 132 "mcbits/fft_tr.c"
  $1064 = $1063; //@line 132 "mcbits/fft_tr.c"
  $1065 = HEAP32[$1064>>2]|0; //@line 132 "mcbits/fft_tr.c"
  $1066 = (($1063) + 4)|0; //@line 132 "mcbits/fft_tr.c"
  $1067 = $1066; //@line 132 "mcbits/fft_tr.c"
  $1068 = HEAP32[$1067>>2]|0; //@line 132 "mcbits/fft_tr.c"
  $1069 = $3; //@line 132 "mcbits/fft_tr.c"
  $1070 = ((($1069)) + 3840|0); //@line 132 "mcbits/fft_tr.c"
  $1071 = $8; //@line 132 "mcbits/fft_tr.c"
  $1072 = (($1070) + ($1071<<3)|0); //@line 132 "mcbits/fft_tr.c"
  $1073 = $1072; //@line 132 "mcbits/fft_tr.c"
  $1074 = $1073; //@line 132 "mcbits/fft_tr.c"
  $1075 = HEAP32[$1074>>2]|0; //@line 132 "mcbits/fft_tr.c"
  $1076 = (($1073) + 4)|0; //@line 132 "mcbits/fft_tr.c"
  $1077 = $1076; //@line 132 "mcbits/fft_tr.c"
  $1078 = HEAP32[$1077>>2]|0; //@line 132 "mcbits/fft_tr.c"
  $1079 = $1065 ^ $1075; //@line 132 "mcbits/fft_tr.c"
  $1080 = $1068 ^ $1078; //@line 132 "mcbits/fft_tr.c"
  $1081 = $3; //@line 132 "mcbits/fft_tr.c"
  $1082 = ((($1081)) + 5376|0); //@line 132 "mcbits/fft_tr.c"
  $1083 = $8; //@line 132 "mcbits/fft_tr.c"
  $1084 = (($1082) + ($1083<<3)|0); //@line 132 "mcbits/fft_tr.c"
  $1085 = $1084; //@line 132 "mcbits/fft_tr.c"
  $1086 = $1085; //@line 132 "mcbits/fft_tr.c"
  HEAP32[$1086>>2] = $1079; //@line 132 "mcbits/fft_tr.c"
  $1087 = (($1085) + 4)|0; //@line 132 "mcbits/fft_tr.c"
  $1088 = $1087; //@line 132 "mcbits/fft_tr.c"
  HEAP32[$1088>>2] = $1080; //@line 132 "mcbits/fft_tr.c"
  $1089 = $8; //@line 132 "mcbits/fft_tr.c"
  $1090 = (($1089) + 1)|0; //@line 132 "mcbits/fft_tr.c"
  $8 = $1090; //@line 132 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 133 "mcbits/fft_tr.c"
 while(1) {
  $1091 = $8; //@line 133 "mcbits/fft_tr.c"
  $1092 = ($1091|0)<(12); //@line 133 "mcbits/fft_tr.c"
  if (!($1092)) {
   break;
  }
  $1093 = $8; //@line 133 "mcbits/fft_tr.c"
  $1094 = (($10) + ($1093<<3)|0); //@line 133 "mcbits/fft_tr.c"
  $1095 = $1094; //@line 133 "mcbits/fft_tr.c"
  $1096 = $1095; //@line 133 "mcbits/fft_tr.c"
  $1097 = HEAP32[$1096>>2]|0; //@line 133 "mcbits/fft_tr.c"
  $1098 = (($1095) + 4)|0; //@line 133 "mcbits/fft_tr.c"
  $1099 = $1098; //@line 133 "mcbits/fft_tr.c"
  $1100 = HEAP32[$1099>>2]|0; //@line 133 "mcbits/fft_tr.c"
  $1101 = $3; //@line 133 "mcbits/fft_tr.c"
  $1102 = ((($1101)) + 5376|0); //@line 133 "mcbits/fft_tr.c"
  $1103 = $8; //@line 133 "mcbits/fft_tr.c"
  $1104 = (($1102) + ($1103<<3)|0); //@line 133 "mcbits/fft_tr.c"
  $1105 = $1104; //@line 133 "mcbits/fft_tr.c"
  $1106 = $1105; //@line 133 "mcbits/fft_tr.c"
  $1107 = HEAP32[$1106>>2]|0; //@line 133 "mcbits/fft_tr.c"
  $1108 = (($1105) + 4)|0; //@line 133 "mcbits/fft_tr.c"
  $1109 = $1108; //@line 133 "mcbits/fft_tr.c"
  $1110 = HEAP32[$1109>>2]|0; //@line 133 "mcbits/fft_tr.c"
  $1111 = $1097 ^ $1107; //@line 133 "mcbits/fft_tr.c"
  $1112 = $1100 ^ $1110; //@line 133 "mcbits/fft_tr.c"
  $1113 = $8; //@line 133 "mcbits/fft_tr.c"
  $1114 = (($10) + ($1113<<3)|0); //@line 133 "mcbits/fft_tr.c"
  $1115 = $1114; //@line 133 "mcbits/fft_tr.c"
  $1116 = $1115; //@line 133 "mcbits/fft_tr.c"
  HEAP32[$1116>>2] = $1111; //@line 133 "mcbits/fft_tr.c"
  $1117 = (($1115) + 4)|0; //@line 133 "mcbits/fft_tr.c"
  $1118 = $1117; //@line 133 "mcbits/fft_tr.c"
  HEAP32[$1118>>2] = $1112; //@line 133 "mcbits/fft_tr.c"
  $1119 = $8; //@line 133 "mcbits/fft_tr.c"
  $1120 = (($1119) + 1)|0; //@line 133 "mcbits/fft_tr.c"
  $8 = $1120; //@line 133 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 133 "mcbits/fft_tr.c"
 while(1) {
  $1121 = $8; //@line 133 "mcbits/fft_tr.c"
  $1122 = ($1121|0)<(12); //@line 133 "mcbits/fft_tr.c"
  if (!($1122)) {
   break;
  }
  $1123 = $3; //@line 133 "mcbits/fft_tr.c"
  $1124 = ((($1123)) + 5472|0); //@line 133 "mcbits/fft_tr.c"
  $1125 = $8; //@line 133 "mcbits/fft_tr.c"
  $1126 = (($1124) + ($1125<<3)|0); //@line 133 "mcbits/fft_tr.c"
  $1127 = $1126; //@line 133 "mcbits/fft_tr.c"
  $1128 = $1127; //@line 133 "mcbits/fft_tr.c"
  $1129 = HEAP32[$1128>>2]|0; //@line 133 "mcbits/fft_tr.c"
  $1130 = (($1127) + 4)|0; //@line 133 "mcbits/fft_tr.c"
  $1131 = $1130; //@line 133 "mcbits/fft_tr.c"
  $1132 = HEAP32[$1131>>2]|0; //@line 133 "mcbits/fft_tr.c"
  $1133 = $3; //@line 133 "mcbits/fft_tr.c"
  $1134 = ((($1133)) + 5376|0); //@line 133 "mcbits/fft_tr.c"
  $1135 = $8; //@line 133 "mcbits/fft_tr.c"
  $1136 = (($1134) + ($1135<<3)|0); //@line 133 "mcbits/fft_tr.c"
  $1137 = $1136; //@line 133 "mcbits/fft_tr.c"
  $1138 = $1137; //@line 133 "mcbits/fft_tr.c"
  $1139 = HEAP32[$1138>>2]|0; //@line 133 "mcbits/fft_tr.c"
  $1140 = (($1137) + 4)|0; //@line 133 "mcbits/fft_tr.c"
  $1141 = $1140; //@line 133 "mcbits/fft_tr.c"
  $1142 = HEAP32[$1141>>2]|0; //@line 133 "mcbits/fft_tr.c"
  $1143 = $1129 ^ $1139; //@line 133 "mcbits/fft_tr.c"
  $1144 = $1132 ^ $1142; //@line 133 "mcbits/fft_tr.c"
  $1145 = $3; //@line 133 "mcbits/fft_tr.c"
  $1146 = ((($1145)) + 5472|0); //@line 133 "mcbits/fft_tr.c"
  $1147 = $8; //@line 133 "mcbits/fft_tr.c"
  $1148 = (($1146) + ($1147<<3)|0); //@line 133 "mcbits/fft_tr.c"
  $1149 = $1148; //@line 133 "mcbits/fft_tr.c"
  $1150 = $1149; //@line 133 "mcbits/fft_tr.c"
  HEAP32[$1150>>2] = $1143; //@line 133 "mcbits/fft_tr.c"
  $1151 = (($1149) + 4)|0; //@line 133 "mcbits/fft_tr.c"
  $1152 = $1151; //@line 133 "mcbits/fft_tr.c"
  HEAP32[$1152>>2] = $1144; //@line 133 "mcbits/fft_tr.c"
  $1153 = $8; //@line 133 "mcbits/fft_tr.c"
  $1154 = (($1153) + 1)|0; //@line 133 "mcbits/fft_tr.c"
  $8 = $1154; //@line 133 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 134 "mcbits/fft_tr.c"
 while(1) {
  $1155 = $8; //@line 134 "mcbits/fft_tr.c"
  $1156 = ($1155|0)<(12); //@line 134 "mcbits/fft_tr.c"
  if (!($1156)) {
   break;
  }
  $1157 = ((($10)) + 96|0); //@line 134 "mcbits/fft_tr.c"
  $1158 = $8; //@line 134 "mcbits/fft_tr.c"
  $1159 = (($1157) + ($1158<<3)|0); //@line 134 "mcbits/fft_tr.c"
  $1160 = $1159; //@line 134 "mcbits/fft_tr.c"
  $1161 = $1160; //@line 134 "mcbits/fft_tr.c"
  $1162 = HEAP32[$1161>>2]|0; //@line 134 "mcbits/fft_tr.c"
  $1163 = (($1160) + 4)|0; //@line 134 "mcbits/fft_tr.c"
  $1164 = $1163; //@line 134 "mcbits/fft_tr.c"
  $1165 = HEAP32[$1164>>2]|0; //@line 134 "mcbits/fft_tr.c"
  $1166 = $3; //@line 134 "mcbits/fft_tr.c"
  $1167 = ((($1166)) + 5472|0); //@line 134 "mcbits/fft_tr.c"
  $1168 = $8; //@line 134 "mcbits/fft_tr.c"
  $1169 = (($1167) + ($1168<<3)|0); //@line 134 "mcbits/fft_tr.c"
  $1170 = $1169; //@line 134 "mcbits/fft_tr.c"
  $1171 = $1170; //@line 134 "mcbits/fft_tr.c"
  $1172 = HEAP32[$1171>>2]|0; //@line 134 "mcbits/fft_tr.c"
  $1173 = (($1170) + 4)|0; //@line 134 "mcbits/fft_tr.c"
  $1174 = $1173; //@line 134 "mcbits/fft_tr.c"
  $1175 = HEAP32[$1174>>2]|0; //@line 134 "mcbits/fft_tr.c"
  $1176 = $1162 ^ $1172; //@line 134 "mcbits/fft_tr.c"
  $1177 = $1165 ^ $1175; //@line 134 "mcbits/fft_tr.c"
  $1178 = ((($10)) + 96|0); //@line 134 "mcbits/fft_tr.c"
  $1179 = $8; //@line 134 "mcbits/fft_tr.c"
  $1180 = (($1178) + ($1179<<3)|0); //@line 134 "mcbits/fft_tr.c"
  $1181 = $1180; //@line 134 "mcbits/fft_tr.c"
  $1182 = $1181; //@line 134 "mcbits/fft_tr.c"
  HEAP32[$1182>>2] = $1176; //@line 134 "mcbits/fft_tr.c"
  $1183 = (($1181) + 4)|0; //@line 134 "mcbits/fft_tr.c"
  $1184 = $1183; //@line 134 "mcbits/fft_tr.c"
  HEAP32[$1184>>2] = $1177; //@line 134 "mcbits/fft_tr.c"
  $1185 = $8; //@line 134 "mcbits/fft_tr.c"
  $1186 = (($1185) + 1)|0; //@line 134 "mcbits/fft_tr.c"
  $8 = $1186; //@line 134 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 134 "mcbits/fft_tr.c"
 while(1) {
  $1187 = $8; //@line 134 "mcbits/fft_tr.c"
  $1188 = ($1187|0)<(12); //@line 134 "mcbits/fft_tr.c"
  if (!($1188)) {
   break;
  }
  $1189 = $3; //@line 134 "mcbits/fft_tr.c"
  $1190 = ((($1189)) + 5664|0); //@line 134 "mcbits/fft_tr.c"
  $1191 = $8; //@line 134 "mcbits/fft_tr.c"
  $1192 = (($1190) + ($1191<<3)|0); //@line 134 "mcbits/fft_tr.c"
  $1193 = $1192; //@line 134 "mcbits/fft_tr.c"
  $1194 = $1193; //@line 134 "mcbits/fft_tr.c"
  $1195 = HEAP32[$1194>>2]|0; //@line 134 "mcbits/fft_tr.c"
  $1196 = (($1193) + 4)|0; //@line 134 "mcbits/fft_tr.c"
  $1197 = $1196; //@line 134 "mcbits/fft_tr.c"
  $1198 = HEAP32[$1197>>2]|0; //@line 134 "mcbits/fft_tr.c"
  $1199 = $3; //@line 134 "mcbits/fft_tr.c"
  $1200 = ((($1199)) + 5472|0); //@line 134 "mcbits/fft_tr.c"
  $1201 = $8; //@line 134 "mcbits/fft_tr.c"
  $1202 = (($1200) + ($1201<<3)|0); //@line 134 "mcbits/fft_tr.c"
  $1203 = $1202; //@line 134 "mcbits/fft_tr.c"
  $1204 = $1203; //@line 134 "mcbits/fft_tr.c"
  $1205 = HEAP32[$1204>>2]|0; //@line 134 "mcbits/fft_tr.c"
  $1206 = (($1203) + 4)|0; //@line 134 "mcbits/fft_tr.c"
  $1207 = $1206; //@line 134 "mcbits/fft_tr.c"
  $1208 = HEAP32[$1207>>2]|0; //@line 134 "mcbits/fft_tr.c"
  $1209 = $1195 ^ $1205; //@line 134 "mcbits/fft_tr.c"
  $1210 = $1198 ^ $1208; //@line 134 "mcbits/fft_tr.c"
  $1211 = $3; //@line 134 "mcbits/fft_tr.c"
  $1212 = ((($1211)) + 5664|0); //@line 134 "mcbits/fft_tr.c"
  $1213 = $8; //@line 134 "mcbits/fft_tr.c"
  $1214 = (($1212) + ($1213<<3)|0); //@line 134 "mcbits/fft_tr.c"
  $1215 = $1214; //@line 134 "mcbits/fft_tr.c"
  $1216 = $1215; //@line 134 "mcbits/fft_tr.c"
  HEAP32[$1216>>2] = $1209; //@line 134 "mcbits/fft_tr.c"
  $1217 = (($1215) + 4)|0; //@line 134 "mcbits/fft_tr.c"
  $1218 = $1217; //@line 134 "mcbits/fft_tr.c"
  HEAP32[$1218>>2] = $1210; //@line 134 "mcbits/fft_tr.c"
  $1219 = $8; //@line 134 "mcbits/fft_tr.c"
  $1220 = (($1219) + 1)|0; //@line 134 "mcbits/fft_tr.c"
  $8 = $1220; //@line 134 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 135 "mcbits/fft_tr.c"
 while(1) {
  $1221 = $8; //@line 135 "mcbits/fft_tr.c"
  $1222 = ($1221|0)<(12); //@line 135 "mcbits/fft_tr.c"
  if (!($1222)) {
   break;
  }
  $1223 = $8; //@line 135 "mcbits/fft_tr.c"
  $1224 = (($10) + ($1223<<3)|0); //@line 135 "mcbits/fft_tr.c"
  $1225 = $1224; //@line 135 "mcbits/fft_tr.c"
  $1226 = $1225; //@line 135 "mcbits/fft_tr.c"
  $1227 = HEAP32[$1226>>2]|0; //@line 135 "mcbits/fft_tr.c"
  $1228 = (($1225) + 4)|0; //@line 135 "mcbits/fft_tr.c"
  $1229 = $1228; //@line 135 "mcbits/fft_tr.c"
  $1230 = HEAP32[$1229>>2]|0; //@line 135 "mcbits/fft_tr.c"
  $1231 = $3; //@line 135 "mcbits/fft_tr.c"
  $1232 = ((($1231)) + 5664|0); //@line 135 "mcbits/fft_tr.c"
  $1233 = $8; //@line 135 "mcbits/fft_tr.c"
  $1234 = (($1232) + ($1233<<3)|0); //@line 135 "mcbits/fft_tr.c"
  $1235 = $1234; //@line 135 "mcbits/fft_tr.c"
  $1236 = $1235; //@line 135 "mcbits/fft_tr.c"
  $1237 = HEAP32[$1236>>2]|0; //@line 135 "mcbits/fft_tr.c"
  $1238 = (($1235) + 4)|0; //@line 135 "mcbits/fft_tr.c"
  $1239 = $1238; //@line 135 "mcbits/fft_tr.c"
  $1240 = HEAP32[$1239>>2]|0; //@line 135 "mcbits/fft_tr.c"
  $1241 = $1227 ^ $1237; //@line 135 "mcbits/fft_tr.c"
  $1242 = $1230 ^ $1240; //@line 135 "mcbits/fft_tr.c"
  $1243 = $8; //@line 135 "mcbits/fft_tr.c"
  $1244 = (($10) + ($1243<<3)|0); //@line 135 "mcbits/fft_tr.c"
  $1245 = $1244; //@line 135 "mcbits/fft_tr.c"
  $1246 = $1245; //@line 135 "mcbits/fft_tr.c"
  HEAP32[$1246>>2] = $1241; //@line 135 "mcbits/fft_tr.c"
  $1247 = (($1245) + 4)|0; //@line 135 "mcbits/fft_tr.c"
  $1248 = $1247; //@line 135 "mcbits/fft_tr.c"
  HEAP32[$1248>>2] = $1242; //@line 135 "mcbits/fft_tr.c"
  $1249 = $8; //@line 135 "mcbits/fft_tr.c"
  $1250 = (($1249) + 1)|0; //@line 135 "mcbits/fft_tr.c"
  $8 = $1250; //@line 135 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 135 "mcbits/fft_tr.c"
 while(1) {
  $1251 = $8; //@line 135 "mcbits/fft_tr.c"
  $1252 = ($1251|0)<(12); //@line 135 "mcbits/fft_tr.c"
  if (!($1252)) {
   break;
  }
  $1253 = $3; //@line 135 "mcbits/fft_tr.c"
  $1254 = ((($1253)) + 5568|0); //@line 135 "mcbits/fft_tr.c"
  $1255 = $8; //@line 135 "mcbits/fft_tr.c"
  $1256 = (($1254) + ($1255<<3)|0); //@line 135 "mcbits/fft_tr.c"
  $1257 = $1256; //@line 135 "mcbits/fft_tr.c"
  $1258 = $1257; //@line 135 "mcbits/fft_tr.c"
  $1259 = HEAP32[$1258>>2]|0; //@line 135 "mcbits/fft_tr.c"
  $1260 = (($1257) + 4)|0; //@line 135 "mcbits/fft_tr.c"
  $1261 = $1260; //@line 135 "mcbits/fft_tr.c"
  $1262 = HEAP32[$1261>>2]|0; //@line 135 "mcbits/fft_tr.c"
  $1263 = $3; //@line 135 "mcbits/fft_tr.c"
  $1264 = ((($1263)) + 5664|0); //@line 135 "mcbits/fft_tr.c"
  $1265 = $8; //@line 135 "mcbits/fft_tr.c"
  $1266 = (($1264) + ($1265<<3)|0); //@line 135 "mcbits/fft_tr.c"
  $1267 = $1266; //@line 135 "mcbits/fft_tr.c"
  $1268 = $1267; //@line 135 "mcbits/fft_tr.c"
  $1269 = HEAP32[$1268>>2]|0; //@line 135 "mcbits/fft_tr.c"
  $1270 = (($1267) + 4)|0; //@line 135 "mcbits/fft_tr.c"
  $1271 = $1270; //@line 135 "mcbits/fft_tr.c"
  $1272 = HEAP32[$1271>>2]|0; //@line 135 "mcbits/fft_tr.c"
  $1273 = $1259 ^ $1269; //@line 135 "mcbits/fft_tr.c"
  $1274 = $1262 ^ $1272; //@line 135 "mcbits/fft_tr.c"
  $1275 = $3; //@line 135 "mcbits/fft_tr.c"
  $1276 = ((($1275)) + 5568|0); //@line 135 "mcbits/fft_tr.c"
  $1277 = $8; //@line 135 "mcbits/fft_tr.c"
  $1278 = (($1276) + ($1277<<3)|0); //@line 135 "mcbits/fft_tr.c"
  $1279 = $1278; //@line 135 "mcbits/fft_tr.c"
  $1280 = $1279; //@line 135 "mcbits/fft_tr.c"
  HEAP32[$1280>>2] = $1273; //@line 135 "mcbits/fft_tr.c"
  $1281 = (($1279) + 4)|0; //@line 135 "mcbits/fft_tr.c"
  $1282 = $1281; //@line 135 "mcbits/fft_tr.c"
  HEAP32[$1282>>2] = $1274; //@line 135 "mcbits/fft_tr.c"
  $1283 = $8; //@line 135 "mcbits/fft_tr.c"
  $1284 = (($1283) + 1)|0; //@line 135 "mcbits/fft_tr.c"
  $8 = $1284; //@line 135 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 136 "mcbits/fft_tr.c"
 while(1) {
  $1285 = $8; //@line 136 "mcbits/fft_tr.c"
  $1286 = ($1285|0)<(12); //@line 136 "mcbits/fft_tr.c"
  if (!($1286)) {
   break;
  }
  $1287 = ((($10)) + 192|0); //@line 136 "mcbits/fft_tr.c"
  $1288 = $8; //@line 136 "mcbits/fft_tr.c"
  $1289 = (($1287) + ($1288<<3)|0); //@line 136 "mcbits/fft_tr.c"
  $1290 = $1289; //@line 136 "mcbits/fft_tr.c"
  $1291 = $1290; //@line 136 "mcbits/fft_tr.c"
  $1292 = HEAP32[$1291>>2]|0; //@line 136 "mcbits/fft_tr.c"
  $1293 = (($1290) + 4)|0; //@line 136 "mcbits/fft_tr.c"
  $1294 = $1293; //@line 136 "mcbits/fft_tr.c"
  $1295 = HEAP32[$1294>>2]|0; //@line 136 "mcbits/fft_tr.c"
  $1296 = $3; //@line 136 "mcbits/fft_tr.c"
  $1297 = ((($1296)) + 5568|0); //@line 136 "mcbits/fft_tr.c"
  $1298 = $8; //@line 136 "mcbits/fft_tr.c"
  $1299 = (($1297) + ($1298<<3)|0); //@line 136 "mcbits/fft_tr.c"
  $1300 = $1299; //@line 136 "mcbits/fft_tr.c"
  $1301 = $1300; //@line 136 "mcbits/fft_tr.c"
  $1302 = HEAP32[$1301>>2]|0; //@line 136 "mcbits/fft_tr.c"
  $1303 = (($1300) + 4)|0; //@line 136 "mcbits/fft_tr.c"
  $1304 = $1303; //@line 136 "mcbits/fft_tr.c"
  $1305 = HEAP32[$1304>>2]|0; //@line 136 "mcbits/fft_tr.c"
  $1306 = $1292 ^ $1302; //@line 136 "mcbits/fft_tr.c"
  $1307 = $1295 ^ $1305; //@line 136 "mcbits/fft_tr.c"
  $1308 = ((($10)) + 192|0); //@line 136 "mcbits/fft_tr.c"
  $1309 = $8; //@line 136 "mcbits/fft_tr.c"
  $1310 = (($1308) + ($1309<<3)|0); //@line 136 "mcbits/fft_tr.c"
  $1311 = $1310; //@line 136 "mcbits/fft_tr.c"
  $1312 = $1311; //@line 136 "mcbits/fft_tr.c"
  HEAP32[$1312>>2] = $1306; //@line 136 "mcbits/fft_tr.c"
  $1313 = (($1311) + 4)|0; //@line 136 "mcbits/fft_tr.c"
  $1314 = $1313; //@line 136 "mcbits/fft_tr.c"
  HEAP32[$1314>>2] = $1307; //@line 136 "mcbits/fft_tr.c"
  $1315 = $8; //@line 136 "mcbits/fft_tr.c"
  $1316 = (($1315) + 1)|0; //@line 136 "mcbits/fft_tr.c"
  $8 = $1316; //@line 136 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 136 "mcbits/fft_tr.c"
 while(1) {
  $1317 = $8; //@line 136 "mcbits/fft_tr.c"
  $1318 = ($1317|0)<(12); //@line 136 "mcbits/fft_tr.c"
  if (!($1318)) {
   break;
  }
  $1319 = $3; //@line 136 "mcbits/fft_tr.c"
  $1320 = ((($1319)) + 5952|0); //@line 136 "mcbits/fft_tr.c"
  $1321 = $8; //@line 136 "mcbits/fft_tr.c"
  $1322 = (($1320) + ($1321<<3)|0); //@line 136 "mcbits/fft_tr.c"
  $1323 = $1322; //@line 136 "mcbits/fft_tr.c"
  $1324 = $1323; //@line 136 "mcbits/fft_tr.c"
  $1325 = HEAP32[$1324>>2]|0; //@line 136 "mcbits/fft_tr.c"
  $1326 = (($1323) + 4)|0; //@line 136 "mcbits/fft_tr.c"
  $1327 = $1326; //@line 136 "mcbits/fft_tr.c"
  $1328 = HEAP32[$1327>>2]|0; //@line 136 "mcbits/fft_tr.c"
  $1329 = $3; //@line 136 "mcbits/fft_tr.c"
  $1330 = ((($1329)) + 5568|0); //@line 136 "mcbits/fft_tr.c"
  $1331 = $8; //@line 136 "mcbits/fft_tr.c"
  $1332 = (($1330) + ($1331<<3)|0); //@line 136 "mcbits/fft_tr.c"
  $1333 = $1332; //@line 136 "mcbits/fft_tr.c"
  $1334 = $1333; //@line 136 "mcbits/fft_tr.c"
  $1335 = HEAP32[$1334>>2]|0; //@line 136 "mcbits/fft_tr.c"
  $1336 = (($1333) + 4)|0; //@line 136 "mcbits/fft_tr.c"
  $1337 = $1336; //@line 136 "mcbits/fft_tr.c"
  $1338 = HEAP32[$1337>>2]|0; //@line 136 "mcbits/fft_tr.c"
  $1339 = $1325 ^ $1335; //@line 136 "mcbits/fft_tr.c"
  $1340 = $1328 ^ $1338; //@line 136 "mcbits/fft_tr.c"
  $1341 = $3; //@line 136 "mcbits/fft_tr.c"
  $1342 = ((($1341)) + 5952|0); //@line 136 "mcbits/fft_tr.c"
  $1343 = $8; //@line 136 "mcbits/fft_tr.c"
  $1344 = (($1342) + ($1343<<3)|0); //@line 136 "mcbits/fft_tr.c"
  $1345 = $1344; //@line 136 "mcbits/fft_tr.c"
  $1346 = $1345; //@line 136 "mcbits/fft_tr.c"
  HEAP32[$1346>>2] = $1339; //@line 136 "mcbits/fft_tr.c"
  $1347 = (($1345) + 4)|0; //@line 136 "mcbits/fft_tr.c"
  $1348 = $1347; //@line 136 "mcbits/fft_tr.c"
  HEAP32[$1348>>2] = $1340; //@line 136 "mcbits/fft_tr.c"
  $1349 = $8; //@line 136 "mcbits/fft_tr.c"
  $1350 = (($1349) + 1)|0; //@line 136 "mcbits/fft_tr.c"
  $8 = $1350; //@line 136 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 137 "mcbits/fft_tr.c"
 while(1) {
  $1351 = $8; //@line 137 "mcbits/fft_tr.c"
  $1352 = ($1351|0)<(12); //@line 137 "mcbits/fft_tr.c"
  if (!($1352)) {
   break;
  }
  $1353 = $8; //@line 137 "mcbits/fft_tr.c"
  $1354 = (($10) + ($1353<<3)|0); //@line 137 "mcbits/fft_tr.c"
  $1355 = $1354; //@line 137 "mcbits/fft_tr.c"
  $1356 = $1355; //@line 137 "mcbits/fft_tr.c"
  $1357 = HEAP32[$1356>>2]|0; //@line 137 "mcbits/fft_tr.c"
  $1358 = (($1355) + 4)|0; //@line 137 "mcbits/fft_tr.c"
  $1359 = $1358; //@line 137 "mcbits/fft_tr.c"
  $1360 = HEAP32[$1359>>2]|0; //@line 137 "mcbits/fft_tr.c"
  $1361 = $3; //@line 137 "mcbits/fft_tr.c"
  $1362 = ((($1361)) + 5952|0); //@line 137 "mcbits/fft_tr.c"
  $1363 = $8; //@line 137 "mcbits/fft_tr.c"
  $1364 = (($1362) + ($1363<<3)|0); //@line 137 "mcbits/fft_tr.c"
  $1365 = $1364; //@line 137 "mcbits/fft_tr.c"
  $1366 = $1365; //@line 137 "mcbits/fft_tr.c"
  $1367 = HEAP32[$1366>>2]|0; //@line 137 "mcbits/fft_tr.c"
  $1368 = (($1365) + 4)|0; //@line 137 "mcbits/fft_tr.c"
  $1369 = $1368; //@line 137 "mcbits/fft_tr.c"
  $1370 = HEAP32[$1369>>2]|0; //@line 137 "mcbits/fft_tr.c"
  $1371 = $1357 ^ $1367; //@line 137 "mcbits/fft_tr.c"
  $1372 = $1360 ^ $1370; //@line 137 "mcbits/fft_tr.c"
  $1373 = $8; //@line 137 "mcbits/fft_tr.c"
  $1374 = (($10) + ($1373<<3)|0); //@line 137 "mcbits/fft_tr.c"
  $1375 = $1374; //@line 137 "mcbits/fft_tr.c"
  $1376 = $1375; //@line 137 "mcbits/fft_tr.c"
  HEAP32[$1376>>2] = $1371; //@line 137 "mcbits/fft_tr.c"
  $1377 = (($1375) + 4)|0; //@line 137 "mcbits/fft_tr.c"
  $1378 = $1377; //@line 137 "mcbits/fft_tr.c"
  HEAP32[$1378>>2] = $1372; //@line 137 "mcbits/fft_tr.c"
  $1379 = $8; //@line 137 "mcbits/fft_tr.c"
  $1380 = (($1379) + 1)|0; //@line 137 "mcbits/fft_tr.c"
  $8 = $1380; //@line 137 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 137 "mcbits/fft_tr.c"
 while(1) {
  $1381 = $8; //@line 137 "mcbits/fft_tr.c"
  $1382 = ($1381|0)<(12); //@line 137 "mcbits/fft_tr.c"
  if (!($1382)) {
   break;
  }
  $1383 = $3; //@line 137 "mcbits/fft_tr.c"
  $1384 = ((($1383)) + 6048|0); //@line 137 "mcbits/fft_tr.c"
  $1385 = $8; //@line 137 "mcbits/fft_tr.c"
  $1386 = (($1384) + ($1385<<3)|0); //@line 137 "mcbits/fft_tr.c"
  $1387 = $1386; //@line 137 "mcbits/fft_tr.c"
  $1388 = $1387; //@line 137 "mcbits/fft_tr.c"
  $1389 = HEAP32[$1388>>2]|0; //@line 137 "mcbits/fft_tr.c"
  $1390 = (($1387) + 4)|0; //@line 137 "mcbits/fft_tr.c"
  $1391 = $1390; //@line 137 "mcbits/fft_tr.c"
  $1392 = HEAP32[$1391>>2]|0; //@line 137 "mcbits/fft_tr.c"
  $1393 = $3; //@line 137 "mcbits/fft_tr.c"
  $1394 = ((($1393)) + 5952|0); //@line 137 "mcbits/fft_tr.c"
  $1395 = $8; //@line 137 "mcbits/fft_tr.c"
  $1396 = (($1394) + ($1395<<3)|0); //@line 137 "mcbits/fft_tr.c"
  $1397 = $1396; //@line 137 "mcbits/fft_tr.c"
  $1398 = $1397; //@line 137 "mcbits/fft_tr.c"
  $1399 = HEAP32[$1398>>2]|0; //@line 137 "mcbits/fft_tr.c"
  $1400 = (($1397) + 4)|0; //@line 137 "mcbits/fft_tr.c"
  $1401 = $1400; //@line 137 "mcbits/fft_tr.c"
  $1402 = HEAP32[$1401>>2]|0; //@line 137 "mcbits/fft_tr.c"
  $1403 = $1389 ^ $1399; //@line 137 "mcbits/fft_tr.c"
  $1404 = $1392 ^ $1402; //@line 137 "mcbits/fft_tr.c"
  $1405 = $3; //@line 137 "mcbits/fft_tr.c"
  $1406 = ((($1405)) + 6048|0); //@line 137 "mcbits/fft_tr.c"
  $1407 = $8; //@line 137 "mcbits/fft_tr.c"
  $1408 = (($1406) + ($1407<<3)|0); //@line 137 "mcbits/fft_tr.c"
  $1409 = $1408; //@line 137 "mcbits/fft_tr.c"
  $1410 = $1409; //@line 137 "mcbits/fft_tr.c"
  HEAP32[$1410>>2] = $1403; //@line 137 "mcbits/fft_tr.c"
  $1411 = (($1409) + 4)|0; //@line 137 "mcbits/fft_tr.c"
  $1412 = $1411; //@line 137 "mcbits/fft_tr.c"
  HEAP32[$1412>>2] = $1404; //@line 137 "mcbits/fft_tr.c"
  $1413 = $8; //@line 137 "mcbits/fft_tr.c"
  $1414 = (($1413) + 1)|0; //@line 137 "mcbits/fft_tr.c"
  $8 = $1414; //@line 137 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 138 "mcbits/fft_tr.c"
 while(1) {
  $1415 = $8; //@line 138 "mcbits/fft_tr.c"
  $1416 = ($1415|0)<(12); //@line 138 "mcbits/fft_tr.c"
  if (!($1416)) {
   break;
  }
  $1417 = ((($10)) + 96|0); //@line 138 "mcbits/fft_tr.c"
  $1418 = $8; //@line 138 "mcbits/fft_tr.c"
  $1419 = (($1417) + ($1418<<3)|0); //@line 138 "mcbits/fft_tr.c"
  $1420 = $1419; //@line 138 "mcbits/fft_tr.c"
  $1421 = $1420; //@line 138 "mcbits/fft_tr.c"
  $1422 = HEAP32[$1421>>2]|0; //@line 138 "mcbits/fft_tr.c"
  $1423 = (($1420) + 4)|0; //@line 138 "mcbits/fft_tr.c"
  $1424 = $1423; //@line 138 "mcbits/fft_tr.c"
  $1425 = HEAP32[$1424>>2]|0; //@line 138 "mcbits/fft_tr.c"
  $1426 = $3; //@line 138 "mcbits/fft_tr.c"
  $1427 = ((($1426)) + 6048|0); //@line 138 "mcbits/fft_tr.c"
  $1428 = $8; //@line 138 "mcbits/fft_tr.c"
  $1429 = (($1427) + ($1428<<3)|0); //@line 138 "mcbits/fft_tr.c"
  $1430 = $1429; //@line 138 "mcbits/fft_tr.c"
  $1431 = $1430; //@line 138 "mcbits/fft_tr.c"
  $1432 = HEAP32[$1431>>2]|0; //@line 138 "mcbits/fft_tr.c"
  $1433 = (($1430) + 4)|0; //@line 138 "mcbits/fft_tr.c"
  $1434 = $1433; //@line 138 "mcbits/fft_tr.c"
  $1435 = HEAP32[$1434>>2]|0; //@line 138 "mcbits/fft_tr.c"
  $1436 = $1422 ^ $1432; //@line 138 "mcbits/fft_tr.c"
  $1437 = $1425 ^ $1435; //@line 138 "mcbits/fft_tr.c"
  $1438 = ((($10)) + 96|0); //@line 138 "mcbits/fft_tr.c"
  $1439 = $8; //@line 138 "mcbits/fft_tr.c"
  $1440 = (($1438) + ($1439<<3)|0); //@line 138 "mcbits/fft_tr.c"
  $1441 = $1440; //@line 138 "mcbits/fft_tr.c"
  $1442 = $1441; //@line 138 "mcbits/fft_tr.c"
  HEAP32[$1442>>2] = $1436; //@line 138 "mcbits/fft_tr.c"
  $1443 = (($1441) + 4)|0; //@line 138 "mcbits/fft_tr.c"
  $1444 = $1443; //@line 138 "mcbits/fft_tr.c"
  HEAP32[$1444>>2] = $1437; //@line 138 "mcbits/fft_tr.c"
  $1445 = $8; //@line 138 "mcbits/fft_tr.c"
  $1446 = (($1445) + 1)|0; //@line 138 "mcbits/fft_tr.c"
  $8 = $1446; //@line 138 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 138 "mcbits/fft_tr.c"
 while(1) {
  $1447 = $8; //@line 138 "mcbits/fft_tr.c"
  $1448 = ($1447|0)<(12); //@line 138 "mcbits/fft_tr.c"
  if (!($1448)) {
   break;
  }
  $1449 = $3; //@line 138 "mcbits/fft_tr.c"
  $1450 = ((($1449)) + 5856|0); //@line 138 "mcbits/fft_tr.c"
  $1451 = $8; //@line 138 "mcbits/fft_tr.c"
  $1452 = (($1450) + ($1451<<3)|0); //@line 138 "mcbits/fft_tr.c"
  $1453 = $1452; //@line 138 "mcbits/fft_tr.c"
  $1454 = $1453; //@line 138 "mcbits/fft_tr.c"
  $1455 = HEAP32[$1454>>2]|0; //@line 138 "mcbits/fft_tr.c"
  $1456 = (($1453) + 4)|0; //@line 138 "mcbits/fft_tr.c"
  $1457 = $1456; //@line 138 "mcbits/fft_tr.c"
  $1458 = HEAP32[$1457>>2]|0; //@line 138 "mcbits/fft_tr.c"
  $1459 = $3; //@line 138 "mcbits/fft_tr.c"
  $1460 = ((($1459)) + 6048|0); //@line 138 "mcbits/fft_tr.c"
  $1461 = $8; //@line 138 "mcbits/fft_tr.c"
  $1462 = (($1460) + ($1461<<3)|0); //@line 138 "mcbits/fft_tr.c"
  $1463 = $1462; //@line 138 "mcbits/fft_tr.c"
  $1464 = $1463; //@line 138 "mcbits/fft_tr.c"
  $1465 = HEAP32[$1464>>2]|0; //@line 138 "mcbits/fft_tr.c"
  $1466 = (($1463) + 4)|0; //@line 138 "mcbits/fft_tr.c"
  $1467 = $1466; //@line 138 "mcbits/fft_tr.c"
  $1468 = HEAP32[$1467>>2]|0; //@line 138 "mcbits/fft_tr.c"
  $1469 = $1455 ^ $1465; //@line 138 "mcbits/fft_tr.c"
  $1470 = $1458 ^ $1468; //@line 138 "mcbits/fft_tr.c"
  $1471 = $3; //@line 138 "mcbits/fft_tr.c"
  $1472 = ((($1471)) + 5856|0); //@line 138 "mcbits/fft_tr.c"
  $1473 = $8; //@line 138 "mcbits/fft_tr.c"
  $1474 = (($1472) + ($1473<<3)|0); //@line 138 "mcbits/fft_tr.c"
  $1475 = $1474; //@line 138 "mcbits/fft_tr.c"
  $1476 = $1475; //@line 138 "mcbits/fft_tr.c"
  HEAP32[$1476>>2] = $1469; //@line 138 "mcbits/fft_tr.c"
  $1477 = (($1475) + 4)|0; //@line 138 "mcbits/fft_tr.c"
  $1478 = $1477; //@line 138 "mcbits/fft_tr.c"
  HEAP32[$1478>>2] = $1470; //@line 138 "mcbits/fft_tr.c"
  $1479 = $8; //@line 138 "mcbits/fft_tr.c"
  $1480 = (($1479) + 1)|0; //@line 138 "mcbits/fft_tr.c"
  $8 = $1480; //@line 138 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 139 "mcbits/fft_tr.c"
 while(1) {
  $1481 = $8; //@line 139 "mcbits/fft_tr.c"
  $1482 = ($1481|0)<(12); //@line 139 "mcbits/fft_tr.c"
  if (!($1482)) {
   break;
  }
  $1483 = $8; //@line 139 "mcbits/fft_tr.c"
  $1484 = (($10) + ($1483<<3)|0); //@line 139 "mcbits/fft_tr.c"
  $1485 = $1484; //@line 139 "mcbits/fft_tr.c"
  $1486 = $1485; //@line 139 "mcbits/fft_tr.c"
  $1487 = HEAP32[$1486>>2]|0; //@line 139 "mcbits/fft_tr.c"
  $1488 = (($1485) + 4)|0; //@line 139 "mcbits/fft_tr.c"
  $1489 = $1488; //@line 139 "mcbits/fft_tr.c"
  $1490 = HEAP32[$1489>>2]|0; //@line 139 "mcbits/fft_tr.c"
  $1491 = $3; //@line 139 "mcbits/fft_tr.c"
  $1492 = ((($1491)) + 5856|0); //@line 139 "mcbits/fft_tr.c"
  $1493 = $8; //@line 139 "mcbits/fft_tr.c"
  $1494 = (($1492) + ($1493<<3)|0); //@line 139 "mcbits/fft_tr.c"
  $1495 = $1494; //@line 139 "mcbits/fft_tr.c"
  $1496 = $1495; //@line 139 "mcbits/fft_tr.c"
  $1497 = HEAP32[$1496>>2]|0; //@line 139 "mcbits/fft_tr.c"
  $1498 = (($1495) + 4)|0; //@line 139 "mcbits/fft_tr.c"
  $1499 = $1498; //@line 139 "mcbits/fft_tr.c"
  $1500 = HEAP32[$1499>>2]|0; //@line 139 "mcbits/fft_tr.c"
  $1501 = $1487 ^ $1497; //@line 139 "mcbits/fft_tr.c"
  $1502 = $1490 ^ $1500; //@line 139 "mcbits/fft_tr.c"
  $1503 = $8; //@line 139 "mcbits/fft_tr.c"
  $1504 = (($10) + ($1503<<3)|0); //@line 139 "mcbits/fft_tr.c"
  $1505 = $1504; //@line 139 "mcbits/fft_tr.c"
  $1506 = $1505; //@line 139 "mcbits/fft_tr.c"
  HEAP32[$1506>>2] = $1501; //@line 139 "mcbits/fft_tr.c"
  $1507 = (($1505) + 4)|0; //@line 139 "mcbits/fft_tr.c"
  $1508 = $1507; //@line 139 "mcbits/fft_tr.c"
  HEAP32[$1508>>2] = $1502; //@line 139 "mcbits/fft_tr.c"
  $1509 = $8; //@line 139 "mcbits/fft_tr.c"
  $1510 = (($1509) + 1)|0; //@line 139 "mcbits/fft_tr.c"
  $8 = $1510; //@line 139 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 139 "mcbits/fft_tr.c"
 while(1) {
  $1511 = $8; //@line 139 "mcbits/fft_tr.c"
  $1512 = ($1511|0)<(12); //@line 139 "mcbits/fft_tr.c"
  if (!($1512)) {
   break;
  }
  $1513 = $3; //@line 139 "mcbits/fft_tr.c"
  $1514 = ((($1513)) + 5760|0); //@line 139 "mcbits/fft_tr.c"
  $1515 = $8; //@line 139 "mcbits/fft_tr.c"
  $1516 = (($1514) + ($1515<<3)|0); //@line 139 "mcbits/fft_tr.c"
  $1517 = $1516; //@line 139 "mcbits/fft_tr.c"
  $1518 = $1517; //@line 139 "mcbits/fft_tr.c"
  $1519 = HEAP32[$1518>>2]|0; //@line 139 "mcbits/fft_tr.c"
  $1520 = (($1517) + 4)|0; //@line 139 "mcbits/fft_tr.c"
  $1521 = $1520; //@line 139 "mcbits/fft_tr.c"
  $1522 = HEAP32[$1521>>2]|0; //@line 139 "mcbits/fft_tr.c"
  $1523 = $3; //@line 139 "mcbits/fft_tr.c"
  $1524 = ((($1523)) + 5856|0); //@line 139 "mcbits/fft_tr.c"
  $1525 = $8; //@line 139 "mcbits/fft_tr.c"
  $1526 = (($1524) + ($1525<<3)|0); //@line 139 "mcbits/fft_tr.c"
  $1527 = $1526; //@line 139 "mcbits/fft_tr.c"
  $1528 = $1527; //@line 139 "mcbits/fft_tr.c"
  $1529 = HEAP32[$1528>>2]|0; //@line 139 "mcbits/fft_tr.c"
  $1530 = (($1527) + 4)|0; //@line 139 "mcbits/fft_tr.c"
  $1531 = $1530; //@line 139 "mcbits/fft_tr.c"
  $1532 = HEAP32[$1531>>2]|0; //@line 139 "mcbits/fft_tr.c"
  $1533 = $1519 ^ $1529; //@line 139 "mcbits/fft_tr.c"
  $1534 = $1522 ^ $1532; //@line 139 "mcbits/fft_tr.c"
  $1535 = $3; //@line 139 "mcbits/fft_tr.c"
  $1536 = ((($1535)) + 5760|0); //@line 139 "mcbits/fft_tr.c"
  $1537 = $8; //@line 139 "mcbits/fft_tr.c"
  $1538 = (($1536) + ($1537<<3)|0); //@line 139 "mcbits/fft_tr.c"
  $1539 = $1538; //@line 139 "mcbits/fft_tr.c"
  $1540 = $1539; //@line 139 "mcbits/fft_tr.c"
  HEAP32[$1540>>2] = $1533; //@line 139 "mcbits/fft_tr.c"
  $1541 = (($1539) + 4)|0; //@line 139 "mcbits/fft_tr.c"
  $1542 = $1541; //@line 139 "mcbits/fft_tr.c"
  HEAP32[$1542>>2] = $1534; //@line 139 "mcbits/fft_tr.c"
  $1543 = $8; //@line 139 "mcbits/fft_tr.c"
  $1544 = (($1543) + 1)|0; //@line 139 "mcbits/fft_tr.c"
  $8 = $1544; //@line 139 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 140 "mcbits/fft_tr.c"
 while(1) {
  $1545 = $8; //@line 140 "mcbits/fft_tr.c"
  $1546 = ($1545|0)<(12); //@line 140 "mcbits/fft_tr.c"
  if (!($1546)) {
   break;
  }
  $1547 = ((($10)) + 288|0); //@line 140 "mcbits/fft_tr.c"
  $1548 = $8; //@line 140 "mcbits/fft_tr.c"
  $1549 = (($1547) + ($1548<<3)|0); //@line 140 "mcbits/fft_tr.c"
  $1550 = $1549; //@line 140 "mcbits/fft_tr.c"
  $1551 = $1550; //@line 140 "mcbits/fft_tr.c"
  $1552 = HEAP32[$1551>>2]|0; //@line 140 "mcbits/fft_tr.c"
  $1553 = (($1550) + 4)|0; //@line 140 "mcbits/fft_tr.c"
  $1554 = $1553; //@line 140 "mcbits/fft_tr.c"
  $1555 = HEAP32[$1554>>2]|0; //@line 140 "mcbits/fft_tr.c"
  $1556 = $3; //@line 140 "mcbits/fft_tr.c"
  $1557 = ((($1556)) + 5760|0); //@line 140 "mcbits/fft_tr.c"
  $1558 = $8; //@line 140 "mcbits/fft_tr.c"
  $1559 = (($1557) + ($1558<<3)|0); //@line 140 "mcbits/fft_tr.c"
  $1560 = $1559; //@line 140 "mcbits/fft_tr.c"
  $1561 = $1560; //@line 140 "mcbits/fft_tr.c"
  $1562 = HEAP32[$1561>>2]|0; //@line 140 "mcbits/fft_tr.c"
  $1563 = (($1560) + 4)|0; //@line 140 "mcbits/fft_tr.c"
  $1564 = $1563; //@line 140 "mcbits/fft_tr.c"
  $1565 = HEAP32[$1564>>2]|0; //@line 140 "mcbits/fft_tr.c"
  $1566 = $1552 ^ $1562; //@line 140 "mcbits/fft_tr.c"
  $1567 = $1555 ^ $1565; //@line 140 "mcbits/fft_tr.c"
  $1568 = ((($10)) + 288|0); //@line 140 "mcbits/fft_tr.c"
  $1569 = $8; //@line 140 "mcbits/fft_tr.c"
  $1570 = (($1568) + ($1569<<3)|0); //@line 140 "mcbits/fft_tr.c"
  $1571 = $1570; //@line 140 "mcbits/fft_tr.c"
  $1572 = $1571; //@line 140 "mcbits/fft_tr.c"
  HEAP32[$1572>>2] = $1566; //@line 140 "mcbits/fft_tr.c"
  $1573 = (($1571) + 4)|0; //@line 140 "mcbits/fft_tr.c"
  $1574 = $1573; //@line 140 "mcbits/fft_tr.c"
  HEAP32[$1574>>2] = $1567; //@line 140 "mcbits/fft_tr.c"
  $1575 = $8; //@line 140 "mcbits/fft_tr.c"
  $1576 = (($1575) + 1)|0; //@line 140 "mcbits/fft_tr.c"
  $8 = $1576; //@line 140 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 140 "mcbits/fft_tr.c"
 while(1) {
  $1577 = $8; //@line 140 "mcbits/fft_tr.c"
  $1578 = ($1577|0)<(12); //@line 140 "mcbits/fft_tr.c"
  if (!($1578)) {
   break;
  }
  $1579 = $3; //@line 140 "mcbits/fft_tr.c"
  $1580 = ((($1579)) + 4992|0); //@line 140 "mcbits/fft_tr.c"
  $1581 = $8; //@line 140 "mcbits/fft_tr.c"
  $1582 = (($1580) + ($1581<<3)|0); //@line 140 "mcbits/fft_tr.c"
  $1583 = $1582; //@line 140 "mcbits/fft_tr.c"
  $1584 = $1583; //@line 140 "mcbits/fft_tr.c"
  $1585 = HEAP32[$1584>>2]|0; //@line 140 "mcbits/fft_tr.c"
  $1586 = (($1583) + 4)|0; //@line 140 "mcbits/fft_tr.c"
  $1587 = $1586; //@line 140 "mcbits/fft_tr.c"
  $1588 = HEAP32[$1587>>2]|0; //@line 140 "mcbits/fft_tr.c"
  $1589 = $3; //@line 140 "mcbits/fft_tr.c"
  $1590 = ((($1589)) + 5760|0); //@line 140 "mcbits/fft_tr.c"
  $1591 = $8; //@line 140 "mcbits/fft_tr.c"
  $1592 = (($1590) + ($1591<<3)|0); //@line 140 "mcbits/fft_tr.c"
  $1593 = $1592; //@line 140 "mcbits/fft_tr.c"
  $1594 = $1593; //@line 140 "mcbits/fft_tr.c"
  $1595 = HEAP32[$1594>>2]|0; //@line 140 "mcbits/fft_tr.c"
  $1596 = (($1593) + 4)|0; //@line 140 "mcbits/fft_tr.c"
  $1597 = $1596; //@line 140 "mcbits/fft_tr.c"
  $1598 = HEAP32[$1597>>2]|0; //@line 140 "mcbits/fft_tr.c"
  $1599 = $1585 ^ $1595; //@line 140 "mcbits/fft_tr.c"
  $1600 = $1588 ^ $1598; //@line 140 "mcbits/fft_tr.c"
  $1601 = $3; //@line 140 "mcbits/fft_tr.c"
  $1602 = ((($1601)) + 4992|0); //@line 140 "mcbits/fft_tr.c"
  $1603 = $8; //@line 140 "mcbits/fft_tr.c"
  $1604 = (($1602) + ($1603<<3)|0); //@line 140 "mcbits/fft_tr.c"
  $1605 = $1604; //@line 140 "mcbits/fft_tr.c"
  $1606 = $1605; //@line 140 "mcbits/fft_tr.c"
  HEAP32[$1606>>2] = $1599; //@line 140 "mcbits/fft_tr.c"
  $1607 = (($1605) + 4)|0; //@line 140 "mcbits/fft_tr.c"
  $1608 = $1607; //@line 140 "mcbits/fft_tr.c"
  HEAP32[$1608>>2] = $1600; //@line 140 "mcbits/fft_tr.c"
  $1609 = $8; //@line 140 "mcbits/fft_tr.c"
  $1610 = (($1609) + 1)|0; //@line 140 "mcbits/fft_tr.c"
  $8 = $1610; //@line 140 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 141 "mcbits/fft_tr.c"
 while(1) {
  $1611 = $8; //@line 141 "mcbits/fft_tr.c"
  $1612 = ($1611|0)<(12); //@line 141 "mcbits/fft_tr.c"
  if (!($1612)) {
   break;
  }
  $1613 = $8; //@line 141 "mcbits/fft_tr.c"
  $1614 = (($10) + ($1613<<3)|0); //@line 141 "mcbits/fft_tr.c"
  $1615 = $1614; //@line 141 "mcbits/fft_tr.c"
  $1616 = $1615; //@line 141 "mcbits/fft_tr.c"
  $1617 = HEAP32[$1616>>2]|0; //@line 141 "mcbits/fft_tr.c"
  $1618 = (($1615) + 4)|0; //@line 141 "mcbits/fft_tr.c"
  $1619 = $1618; //@line 141 "mcbits/fft_tr.c"
  $1620 = HEAP32[$1619>>2]|0; //@line 141 "mcbits/fft_tr.c"
  $1621 = $3; //@line 141 "mcbits/fft_tr.c"
  $1622 = ((($1621)) + 4992|0); //@line 141 "mcbits/fft_tr.c"
  $1623 = $8; //@line 141 "mcbits/fft_tr.c"
  $1624 = (($1622) + ($1623<<3)|0); //@line 141 "mcbits/fft_tr.c"
  $1625 = $1624; //@line 141 "mcbits/fft_tr.c"
  $1626 = $1625; //@line 141 "mcbits/fft_tr.c"
  $1627 = HEAP32[$1626>>2]|0; //@line 141 "mcbits/fft_tr.c"
  $1628 = (($1625) + 4)|0; //@line 141 "mcbits/fft_tr.c"
  $1629 = $1628; //@line 141 "mcbits/fft_tr.c"
  $1630 = HEAP32[$1629>>2]|0; //@line 141 "mcbits/fft_tr.c"
  $1631 = $1617 ^ $1627; //@line 141 "mcbits/fft_tr.c"
  $1632 = $1620 ^ $1630; //@line 141 "mcbits/fft_tr.c"
  $1633 = $8; //@line 141 "mcbits/fft_tr.c"
  $1634 = (($10) + ($1633<<3)|0); //@line 141 "mcbits/fft_tr.c"
  $1635 = $1634; //@line 141 "mcbits/fft_tr.c"
  $1636 = $1635; //@line 141 "mcbits/fft_tr.c"
  HEAP32[$1636>>2] = $1631; //@line 141 "mcbits/fft_tr.c"
  $1637 = (($1635) + 4)|0; //@line 141 "mcbits/fft_tr.c"
  $1638 = $1637; //@line 141 "mcbits/fft_tr.c"
  HEAP32[$1638>>2] = $1632; //@line 141 "mcbits/fft_tr.c"
  $1639 = $8; //@line 141 "mcbits/fft_tr.c"
  $1640 = (($1639) + 1)|0; //@line 141 "mcbits/fft_tr.c"
  $8 = $1640; //@line 141 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 141 "mcbits/fft_tr.c"
 while(1) {
  $1641 = $8; //@line 141 "mcbits/fft_tr.c"
  $1642 = ($1641|0)<(12); //@line 141 "mcbits/fft_tr.c"
  if (!($1642)) {
   break;
  }
  $1643 = $3; //@line 141 "mcbits/fft_tr.c"
  $1644 = ((($1643)) + 5088|0); //@line 141 "mcbits/fft_tr.c"
  $1645 = $8; //@line 141 "mcbits/fft_tr.c"
  $1646 = (($1644) + ($1645<<3)|0); //@line 141 "mcbits/fft_tr.c"
  $1647 = $1646; //@line 141 "mcbits/fft_tr.c"
  $1648 = $1647; //@line 141 "mcbits/fft_tr.c"
  $1649 = HEAP32[$1648>>2]|0; //@line 141 "mcbits/fft_tr.c"
  $1650 = (($1647) + 4)|0; //@line 141 "mcbits/fft_tr.c"
  $1651 = $1650; //@line 141 "mcbits/fft_tr.c"
  $1652 = HEAP32[$1651>>2]|0; //@line 141 "mcbits/fft_tr.c"
  $1653 = $3; //@line 141 "mcbits/fft_tr.c"
  $1654 = ((($1653)) + 4992|0); //@line 141 "mcbits/fft_tr.c"
  $1655 = $8; //@line 141 "mcbits/fft_tr.c"
  $1656 = (($1654) + ($1655<<3)|0); //@line 141 "mcbits/fft_tr.c"
  $1657 = $1656; //@line 141 "mcbits/fft_tr.c"
  $1658 = $1657; //@line 141 "mcbits/fft_tr.c"
  $1659 = HEAP32[$1658>>2]|0; //@line 141 "mcbits/fft_tr.c"
  $1660 = (($1657) + 4)|0; //@line 141 "mcbits/fft_tr.c"
  $1661 = $1660; //@line 141 "mcbits/fft_tr.c"
  $1662 = HEAP32[$1661>>2]|0; //@line 141 "mcbits/fft_tr.c"
  $1663 = $1649 ^ $1659; //@line 141 "mcbits/fft_tr.c"
  $1664 = $1652 ^ $1662; //@line 141 "mcbits/fft_tr.c"
  $1665 = $3; //@line 141 "mcbits/fft_tr.c"
  $1666 = ((($1665)) + 5088|0); //@line 141 "mcbits/fft_tr.c"
  $1667 = $8; //@line 141 "mcbits/fft_tr.c"
  $1668 = (($1666) + ($1667<<3)|0); //@line 141 "mcbits/fft_tr.c"
  $1669 = $1668; //@line 141 "mcbits/fft_tr.c"
  $1670 = $1669; //@line 141 "mcbits/fft_tr.c"
  HEAP32[$1670>>2] = $1663; //@line 141 "mcbits/fft_tr.c"
  $1671 = (($1669) + 4)|0; //@line 141 "mcbits/fft_tr.c"
  $1672 = $1671; //@line 141 "mcbits/fft_tr.c"
  HEAP32[$1672>>2] = $1664; //@line 141 "mcbits/fft_tr.c"
  $1673 = $8; //@line 141 "mcbits/fft_tr.c"
  $1674 = (($1673) + 1)|0; //@line 141 "mcbits/fft_tr.c"
  $8 = $1674; //@line 141 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 142 "mcbits/fft_tr.c"
 while(1) {
  $1675 = $8; //@line 142 "mcbits/fft_tr.c"
  $1676 = ($1675|0)<(12); //@line 142 "mcbits/fft_tr.c"
  if (!($1676)) {
   break;
  }
  $1677 = ((($10)) + 96|0); //@line 142 "mcbits/fft_tr.c"
  $1678 = $8; //@line 142 "mcbits/fft_tr.c"
  $1679 = (($1677) + ($1678<<3)|0); //@line 142 "mcbits/fft_tr.c"
  $1680 = $1679; //@line 142 "mcbits/fft_tr.c"
  $1681 = $1680; //@line 142 "mcbits/fft_tr.c"
  $1682 = HEAP32[$1681>>2]|0; //@line 142 "mcbits/fft_tr.c"
  $1683 = (($1680) + 4)|0; //@line 142 "mcbits/fft_tr.c"
  $1684 = $1683; //@line 142 "mcbits/fft_tr.c"
  $1685 = HEAP32[$1684>>2]|0; //@line 142 "mcbits/fft_tr.c"
  $1686 = $3; //@line 142 "mcbits/fft_tr.c"
  $1687 = ((($1686)) + 5088|0); //@line 142 "mcbits/fft_tr.c"
  $1688 = $8; //@line 142 "mcbits/fft_tr.c"
  $1689 = (($1687) + ($1688<<3)|0); //@line 142 "mcbits/fft_tr.c"
  $1690 = $1689; //@line 142 "mcbits/fft_tr.c"
  $1691 = $1690; //@line 142 "mcbits/fft_tr.c"
  $1692 = HEAP32[$1691>>2]|0; //@line 142 "mcbits/fft_tr.c"
  $1693 = (($1690) + 4)|0; //@line 142 "mcbits/fft_tr.c"
  $1694 = $1693; //@line 142 "mcbits/fft_tr.c"
  $1695 = HEAP32[$1694>>2]|0; //@line 142 "mcbits/fft_tr.c"
  $1696 = $1682 ^ $1692; //@line 142 "mcbits/fft_tr.c"
  $1697 = $1685 ^ $1695; //@line 142 "mcbits/fft_tr.c"
  $1698 = ((($10)) + 96|0); //@line 142 "mcbits/fft_tr.c"
  $1699 = $8; //@line 142 "mcbits/fft_tr.c"
  $1700 = (($1698) + ($1699<<3)|0); //@line 142 "mcbits/fft_tr.c"
  $1701 = $1700; //@line 142 "mcbits/fft_tr.c"
  $1702 = $1701; //@line 142 "mcbits/fft_tr.c"
  HEAP32[$1702>>2] = $1696; //@line 142 "mcbits/fft_tr.c"
  $1703 = (($1701) + 4)|0; //@line 142 "mcbits/fft_tr.c"
  $1704 = $1703; //@line 142 "mcbits/fft_tr.c"
  HEAP32[$1704>>2] = $1697; //@line 142 "mcbits/fft_tr.c"
  $1705 = $8; //@line 142 "mcbits/fft_tr.c"
  $1706 = (($1705) + 1)|0; //@line 142 "mcbits/fft_tr.c"
  $8 = $1706; //@line 142 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 142 "mcbits/fft_tr.c"
 while(1) {
  $1707 = $8; //@line 142 "mcbits/fft_tr.c"
  $1708 = ($1707|0)<(12); //@line 142 "mcbits/fft_tr.c"
  if (!($1708)) {
   break;
  }
  $1709 = $3; //@line 142 "mcbits/fft_tr.c"
  $1710 = ((($1709)) + 5280|0); //@line 142 "mcbits/fft_tr.c"
  $1711 = $8; //@line 142 "mcbits/fft_tr.c"
  $1712 = (($1710) + ($1711<<3)|0); //@line 142 "mcbits/fft_tr.c"
  $1713 = $1712; //@line 142 "mcbits/fft_tr.c"
  $1714 = $1713; //@line 142 "mcbits/fft_tr.c"
  $1715 = HEAP32[$1714>>2]|0; //@line 142 "mcbits/fft_tr.c"
  $1716 = (($1713) + 4)|0; //@line 142 "mcbits/fft_tr.c"
  $1717 = $1716; //@line 142 "mcbits/fft_tr.c"
  $1718 = HEAP32[$1717>>2]|0; //@line 142 "mcbits/fft_tr.c"
  $1719 = $3; //@line 142 "mcbits/fft_tr.c"
  $1720 = ((($1719)) + 5088|0); //@line 142 "mcbits/fft_tr.c"
  $1721 = $8; //@line 142 "mcbits/fft_tr.c"
  $1722 = (($1720) + ($1721<<3)|0); //@line 142 "mcbits/fft_tr.c"
  $1723 = $1722; //@line 142 "mcbits/fft_tr.c"
  $1724 = $1723; //@line 142 "mcbits/fft_tr.c"
  $1725 = HEAP32[$1724>>2]|0; //@line 142 "mcbits/fft_tr.c"
  $1726 = (($1723) + 4)|0; //@line 142 "mcbits/fft_tr.c"
  $1727 = $1726; //@line 142 "mcbits/fft_tr.c"
  $1728 = HEAP32[$1727>>2]|0; //@line 142 "mcbits/fft_tr.c"
  $1729 = $1715 ^ $1725; //@line 142 "mcbits/fft_tr.c"
  $1730 = $1718 ^ $1728; //@line 142 "mcbits/fft_tr.c"
  $1731 = $3; //@line 142 "mcbits/fft_tr.c"
  $1732 = ((($1731)) + 5280|0); //@line 142 "mcbits/fft_tr.c"
  $1733 = $8; //@line 142 "mcbits/fft_tr.c"
  $1734 = (($1732) + ($1733<<3)|0); //@line 142 "mcbits/fft_tr.c"
  $1735 = $1734; //@line 142 "mcbits/fft_tr.c"
  $1736 = $1735; //@line 142 "mcbits/fft_tr.c"
  HEAP32[$1736>>2] = $1729; //@line 142 "mcbits/fft_tr.c"
  $1737 = (($1735) + 4)|0; //@line 142 "mcbits/fft_tr.c"
  $1738 = $1737; //@line 142 "mcbits/fft_tr.c"
  HEAP32[$1738>>2] = $1730; //@line 142 "mcbits/fft_tr.c"
  $1739 = $8; //@line 142 "mcbits/fft_tr.c"
  $1740 = (($1739) + 1)|0; //@line 142 "mcbits/fft_tr.c"
  $8 = $1740; //@line 142 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 143 "mcbits/fft_tr.c"
 while(1) {
  $1741 = $8; //@line 143 "mcbits/fft_tr.c"
  $1742 = ($1741|0)<(12); //@line 143 "mcbits/fft_tr.c"
  if (!($1742)) {
   break;
  }
  $1743 = $8; //@line 143 "mcbits/fft_tr.c"
  $1744 = (($10) + ($1743<<3)|0); //@line 143 "mcbits/fft_tr.c"
  $1745 = $1744; //@line 143 "mcbits/fft_tr.c"
  $1746 = $1745; //@line 143 "mcbits/fft_tr.c"
  $1747 = HEAP32[$1746>>2]|0; //@line 143 "mcbits/fft_tr.c"
  $1748 = (($1745) + 4)|0; //@line 143 "mcbits/fft_tr.c"
  $1749 = $1748; //@line 143 "mcbits/fft_tr.c"
  $1750 = HEAP32[$1749>>2]|0; //@line 143 "mcbits/fft_tr.c"
  $1751 = $3; //@line 143 "mcbits/fft_tr.c"
  $1752 = ((($1751)) + 5280|0); //@line 143 "mcbits/fft_tr.c"
  $1753 = $8; //@line 143 "mcbits/fft_tr.c"
  $1754 = (($1752) + ($1753<<3)|0); //@line 143 "mcbits/fft_tr.c"
  $1755 = $1754; //@line 143 "mcbits/fft_tr.c"
  $1756 = $1755; //@line 143 "mcbits/fft_tr.c"
  $1757 = HEAP32[$1756>>2]|0; //@line 143 "mcbits/fft_tr.c"
  $1758 = (($1755) + 4)|0; //@line 143 "mcbits/fft_tr.c"
  $1759 = $1758; //@line 143 "mcbits/fft_tr.c"
  $1760 = HEAP32[$1759>>2]|0; //@line 143 "mcbits/fft_tr.c"
  $1761 = $1747 ^ $1757; //@line 143 "mcbits/fft_tr.c"
  $1762 = $1750 ^ $1760; //@line 143 "mcbits/fft_tr.c"
  $1763 = $8; //@line 143 "mcbits/fft_tr.c"
  $1764 = (($10) + ($1763<<3)|0); //@line 143 "mcbits/fft_tr.c"
  $1765 = $1764; //@line 143 "mcbits/fft_tr.c"
  $1766 = $1765; //@line 143 "mcbits/fft_tr.c"
  HEAP32[$1766>>2] = $1761; //@line 143 "mcbits/fft_tr.c"
  $1767 = (($1765) + 4)|0; //@line 143 "mcbits/fft_tr.c"
  $1768 = $1767; //@line 143 "mcbits/fft_tr.c"
  HEAP32[$1768>>2] = $1762; //@line 143 "mcbits/fft_tr.c"
  $1769 = $8; //@line 143 "mcbits/fft_tr.c"
  $1770 = (($1769) + 1)|0; //@line 143 "mcbits/fft_tr.c"
  $8 = $1770; //@line 143 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 143 "mcbits/fft_tr.c"
 while(1) {
  $1771 = $8; //@line 143 "mcbits/fft_tr.c"
  $1772 = ($1771|0)<(12); //@line 143 "mcbits/fft_tr.c"
  if (!($1772)) {
   break;
  }
  $1773 = $3; //@line 143 "mcbits/fft_tr.c"
  $1774 = ((($1773)) + 5184|0); //@line 143 "mcbits/fft_tr.c"
  $1775 = $8; //@line 143 "mcbits/fft_tr.c"
  $1776 = (($1774) + ($1775<<3)|0); //@line 143 "mcbits/fft_tr.c"
  $1777 = $1776; //@line 143 "mcbits/fft_tr.c"
  $1778 = $1777; //@line 143 "mcbits/fft_tr.c"
  $1779 = HEAP32[$1778>>2]|0; //@line 143 "mcbits/fft_tr.c"
  $1780 = (($1777) + 4)|0; //@line 143 "mcbits/fft_tr.c"
  $1781 = $1780; //@line 143 "mcbits/fft_tr.c"
  $1782 = HEAP32[$1781>>2]|0; //@line 143 "mcbits/fft_tr.c"
  $1783 = $3; //@line 143 "mcbits/fft_tr.c"
  $1784 = ((($1783)) + 5280|0); //@line 143 "mcbits/fft_tr.c"
  $1785 = $8; //@line 143 "mcbits/fft_tr.c"
  $1786 = (($1784) + ($1785<<3)|0); //@line 143 "mcbits/fft_tr.c"
  $1787 = $1786; //@line 143 "mcbits/fft_tr.c"
  $1788 = $1787; //@line 143 "mcbits/fft_tr.c"
  $1789 = HEAP32[$1788>>2]|0; //@line 143 "mcbits/fft_tr.c"
  $1790 = (($1787) + 4)|0; //@line 143 "mcbits/fft_tr.c"
  $1791 = $1790; //@line 143 "mcbits/fft_tr.c"
  $1792 = HEAP32[$1791>>2]|0; //@line 143 "mcbits/fft_tr.c"
  $1793 = $1779 ^ $1789; //@line 143 "mcbits/fft_tr.c"
  $1794 = $1782 ^ $1792; //@line 143 "mcbits/fft_tr.c"
  $1795 = $3; //@line 143 "mcbits/fft_tr.c"
  $1796 = ((($1795)) + 5184|0); //@line 143 "mcbits/fft_tr.c"
  $1797 = $8; //@line 143 "mcbits/fft_tr.c"
  $1798 = (($1796) + ($1797<<3)|0); //@line 143 "mcbits/fft_tr.c"
  $1799 = $1798; //@line 143 "mcbits/fft_tr.c"
  $1800 = $1799; //@line 143 "mcbits/fft_tr.c"
  HEAP32[$1800>>2] = $1793; //@line 143 "mcbits/fft_tr.c"
  $1801 = (($1799) + 4)|0; //@line 143 "mcbits/fft_tr.c"
  $1802 = $1801; //@line 143 "mcbits/fft_tr.c"
  HEAP32[$1802>>2] = $1794; //@line 143 "mcbits/fft_tr.c"
  $1803 = $8; //@line 143 "mcbits/fft_tr.c"
  $1804 = (($1803) + 1)|0; //@line 143 "mcbits/fft_tr.c"
  $8 = $1804; //@line 143 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 144 "mcbits/fft_tr.c"
 while(1) {
  $1805 = $8; //@line 144 "mcbits/fft_tr.c"
  $1806 = ($1805|0)<(12); //@line 144 "mcbits/fft_tr.c"
  if (!($1806)) {
   break;
  }
  $1807 = ((($10)) + 192|0); //@line 144 "mcbits/fft_tr.c"
  $1808 = $8; //@line 144 "mcbits/fft_tr.c"
  $1809 = (($1807) + ($1808<<3)|0); //@line 144 "mcbits/fft_tr.c"
  $1810 = $1809; //@line 144 "mcbits/fft_tr.c"
  $1811 = $1810; //@line 144 "mcbits/fft_tr.c"
  $1812 = HEAP32[$1811>>2]|0; //@line 144 "mcbits/fft_tr.c"
  $1813 = (($1810) + 4)|0; //@line 144 "mcbits/fft_tr.c"
  $1814 = $1813; //@line 144 "mcbits/fft_tr.c"
  $1815 = HEAP32[$1814>>2]|0; //@line 144 "mcbits/fft_tr.c"
  $1816 = $3; //@line 144 "mcbits/fft_tr.c"
  $1817 = ((($1816)) + 5184|0); //@line 144 "mcbits/fft_tr.c"
  $1818 = $8; //@line 144 "mcbits/fft_tr.c"
  $1819 = (($1817) + ($1818<<3)|0); //@line 144 "mcbits/fft_tr.c"
  $1820 = $1819; //@line 144 "mcbits/fft_tr.c"
  $1821 = $1820; //@line 144 "mcbits/fft_tr.c"
  $1822 = HEAP32[$1821>>2]|0; //@line 144 "mcbits/fft_tr.c"
  $1823 = (($1820) + 4)|0; //@line 144 "mcbits/fft_tr.c"
  $1824 = $1823; //@line 144 "mcbits/fft_tr.c"
  $1825 = HEAP32[$1824>>2]|0; //@line 144 "mcbits/fft_tr.c"
  $1826 = $1812 ^ $1822; //@line 144 "mcbits/fft_tr.c"
  $1827 = $1815 ^ $1825; //@line 144 "mcbits/fft_tr.c"
  $1828 = ((($10)) + 192|0); //@line 144 "mcbits/fft_tr.c"
  $1829 = $8; //@line 144 "mcbits/fft_tr.c"
  $1830 = (($1828) + ($1829<<3)|0); //@line 144 "mcbits/fft_tr.c"
  $1831 = $1830; //@line 144 "mcbits/fft_tr.c"
  $1832 = $1831; //@line 144 "mcbits/fft_tr.c"
  HEAP32[$1832>>2] = $1826; //@line 144 "mcbits/fft_tr.c"
  $1833 = (($1831) + 4)|0; //@line 144 "mcbits/fft_tr.c"
  $1834 = $1833; //@line 144 "mcbits/fft_tr.c"
  HEAP32[$1834>>2] = $1827; //@line 144 "mcbits/fft_tr.c"
  $1835 = $8; //@line 144 "mcbits/fft_tr.c"
  $1836 = (($1835) + 1)|0; //@line 144 "mcbits/fft_tr.c"
  $8 = $1836; //@line 144 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 144 "mcbits/fft_tr.c"
 while(1) {
  $1837 = $8; //@line 144 "mcbits/fft_tr.c"
  $1838 = ($1837|0)<(12); //@line 144 "mcbits/fft_tr.c"
  if (!($1838)) {
   break;
  }
  $1839 = $3; //@line 144 "mcbits/fft_tr.c"
  $1840 = ((($1839)) + 4800|0); //@line 144 "mcbits/fft_tr.c"
  $1841 = $8; //@line 144 "mcbits/fft_tr.c"
  $1842 = (($1840) + ($1841<<3)|0); //@line 144 "mcbits/fft_tr.c"
  $1843 = $1842; //@line 144 "mcbits/fft_tr.c"
  $1844 = $1843; //@line 144 "mcbits/fft_tr.c"
  $1845 = HEAP32[$1844>>2]|0; //@line 144 "mcbits/fft_tr.c"
  $1846 = (($1843) + 4)|0; //@line 144 "mcbits/fft_tr.c"
  $1847 = $1846; //@line 144 "mcbits/fft_tr.c"
  $1848 = HEAP32[$1847>>2]|0; //@line 144 "mcbits/fft_tr.c"
  $1849 = $3; //@line 144 "mcbits/fft_tr.c"
  $1850 = ((($1849)) + 5184|0); //@line 144 "mcbits/fft_tr.c"
  $1851 = $8; //@line 144 "mcbits/fft_tr.c"
  $1852 = (($1850) + ($1851<<3)|0); //@line 144 "mcbits/fft_tr.c"
  $1853 = $1852; //@line 144 "mcbits/fft_tr.c"
  $1854 = $1853; //@line 144 "mcbits/fft_tr.c"
  $1855 = HEAP32[$1854>>2]|0; //@line 144 "mcbits/fft_tr.c"
  $1856 = (($1853) + 4)|0; //@line 144 "mcbits/fft_tr.c"
  $1857 = $1856; //@line 144 "mcbits/fft_tr.c"
  $1858 = HEAP32[$1857>>2]|0; //@line 144 "mcbits/fft_tr.c"
  $1859 = $1845 ^ $1855; //@line 144 "mcbits/fft_tr.c"
  $1860 = $1848 ^ $1858; //@line 144 "mcbits/fft_tr.c"
  $1861 = $3; //@line 144 "mcbits/fft_tr.c"
  $1862 = ((($1861)) + 4800|0); //@line 144 "mcbits/fft_tr.c"
  $1863 = $8; //@line 144 "mcbits/fft_tr.c"
  $1864 = (($1862) + ($1863<<3)|0); //@line 144 "mcbits/fft_tr.c"
  $1865 = $1864; //@line 144 "mcbits/fft_tr.c"
  $1866 = $1865; //@line 144 "mcbits/fft_tr.c"
  HEAP32[$1866>>2] = $1859; //@line 144 "mcbits/fft_tr.c"
  $1867 = (($1865) + 4)|0; //@line 144 "mcbits/fft_tr.c"
  $1868 = $1867; //@line 144 "mcbits/fft_tr.c"
  HEAP32[$1868>>2] = $1860; //@line 144 "mcbits/fft_tr.c"
  $1869 = $8; //@line 144 "mcbits/fft_tr.c"
  $1870 = (($1869) + 1)|0; //@line 144 "mcbits/fft_tr.c"
  $8 = $1870; //@line 144 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 145 "mcbits/fft_tr.c"
 while(1) {
  $1871 = $8; //@line 145 "mcbits/fft_tr.c"
  $1872 = ($1871|0)<(12); //@line 145 "mcbits/fft_tr.c"
  if (!($1872)) {
   break;
  }
  $1873 = $8; //@line 145 "mcbits/fft_tr.c"
  $1874 = (($10) + ($1873<<3)|0); //@line 145 "mcbits/fft_tr.c"
  $1875 = $1874; //@line 145 "mcbits/fft_tr.c"
  $1876 = $1875; //@line 145 "mcbits/fft_tr.c"
  $1877 = HEAP32[$1876>>2]|0; //@line 145 "mcbits/fft_tr.c"
  $1878 = (($1875) + 4)|0; //@line 145 "mcbits/fft_tr.c"
  $1879 = $1878; //@line 145 "mcbits/fft_tr.c"
  $1880 = HEAP32[$1879>>2]|0; //@line 145 "mcbits/fft_tr.c"
  $1881 = $3; //@line 145 "mcbits/fft_tr.c"
  $1882 = ((($1881)) + 4800|0); //@line 145 "mcbits/fft_tr.c"
  $1883 = $8; //@line 145 "mcbits/fft_tr.c"
  $1884 = (($1882) + ($1883<<3)|0); //@line 145 "mcbits/fft_tr.c"
  $1885 = $1884; //@line 145 "mcbits/fft_tr.c"
  $1886 = $1885; //@line 145 "mcbits/fft_tr.c"
  $1887 = HEAP32[$1886>>2]|0; //@line 145 "mcbits/fft_tr.c"
  $1888 = (($1885) + 4)|0; //@line 145 "mcbits/fft_tr.c"
  $1889 = $1888; //@line 145 "mcbits/fft_tr.c"
  $1890 = HEAP32[$1889>>2]|0; //@line 145 "mcbits/fft_tr.c"
  $1891 = $1877 ^ $1887; //@line 145 "mcbits/fft_tr.c"
  $1892 = $1880 ^ $1890; //@line 145 "mcbits/fft_tr.c"
  $1893 = $8; //@line 145 "mcbits/fft_tr.c"
  $1894 = (($10) + ($1893<<3)|0); //@line 145 "mcbits/fft_tr.c"
  $1895 = $1894; //@line 145 "mcbits/fft_tr.c"
  $1896 = $1895; //@line 145 "mcbits/fft_tr.c"
  HEAP32[$1896>>2] = $1891; //@line 145 "mcbits/fft_tr.c"
  $1897 = (($1895) + 4)|0; //@line 145 "mcbits/fft_tr.c"
  $1898 = $1897; //@line 145 "mcbits/fft_tr.c"
  HEAP32[$1898>>2] = $1892; //@line 145 "mcbits/fft_tr.c"
  $1899 = $8; //@line 145 "mcbits/fft_tr.c"
  $1900 = (($1899) + 1)|0; //@line 145 "mcbits/fft_tr.c"
  $8 = $1900; //@line 145 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 145 "mcbits/fft_tr.c"
 while(1) {
  $1901 = $8; //@line 145 "mcbits/fft_tr.c"
  $1902 = ($1901|0)<(12); //@line 145 "mcbits/fft_tr.c"
  if (!($1902)) {
   break;
  }
  $1903 = $3; //@line 145 "mcbits/fft_tr.c"
  $1904 = ((($1903)) + 4896|0); //@line 145 "mcbits/fft_tr.c"
  $1905 = $8; //@line 145 "mcbits/fft_tr.c"
  $1906 = (($1904) + ($1905<<3)|0); //@line 145 "mcbits/fft_tr.c"
  $1907 = $1906; //@line 145 "mcbits/fft_tr.c"
  $1908 = $1907; //@line 145 "mcbits/fft_tr.c"
  $1909 = HEAP32[$1908>>2]|0; //@line 145 "mcbits/fft_tr.c"
  $1910 = (($1907) + 4)|0; //@line 145 "mcbits/fft_tr.c"
  $1911 = $1910; //@line 145 "mcbits/fft_tr.c"
  $1912 = HEAP32[$1911>>2]|0; //@line 145 "mcbits/fft_tr.c"
  $1913 = $3; //@line 145 "mcbits/fft_tr.c"
  $1914 = ((($1913)) + 4800|0); //@line 145 "mcbits/fft_tr.c"
  $1915 = $8; //@line 145 "mcbits/fft_tr.c"
  $1916 = (($1914) + ($1915<<3)|0); //@line 145 "mcbits/fft_tr.c"
  $1917 = $1916; //@line 145 "mcbits/fft_tr.c"
  $1918 = $1917; //@line 145 "mcbits/fft_tr.c"
  $1919 = HEAP32[$1918>>2]|0; //@line 145 "mcbits/fft_tr.c"
  $1920 = (($1917) + 4)|0; //@line 145 "mcbits/fft_tr.c"
  $1921 = $1920; //@line 145 "mcbits/fft_tr.c"
  $1922 = HEAP32[$1921>>2]|0; //@line 145 "mcbits/fft_tr.c"
  $1923 = $1909 ^ $1919; //@line 145 "mcbits/fft_tr.c"
  $1924 = $1912 ^ $1922; //@line 145 "mcbits/fft_tr.c"
  $1925 = $3; //@line 145 "mcbits/fft_tr.c"
  $1926 = ((($1925)) + 4896|0); //@line 145 "mcbits/fft_tr.c"
  $1927 = $8; //@line 145 "mcbits/fft_tr.c"
  $1928 = (($1926) + ($1927<<3)|0); //@line 145 "mcbits/fft_tr.c"
  $1929 = $1928; //@line 145 "mcbits/fft_tr.c"
  $1930 = $1929; //@line 145 "mcbits/fft_tr.c"
  HEAP32[$1930>>2] = $1923; //@line 145 "mcbits/fft_tr.c"
  $1931 = (($1929) + 4)|0; //@line 145 "mcbits/fft_tr.c"
  $1932 = $1931; //@line 145 "mcbits/fft_tr.c"
  HEAP32[$1932>>2] = $1924; //@line 145 "mcbits/fft_tr.c"
  $1933 = $8; //@line 145 "mcbits/fft_tr.c"
  $1934 = (($1933) + 1)|0; //@line 145 "mcbits/fft_tr.c"
  $8 = $1934; //@line 145 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 146 "mcbits/fft_tr.c"
 while(1) {
  $1935 = $8; //@line 146 "mcbits/fft_tr.c"
  $1936 = ($1935|0)<(12); //@line 146 "mcbits/fft_tr.c"
  if (!($1936)) {
   break;
  }
  $1937 = ((($10)) + 96|0); //@line 146 "mcbits/fft_tr.c"
  $1938 = $8; //@line 146 "mcbits/fft_tr.c"
  $1939 = (($1937) + ($1938<<3)|0); //@line 146 "mcbits/fft_tr.c"
  $1940 = $1939; //@line 146 "mcbits/fft_tr.c"
  $1941 = $1940; //@line 146 "mcbits/fft_tr.c"
  $1942 = HEAP32[$1941>>2]|0; //@line 146 "mcbits/fft_tr.c"
  $1943 = (($1940) + 4)|0; //@line 146 "mcbits/fft_tr.c"
  $1944 = $1943; //@line 146 "mcbits/fft_tr.c"
  $1945 = HEAP32[$1944>>2]|0; //@line 146 "mcbits/fft_tr.c"
  $1946 = $3; //@line 146 "mcbits/fft_tr.c"
  $1947 = ((($1946)) + 4896|0); //@line 146 "mcbits/fft_tr.c"
  $1948 = $8; //@line 146 "mcbits/fft_tr.c"
  $1949 = (($1947) + ($1948<<3)|0); //@line 146 "mcbits/fft_tr.c"
  $1950 = $1949; //@line 146 "mcbits/fft_tr.c"
  $1951 = $1950; //@line 146 "mcbits/fft_tr.c"
  $1952 = HEAP32[$1951>>2]|0; //@line 146 "mcbits/fft_tr.c"
  $1953 = (($1950) + 4)|0; //@line 146 "mcbits/fft_tr.c"
  $1954 = $1953; //@line 146 "mcbits/fft_tr.c"
  $1955 = HEAP32[$1954>>2]|0; //@line 146 "mcbits/fft_tr.c"
  $1956 = $1942 ^ $1952; //@line 146 "mcbits/fft_tr.c"
  $1957 = $1945 ^ $1955; //@line 146 "mcbits/fft_tr.c"
  $1958 = ((($10)) + 96|0); //@line 146 "mcbits/fft_tr.c"
  $1959 = $8; //@line 146 "mcbits/fft_tr.c"
  $1960 = (($1958) + ($1959<<3)|0); //@line 146 "mcbits/fft_tr.c"
  $1961 = $1960; //@line 146 "mcbits/fft_tr.c"
  $1962 = $1961; //@line 146 "mcbits/fft_tr.c"
  HEAP32[$1962>>2] = $1956; //@line 146 "mcbits/fft_tr.c"
  $1963 = (($1961) + 4)|0; //@line 146 "mcbits/fft_tr.c"
  $1964 = $1963; //@line 146 "mcbits/fft_tr.c"
  HEAP32[$1964>>2] = $1957; //@line 146 "mcbits/fft_tr.c"
  $1965 = $8; //@line 146 "mcbits/fft_tr.c"
  $1966 = (($1965) + 1)|0; //@line 146 "mcbits/fft_tr.c"
  $8 = $1966; //@line 146 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 146 "mcbits/fft_tr.c"
 while(1) {
  $1967 = $8; //@line 146 "mcbits/fft_tr.c"
  $1968 = ($1967|0)<(12); //@line 146 "mcbits/fft_tr.c"
  if (!($1968)) {
   break;
  }
  $1969 = $3; //@line 146 "mcbits/fft_tr.c"
  $1970 = ((($1969)) + 4704|0); //@line 146 "mcbits/fft_tr.c"
  $1971 = $8; //@line 146 "mcbits/fft_tr.c"
  $1972 = (($1970) + ($1971<<3)|0); //@line 146 "mcbits/fft_tr.c"
  $1973 = $1972; //@line 146 "mcbits/fft_tr.c"
  $1974 = $1973; //@line 146 "mcbits/fft_tr.c"
  $1975 = HEAP32[$1974>>2]|0; //@line 146 "mcbits/fft_tr.c"
  $1976 = (($1973) + 4)|0; //@line 146 "mcbits/fft_tr.c"
  $1977 = $1976; //@line 146 "mcbits/fft_tr.c"
  $1978 = HEAP32[$1977>>2]|0; //@line 146 "mcbits/fft_tr.c"
  $1979 = $3; //@line 146 "mcbits/fft_tr.c"
  $1980 = ((($1979)) + 4896|0); //@line 146 "mcbits/fft_tr.c"
  $1981 = $8; //@line 146 "mcbits/fft_tr.c"
  $1982 = (($1980) + ($1981<<3)|0); //@line 146 "mcbits/fft_tr.c"
  $1983 = $1982; //@line 146 "mcbits/fft_tr.c"
  $1984 = $1983; //@line 146 "mcbits/fft_tr.c"
  $1985 = HEAP32[$1984>>2]|0; //@line 146 "mcbits/fft_tr.c"
  $1986 = (($1983) + 4)|0; //@line 146 "mcbits/fft_tr.c"
  $1987 = $1986; //@line 146 "mcbits/fft_tr.c"
  $1988 = HEAP32[$1987>>2]|0; //@line 146 "mcbits/fft_tr.c"
  $1989 = $1975 ^ $1985; //@line 146 "mcbits/fft_tr.c"
  $1990 = $1978 ^ $1988; //@line 146 "mcbits/fft_tr.c"
  $1991 = $3; //@line 146 "mcbits/fft_tr.c"
  $1992 = ((($1991)) + 4704|0); //@line 146 "mcbits/fft_tr.c"
  $1993 = $8; //@line 146 "mcbits/fft_tr.c"
  $1994 = (($1992) + ($1993<<3)|0); //@line 146 "mcbits/fft_tr.c"
  $1995 = $1994; //@line 146 "mcbits/fft_tr.c"
  $1996 = $1995; //@line 146 "mcbits/fft_tr.c"
  HEAP32[$1996>>2] = $1989; //@line 146 "mcbits/fft_tr.c"
  $1997 = (($1995) + 4)|0; //@line 146 "mcbits/fft_tr.c"
  $1998 = $1997; //@line 146 "mcbits/fft_tr.c"
  HEAP32[$1998>>2] = $1990; //@line 146 "mcbits/fft_tr.c"
  $1999 = $8; //@line 146 "mcbits/fft_tr.c"
  $2000 = (($1999) + 1)|0; //@line 146 "mcbits/fft_tr.c"
  $8 = $2000; //@line 146 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 147 "mcbits/fft_tr.c"
 while(1) {
  $2001 = $8; //@line 147 "mcbits/fft_tr.c"
  $2002 = ($2001|0)<(12); //@line 147 "mcbits/fft_tr.c"
  if (!($2002)) {
   break;
  }
  $2003 = $8; //@line 147 "mcbits/fft_tr.c"
  $2004 = (($10) + ($2003<<3)|0); //@line 147 "mcbits/fft_tr.c"
  $2005 = $2004; //@line 147 "mcbits/fft_tr.c"
  $2006 = $2005; //@line 147 "mcbits/fft_tr.c"
  $2007 = HEAP32[$2006>>2]|0; //@line 147 "mcbits/fft_tr.c"
  $2008 = (($2005) + 4)|0; //@line 147 "mcbits/fft_tr.c"
  $2009 = $2008; //@line 147 "mcbits/fft_tr.c"
  $2010 = HEAP32[$2009>>2]|0; //@line 147 "mcbits/fft_tr.c"
  $2011 = $3; //@line 147 "mcbits/fft_tr.c"
  $2012 = ((($2011)) + 4704|0); //@line 147 "mcbits/fft_tr.c"
  $2013 = $8; //@line 147 "mcbits/fft_tr.c"
  $2014 = (($2012) + ($2013<<3)|0); //@line 147 "mcbits/fft_tr.c"
  $2015 = $2014; //@line 147 "mcbits/fft_tr.c"
  $2016 = $2015; //@line 147 "mcbits/fft_tr.c"
  $2017 = HEAP32[$2016>>2]|0; //@line 147 "mcbits/fft_tr.c"
  $2018 = (($2015) + 4)|0; //@line 147 "mcbits/fft_tr.c"
  $2019 = $2018; //@line 147 "mcbits/fft_tr.c"
  $2020 = HEAP32[$2019>>2]|0; //@line 147 "mcbits/fft_tr.c"
  $2021 = $2007 ^ $2017; //@line 147 "mcbits/fft_tr.c"
  $2022 = $2010 ^ $2020; //@line 147 "mcbits/fft_tr.c"
  $2023 = $8; //@line 147 "mcbits/fft_tr.c"
  $2024 = (($10) + ($2023<<3)|0); //@line 147 "mcbits/fft_tr.c"
  $2025 = $2024; //@line 147 "mcbits/fft_tr.c"
  $2026 = $2025; //@line 147 "mcbits/fft_tr.c"
  HEAP32[$2026>>2] = $2021; //@line 147 "mcbits/fft_tr.c"
  $2027 = (($2025) + 4)|0; //@line 147 "mcbits/fft_tr.c"
  $2028 = $2027; //@line 147 "mcbits/fft_tr.c"
  HEAP32[$2028>>2] = $2022; //@line 147 "mcbits/fft_tr.c"
  $2029 = $8; //@line 147 "mcbits/fft_tr.c"
  $2030 = (($2029) + 1)|0; //@line 147 "mcbits/fft_tr.c"
  $8 = $2030; //@line 147 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 147 "mcbits/fft_tr.c"
 while(1) {
  $2031 = $8; //@line 147 "mcbits/fft_tr.c"
  $2032 = ($2031|0)<(12); //@line 147 "mcbits/fft_tr.c"
  if (!($2032)) {
   break;
  }
  $2033 = $3; //@line 147 "mcbits/fft_tr.c"
  $2034 = ((($2033)) + 4608|0); //@line 147 "mcbits/fft_tr.c"
  $2035 = $8; //@line 147 "mcbits/fft_tr.c"
  $2036 = (($2034) + ($2035<<3)|0); //@line 147 "mcbits/fft_tr.c"
  $2037 = $2036; //@line 147 "mcbits/fft_tr.c"
  $2038 = $2037; //@line 147 "mcbits/fft_tr.c"
  $2039 = HEAP32[$2038>>2]|0; //@line 147 "mcbits/fft_tr.c"
  $2040 = (($2037) + 4)|0; //@line 147 "mcbits/fft_tr.c"
  $2041 = $2040; //@line 147 "mcbits/fft_tr.c"
  $2042 = HEAP32[$2041>>2]|0; //@line 147 "mcbits/fft_tr.c"
  $2043 = $3; //@line 147 "mcbits/fft_tr.c"
  $2044 = ((($2043)) + 4704|0); //@line 147 "mcbits/fft_tr.c"
  $2045 = $8; //@line 147 "mcbits/fft_tr.c"
  $2046 = (($2044) + ($2045<<3)|0); //@line 147 "mcbits/fft_tr.c"
  $2047 = $2046; //@line 147 "mcbits/fft_tr.c"
  $2048 = $2047; //@line 147 "mcbits/fft_tr.c"
  $2049 = HEAP32[$2048>>2]|0; //@line 147 "mcbits/fft_tr.c"
  $2050 = (($2047) + 4)|0; //@line 147 "mcbits/fft_tr.c"
  $2051 = $2050; //@line 147 "mcbits/fft_tr.c"
  $2052 = HEAP32[$2051>>2]|0; //@line 147 "mcbits/fft_tr.c"
  $2053 = $2039 ^ $2049; //@line 147 "mcbits/fft_tr.c"
  $2054 = $2042 ^ $2052; //@line 147 "mcbits/fft_tr.c"
  $2055 = $3; //@line 147 "mcbits/fft_tr.c"
  $2056 = ((($2055)) + 4608|0); //@line 147 "mcbits/fft_tr.c"
  $2057 = $8; //@line 147 "mcbits/fft_tr.c"
  $2058 = (($2056) + ($2057<<3)|0); //@line 147 "mcbits/fft_tr.c"
  $2059 = $2058; //@line 147 "mcbits/fft_tr.c"
  $2060 = $2059; //@line 147 "mcbits/fft_tr.c"
  HEAP32[$2060>>2] = $2053; //@line 147 "mcbits/fft_tr.c"
  $2061 = (($2059) + 4)|0; //@line 147 "mcbits/fft_tr.c"
  $2062 = $2061; //@line 147 "mcbits/fft_tr.c"
  HEAP32[$2062>>2] = $2054; //@line 147 "mcbits/fft_tr.c"
  $2063 = $8; //@line 147 "mcbits/fft_tr.c"
  $2064 = (($2063) + 1)|0; //@line 147 "mcbits/fft_tr.c"
  $8 = $2064; //@line 147 "mcbits/fft_tr.c"
 }
 $2065 = ((($10)) + 480|0); //@line 148 "mcbits/fft_tr.c"
 $2066 = $3; //@line 148 "mcbits/fft_tr.c"
 $2067 = ((($2066)) + 4608|0); //@line 148 "mcbits/fft_tr.c"
 _vec_copy($2065,$2067); //@line 148 "mcbits/fft_tr.c"
 $8 = 0; //@line 148 "mcbits/fft_tr.c"
 while(1) {
  $2068 = $8; //@line 148 "mcbits/fft_tr.c"
  $2069 = ($2068|0)<(12); //@line 148 "mcbits/fft_tr.c"
  if (!($2069)) {
   break;
  }
  $2070 = $3; //@line 148 "mcbits/fft_tr.c"
  $2071 = ((($2070)) + 1536|0); //@line 148 "mcbits/fft_tr.c"
  $2072 = $8; //@line 148 "mcbits/fft_tr.c"
  $2073 = (($2071) + ($2072<<3)|0); //@line 148 "mcbits/fft_tr.c"
  $2074 = $2073; //@line 148 "mcbits/fft_tr.c"
  $2075 = $2074; //@line 148 "mcbits/fft_tr.c"
  $2076 = HEAP32[$2075>>2]|0; //@line 148 "mcbits/fft_tr.c"
  $2077 = (($2074) + 4)|0; //@line 148 "mcbits/fft_tr.c"
  $2078 = $2077; //@line 148 "mcbits/fft_tr.c"
  $2079 = HEAP32[$2078>>2]|0; //@line 148 "mcbits/fft_tr.c"
  $2080 = $3; //@line 148 "mcbits/fft_tr.c"
  $2081 = ((($2080)) + 4608|0); //@line 148 "mcbits/fft_tr.c"
  $2082 = $8; //@line 148 "mcbits/fft_tr.c"
  $2083 = (($2081) + ($2082<<3)|0); //@line 148 "mcbits/fft_tr.c"
  $2084 = $2083; //@line 148 "mcbits/fft_tr.c"
  $2085 = $2084; //@line 148 "mcbits/fft_tr.c"
  $2086 = HEAP32[$2085>>2]|0; //@line 148 "mcbits/fft_tr.c"
  $2087 = (($2084) + 4)|0; //@line 148 "mcbits/fft_tr.c"
  $2088 = $2087; //@line 148 "mcbits/fft_tr.c"
  $2089 = HEAP32[$2088>>2]|0; //@line 148 "mcbits/fft_tr.c"
  $2090 = $2076 ^ $2086; //@line 148 "mcbits/fft_tr.c"
  $2091 = $2079 ^ $2089; //@line 148 "mcbits/fft_tr.c"
  $2092 = $3; //@line 148 "mcbits/fft_tr.c"
  $2093 = ((($2092)) + 1536|0); //@line 148 "mcbits/fft_tr.c"
  $2094 = $8; //@line 148 "mcbits/fft_tr.c"
  $2095 = (($2093) + ($2094<<3)|0); //@line 148 "mcbits/fft_tr.c"
  $2096 = $2095; //@line 148 "mcbits/fft_tr.c"
  $2097 = $2096; //@line 148 "mcbits/fft_tr.c"
  HEAP32[$2097>>2] = $2090; //@line 148 "mcbits/fft_tr.c"
  $2098 = (($2096) + 4)|0; //@line 148 "mcbits/fft_tr.c"
  $2099 = $2098; //@line 148 "mcbits/fft_tr.c"
  HEAP32[$2099>>2] = $2091; //@line 148 "mcbits/fft_tr.c"
  $2100 = $8; //@line 148 "mcbits/fft_tr.c"
  $2101 = (($2100) + 1)|0; //@line 148 "mcbits/fft_tr.c"
  $8 = $2101; //@line 148 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 149 "mcbits/fft_tr.c"
 while(1) {
  $2102 = $8; //@line 149 "mcbits/fft_tr.c"
  $2103 = ($2102|0)<(12); //@line 149 "mcbits/fft_tr.c"
  if (!($2103)) {
   break;
  }
  $2104 = $8; //@line 149 "mcbits/fft_tr.c"
  $2105 = (($10) + ($2104<<3)|0); //@line 149 "mcbits/fft_tr.c"
  $2106 = $2105; //@line 149 "mcbits/fft_tr.c"
  $2107 = $2106; //@line 149 "mcbits/fft_tr.c"
  $2108 = HEAP32[$2107>>2]|0; //@line 149 "mcbits/fft_tr.c"
  $2109 = (($2106) + 4)|0; //@line 149 "mcbits/fft_tr.c"
  $2110 = $2109; //@line 149 "mcbits/fft_tr.c"
  $2111 = HEAP32[$2110>>2]|0; //@line 149 "mcbits/fft_tr.c"
  $2112 = $3; //@line 149 "mcbits/fft_tr.c"
  $2113 = ((($2112)) + 1536|0); //@line 149 "mcbits/fft_tr.c"
  $2114 = $8; //@line 149 "mcbits/fft_tr.c"
  $2115 = (($2113) + ($2114<<3)|0); //@line 149 "mcbits/fft_tr.c"
  $2116 = $2115; //@line 149 "mcbits/fft_tr.c"
  $2117 = $2116; //@line 149 "mcbits/fft_tr.c"
  $2118 = HEAP32[$2117>>2]|0; //@line 149 "mcbits/fft_tr.c"
  $2119 = (($2116) + 4)|0; //@line 149 "mcbits/fft_tr.c"
  $2120 = $2119; //@line 149 "mcbits/fft_tr.c"
  $2121 = HEAP32[$2120>>2]|0; //@line 149 "mcbits/fft_tr.c"
  $2122 = $2108 ^ $2118; //@line 149 "mcbits/fft_tr.c"
  $2123 = $2111 ^ $2121; //@line 149 "mcbits/fft_tr.c"
  $2124 = $8; //@line 149 "mcbits/fft_tr.c"
  $2125 = (($10) + ($2124<<3)|0); //@line 149 "mcbits/fft_tr.c"
  $2126 = $2125; //@line 149 "mcbits/fft_tr.c"
  $2127 = $2126; //@line 149 "mcbits/fft_tr.c"
  HEAP32[$2127>>2] = $2122; //@line 149 "mcbits/fft_tr.c"
  $2128 = (($2126) + 4)|0; //@line 149 "mcbits/fft_tr.c"
  $2129 = $2128; //@line 149 "mcbits/fft_tr.c"
  HEAP32[$2129>>2] = $2123; //@line 149 "mcbits/fft_tr.c"
  $2130 = $8; //@line 149 "mcbits/fft_tr.c"
  $2131 = (($2130) + 1)|0; //@line 149 "mcbits/fft_tr.c"
  $8 = $2131; //@line 149 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 149 "mcbits/fft_tr.c"
 while(1) {
  $2132 = $8; //@line 149 "mcbits/fft_tr.c"
  $2133 = ($2132|0)<(12); //@line 149 "mcbits/fft_tr.c"
  if (!($2133)) {
   break;
  }
  $2134 = $3; //@line 149 "mcbits/fft_tr.c"
  $2135 = ((($2134)) + 1632|0); //@line 149 "mcbits/fft_tr.c"
  $2136 = $8; //@line 149 "mcbits/fft_tr.c"
  $2137 = (($2135) + ($2136<<3)|0); //@line 149 "mcbits/fft_tr.c"
  $2138 = $2137; //@line 149 "mcbits/fft_tr.c"
  $2139 = $2138; //@line 149 "mcbits/fft_tr.c"
  $2140 = HEAP32[$2139>>2]|0; //@line 149 "mcbits/fft_tr.c"
  $2141 = (($2138) + 4)|0; //@line 149 "mcbits/fft_tr.c"
  $2142 = $2141; //@line 149 "mcbits/fft_tr.c"
  $2143 = HEAP32[$2142>>2]|0; //@line 149 "mcbits/fft_tr.c"
  $2144 = $3; //@line 149 "mcbits/fft_tr.c"
  $2145 = ((($2144)) + 1536|0); //@line 149 "mcbits/fft_tr.c"
  $2146 = $8; //@line 149 "mcbits/fft_tr.c"
  $2147 = (($2145) + ($2146<<3)|0); //@line 149 "mcbits/fft_tr.c"
  $2148 = $2147; //@line 149 "mcbits/fft_tr.c"
  $2149 = $2148; //@line 149 "mcbits/fft_tr.c"
  $2150 = HEAP32[$2149>>2]|0; //@line 149 "mcbits/fft_tr.c"
  $2151 = (($2148) + 4)|0; //@line 149 "mcbits/fft_tr.c"
  $2152 = $2151; //@line 149 "mcbits/fft_tr.c"
  $2153 = HEAP32[$2152>>2]|0; //@line 149 "mcbits/fft_tr.c"
  $2154 = $2140 ^ $2150; //@line 149 "mcbits/fft_tr.c"
  $2155 = $2143 ^ $2153; //@line 149 "mcbits/fft_tr.c"
  $2156 = $3; //@line 149 "mcbits/fft_tr.c"
  $2157 = ((($2156)) + 1632|0); //@line 149 "mcbits/fft_tr.c"
  $2158 = $8; //@line 149 "mcbits/fft_tr.c"
  $2159 = (($2157) + ($2158<<3)|0); //@line 149 "mcbits/fft_tr.c"
  $2160 = $2159; //@line 149 "mcbits/fft_tr.c"
  $2161 = $2160; //@line 149 "mcbits/fft_tr.c"
  HEAP32[$2161>>2] = $2154; //@line 149 "mcbits/fft_tr.c"
  $2162 = (($2160) + 4)|0; //@line 149 "mcbits/fft_tr.c"
  $2163 = $2162; //@line 149 "mcbits/fft_tr.c"
  HEAP32[$2163>>2] = $2155; //@line 149 "mcbits/fft_tr.c"
  $2164 = $8; //@line 149 "mcbits/fft_tr.c"
  $2165 = (($2164) + 1)|0; //@line 149 "mcbits/fft_tr.c"
  $8 = $2165; //@line 149 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 150 "mcbits/fft_tr.c"
 while(1) {
  $2166 = $8; //@line 150 "mcbits/fft_tr.c"
  $2167 = ($2166|0)<(12); //@line 150 "mcbits/fft_tr.c"
  if (!($2167)) {
   break;
  }
  $2168 = ((($10)) + 96|0); //@line 150 "mcbits/fft_tr.c"
  $2169 = $8; //@line 150 "mcbits/fft_tr.c"
  $2170 = (($2168) + ($2169<<3)|0); //@line 150 "mcbits/fft_tr.c"
  $2171 = $2170; //@line 150 "mcbits/fft_tr.c"
  $2172 = $2171; //@line 150 "mcbits/fft_tr.c"
  $2173 = HEAP32[$2172>>2]|0; //@line 150 "mcbits/fft_tr.c"
  $2174 = (($2171) + 4)|0; //@line 150 "mcbits/fft_tr.c"
  $2175 = $2174; //@line 150 "mcbits/fft_tr.c"
  $2176 = HEAP32[$2175>>2]|0; //@line 150 "mcbits/fft_tr.c"
  $2177 = $3; //@line 150 "mcbits/fft_tr.c"
  $2178 = ((($2177)) + 1632|0); //@line 150 "mcbits/fft_tr.c"
  $2179 = $8; //@line 150 "mcbits/fft_tr.c"
  $2180 = (($2178) + ($2179<<3)|0); //@line 150 "mcbits/fft_tr.c"
  $2181 = $2180; //@line 150 "mcbits/fft_tr.c"
  $2182 = $2181; //@line 150 "mcbits/fft_tr.c"
  $2183 = HEAP32[$2182>>2]|0; //@line 150 "mcbits/fft_tr.c"
  $2184 = (($2181) + 4)|0; //@line 150 "mcbits/fft_tr.c"
  $2185 = $2184; //@line 150 "mcbits/fft_tr.c"
  $2186 = HEAP32[$2185>>2]|0; //@line 150 "mcbits/fft_tr.c"
  $2187 = $2173 ^ $2183; //@line 150 "mcbits/fft_tr.c"
  $2188 = $2176 ^ $2186; //@line 150 "mcbits/fft_tr.c"
  $2189 = ((($10)) + 96|0); //@line 150 "mcbits/fft_tr.c"
  $2190 = $8; //@line 150 "mcbits/fft_tr.c"
  $2191 = (($2189) + ($2190<<3)|0); //@line 150 "mcbits/fft_tr.c"
  $2192 = $2191; //@line 150 "mcbits/fft_tr.c"
  $2193 = $2192; //@line 150 "mcbits/fft_tr.c"
  HEAP32[$2193>>2] = $2187; //@line 150 "mcbits/fft_tr.c"
  $2194 = (($2192) + 4)|0; //@line 150 "mcbits/fft_tr.c"
  $2195 = $2194; //@line 150 "mcbits/fft_tr.c"
  HEAP32[$2195>>2] = $2188; //@line 150 "mcbits/fft_tr.c"
  $2196 = $8; //@line 150 "mcbits/fft_tr.c"
  $2197 = (($2196) + 1)|0; //@line 150 "mcbits/fft_tr.c"
  $8 = $2197; //@line 150 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 150 "mcbits/fft_tr.c"
 while(1) {
  $2198 = $8; //@line 150 "mcbits/fft_tr.c"
  $2199 = ($2198|0)<(12); //@line 150 "mcbits/fft_tr.c"
  if (!($2199)) {
   break;
  }
  $2200 = $3; //@line 150 "mcbits/fft_tr.c"
  $2201 = ((($2200)) + 1824|0); //@line 150 "mcbits/fft_tr.c"
  $2202 = $8; //@line 150 "mcbits/fft_tr.c"
  $2203 = (($2201) + ($2202<<3)|0); //@line 150 "mcbits/fft_tr.c"
  $2204 = $2203; //@line 150 "mcbits/fft_tr.c"
  $2205 = $2204; //@line 150 "mcbits/fft_tr.c"
  $2206 = HEAP32[$2205>>2]|0; //@line 150 "mcbits/fft_tr.c"
  $2207 = (($2204) + 4)|0; //@line 150 "mcbits/fft_tr.c"
  $2208 = $2207; //@line 150 "mcbits/fft_tr.c"
  $2209 = HEAP32[$2208>>2]|0; //@line 150 "mcbits/fft_tr.c"
  $2210 = $3; //@line 150 "mcbits/fft_tr.c"
  $2211 = ((($2210)) + 1632|0); //@line 150 "mcbits/fft_tr.c"
  $2212 = $8; //@line 150 "mcbits/fft_tr.c"
  $2213 = (($2211) + ($2212<<3)|0); //@line 150 "mcbits/fft_tr.c"
  $2214 = $2213; //@line 150 "mcbits/fft_tr.c"
  $2215 = $2214; //@line 150 "mcbits/fft_tr.c"
  $2216 = HEAP32[$2215>>2]|0; //@line 150 "mcbits/fft_tr.c"
  $2217 = (($2214) + 4)|0; //@line 150 "mcbits/fft_tr.c"
  $2218 = $2217; //@line 150 "mcbits/fft_tr.c"
  $2219 = HEAP32[$2218>>2]|0; //@line 150 "mcbits/fft_tr.c"
  $2220 = $2206 ^ $2216; //@line 150 "mcbits/fft_tr.c"
  $2221 = $2209 ^ $2219; //@line 150 "mcbits/fft_tr.c"
  $2222 = $3; //@line 150 "mcbits/fft_tr.c"
  $2223 = ((($2222)) + 1824|0); //@line 150 "mcbits/fft_tr.c"
  $2224 = $8; //@line 150 "mcbits/fft_tr.c"
  $2225 = (($2223) + ($2224<<3)|0); //@line 150 "mcbits/fft_tr.c"
  $2226 = $2225; //@line 150 "mcbits/fft_tr.c"
  $2227 = $2226; //@line 150 "mcbits/fft_tr.c"
  HEAP32[$2227>>2] = $2220; //@line 150 "mcbits/fft_tr.c"
  $2228 = (($2226) + 4)|0; //@line 150 "mcbits/fft_tr.c"
  $2229 = $2228; //@line 150 "mcbits/fft_tr.c"
  HEAP32[$2229>>2] = $2221; //@line 150 "mcbits/fft_tr.c"
  $2230 = $8; //@line 150 "mcbits/fft_tr.c"
  $2231 = (($2230) + 1)|0; //@line 150 "mcbits/fft_tr.c"
  $8 = $2231; //@line 150 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 151 "mcbits/fft_tr.c"
 while(1) {
  $2232 = $8; //@line 151 "mcbits/fft_tr.c"
  $2233 = ($2232|0)<(12); //@line 151 "mcbits/fft_tr.c"
  if (!($2233)) {
   break;
  }
  $2234 = $8; //@line 151 "mcbits/fft_tr.c"
  $2235 = (($10) + ($2234<<3)|0); //@line 151 "mcbits/fft_tr.c"
  $2236 = $2235; //@line 151 "mcbits/fft_tr.c"
  $2237 = $2236; //@line 151 "mcbits/fft_tr.c"
  $2238 = HEAP32[$2237>>2]|0; //@line 151 "mcbits/fft_tr.c"
  $2239 = (($2236) + 4)|0; //@line 151 "mcbits/fft_tr.c"
  $2240 = $2239; //@line 151 "mcbits/fft_tr.c"
  $2241 = HEAP32[$2240>>2]|0; //@line 151 "mcbits/fft_tr.c"
  $2242 = $3; //@line 151 "mcbits/fft_tr.c"
  $2243 = ((($2242)) + 1824|0); //@line 151 "mcbits/fft_tr.c"
  $2244 = $8; //@line 151 "mcbits/fft_tr.c"
  $2245 = (($2243) + ($2244<<3)|0); //@line 151 "mcbits/fft_tr.c"
  $2246 = $2245; //@line 151 "mcbits/fft_tr.c"
  $2247 = $2246; //@line 151 "mcbits/fft_tr.c"
  $2248 = HEAP32[$2247>>2]|0; //@line 151 "mcbits/fft_tr.c"
  $2249 = (($2246) + 4)|0; //@line 151 "mcbits/fft_tr.c"
  $2250 = $2249; //@line 151 "mcbits/fft_tr.c"
  $2251 = HEAP32[$2250>>2]|0; //@line 151 "mcbits/fft_tr.c"
  $2252 = $2238 ^ $2248; //@line 151 "mcbits/fft_tr.c"
  $2253 = $2241 ^ $2251; //@line 151 "mcbits/fft_tr.c"
  $2254 = $8; //@line 151 "mcbits/fft_tr.c"
  $2255 = (($10) + ($2254<<3)|0); //@line 151 "mcbits/fft_tr.c"
  $2256 = $2255; //@line 151 "mcbits/fft_tr.c"
  $2257 = $2256; //@line 151 "mcbits/fft_tr.c"
  HEAP32[$2257>>2] = $2252; //@line 151 "mcbits/fft_tr.c"
  $2258 = (($2256) + 4)|0; //@line 151 "mcbits/fft_tr.c"
  $2259 = $2258; //@line 151 "mcbits/fft_tr.c"
  HEAP32[$2259>>2] = $2253; //@line 151 "mcbits/fft_tr.c"
  $2260 = $8; //@line 151 "mcbits/fft_tr.c"
  $2261 = (($2260) + 1)|0; //@line 151 "mcbits/fft_tr.c"
  $8 = $2261; //@line 151 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 151 "mcbits/fft_tr.c"
 while(1) {
  $2262 = $8; //@line 151 "mcbits/fft_tr.c"
  $2263 = ($2262|0)<(12); //@line 151 "mcbits/fft_tr.c"
  if (!($2263)) {
   break;
  }
  $2264 = $3; //@line 151 "mcbits/fft_tr.c"
  $2265 = ((($2264)) + 1728|0); //@line 151 "mcbits/fft_tr.c"
  $2266 = $8; //@line 151 "mcbits/fft_tr.c"
  $2267 = (($2265) + ($2266<<3)|0); //@line 151 "mcbits/fft_tr.c"
  $2268 = $2267; //@line 151 "mcbits/fft_tr.c"
  $2269 = $2268; //@line 151 "mcbits/fft_tr.c"
  $2270 = HEAP32[$2269>>2]|0; //@line 151 "mcbits/fft_tr.c"
  $2271 = (($2268) + 4)|0; //@line 151 "mcbits/fft_tr.c"
  $2272 = $2271; //@line 151 "mcbits/fft_tr.c"
  $2273 = HEAP32[$2272>>2]|0; //@line 151 "mcbits/fft_tr.c"
  $2274 = $3; //@line 151 "mcbits/fft_tr.c"
  $2275 = ((($2274)) + 1824|0); //@line 151 "mcbits/fft_tr.c"
  $2276 = $8; //@line 151 "mcbits/fft_tr.c"
  $2277 = (($2275) + ($2276<<3)|0); //@line 151 "mcbits/fft_tr.c"
  $2278 = $2277; //@line 151 "mcbits/fft_tr.c"
  $2279 = $2278; //@line 151 "mcbits/fft_tr.c"
  $2280 = HEAP32[$2279>>2]|0; //@line 151 "mcbits/fft_tr.c"
  $2281 = (($2278) + 4)|0; //@line 151 "mcbits/fft_tr.c"
  $2282 = $2281; //@line 151 "mcbits/fft_tr.c"
  $2283 = HEAP32[$2282>>2]|0; //@line 151 "mcbits/fft_tr.c"
  $2284 = $2270 ^ $2280; //@line 151 "mcbits/fft_tr.c"
  $2285 = $2273 ^ $2283; //@line 151 "mcbits/fft_tr.c"
  $2286 = $3; //@line 151 "mcbits/fft_tr.c"
  $2287 = ((($2286)) + 1728|0); //@line 151 "mcbits/fft_tr.c"
  $2288 = $8; //@line 151 "mcbits/fft_tr.c"
  $2289 = (($2287) + ($2288<<3)|0); //@line 151 "mcbits/fft_tr.c"
  $2290 = $2289; //@line 151 "mcbits/fft_tr.c"
  $2291 = $2290; //@line 151 "mcbits/fft_tr.c"
  HEAP32[$2291>>2] = $2284; //@line 151 "mcbits/fft_tr.c"
  $2292 = (($2290) + 4)|0; //@line 151 "mcbits/fft_tr.c"
  $2293 = $2292; //@line 151 "mcbits/fft_tr.c"
  HEAP32[$2293>>2] = $2285; //@line 151 "mcbits/fft_tr.c"
  $2294 = $8; //@line 151 "mcbits/fft_tr.c"
  $2295 = (($2294) + 1)|0; //@line 151 "mcbits/fft_tr.c"
  $8 = $2295; //@line 151 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 152 "mcbits/fft_tr.c"
 while(1) {
  $2296 = $8; //@line 152 "mcbits/fft_tr.c"
  $2297 = ($2296|0)<(12); //@line 152 "mcbits/fft_tr.c"
  if (!($2297)) {
   break;
  }
  $2298 = ((($10)) + 192|0); //@line 152 "mcbits/fft_tr.c"
  $2299 = $8; //@line 152 "mcbits/fft_tr.c"
  $2300 = (($2298) + ($2299<<3)|0); //@line 152 "mcbits/fft_tr.c"
  $2301 = $2300; //@line 152 "mcbits/fft_tr.c"
  $2302 = $2301; //@line 152 "mcbits/fft_tr.c"
  $2303 = HEAP32[$2302>>2]|0; //@line 152 "mcbits/fft_tr.c"
  $2304 = (($2301) + 4)|0; //@line 152 "mcbits/fft_tr.c"
  $2305 = $2304; //@line 152 "mcbits/fft_tr.c"
  $2306 = HEAP32[$2305>>2]|0; //@line 152 "mcbits/fft_tr.c"
  $2307 = $3; //@line 152 "mcbits/fft_tr.c"
  $2308 = ((($2307)) + 1728|0); //@line 152 "mcbits/fft_tr.c"
  $2309 = $8; //@line 152 "mcbits/fft_tr.c"
  $2310 = (($2308) + ($2309<<3)|0); //@line 152 "mcbits/fft_tr.c"
  $2311 = $2310; //@line 152 "mcbits/fft_tr.c"
  $2312 = $2311; //@line 152 "mcbits/fft_tr.c"
  $2313 = HEAP32[$2312>>2]|0; //@line 152 "mcbits/fft_tr.c"
  $2314 = (($2311) + 4)|0; //@line 152 "mcbits/fft_tr.c"
  $2315 = $2314; //@line 152 "mcbits/fft_tr.c"
  $2316 = HEAP32[$2315>>2]|0; //@line 152 "mcbits/fft_tr.c"
  $2317 = $2303 ^ $2313; //@line 152 "mcbits/fft_tr.c"
  $2318 = $2306 ^ $2316; //@line 152 "mcbits/fft_tr.c"
  $2319 = ((($10)) + 192|0); //@line 152 "mcbits/fft_tr.c"
  $2320 = $8; //@line 152 "mcbits/fft_tr.c"
  $2321 = (($2319) + ($2320<<3)|0); //@line 152 "mcbits/fft_tr.c"
  $2322 = $2321; //@line 152 "mcbits/fft_tr.c"
  $2323 = $2322; //@line 152 "mcbits/fft_tr.c"
  HEAP32[$2323>>2] = $2317; //@line 152 "mcbits/fft_tr.c"
  $2324 = (($2322) + 4)|0; //@line 152 "mcbits/fft_tr.c"
  $2325 = $2324; //@line 152 "mcbits/fft_tr.c"
  HEAP32[$2325>>2] = $2318; //@line 152 "mcbits/fft_tr.c"
  $2326 = $8; //@line 152 "mcbits/fft_tr.c"
  $2327 = (($2326) + 1)|0; //@line 152 "mcbits/fft_tr.c"
  $8 = $2327; //@line 152 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 152 "mcbits/fft_tr.c"
 while(1) {
  $2328 = $8; //@line 152 "mcbits/fft_tr.c"
  $2329 = ($2328|0)<(12); //@line 152 "mcbits/fft_tr.c"
  if (!($2329)) {
   break;
  }
  $2330 = $3; //@line 152 "mcbits/fft_tr.c"
  $2331 = ((($2330)) + 2112|0); //@line 152 "mcbits/fft_tr.c"
  $2332 = $8; //@line 152 "mcbits/fft_tr.c"
  $2333 = (($2331) + ($2332<<3)|0); //@line 152 "mcbits/fft_tr.c"
  $2334 = $2333; //@line 152 "mcbits/fft_tr.c"
  $2335 = $2334; //@line 152 "mcbits/fft_tr.c"
  $2336 = HEAP32[$2335>>2]|0; //@line 152 "mcbits/fft_tr.c"
  $2337 = (($2334) + 4)|0; //@line 152 "mcbits/fft_tr.c"
  $2338 = $2337; //@line 152 "mcbits/fft_tr.c"
  $2339 = HEAP32[$2338>>2]|0; //@line 152 "mcbits/fft_tr.c"
  $2340 = $3; //@line 152 "mcbits/fft_tr.c"
  $2341 = ((($2340)) + 1728|0); //@line 152 "mcbits/fft_tr.c"
  $2342 = $8; //@line 152 "mcbits/fft_tr.c"
  $2343 = (($2341) + ($2342<<3)|0); //@line 152 "mcbits/fft_tr.c"
  $2344 = $2343; //@line 152 "mcbits/fft_tr.c"
  $2345 = $2344; //@line 152 "mcbits/fft_tr.c"
  $2346 = HEAP32[$2345>>2]|0; //@line 152 "mcbits/fft_tr.c"
  $2347 = (($2344) + 4)|0; //@line 152 "mcbits/fft_tr.c"
  $2348 = $2347; //@line 152 "mcbits/fft_tr.c"
  $2349 = HEAP32[$2348>>2]|0; //@line 152 "mcbits/fft_tr.c"
  $2350 = $2336 ^ $2346; //@line 152 "mcbits/fft_tr.c"
  $2351 = $2339 ^ $2349; //@line 152 "mcbits/fft_tr.c"
  $2352 = $3; //@line 152 "mcbits/fft_tr.c"
  $2353 = ((($2352)) + 2112|0); //@line 152 "mcbits/fft_tr.c"
  $2354 = $8; //@line 152 "mcbits/fft_tr.c"
  $2355 = (($2353) + ($2354<<3)|0); //@line 152 "mcbits/fft_tr.c"
  $2356 = $2355; //@line 152 "mcbits/fft_tr.c"
  $2357 = $2356; //@line 152 "mcbits/fft_tr.c"
  HEAP32[$2357>>2] = $2350; //@line 152 "mcbits/fft_tr.c"
  $2358 = (($2356) + 4)|0; //@line 152 "mcbits/fft_tr.c"
  $2359 = $2358; //@line 152 "mcbits/fft_tr.c"
  HEAP32[$2359>>2] = $2351; //@line 152 "mcbits/fft_tr.c"
  $2360 = $8; //@line 152 "mcbits/fft_tr.c"
  $2361 = (($2360) + 1)|0; //@line 152 "mcbits/fft_tr.c"
  $8 = $2361; //@line 152 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 153 "mcbits/fft_tr.c"
 while(1) {
  $2362 = $8; //@line 153 "mcbits/fft_tr.c"
  $2363 = ($2362|0)<(12); //@line 153 "mcbits/fft_tr.c"
  if (!($2363)) {
   break;
  }
  $2364 = $8; //@line 153 "mcbits/fft_tr.c"
  $2365 = (($10) + ($2364<<3)|0); //@line 153 "mcbits/fft_tr.c"
  $2366 = $2365; //@line 153 "mcbits/fft_tr.c"
  $2367 = $2366; //@line 153 "mcbits/fft_tr.c"
  $2368 = HEAP32[$2367>>2]|0; //@line 153 "mcbits/fft_tr.c"
  $2369 = (($2366) + 4)|0; //@line 153 "mcbits/fft_tr.c"
  $2370 = $2369; //@line 153 "mcbits/fft_tr.c"
  $2371 = HEAP32[$2370>>2]|0; //@line 153 "mcbits/fft_tr.c"
  $2372 = $3; //@line 153 "mcbits/fft_tr.c"
  $2373 = ((($2372)) + 2112|0); //@line 153 "mcbits/fft_tr.c"
  $2374 = $8; //@line 153 "mcbits/fft_tr.c"
  $2375 = (($2373) + ($2374<<3)|0); //@line 153 "mcbits/fft_tr.c"
  $2376 = $2375; //@line 153 "mcbits/fft_tr.c"
  $2377 = $2376; //@line 153 "mcbits/fft_tr.c"
  $2378 = HEAP32[$2377>>2]|0; //@line 153 "mcbits/fft_tr.c"
  $2379 = (($2376) + 4)|0; //@line 153 "mcbits/fft_tr.c"
  $2380 = $2379; //@line 153 "mcbits/fft_tr.c"
  $2381 = HEAP32[$2380>>2]|0; //@line 153 "mcbits/fft_tr.c"
  $2382 = $2368 ^ $2378; //@line 153 "mcbits/fft_tr.c"
  $2383 = $2371 ^ $2381; //@line 153 "mcbits/fft_tr.c"
  $2384 = $8; //@line 153 "mcbits/fft_tr.c"
  $2385 = (($10) + ($2384<<3)|0); //@line 153 "mcbits/fft_tr.c"
  $2386 = $2385; //@line 153 "mcbits/fft_tr.c"
  $2387 = $2386; //@line 153 "mcbits/fft_tr.c"
  HEAP32[$2387>>2] = $2382; //@line 153 "mcbits/fft_tr.c"
  $2388 = (($2386) + 4)|0; //@line 153 "mcbits/fft_tr.c"
  $2389 = $2388; //@line 153 "mcbits/fft_tr.c"
  HEAP32[$2389>>2] = $2383; //@line 153 "mcbits/fft_tr.c"
  $2390 = $8; //@line 153 "mcbits/fft_tr.c"
  $2391 = (($2390) + 1)|0; //@line 153 "mcbits/fft_tr.c"
  $8 = $2391; //@line 153 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 153 "mcbits/fft_tr.c"
 while(1) {
  $2392 = $8; //@line 153 "mcbits/fft_tr.c"
  $2393 = ($2392|0)<(12); //@line 153 "mcbits/fft_tr.c"
  if (!($2393)) {
   break;
  }
  $2394 = $3; //@line 153 "mcbits/fft_tr.c"
  $2395 = ((($2394)) + 2208|0); //@line 153 "mcbits/fft_tr.c"
  $2396 = $8; //@line 153 "mcbits/fft_tr.c"
  $2397 = (($2395) + ($2396<<3)|0); //@line 153 "mcbits/fft_tr.c"
  $2398 = $2397; //@line 153 "mcbits/fft_tr.c"
  $2399 = $2398; //@line 153 "mcbits/fft_tr.c"
  $2400 = HEAP32[$2399>>2]|0; //@line 153 "mcbits/fft_tr.c"
  $2401 = (($2398) + 4)|0; //@line 153 "mcbits/fft_tr.c"
  $2402 = $2401; //@line 153 "mcbits/fft_tr.c"
  $2403 = HEAP32[$2402>>2]|0; //@line 153 "mcbits/fft_tr.c"
  $2404 = $3; //@line 153 "mcbits/fft_tr.c"
  $2405 = ((($2404)) + 2112|0); //@line 153 "mcbits/fft_tr.c"
  $2406 = $8; //@line 153 "mcbits/fft_tr.c"
  $2407 = (($2405) + ($2406<<3)|0); //@line 153 "mcbits/fft_tr.c"
  $2408 = $2407; //@line 153 "mcbits/fft_tr.c"
  $2409 = $2408; //@line 153 "mcbits/fft_tr.c"
  $2410 = HEAP32[$2409>>2]|0; //@line 153 "mcbits/fft_tr.c"
  $2411 = (($2408) + 4)|0; //@line 153 "mcbits/fft_tr.c"
  $2412 = $2411; //@line 153 "mcbits/fft_tr.c"
  $2413 = HEAP32[$2412>>2]|0; //@line 153 "mcbits/fft_tr.c"
  $2414 = $2400 ^ $2410; //@line 153 "mcbits/fft_tr.c"
  $2415 = $2403 ^ $2413; //@line 153 "mcbits/fft_tr.c"
  $2416 = $3; //@line 153 "mcbits/fft_tr.c"
  $2417 = ((($2416)) + 2208|0); //@line 153 "mcbits/fft_tr.c"
  $2418 = $8; //@line 153 "mcbits/fft_tr.c"
  $2419 = (($2417) + ($2418<<3)|0); //@line 153 "mcbits/fft_tr.c"
  $2420 = $2419; //@line 153 "mcbits/fft_tr.c"
  $2421 = $2420; //@line 153 "mcbits/fft_tr.c"
  HEAP32[$2421>>2] = $2414; //@line 153 "mcbits/fft_tr.c"
  $2422 = (($2420) + 4)|0; //@line 153 "mcbits/fft_tr.c"
  $2423 = $2422; //@line 153 "mcbits/fft_tr.c"
  HEAP32[$2423>>2] = $2415; //@line 153 "mcbits/fft_tr.c"
  $2424 = $8; //@line 153 "mcbits/fft_tr.c"
  $2425 = (($2424) + 1)|0; //@line 153 "mcbits/fft_tr.c"
  $8 = $2425; //@line 153 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 154 "mcbits/fft_tr.c"
 while(1) {
  $2426 = $8; //@line 154 "mcbits/fft_tr.c"
  $2427 = ($2426|0)<(12); //@line 154 "mcbits/fft_tr.c"
  if (!($2427)) {
   break;
  }
  $2428 = ((($10)) + 96|0); //@line 154 "mcbits/fft_tr.c"
  $2429 = $8; //@line 154 "mcbits/fft_tr.c"
  $2430 = (($2428) + ($2429<<3)|0); //@line 154 "mcbits/fft_tr.c"
  $2431 = $2430; //@line 154 "mcbits/fft_tr.c"
  $2432 = $2431; //@line 154 "mcbits/fft_tr.c"
  $2433 = HEAP32[$2432>>2]|0; //@line 154 "mcbits/fft_tr.c"
  $2434 = (($2431) + 4)|0; //@line 154 "mcbits/fft_tr.c"
  $2435 = $2434; //@line 154 "mcbits/fft_tr.c"
  $2436 = HEAP32[$2435>>2]|0; //@line 154 "mcbits/fft_tr.c"
  $2437 = $3; //@line 154 "mcbits/fft_tr.c"
  $2438 = ((($2437)) + 2208|0); //@line 154 "mcbits/fft_tr.c"
  $2439 = $8; //@line 154 "mcbits/fft_tr.c"
  $2440 = (($2438) + ($2439<<3)|0); //@line 154 "mcbits/fft_tr.c"
  $2441 = $2440; //@line 154 "mcbits/fft_tr.c"
  $2442 = $2441; //@line 154 "mcbits/fft_tr.c"
  $2443 = HEAP32[$2442>>2]|0; //@line 154 "mcbits/fft_tr.c"
  $2444 = (($2441) + 4)|0; //@line 154 "mcbits/fft_tr.c"
  $2445 = $2444; //@line 154 "mcbits/fft_tr.c"
  $2446 = HEAP32[$2445>>2]|0; //@line 154 "mcbits/fft_tr.c"
  $2447 = $2433 ^ $2443; //@line 154 "mcbits/fft_tr.c"
  $2448 = $2436 ^ $2446; //@line 154 "mcbits/fft_tr.c"
  $2449 = ((($10)) + 96|0); //@line 154 "mcbits/fft_tr.c"
  $2450 = $8; //@line 154 "mcbits/fft_tr.c"
  $2451 = (($2449) + ($2450<<3)|0); //@line 154 "mcbits/fft_tr.c"
  $2452 = $2451; //@line 154 "mcbits/fft_tr.c"
  $2453 = $2452; //@line 154 "mcbits/fft_tr.c"
  HEAP32[$2453>>2] = $2447; //@line 154 "mcbits/fft_tr.c"
  $2454 = (($2452) + 4)|0; //@line 154 "mcbits/fft_tr.c"
  $2455 = $2454; //@line 154 "mcbits/fft_tr.c"
  HEAP32[$2455>>2] = $2448; //@line 154 "mcbits/fft_tr.c"
  $2456 = $8; //@line 154 "mcbits/fft_tr.c"
  $2457 = (($2456) + 1)|0; //@line 154 "mcbits/fft_tr.c"
  $8 = $2457; //@line 154 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 154 "mcbits/fft_tr.c"
 while(1) {
  $2458 = $8; //@line 154 "mcbits/fft_tr.c"
  $2459 = ($2458|0)<(12); //@line 154 "mcbits/fft_tr.c"
  if (!($2459)) {
   break;
  }
  $2460 = $3; //@line 154 "mcbits/fft_tr.c"
  $2461 = ((($2460)) + 2016|0); //@line 154 "mcbits/fft_tr.c"
  $2462 = $8; //@line 154 "mcbits/fft_tr.c"
  $2463 = (($2461) + ($2462<<3)|0); //@line 154 "mcbits/fft_tr.c"
  $2464 = $2463; //@line 154 "mcbits/fft_tr.c"
  $2465 = $2464; //@line 154 "mcbits/fft_tr.c"
  $2466 = HEAP32[$2465>>2]|0; //@line 154 "mcbits/fft_tr.c"
  $2467 = (($2464) + 4)|0; //@line 154 "mcbits/fft_tr.c"
  $2468 = $2467; //@line 154 "mcbits/fft_tr.c"
  $2469 = HEAP32[$2468>>2]|0; //@line 154 "mcbits/fft_tr.c"
  $2470 = $3; //@line 154 "mcbits/fft_tr.c"
  $2471 = ((($2470)) + 2208|0); //@line 154 "mcbits/fft_tr.c"
  $2472 = $8; //@line 154 "mcbits/fft_tr.c"
  $2473 = (($2471) + ($2472<<3)|0); //@line 154 "mcbits/fft_tr.c"
  $2474 = $2473; //@line 154 "mcbits/fft_tr.c"
  $2475 = $2474; //@line 154 "mcbits/fft_tr.c"
  $2476 = HEAP32[$2475>>2]|0; //@line 154 "mcbits/fft_tr.c"
  $2477 = (($2474) + 4)|0; //@line 154 "mcbits/fft_tr.c"
  $2478 = $2477; //@line 154 "mcbits/fft_tr.c"
  $2479 = HEAP32[$2478>>2]|0; //@line 154 "mcbits/fft_tr.c"
  $2480 = $2466 ^ $2476; //@line 154 "mcbits/fft_tr.c"
  $2481 = $2469 ^ $2479; //@line 154 "mcbits/fft_tr.c"
  $2482 = $3; //@line 154 "mcbits/fft_tr.c"
  $2483 = ((($2482)) + 2016|0); //@line 154 "mcbits/fft_tr.c"
  $2484 = $8; //@line 154 "mcbits/fft_tr.c"
  $2485 = (($2483) + ($2484<<3)|0); //@line 154 "mcbits/fft_tr.c"
  $2486 = $2485; //@line 154 "mcbits/fft_tr.c"
  $2487 = $2486; //@line 154 "mcbits/fft_tr.c"
  HEAP32[$2487>>2] = $2480; //@line 154 "mcbits/fft_tr.c"
  $2488 = (($2486) + 4)|0; //@line 154 "mcbits/fft_tr.c"
  $2489 = $2488; //@line 154 "mcbits/fft_tr.c"
  HEAP32[$2489>>2] = $2481; //@line 154 "mcbits/fft_tr.c"
  $2490 = $8; //@line 154 "mcbits/fft_tr.c"
  $2491 = (($2490) + 1)|0; //@line 154 "mcbits/fft_tr.c"
  $8 = $2491; //@line 154 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 155 "mcbits/fft_tr.c"
 while(1) {
  $2492 = $8; //@line 155 "mcbits/fft_tr.c"
  $2493 = ($2492|0)<(12); //@line 155 "mcbits/fft_tr.c"
  if (!($2493)) {
   break;
  }
  $2494 = $8; //@line 155 "mcbits/fft_tr.c"
  $2495 = (($10) + ($2494<<3)|0); //@line 155 "mcbits/fft_tr.c"
  $2496 = $2495; //@line 155 "mcbits/fft_tr.c"
  $2497 = $2496; //@line 155 "mcbits/fft_tr.c"
  $2498 = HEAP32[$2497>>2]|0; //@line 155 "mcbits/fft_tr.c"
  $2499 = (($2496) + 4)|0; //@line 155 "mcbits/fft_tr.c"
  $2500 = $2499; //@line 155 "mcbits/fft_tr.c"
  $2501 = HEAP32[$2500>>2]|0; //@line 155 "mcbits/fft_tr.c"
  $2502 = $3; //@line 155 "mcbits/fft_tr.c"
  $2503 = ((($2502)) + 2016|0); //@line 155 "mcbits/fft_tr.c"
  $2504 = $8; //@line 155 "mcbits/fft_tr.c"
  $2505 = (($2503) + ($2504<<3)|0); //@line 155 "mcbits/fft_tr.c"
  $2506 = $2505; //@line 155 "mcbits/fft_tr.c"
  $2507 = $2506; //@line 155 "mcbits/fft_tr.c"
  $2508 = HEAP32[$2507>>2]|0; //@line 155 "mcbits/fft_tr.c"
  $2509 = (($2506) + 4)|0; //@line 155 "mcbits/fft_tr.c"
  $2510 = $2509; //@line 155 "mcbits/fft_tr.c"
  $2511 = HEAP32[$2510>>2]|0; //@line 155 "mcbits/fft_tr.c"
  $2512 = $2498 ^ $2508; //@line 155 "mcbits/fft_tr.c"
  $2513 = $2501 ^ $2511; //@line 155 "mcbits/fft_tr.c"
  $2514 = $8; //@line 155 "mcbits/fft_tr.c"
  $2515 = (($10) + ($2514<<3)|0); //@line 155 "mcbits/fft_tr.c"
  $2516 = $2515; //@line 155 "mcbits/fft_tr.c"
  $2517 = $2516; //@line 155 "mcbits/fft_tr.c"
  HEAP32[$2517>>2] = $2512; //@line 155 "mcbits/fft_tr.c"
  $2518 = (($2516) + 4)|0; //@line 155 "mcbits/fft_tr.c"
  $2519 = $2518; //@line 155 "mcbits/fft_tr.c"
  HEAP32[$2519>>2] = $2513; //@line 155 "mcbits/fft_tr.c"
  $2520 = $8; //@line 155 "mcbits/fft_tr.c"
  $2521 = (($2520) + 1)|0; //@line 155 "mcbits/fft_tr.c"
  $8 = $2521; //@line 155 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 155 "mcbits/fft_tr.c"
 while(1) {
  $2522 = $8; //@line 155 "mcbits/fft_tr.c"
  $2523 = ($2522|0)<(12); //@line 155 "mcbits/fft_tr.c"
  if (!($2523)) {
   break;
  }
  $2524 = $3; //@line 155 "mcbits/fft_tr.c"
  $2525 = ((($2524)) + 1920|0); //@line 155 "mcbits/fft_tr.c"
  $2526 = $8; //@line 155 "mcbits/fft_tr.c"
  $2527 = (($2525) + ($2526<<3)|0); //@line 155 "mcbits/fft_tr.c"
  $2528 = $2527; //@line 155 "mcbits/fft_tr.c"
  $2529 = $2528; //@line 155 "mcbits/fft_tr.c"
  $2530 = HEAP32[$2529>>2]|0; //@line 155 "mcbits/fft_tr.c"
  $2531 = (($2528) + 4)|0; //@line 155 "mcbits/fft_tr.c"
  $2532 = $2531; //@line 155 "mcbits/fft_tr.c"
  $2533 = HEAP32[$2532>>2]|0; //@line 155 "mcbits/fft_tr.c"
  $2534 = $3; //@line 155 "mcbits/fft_tr.c"
  $2535 = ((($2534)) + 2016|0); //@line 155 "mcbits/fft_tr.c"
  $2536 = $8; //@line 155 "mcbits/fft_tr.c"
  $2537 = (($2535) + ($2536<<3)|0); //@line 155 "mcbits/fft_tr.c"
  $2538 = $2537; //@line 155 "mcbits/fft_tr.c"
  $2539 = $2538; //@line 155 "mcbits/fft_tr.c"
  $2540 = HEAP32[$2539>>2]|0; //@line 155 "mcbits/fft_tr.c"
  $2541 = (($2538) + 4)|0; //@line 155 "mcbits/fft_tr.c"
  $2542 = $2541; //@line 155 "mcbits/fft_tr.c"
  $2543 = HEAP32[$2542>>2]|0; //@line 155 "mcbits/fft_tr.c"
  $2544 = $2530 ^ $2540; //@line 155 "mcbits/fft_tr.c"
  $2545 = $2533 ^ $2543; //@line 155 "mcbits/fft_tr.c"
  $2546 = $3; //@line 155 "mcbits/fft_tr.c"
  $2547 = ((($2546)) + 1920|0); //@line 155 "mcbits/fft_tr.c"
  $2548 = $8; //@line 155 "mcbits/fft_tr.c"
  $2549 = (($2547) + ($2548<<3)|0); //@line 155 "mcbits/fft_tr.c"
  $2550 = $2549; //@line 155 "mcbits/fft_tr.c"
  $2551 = $2550; //@line 155 "mcbits/fft_tr.c"
  HEAP32[$2551>>2] = $2544; //@line 155 "mcbits/fft_tr.c"
  $2552 = (($2550) + 4)|0; //@line 155 "mcbits/fft_tr.c"
  $2553 = $2552; //@line 155 "mcbits/fft_tr.c"
  HEAP32[$2553>>2] = $2545; //@line 155 "mcbits/fft_tr.c"
  $2554 = $8; //@line 155 "mcbits/fft_tr.c"
  $2555 = (($2554) + 1)|0; //@line 155 "mcbits/fft_tr.c"
  $8 = $2555; //@line 155 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 156 "mcbits/fft_tr.c"
 while(1) {
  $2556 = $8; //@line 156 "mcbits/fft_tr.c"
  $2557 = ($2556|0)<(12); //@line 156 "mcbits/fft_tr.c"
  if (!($2557)) {
   break;
  }
  $2558 = ((($10)) + 288|0); //@line 156 "mcbits/fft_tr.c"
  $2559 = $8; //@line 156 "mcbits/fft_tr.c"
  $2560 = (($2558) + ($2559<<3)|0); //@line 156 "mcbits/fft_tr.c"
  $2561 = $2560; //@line 156 "mcbits/fft_tr.c"
  $2562 = $2561; //@line 156 "mcbits/fft_tr.c"
  $2563 = HEAP32[$2562>>2]|0; //@line 156 "mcbits/fft_tr.c"
  $2564 = (($2561) + 4)|0; //@line 156 "mcbits/fft_tr.c"
  $2565 = $2564; //@line 156 "mcbits/fft_tr.c"
  $2566 = HEAP32[$2565>>2]|0; //@line 156 "mcbits/fft_tr.c"
  $2567 = $3; //@line 156 "mcbits/fft_tr.c"
  $2568 = ((($2567)) + 1920|0); //@line 156 "mcbits/fft_tr.c"
  $2569 = $8; //@line 156 "mcbits/fft_tr.c"
  $2570 = (($2568) + ($2569<<3)|0); //@line 156 "mcbits/fft_tr.c"
  $2571 = $2570; //@line 156 "mcbits/fft_tr.c"
  $2572 = $2571; //@line 156 "mcbits/fft_tr.c"
  $2573 = HEAP32[$2572>>2]|0; //@line 156 "mcbits/fft_tr.c"
  $2574 = (($2571) + 4)|0; //@line 156 "mcbits/fft_tr.c"
  $2575 = $2574; //@line 156 "mcbits/fft_tr.c"
  $2576 = HEAP32[$2575>>2]|0; //@line 156 "mcbits/fft_tr.c"
  $2577 = $2563 ^ $2573; //@line 156 "mcbits/fft_tr.c"
  $2578 = $2566 ^ $2576; //@line 156 "mcbits/fft_tr.c"
  $2579 = ((($10)) + 288|0); //@line 156 "mcbits/fft_tr.c"
  $2580 = $8; //@line 156 "mcbits/fft_tr.c"
  $2581 = (($2579) + ($2580<<3)|0); //@line 156 "mcbits/fft_tr.c"
  $2582 = $2581; //@line 156 "mcbits/fft_tr.c"
  $2583 = $2582; //@line 156 "mcbits/fft_tr.c"
  HEAP32[$2583>>2] = $2577; //@line 156 "mcbits/fft_tr.c"
  $2584 = (($2582) + 4)|0; //@line 156 "mcbits/fft_tr.c"
  $2585 = $2584; //@line 156 "mcbits/fft_tr.c"
  HEAP32[$2585>>2] = $2578; //@line 156 "mcbits/fft_tr.c"
  $2586 = $8; //@line 156 "mcbits/fft_tr.c"
  $2587 = (($2586) + 1)|0; //@line 156 "mcbits/fft_tr.c"
  $8 = $2587; //@line 156 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 156 "mcbits/fft_tr.c"
 while(1) {
  $2588 = $8; //@line 156 "mcbits/fft_tr.c"
  $2589 = ($2588|0)<(12); //@line 156 "mcbits/fft_tr.c"
  if (!($2589)) {
   break;
  }
  $2590 = $3; //@line 156 "mcbits/fft_tr.c"
  $2591 = ((($2590)) + 2688|0); //@line 156 "mcbits/fft_tr.c"
  $2592 = $8; //@line 156 "mcbits/fft_tr.c"
  $2593 = (($2591) + ($2592<<3)|0); //@line 156 "mcbits/fft_tr.c"
  $2594 = $2593; //@line 156 "mcbits/fft_tr.c"
  $2595 = $2594; //@line 156 "mcbits/fft_tr.c"
  $2596 = HEAP32[$2595>>2]|0; //@line 156 "mcbits/fft_tr.c"
  $2597 = (($2594) + 4)|0; //@line 156 "mcbits/fft_tr.c"
  $2598 = $2597; //@line 156 "mcbits/fft_tr.c"
  $2599 = HEAP32[$2598>>2]|0; //@line 156 "mcbits/fft_tr.c"
  $2600 = $3; //@line 156 "mcbits/fft_tr.c"
  $2601 = ((($2600)) + 1920|0); //@line 156 "mcbits/fft_tr.c"
  $2602 = $8; //@line 156 "mcbits/fft_tr.c"
  $2603 = (($2601) + ($2602<<3)|0); //@line 156 "mcbits/fft_tr.c"
  $2604 = $2603; //@line 156 "mcbits/fft_tr.c"
  $2605 = $2604; //@line 156 "mcbits/fft_tr.c"
  $2606 = HEAP32[$2605>>2]|0; //@line 156 "mcbits/fft_tr.c"
  $2607 = (($2604) + 4)|0; //@line 156 "mcbits/fft_tr.c"
  $2608 = $2607; //@line 156 "mcbits/fft_tr.c"
  $2609 = HEAP32[$2608>>2]|0; //@line 156 "mcbits/fft_tr.c"
  $2610 = $2596 ^ $2606; //@line 156 "mcbits/fft_tr.c"
  $2611 = $2599 ^ $2609; //@line 156 "mcbits/fft_tr.c"
  $2612 = $3; //@line 156 "mcbits/fft_tr.c"
  $2613 = ((($2612)) + 2688|0); //@line 156 "mcbits/fft_tr.c"
  $2614 = $8; //@line 156 "mcbits/fft_tr.c"
  $2615 = (($2613) + ($2614<<3)|0); //@line 156 "mcbits/fft_tr.c"
  $2616 = $2615; //@line 156 "mcbits/fft_tr.c"
  $2617 = $2616; //@line 156 "mcbits/fft_tr.c"
  HEAP32[$2617>>2] = $2610; //@line 156 "mcbits/fft_tr.c"
  $2618 = (($2616) + 4)|0; //@line 156 "mcbits/fft_tr.c"
  $2619 = $2618; //@line 156 "mcbits/fft_tr.c"
  HEAP32[$2619>>2] = $2611; //@line 156 "mcbits/fft_tr.c"
  $2620 = $8; //@line 156 "mcbits/fft_tr.c"
  $2621 = (($2620) + 1)|0; //@line 156 "mcbits/fft_tr.c"
  $8 = $2621; //@line 156 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 157 "mcbits/fft_tr.c"
 while(1) {
  $2622 = $8; //@line 157 "mcbits/fft_tr.c"
  $2623 = ($2622|0)<(12); //@line 157 "mcbits/fft_tr.c"
  if (!($2623)) {
   break;
  }
  $2624 = $8; //@line 157 "mcbits/fft_tr.c"
  $2625 = (($10) + ($2624<<3)|0); //@line 157 "mcbits/fft_tr.c"
  $2626 = $2625; //@line 157 "mcbits/fft_tr.c"
  $2627 = $2626; //@line 157 "mcbits/fft_tr.c"
  $2628 = HEAP32[$2627>>2]|0; //@line 157 "mcbits/fft_tr.c"
  $2629 = (($2626) + 4)|0; //@line 157 "mcbits/fft_tr.c"
  $2630 = $2629; //@line 157 "mcbits/fft_tr.c"
  $2631 = HEAP32[$2630>>2]|0; //@line 157 "mcbits/fft_tr.c"
  $2632 = $3; //@line 157 "mcbits/fft_tr.c"
  $2633 = ((($2632)) + 2688|0); //@line 157 "mcbits/fft_tr.c"
  $2634 = $8; //@line 157 "mcbits/fft_tr.c"
  $2635 = (($2633) + ($2634<<3)|0); //@line 157 "mcbits/fft_tr.c"
  $2636 = $2635; //@line 157 "mcbits/fft_tr.c"
  $2637 = $2636; //@line 157 "mcbits/fft_tr.c"
  $2638 = HEAP32[$2637>>2]|0; //@line 157 "mcbits/fft_tr.c"
  $2639 = (($2636) + 4)|0; //@line 157 "mcbits/fft_tr.c"
  $2640 = $2639; //@line 157 "mcbits/fft_tr.c"
  $2641 = HEAP32[$2640>>2]|0; //@line 157 "mcbits/fft_tr.c"
  $2642 = $2628 ^ $2638; //@line 157 "mcbits/fft_tr.c"
  $2643 = $2631 ^ $2641; //@line 157 "mcbits/fft_tr.c"
  $2644 = $8; //@line 157 "mcbits/fft_tr.c"
  $2645 = (($10) + ($2644<<3)|0); //@line 157 "mcbits/fft_tr.c"
  $2646 = $2645; //@line 157 "mcbits/fft_tr.c"
  $2647 = $2646; //@line 157 "mcbits/fft_tr.c"
  HEAP32[$2647>>2] = $2642; //@line 157 "mcbits/fft_tr.c"
  $2648 = (($2646) + 4)|0; //@line 157 "mcbits/fft_tr.c"
  $2649 = $2648; //@line 157 "mcbits/fft_tr.c"
  HEAP32[$2649>>2] = $2643; //@line 157 "mcbits/fft_tr.c"
  $2650 = $8; //@line 157 "mcbits/fft_tr.c"
  $2651 = (($2650) + 1)|0; //@line 157 "mcbits/fft_tr.c"
  $8 = $2651; //@line 157 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 157 "mcbits/fft_tr.c"
 while(1) {
  $2652 = $8; //@line 157 "mcbits/fft_tr.c"
  $2653 = ($2652|0)<(12); //@line 157 "mcbits/fft_tr.c"
  if (!($2653)) {
   break;
  }
  $2654 = $3; //@line 157 "mcbits/fft_tr.c"
  $2655 = ((($2654)) + 2784|0); //@line 157 "mcbits/fft_tr.c"
  $2656 = $8; //@line 157 "mcbits/fft_tr.c"
  $2657 = (($2655) + ($2656<<3)|0); //@line 157 "mcbits/fft_tr.c"
  $2658 = $2657; //@line 157 "mcbits/fft_tr.c"
  $2659 = $2658; //@line 157 "mcbits/fft_tr.c"
  $2660 = HEAP32[$2659>>2]|0; //@line 157 "mcbits/fft_tr.c"
  $2661 = (($2658) + 4)|0; //@line 157 "mcbits/fft_tr.c"
  $2662 = $2661; //@line 157 "mcbits/fft_tr.c"
  $2663 = HEAP32[$2662>>2]|0; //@line 157 "mcbits/fft_tr.c"
  $2664 = $3; //@line 157 "mcbits/fft_tr.c"
  $2665 = ((($2664)) + 2688|0); //@line 157 "mcbits/fft_tr.c"
  $2666 = $8; //@line 157 "mcbits/fft_tr.c"
  $2667 = (($2665) + ($2666<<3)|0); //@line 157 "mcbits/fft_tr.c"
  $2668 = $2667; //@line 157 "mcbits/fft_tr.c"
  $2669 = $2668; //@line 157 "mcbits/fft_tr.c"
  $2670 = HEAP32[$2669>>2]|0; //@line 157 "mcbits/fft_tr.c"
  $2671 = (($2668) + 4)|0; //@line 157 "mcbits/fft_tr.c"
  $2672 = $2671; //@line 157 "mcbits/fft_tr.c"
  $2673 = HEAP32[$2672>>2]|0; //@line 157 "mcbits/fft_tr.c"
  $2674 = $2660 ^ $2670; //@line 157 "mcbits/fft_tr.c"
  $2675 = $2663 ^ $2673; //@line 157 "mcbits/fft_tr.c"
  $2676 = $3; //@line 157 "mcbits/fft_tr.c"
  $2677 = ((($2676)) + 2784|0); //@line 157 "mcbits/fft_tr.c"
  $2678 = $8; //@line 157 "mcbits/fft_tr.c"
  $2679 = (($2677) + ($2678<<3)|0); //@line 157 "mcbits/fft_tr.c"
  $2680 = $2679; //@line 157 "mcbits/fft_tr.c"
  $2681 = $2680; //@line 157 "mcbits/fft_tr.c"
  HEAP32[$2681>>2] = $2674; //@line 157 "mcbits/fft_tr.c"
  $2682 = (($2680) + 4)|0; //@line 157 "mcbits/fft_tr.c"
  $2683 = $2682; //@line 157 "mcbits/fft_tr.c"
  HEAP32[$2683>>2] = $2675; //@line 157 "mcbits/fft_tr.c"
  $2684 = $8; //@line 157 "mcbits/fft_tr.c"
  $2685 = (($2684) + 1)|0; //@line 157 "mcbits/fft_tr.c"
  $8 = $2685; //@line 157 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 158 "mcbits/fft_tr.c"
 while(1) {
  $2686 = $8; //@line 158 "mcbits/fft_tr.c"
  $2687 = ($2686|0)<(12); //@line 158 "mcbits/fft_tr.c"
  if (!($2687)) {
   break;
  }
  $2688 = ((($10)) + 96|0); //@line 158 "mcbits/fft_tr.c"
  $2689 = $8; //@line 158 "mcbits/fft_tr.c"
  $2690 = (($2688) + ($2689<<3)|0); //@line 158 "mcbits/fft_tr.c"
  $2691 = $2690; //@line 158 "mcbits/fft_tr.c"
  $2692 = $2691; //@line 158 "mcbits/fft_tr.c"
  $2693 = HEAP32[$2692>>2]|0; //@line 158 "mcbits/fft_tr.c"
  $2694 = (($2691) + 4)|0; //@line 158 "mcbits/fft_tr.c"
  $2695 = $2694; //@line 158 "mcbits/fft_tr.c"
  $2696 = HEAP32[$2695>>2]|0; //@line 158 "mcbits/fft_tr.c"
  $2697 = $3; //@line 158 "mcbits/fft_tr.c"
  $2698 = ((($2697)) + 2784|0); //@line 158 "mcbits/fft_tr.c"
  $2699 = $8; //@line 158 "mcbits/fft_tr.c"
  $2700 = (($2698) + ($2699<<3)|0); //@line 158 "mcbits/fft_tr.c"
  $2701 = $2700; //@line 158 "mcbits/fft_tr.c"
  $2702 = $2701; //@line 158 "mcbits/fft_tr.c"
  $2703 = HEAP32[$2702>>2]|0; //@line 158 "mcbits/fft_tr.c"
  $2704 = (($2701) + 4)|0; //@line 158 "mcbits/fft_tr.c"
  $2705 = $2704; //@line 158 "mcbits/fft_tr.c"
  $2706 = HEAP32[$2705>>2]|0; //@line 158 "mcbits/fft_tr.c"
  $2707 = $2693 ^ $2703; //@line 158 "mcbits/fft_tr.c"
  $2708 = $2696 ^ $2706; //@line 158 "mcbits/fft_tr.c"
  $2709 = ((($10)) + 96|0); //@line 158 "mcbits/fft_tr.c"
  $2710 = $8; //@line 158 "mcbits/fft_tr.c"
  $2711 = (($2709) + ($2710<<3)|0); //@line 158 "mcbits/fft_tr.c"
  $2712 = $2711; //@line 158 "mcbits/fft_tr.c"
  $2713 = $2712; //@line 158 "mcbits/fft_tr.c"
  HEAP32[$2713>>2] = $2707; //@line 158 "mcbits/fft_tr.c"
  $2714 = (($2712) + 4)|0; //@line 158 "mcbits/fft_tr.c"
  $2715 = $2714; //@line 158 "mcbits/fft_tr.c"
  HEAP32[$2715>>2] = $2708; //@line 158 "mcbits/fft_tr.c"
  $2716 = $8; //@line 158 "mcbits/fft_tr.c"
  $2717 = (($2716) + 1)|0; //@line 158 "mcbits/fft_tr.c"
  $8 = $2717; //@line 158 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 158 "mcbits/fft_tr.c"
 while(1) {
  $2718 = $8; //@line 158 "mcbits/fft_tr.c"
  $2719 = ($2718|0)<(12); //@line 158 "mcbits/fft_tr.c"
  if (!($2719)) {
   break;
  }
  $2720 = $3; //@line 158 "mcbits/fft_tr.c"
  $2721 = ((($2720)) + 2976|0); //@line 158 "mcbits/fft_tr.c"
  $2722 = $8; //@line 158 "mcbits/fft_tr.c"
  $2723 = (($2721) + ($2722<<3)|0); //@line 158 "mcbits/fft_tr.c"
  $2724 = $2723; //@line 158 "mcbits/fft_tr.c"
  $2725 = $2724; //@line 158 "mcbits/fft_tr.c"
  $2726 = HEAP32[$2725>>2]|0; //@line 158 "mcbits/fft_tr.c"
  $2727 = (($2724) + 4)|0; //@line 158 "mcbits/fft_tr.c"
  $2728 = $2727; //@line 158 "mcbits/fft_tr.c"
  $2729 = HEAP32[$2728>>2]|0; //@line 158 "mcbits/fft_tr.c"
  $2730 = $3; //@line 158 "mcbits/fft_tr.c"
  $2731 = ((($2730)) + 2784|0); //@line 158 "mcbits/fft_tr.c"
  $2732 = $8; //@line 158 "mcbits/fft_tr.c"
  $2733 = (($2731) + ($2732<<3)|0); //@line 158 "mcbits/fft_tr.c"
  $2734 = $2733; //@line 158 "mcbits/fft_tr.c"
  $2735 = $2734; //@line 158 "mcbits/fft_tr.c"
  $2736 = HEAP32[$2735>>2]|0; //@line 158 "mcbits/fft_tr.c"
  $2737 = (($2734) + 4)|0; //@line 158 "mcbits/fft_tr.c"
  $2738 = $2737; //@line 158 "mcbits/fft_tr.c"
  $2739 = HEAP32[$2738>>2]|0; //@line 158 "mcbits/fft_tr.c"
  $2740 = $2726 ^ $2736; //@line 158 "mcbits/fft_tr.c"
  $2741 = $2729 ^ $2739; //@line 158 "mcbits/fft_tr.c"
  $2742 = $3; //@line 158 "mcbits/fft_tr.c"
  $2743 = ((($2742)) + 2976|0); //@line 158 "mcbits/fft_tr.c"
  $2744 = $8; //@line 158 "mcbits/fft_tr.c"
  $2745 = (($2743) + ($2744<<3)|0); //@line 158 "mcbits/fft_tr.c"
  $2746 = $2745; //@line 158 "mcbits/fft_tr.c"
  $2747 = $2746; //@line 158 "mcbits/fft_tr.c"
  HEAP32[$2747>>2] = $2740; //@line 158 "mcbits/fft_tr.c"
  $2748 = (($2746) + 4)|0; //@line 158 "mcbits/fft_tr.c"
  $2749 = $2748; //@line 158 "mcbits/fft_tr.c"
  HEAP32[$2749>>2] = $2741; //@line 158 "mcbits/fft_tr.c"
  $2750 = $8; //@line 158 "mcbits/fft_tr.c"
  $2751 = (($2750) + 1)|0; //@line 158 "mcbits/fft_tr.c"
  $8 = $2751; //@line 158 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 159 "mcbits/fft_tr.c"
 while(1) {
  $2752 = $8; //@line 159 "mcbits/fft_tr.c"
  $2753 = ($2752|0)<(12); //@line 159 "mcbits/fft_tr.c"
  if (!($2753)) {
   break;
  }
  $2754 = $8; //@line 159 "mcbits/fft_tr.c"
  $2755 = (($10) + ($2754<<3)|0); //@line 159 "mcbits/fft_tr.c"
  $2756 = $2755; //@line 159 "mcbits/fft_tr.c"
  $2757 = $2756; //@line 159 "mcbits/fft_tr.c"
  $2758 = HEAP32[$2757>>2]|0; //@line 159 "mcbits/fft_tr.c"
  $2759 = (($2756) + 4)|0; //@line 159 "mcbits/fft_tr.c"
  $2760 = $2759; //@line 159 "mcbits/fft_tr.c"
  $2761 = HEAP32[$2760>>2]|0; //@line 159 "mcbits/fft_tr.c"
  $2762 = $3; //@line 159 "mcbits/fft_tr.c"
  $2763 = ((($2762)) + 2976|0); //@line 159 "mcbits/fft_tr.c"
  $2764 = $8; //@line 159 "mcbits/fft_tr.c"
  $2765 = (($2763) + ($2764<<3)|0); //@line 159 "mcbits/fft_tr.c"
  $2766 = $2765; //@line 159 "mcbits/fft_tr.c"
  $2767 = $2766; //@line 159 "mcbits/fft_tr.c"
  $2768 = HEAP32[$2767>>2]|0; //@line 159 "mcbits/fft_tr.c"
  $2769 = (($2766) + 4)|0; //@line 159 "mcbits/fft_tr.c"
  $2770 = $2769; //@line 159 "mcbits/fft_tr.c"
  $2771 = HEAP32[$2770>>2]|0; //@line 159 "mcbits/fft_tr.c"
  $2772 = $2758 ^ $2768; //@line 159 "mcbits/fft_tr.c"
  $2773 = $2761 ^ $2771; //@line 159 "mcbits/fft_tr.c"
  $2774 = $8; //@line 159 "mcbits/fft_tr.c"
  $2775 = (($10) + ($2774<<3)|0); //@line 159 "mcbits/fft_tr.c"
  $2776 = $2775; //@line 159 "mcbits/fft_tr.c"
  $2777 = $2776; //@line 159 "mcbits/fft_tr.c"
  HEAP32[$2777>>2] = $2772; //@line 159 "mcbits/fft_tr.c"
  $2778 = (($2776) + 4)|0; //@line 159 "mcbits/fft_tr.c"
  $2779 = $2778; //@line 159 "mcbits/fft_tr.c"
  HEAP32[$2779>>2] = $2773; //@line 159 "mcbits/fft_tr.c"
  $2780 = $8; //@line 159 "mcbits/fft_tr.c"
  $2781 = (($2780) + 1)|0; //@line 159 "mcbits/fft_tr.c"
  $8 = $2781; //@line 159 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 159 "mcbits/fft_tr.c"
 while(1) {
  $2782 = $8; //@line 159 "mcbits/fft_tr.c"
  $2783 = ($2782|0)<(12); //@line 159 "mcbits/fft_tr.c"
  if (!($2783)) {
   break;
  }
  $2784 = $3; //@line 159 "mcbits/fft_tr.c"
  $2785 = ((($2784)) + 2880|0); //@line 159 "mcbits/fft_tr.c"
  $2786 = $8; //@line 159 "mcbits/fft_tr.c"
  $2787 = (($2785) + ($2786<<3)|0); //@line 159 "mcbits/fft_tr.c"
  $2788 = $2787; //@line 159 "mcbits/fft_tr.c"
  $2789 = $2788; //@line 159 "mcbits/fft_tr.c"
  $2790 = HEAP32[$2789>>2]|0; //@line 159 "mcbits/fft_tr.c"
  $2791 = (($2788) + 4)|0; //@line 159 "mcbits/fft_tr.c"
  $2792 = $2791; //@line 159 "mcbits/fft_tr.c"
  $2793 = HEAP32[$2792>>2]|0; //@line 159 "mcbits/fft_tr.c"
  $2794 = $3; //@line 159 "mcbits/fft_tr.c"
  $2795 = ((($2794)) + 2976|0); //@line 159 "mcbits/fft_tr.c"
  $2796 = $8; //@line 159 "mcbits/fft_tr.c"
  $2797 = (($2795) + ($2796<<3)|0); //@line 159 "mcbits/fft_tr.c"
  $2798 = $2797; //@line 159 "mcbits/fft_tr.c"
  $2799 = $2798; //@line 159 "mcbits/fft_tr.c"
  $2800 = HEAP32[$2799>>2]|0; //@line 159 "mcbits/fft_tr.c"
  $2801 = (($2798) + 4)|0; //@line 159 "mcbits/fft_tr.c"
  $2802 = $2801; //@line 159 "mcbits/fft_tr.c"
  $2803 = HEAP32[$2802>>2]|0; //@line 159 "mcbits/fft_tr.c"
  $2804 = $2790 ^ $2800; //@line 159 "mcbits/fft_tr.c"
  $2805 = $2793 ^ $2803; //@line 159 "mcbits/fft_tr.c"
  $2806 = $3; //@line 159 "mcbits/fft_tr.c"
  $2807 = ((($2806)) + 2880|0); //@line 159 "mcbits/fft_tr.c"
  $2808 = $8; //@line 159 "mcbits/fft_tr.c"
  $2809 = (($2807) + ($2808<<3)|0); //@line 159 "mcbits/fft_tr.c"
  $2810 = $2809; //@line 159 "mcbits/fft_tr.c"
  $2811 = $2810; //@line 159 "mcbits/fft_tr.c"
  HEAP32[$2811>>2] = $2804; //@line 159 "mcbits/fft_tr.c"
  $2812 = (($2810) + 4)|0; //@line 159 "mcbits/fft_tr.c"
  $2813 = $2812; //@line 159 "mcbits/fft_tr.c"
  HEAP32[$2813>>2] = $2805; //@line 159 "mcbits/fft_tr.c"
  $2814 = $8; //@line 159 "mcbits/fft_tr.c"
  $2815 = (($2814) + 1)|0; //@line 159 "mcbits/fft_tr.c"
  $8 = $2815; //@line 159 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 160 "mcbits/fft_tr.c"
 while(1) {
  $2816 = $8; //@line 160 "mcbits/fft_tr.c"
  $2817 = ($2816|0)<(12); //@line 160 "mcbits/fft_tr.c"
  if (!($2817)) {
   break;
  }
  $2818 = ((($10)) + 192|0); //@line 160 "mcbits/fft_tr.c"
  $2819 = $8; //@line 160 "mcbits/fft_tr.c"
  $2820 = (($2818) + ($2819<<3)|0); //@line 160 "mcbits/fft_tr.c"
  $2821 = $2820; //@line 160 "mcbits/fft_tr.c"
  $2822 = $2821; //@line 160 "mcbits/fft_tr.c"
  $2823 = HEAP32[$2822>>2]|0; //@line 160 "mcbits/fft_tr.c"
  $2824 = (($2821) + 4)|0; //@line 160 "mcbits/fft_tr.c"
  $2825 = $2824; //@line 160 "mcbits/fft_tr.c"
  $2826 = HEAP32[$2825>>2]|0; //@line 160 "mcbits/fft_tr.c"
  $2827 = $3; //@line 160 "mcbits/fft_tr.c"
  $2828 = ((($2827)) + 2880|0); //@line 160 "mcbits/fft_tr.c"
  $2829 = $8; //@line 160 "mcbits/fft_tr.c"
  $2830 = (($2828) + ($2829<<3)|0); //@line 160 "mcbits/fft_tr.c"
  $2831 = $2830; //@line 160 "mcbits/fft_tr.c"
  $2832 = $2831; //@line 160 "mcbits/fft_tr.c"
  $2833 = HEAP32[$2832>>2]|0; //@line 160 "mcbits/fft_tr.c"
  $2834 = (($2831) + 4)|0; //@line 160 "mcbits/fft_tr.c"
  $2835 = $2834; //@line 160 "mcbits/fft_tr.c"
  $2836 = HEAP32[$2835>>2]|0; //@line 160 "mcbits/fft_tr.c"
  $2837 = $2823 ^ $2833; //@line 160 "mcbits/fft_tr.c"
  $2838 = $2826 ^ $2836; //@line 160 "mcbits/fft_tr.c"
  $2839 = ((($10)) + 192|0); //@line 160 "mcbits/fft_tr.c"
  $2840 = $8; //@line 160 "mcbits/fft_tr.c"
  $2841 = (($2839) + ($2840<<3)|0); //@line 160 "mcbits/fft_tr.c"
  $2842 = $2841; //@line 160 "mcbits/fft_tr.c"
  $2843 = $2842; //@line 160 "mcbits/fft_tr.c"
  HEAP32[$2843>>2] = $2837; //@line 160 "mcbits/fft_tr.c"
  $2844 = (($2842) + 4)|0; //@line 160 "mcbits/fft_tr.c"
  $2845 = $2844; //@line 160 "mcbits/fft_tr.c"
  HEAP32[$2845>>2] = $2838; //@line 160 "mcbits/fft_tr.c"
  $2846 = $8; //@line 160 "mcbits/fft_tr.c"
  $2847 = (($2846) + 1)|0; //@line 160 "mcbits/fft_tr.c"
  $8 = $2847; //@line 160 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 160 "mcbits/fft_tr.c"
 while(1) {
  $2848 = $8; //@line 160 "mcbits/fft_tr.c"
  $2849 = ($2848|0)<(12); //@line 160 "mcbits/fft_tr.c"
  if (!($2849)) {
   break;
  }
  $2850 = $3; //@line 160 "mcbits/fft_tr.c"
  $2851 = ((($2850)) + 2496|0); //@line 160 "mcbits/fft_tr.c"
  $2852 = $8; //@line 160 "mcbits/fft_tr.c"
  $2853 = (($2851) + ($2852<<3)|0); //@line 160 "mcbits/fft_tr.c"
  $2854 = $2853; //@line 160 "mcbits/fft_tr.c"
  $2855 = $2854; //@line 160 "mcbits/fft_tr.c"
  $2856 = HEAP32[$2855>>2]|0; //@line 160 "mcbits/fft_tr.c"
  $2857 = (($2854) + 4)|0; //@line 160 "mcbits/fft_tr.c"
  $2858 = $2857; //@line 160 "mcbits/fft_tr.c"
  $2859 = HEAP32[$2858>>2]|0; //@line 160 "mcbits/fft_tr.c"
  $2860 = $3; //@line 160 "mcbits/fft_tr.c"
  $2861 = ((($2860)) + 2880|0); //@line 160 "mcbits/fft_tr.c"
  $2862 = $8; //@line 160 "mcbits/fft_tr.c"
  $2863 = (($2861) + ($2862<<3)|0); //@line 160 "mcbits/fft_tr.c"
  $2864 = $2863; //@line 160 "mcbits/fft_tr.c"
  $2865 = $2864; //@line 160 "mcbits/fft_tr.c"
  $2866 = HEAP32[$2865>>2]|0; //@line 160 "mcbits/fft_tr.c"
  $2867 = (($2864) + 4)|0; //@line 160 "mcbits/fft_tr.c"
  $2868 = $2867; //@line 160 "mcbits/fft_tr.c"
  $2869 = HEAP32[$2868>>2]|0; //@line 160 "mcbits/fft_tr.c"
  $2870 = $2856 ^ $2866; //@line 160 "mcbits/fft_tr.c"
  $2871 = $2859 ^ $2869; //@line 160 "mcbits/fft_tr.c"
  $2872 = $3; //@line 160 "mcbits/fft_tr.c"
  $2873 = ((($2872)) + 2496|0); //@line 160 "mcbits/fft_tr.c"
  $2874 = $8; //@line 160 "mcbits/fft_tr.c"
  $2875 = (($2873) + ($2874<<3)|0); //@line 160 "mcbits/fft_tr.c"
  $2876 = $2875; //@line 160 "mcbits/fft_tr.c"
  $2877 = $2876; //@line 160 "mcbits/fft_tr.c"
  HEAP32[$2877>>2] = $2870; //@line 160 "mcbits/fft_tr.c"
  $2878 = (($2876) + 4)|0; //@line 160 "mcbits/fft_tr.c"
  $2879 = $2878; //@line 160 "mcbits/fft_tr.c"
  HEAP32[$2879>>2] = $2871; //@line 160 "mcbits/fft_tr.c"
  $2880 = $8; //@line 160 "mcbits/fft_tr.c"
  $2881 = (($2880) + 1)|0; //@line 160 "mcbits/fft_tr.c"
  $8 = $2881; //@line 160 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 161 "mcbits/fft_tr.c"
 while(1) {
  $2882 = $8; //@line 161 "mcbits/fft_tr.c"
  $2883 = ($2882|0)<(12); //@line 161 "mcbits/fft_tr.c"
  if (!($2883)) {
   break;
  }
  $2884 = $8; //@line 161 "mcbits/fft_tr.c"
  $2885 = (($10) + ($2884<<3)|0); //@line 161 "mcbits/fft_tr.c"
  $2886 = $2885; //@line 161 "mcbits/fft_tr.c"
  $2887 = $2886; //@line 161 "mcbits/fft_tr.c"
  $2888 = HEAP32[$2887>>2]|0; //@line 161 "mcbits/fft_tr.c"
  $2889 = (($2886) + 4)|0; //@line 161 "mcbits/fft_tr.c"
  $2890 = $2889; //@line 161 "mcbits/fft_tr.c"
  $2891 = HEAP32[$2890>>2]|0; //@line 161 "mcbits/fft_tr.c"
  $2892 = $3; //@line 161 "mcbits/fft_tr.c"
  $2893 = ((($2892)) + 2496|0); //@line 161 "mcbits/fft_tr.c"
  $2894 = $8; //@line 161 "mcbits/fft_tr.c"
  $2895 = (($2893) + ($2894<<3)|0); //@line 161 "mcbits/fft_tr.c"
  $2896 = $2895; //@line 161 "mcbits/fft_tr.c"
  $2897 = $2896; //@line 161 "mcbits/fft_tr.c"
  $2898 = HEAP32[$2897>>2]|0; //@line 161 "mcbits/fft_tr.c"
  $2899 = (($2896) + 4)|0; //@line 161 "mcbits/fft_tr.c"
  $2900 = $2899; //@line 161 "mcbits/fft_tr.c"
  $2901 = HEAP32[$2900>>2]|0; //@line 161 "mcbits/fft_tr.c"
  $2902 = $2888 ^ $2898; //@line 161 "mcbits/fft_tr.c"
  $2903 = $2891 ^ $2901; //@line 161 "mcbits/fft_tr.c"
  $2904 = $8; //@line 161 "mcbits/fft_tr.c"
  $2905 = (($10) + ($2904<<3)|0); //@line 161 "mcbits/fft_tr.c"
  $2906 = $2905; //@line 161 "mcbits/fft_tr.c"
  $2907 = $2906; //@line 161 "mcbits/fft_tr.c"
  HEAP32[$2907>>2] = $2902; //@line 161 "mcbits/fft_tr.c"
  $2908 = (($2906) + 4)|0; //@line 161 "mcbits/fft_tr.c"
  $2909 = $2908; //@line 161 "mcbits/fft_tr.c"
  HEAP32[$2909>>2] = $2903; //@line 161 "mcbits/fft_tr.c"
  $2910 = $8; //@line 161 "mcbits/fft_tr.c"
  $2911 = (($2910) + 1)|0; //@line 161 "mcbits/fft_tr.c"
  $8 = $2911; //@line 161 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 161 "mcbits/fft_tr.c"
 while(1) {
  $2912 = $8; //@line 161 "mcbits/fft_tr.c"
  $2913 = ($2912|0)<(12); //@line 161 "mcbits/fft_tr.c"
  if (!($2913)) {
   break;
  }
  $2914 = $3; //@line 161 "mcbits/fft_tr.c"
  $2915 = ((($2914)) + 2592|0); //@line 161 "mcbits/fft_tr.c"
  $2916 = $8; //@line 161 "mcbits/fft_tr.c"
  $2917 = (($2915) + ($2916<<3)|0); //@line 161 "mcbits/fft_tr.c"
  $2918 = $2917; //@line 161 "mcbits/fft_tr.c"
  $2919 = $2918; //@line 161 "mcbits/fft_tr.c"
  $2920 = HEAP32[$2919>>2]|0; //@line 161 "mcbits/fft_tr.c"
  $2921 = (($2918) + 4)|0; //@line 161 "mcbits/fft_tr.c"
  $2922 = $2921; //@line 161 "mcbits/fft_tr.c"
  $2923 = HEAP32[$2922>>2]|0; //@line 161 "mcbits/fft_tr.c"
  $2924 = $3; //@line 161 "mcbits/fft_tr.c"
  $2925 = ((($2924)) + 2496|0); //@line 161 "mcbits/fft_tr.c"
  $2926 = $8; //@line 161 "mcbits/fft_tr.c"
  $2927 = (($2925) + ($2926<<3)|0); //@line 161 "mcbits/fft_tr.c"
  $2928 = $2927; //@line 161 "mcbits/fft_tr.c"
  $2929 = $2928; //@line 161 "mcbits/fft_tr.c"
  $2930 = HEAP32[$2929>>2]|0; //@line 161 "mcbits/fft_tr.c"
  $2931 = (($2928) + 4)|0; //@line 161 "mcbits/fft_tr.c"
  $2932 = $2931; //@line 161 "mcbits/fft_tr.c"
  $2933 = HEAP32[$2932>>2]|0; //@line 161 "mcbits/fft_tr.c"
  $2934 = $2920 ^ $2930; //@line 161 "mcbits/fft_tr.c"
  $2935 = $2923 ^ $2933; //@line 161 "mcbits/fft_tr.c"
  $2936 = $3; //@line 161 "mcbits/fft_tr.c"
  $2937 = ((($2936)) + 2592|0); //@line 161 "mcbits/fft_tr.c"
  $2938 = $8; //@line 161 "mcbits/fft_tr.c"
  $2939 = (($2937) + ($2938<<3)|0); //@line 161 "mcbits/fft_tr.c"
  $2940 = $2939; //@line 161 "mcbits/fft_tr.c"
  $2941 = $2940; //@line 161 "mcbits/fft_tr.c"
  HEAP32[$2941>>2] = $2934; //@line 161 "mcbits/fft_tr.c"
  $2942 = (($2940) + 4)|0; //@line 161 "mcbits/fft_tr.c"
  $2943 = $2942; //@line 161 "mcbits/fft_tr.c"
  HEAP32[$2943>>2] = $2935; //@line 161 "mcbits/fft_tr.c"
  $2944 = $8; //@line 161 "mcbits/fft_tr.c"
  $2945 = (($2944) + 1)|0; //@line 161 "mcbits/fft_tr.c"
  $8 = $2945; //@line 161 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 162 "mcbits/fft_tr.c"
 while(1) {
  $2946 = $8; //@line 162 "mcbits/fft_tr.c"
  $2947 = ($2946|0)<(12); //@line 162 "mcbits/fft_tr.c"
  if (!($2947)) {
   break;
  }
  $2948 = ((($10)) + 96|0); //@line 162 "mcbits/fft_tr.c"
  $2949 = $8; //@line 162 "mcbits/fft_tr.c"
  $2950 = (($2948) + ($2949<<3)|0); //@line 162 "mcbits/fft_tr.c"
  $2951 = $2950; //@line 162 "mcbits/fft_tr.c"
  $2952 = $2951; //@line 162 "mcbits/fft_tr.c"
  $2953 = HEAP32[$2952>>2]|0; //@line 162 "mcbits/fft_tr.c"
  $2954 = (($2951) + 4)|0; //@line 162 "mcbits/fft_tr.c"
  $2955 = $2954; //@line 162 "mcbits/fft_tr.c"
  $2956 = HEAP32[$2955>>2]|0; //@line 162 "mcbits/fft_tr.c"
  $2957 = $3; //@line 162 "mcbits/fft_tr.c"
  $2958 = ((($2957)) + 2592|0); //@line 162 "mcbits/fft_tr.c"
  $2959 = $8; //@line 162 "mcbits/fft_tr.c"
  $2960 = (($2958) + ($2959<<3)|0); //@line 162 "mcbits/fft_tr.c"
  $2961 = $2960; //@line 162 "mcbits/fft_tr.c"
  $2962 = $2961; //@line 162 "mcbits/fft_tr.c"
  $2963 = HEAP32[$2962>>2]|0; //@line 162 "mcbits/fft_tr.c"
  $2964 = (($2961) + 4)|0; //@line 162 "mcbits/fft_tr.c"
  $2965 = $2964; //@line 162 "mcbits/fft_tr.c"
  $2966 = HEAP32[$2965>>2]|0; //@line 162 "mcbits/fft_tr.c"
  $2967 = $2953 ^ $2963; //@line 162 "mcbits/fft_tr.c"
  $2968 = $2956 ^ $2966; //@line 162 "mcbits/fft_tr.c"
  $2969 = ((($10)) + 96|0); //@line 162 "mcbits/fft_tr.c"
  $2970 = $8; //@line 162 "mcbits/fft_tr.c"
  $2971 = (($2969) + ($2970<<3)|0); //@line 162 "mcbits/fft_tr.c"
  $2972 = $2971; //@line 162 "mcbits/fft_tr.c"
  $2973 = $2972; //@line 162 "mcbits/fft_tr.c"
  HEAP32[$2973>>2] = $2967; //@line 162 "mcbits/fft_tr.c"
  $2974 = (($2972) + 4)|0; //@line 162 "mcbits/fft_tr.c"
  $2975 = $2974; //@line 162 "mcbits/fft_tr.c"
  HEAP32[$2975>>2] = $2968; //@line 162 "mcbits/fft_tr.c"
  $2976 = $8; //@line 162 "mcbits/fft_tr.c"
  $2977 = (($2976) + 1)|0; //@line 162 "mcbits/fft_tr.c"
  $8 = $2977; //@line 162 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 162 "mcbits/fft_tr.c"
 while(1) {
  $2978 = $8; //@line 162 "mcbits/fft_tr.c"
  $2979 = ($2978|0)<(12); //@line 162 "mcbits/fft_tr.c"
  if (!($2979)) {
   break;
  }
  $2980 = $3; //@line 162 "mcbits/fft_tr.c"
  $2981 = ((($2980)) + 2400|0); //@line 162 "mcbits/fft_tr.c"
  $2982 = $8; //@line 162 "mcbits/fft_tr.c"
  $2983 = (($2981) + ($2982<<3)|0); //@line 162 "mcbits/fft_tr.c"
  $2984 = $2983; //@line 162 "mcbits/fft_tr.c"
  $2985 = $2984; //@line 162 "mcbits/fft_tr.c"
  $2986 = HEAP32[$2985>>2]|0; //@line 162 "mcbits/fft_tr.c"
  $2987 = (($2984) + 4)|0; //@line 162 "mcbits/fft_tr.c"
  $2988 = $2987; //@line 162 "mcbits/fft_tr.c"
  $2989 = HEAP32[$2988>>2]|0; //@line 162 "mcbits/fft_tr.c"
  $2990 = $3; //@line 162 "mcbits/fft_tr.c"
  $2991 = ((($2990)) + 2592|0); //@line 162 "mcbits/fft_tr.c"
  $2992 = $8; //@line 162 "mcbits/fft_tr.c"
  $2993 = (($2991) + ($2992<<3)|0); //@line 162 "mcbits/fft_tr.c"
  $2994 = $2993; //@line 162 "mcbits/fft_tr.c"
  $2995 = $2994; //@line 162 "mcbits/fft_tr.c"
  $2996 = HEAP32[$2995>>2]|0; //@line 162 "mcbits/fft_tr.c"
  $2997 = (($2994) + 4)|0; //@line 162 "mcbits/fft_tr.c"
  $2998 = $2997; //@line 162 "mcbits/fft_tr.c"
  $2999 = HEAP32[$2998>>2]|0; //@line 162 "mcbits/fft_tr.c"
  $3000 = $2986 ^ $2996; //@line 162 "mcbits/fft_tr.c"
  $3001 = $2989 ^ $2999; //@line 162 "mcbits/fft_tr.c"
  $3002 = $3; //@line 162 "mcbits/fft_tr.c"
  $3003 = ((($3002)) + 2400|0); //@line 162 "mcbits/fft_tr.c"
  $3004 = $8; //@line 162 "mcbits/fft_tr.c"
  $3005 = (($3003) + ($3004<<3)|0); //@line 162 "mcbits/fft_tr.c"
  $3006 = $3005; //@line 162 "mcbits/fft_tr.c"
  $3007 = $3006; //@line 162 "mcbits/fft_tr.c"
  HEAP32[$3007>>2] = $3000; //@line 162 "mcbits/fft_tr.c"
  $3008 = (($3006) + 4)|0; //@line 162 "mcbits/fft_tr.c"
  $3009 = $3008; //@line 162 "mcbits/fft_tr.c"
  HEAP32[$3009>>2] = $3001; //@line 162 "mcbits/fft_tr.c"
  $3010 = $8; //@line 162 "mcbits/fft_tr.c"
  $3011 = (($3010) + 1)|0; //@line 162 "mcbits/fft_tr.c"
  $8 = $3011; //@line 162 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 163 "mcbits/fft_tr.c"
 while(1) {
  $3012 = $8; //@line 163 "mcbits/fft_tr.c"
  $3013 = ($3012|0)<(12); //@line 163 "mcbits/fft_tr.c"
  if (!($3013)) {
   break;
  }
  $3014 = $8; //@line 163 "mcbits/fft_tr.c"
  $3015 = (($10) + ($3014<<3)|0); //@line 163 "mcbits/fft_tr.c"
  $3016 = $3015; //@line 163 "mcbits/fft_tr.c"
  $3017 = $3016; //@line 163 "mcbits/fft_tr.c"
  $3018 = HEAP32[$3017>>2]|0; //@line 163 "mcbits/fft_tr.c"
  $3019 = (($3016) + 4)|0; //@line 163 "mcbits/fft_tr.c"
  $3020 = $3019; //@line 163 "mcbits/fft_tr.c"
  $3021 = HEAP32[$3020>>2]|0; //@line 163 "mcbits/fft_tr.c"
  $3022 = $3; //@line 163 "mcbits/fft_tr.c"
  $3023 = ((($3022)) + 2400|0); //@line 163 "mcbits/fft_tr.c"
  $3024 = $8; //@line 163 "mcbits/fft_tr.c"
  $3025 = (($3023) + ($3024<<3)|0); //@line 163 "mcbits/fft_tr.c"
  $3026 = $3025; //@line 163 "mcbits/fft_tr.c"
  $3027 = $3026; //@line 163 "mcbits/fft_tr.c"
  $3028 = HEAP32[$3027>>2]|0; //@line 163 "mcbits/fft_tr.c"
  $3029 = (($3026) + 4)|0; //@line 163 "mcbits/fft_tr.c"
  $3030 = $3029; //@line 163 "mcbits/fft_tr.c"
  $3031 = HEAP32[$3030>>2]|0; //@line 163 "mcbits/fft_tr.c"
  $3032 = $3018 ^ $3028; //@line 163 "mcbits/fft_tr.c"
  $3033 = $3021 ^ $3031; //@line 163 "mcbits/fft_tr.c"
  $3034 = $8; //@line 163 "mcbits/fft_tr.c"
  $3035 = (($10) + ($3034<<3)|0); //@line 163 "mcbits/fft_tr.c"
  $3036 = $3035; //@line 163 "mcbits/fft_tr.c"
  $3037 = $3036; //@line 163 "mcbits/fft_tr.c"
  HEAP32[$3037>>2] = $3032; //@line 163 "mcbits/fft_tr.c"
  $3038 = (($3036) + 4)|0; //@line 163 "mcbits/fft_tr.c"
  $3039 = $3038; //@line 163 "mcbits/fft_tr.c"
  HEAP32[$3039>>2] = $3033; //@line 163 "mcbits/fft_tr.c"
  $3040 = $8; //@line 163 "mcbits/fft_tr.c"
  $3041 = (($3040) + 1)|0; //@line 163 "mcbits/fft_tr.c"
  $8 = $3041; //@line 163 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 163 "mcbits/fft_tr.c"
 while(1) {
  $3042 = $8; //@line 163 "mcbits/fft_tr.c"
  $3043 = ($3042|0)<(12); //@line 163 "mcbits/fft_tr.c"
  if (!($3043)) {
   break;
  }
  $3044 = $3; //@line 163 "mcbits/fft_tr.c"
  $3045 = ((($3044)) + 2304|0); //@line 163 "mcbits/fft_tr.c"
  $3046 = $8; //@line 163 "mcbits/fft_tr.c"
  $3047 = (($3045) + ($3046<<3)|0); //@line 163 "mcbits/fft_tr.c"
  $3048 = $3047; //@line 163 "mcbits/fft_tr.c"
  $3049 = $3048; //@line 163 "mcbits/fft_tr.c"
  $3050 = HEAP32[$3049>>2]|0; //@line 163 "mcbits/fft_tr.c"
  $3051 = (($3048) + 4)|0; //@line 163 "mcbits/fft_tr.c"
  $3052 = $3051; //@line 163 "mcbits/fft_tr.c"
  $3053 = HEAP32[$3052>>2]|0; //@line 163 "mcbits/fft_tr.c"
  $3054 = $3; //@line 163 "mcbits/fft_tr.c"
  $3055 = ((($3054)) + 2400|0); //@line 163 "mcbits/fft_tr.c"
  $3056 = $8; //@line 163 "mcbits/fft_tr.c"
  $3057 = (($3055) + ($3056<<3)|0); //@line 163 "mcbits/fft_tr.c"
  $3058 = $3057; //@line 163 "mcbits/fft_tr.c"
  $3059 = $3058; //@line 163 "mcbits/fft_tr.c"
  $3060 = HEAP32[$3059>>2]|0; //@line 163 "mcbits/fft_tr.c"
  $3061 = (($3058) + 4)|0; //@line 163 "mcbits/fft_tr.c"
  $3062 = $3061; //@line 163 "mcbits/fft_tr.c"
  $3063 = HEAP32[$3062>>2]|0; //@line 163 "mcbits/fft_tr.c"
  $3064 = $3050 ^ $3060; //@line 163 "mcbits/fft_tr.c"
  $3065 = $3053 ^ $3063; //@line 163 "mcbits/fft_tr.c"
  $3066 = $3; //@line 163 "mcbits/fft_tr.c"
  $3067 = ((($3066)) + 2304|0); //@line 163 "mcbits/fft_tr.c"
  $3068 = $8; //@line 163 "mcbits/fft_tr.c"
  $3069 = (($3067) + ($3068<<3)|0); //@line 163 "mcbits/fft_tr.c"
  $3070 = $3069; //@line 163 "mcbits/fft_tr.c"
  $3071 = $3070; //@line 163 "mcbits/fft_tr.c"
  HEAP32[$3071>>2] = $3064; //@line 163 "mcbits/fft_tr.c"
  $3072 = (($3070) + 4)|0; //@line 163 "mcbits/fft_tr.c"
  $3073 = $3072; //@line 163 "mcbits/fft_tr.c"
  HEAP32[$3073>>2] = $3065; //@line 163 "mcbits/fft_tr.c"
  $3074 = $8; //@line 163 "mcbits/fft_tr.c"
  $3075 = (($3074) + 1)|0; //@line 163 "mcbits/fft_tr.c"
  $8 = $3075; //@line 163 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 164 "mcbits/fft_tr.c"
 while(1) {
  $3076 = $8; //@line 164 "mcbits/fft_tr.c"
  $3077 = ($3076|0)<(12); //@line 164 "mcbits/fft_tr.c"
  if (!($3077)) {
   break;
  }
  $3078 = ((($10)) + 384|0); //@line 164 "mcbits/fft_tr.c"
  $3079 = $8; //@line 164 "mcbits/fft_tr.c"
  $3080 = (($3078) + ($3079<<3)|0); //@line 164 "mcbits/fft_tr.c"
  $3081 = $3080; //@line 164 "mcbits/fft_tr.c"
  $3082 = $3081; //@line 164 "mcbits/fft_tr.c"
  $3083 = HEAP32[$3082>>2]|0; //@line 164 "mcbits/fft_tr.c"
  $3084 = (($3081) + 4)|0; //@line 164 "mcbits/fft_tr.c"
  $3085 = $3084; //@line 164 "mcbits/fft_tr.c"
  $3086 = HEAP32[$3085>>2]|0; //@line 164 "mcbits/fft_tr.c"
  $3087 = $3; //@line 164 "mcbits/fft_tr.c"
  $3088 = ((($3087)) + 2304|0); //@line 164 "mcbits/fft_tr.c"
  $3089 = $8; //@line 164 "mcbits/fft_tr.c"
  $3090 = (($3088) + ($3089<<3)|0); //@line 164 "mcbits/fft_tr.c"
  $3091 = $3090; //@line 164 "mcbits/fft_tr.c"
  $3092 = $3091; //@line 164 "mcbits/fft_tr.c"
  $3093 = HEAP32[$3092>>2]|0; //@line 164 "mcbits/fft_tr.c"
  $3094 = (($3091) + 4)|0; //@line 164 "mcbits/fft_tr.c"
  $3095 = $3094; //@line 164 "mcbits/fft_tr.c"
  $3096 = HEAP32[$3095>>2]|0; //@line 164 "mcbits/fft_tr.c"
  $3097 = $3083 ^ $3093; //@line 164 "mcbits/fft_tr.c"
  $3098 = $3086 ^ $3096; //@line 164 "mcbits/fft_tr.c"
  $3099 = ((($10)) + 384|0); //@line 164 "mcbits/fft_tr.c"
  $3100 = $8; //@line 164 "mcbits/fft_tr.c"
  $3101 = (($3099) + ($3100<<3)|0); //@line 164 "mcbits/fft_tr.c"
  $3102 = $3101; //@line 164 "mcbits/fft_tr.c"
  $3103 = $3102; //@line 164 "mcbits/fft_tr.c"
  HEAP32[$3103>>2] = $3097; //@line 164 "mcbits/fft_tr.c"
  $3104 = (($3102) + 4)|0; //@line 164 "mcbits/fft_tr.c"
  $3105 = $3104; //@line 164 "mcbits/fft_tr.c"
  HEAP32[$3105>>2] = $3098; //@line 164 "mcbits/fft_tr.c"
  $3106 = $8; //@line 164 "mcbits/fft_tr.c"
  $3107 = (($3106) + 1)|0; //@line 164 "mcbits/fft_tr.c"
  $8 = $3107; //@line 164 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 164 "mcbits/fft_tr.c"
 while(1) {
  $3108 = $8; //@line 164 "mcbits/fft_tr.c"
  $3109 = ($3108|0)<(12); //@line 164 "mcbits/fft_tr.c"
  if (!($3109)) {
   break;
  }
  $3110 = $3; //@line 164 "mcbits/fft_tr.c"
  $3111 = ((($3110)) + 768|0); //@line 164 "mcbits/fft_tr.c"
  $3112 = $8; //@line 164 "mcbits/fft_tr.c"
  $3113 = (($3111) + ($3112<<3)|0); //@line 164 "mcbits/fft_tr.c"
  $3114 = $3113; //@line 164 "mcbits/fft_tr.c"
  $3115 = $3114; //@line 164 "mcbits/fft_tr.c"
  $3116 = HEAP32[$3115>>2]|0; //@line 164 "mcbits/fft_tr.c"
  $3117 = (($3114) + 4)|0; //@line 164 "mcbits/fft_tr.c"
  $3118 = $3117; //@line 164 "mcbits/fft_tr.c"
  $3119 = HEAP32[$3118>>2]|0; //@line 164 "mcbits/fft_tr.c"
  $3120 = $3; //@line 164 "mcbits/fft_tr.c"
  $3121 = ((($3120)) + 2304|0); //@line 164 "mcbits/fft_tr.c"
  $3122 = $8; //@line 164 "mcbits/fft_tr.c"
  $3123 = (($3121) + ($3122<<3)|0); //@line 164 "mcbits/fft_tr.c"
  $3124 = $3123; //@line 164 "mcbits/fft_tr.c"
  $3125 = $3124; //@line 164 "mcbits/fft_tr.c"
  $3126 = HEAP32[$3125>>2]|0; //@line 164 "mcbits/fft_tr.c"
  $3127 = (($3124) + 4)|0; //@line 164 "mcbits/fft_tr.c"
  $3128 = $3127; //@line 164 "mcbits/fft_tr.c"
  $3129 = HEAP32[$3128>>2]|0; //@line 164 "mcbits/fft_tr.c"
  $3130 = $3116 ^ $3126; //@line 164 "mcbits/fft_tr.c"
  $3131 = $3119 ^ $3129; //@line 164 "mcbits/fft_tr.c"
  $3132 = $3; //@line 164 "mcbits/fft_tr.c"
  $3133 = ((($3132)) + 768|0); //@line 164 "mcbits/fft_tr.c"
  $3134 = $8; //@line 164 "mcbits/fft_tr.c"
  $3135 = (($3133) + ($3134<<3)|0); //@line 164 "mcbits/fft_tr.c"
  $3136 = $3135; //@line 164 "mcbits/fft_tr.c"
  $3137 = $3136; //@line 164 "mcbits/fft_tr.c"
  HEAP32[$3137>>2] = $3130; //@line 164 "mcbits/fft_tr.c"
  $3138 = (($3136) + 4)|0; //@line 164 "mcbits/fft_tr.c"
  $3139 = $3138; //@line 164 "mcbits/fft_tr.c"
  HEAP32[$3139>>2] = $3131; //@line 164 "mcbits/fft_tr.c"
  $3140 = $8; //@line 164 "mcbits/fft_tr.c"
  $3141 = (($3140) + 1)|0; //@line 164 "mcbits/fft_tr.c"
  $8 = $3141; //@line 164 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 165 "mcbits/fft_tr.c"
 while(1) {
  $3142 = $8; //@line 165 "mcbits/fft_tr.c"
  $3143 = ($3142|0)<(12); //@line 165 "mcbits/fft_tr.c"
  if (!($3143)) {
   break;
  }
  $3144 = $8; //@line 165 "mcbits/fft_tr.c"
  $3145 = (($10) + ($3144<<3)|0); //@line 165 "mcbits/fft_tr.c"
  $3146 = $3145; //@line 165 "mcbits/fft_tr.c"
  $3147 = $3146; //@line 165 "mcbits/fft_tr.c"
  $3148 = HEAP32[$3147>>2]|0; //@line 165 "mcbits/fft_tr.c"
  $3149 = (($3146) + 4)|0; //@line 165 "mcbits/fft_tr.c"
  $3150 = $3149; //@line 165 "mcbits/fft_tr.c"
  $3151 = HEAP32[$3150>>2]|0; //@line 165 "mcbits/fft_tr.c"
  $3152 = $3; //@line 165 "mcbits/fft_tr.c"
  $3153 = ((($3152)) + 768|0); //@line 165 "mcbits/fft_tr.c"
  $3154 = $8; //@line 165 "mcbits/fft_tr.c"
  $3155 = (($3153) + ($3154<<3)|0); //@line 165 "mcbits/fft_tr.c"
  $3156 = $3155; //@line 165 "mcbits/fft_tr.c"
  $3157 = $3156; //@line 165 "mcbits/fft_tr.c"
  $3158 = HEAP32[$3157>>2]|0; //@line 165 "mcbits/fft_tr.c"
  $3159 = (($3156) + 4)|0; //@line 165 "mcbits/fft_tr.c"
  $3160 = $3159; //@line 165 "mcbits/fft_tr.c"
  $3161 = HEAP32[$3160>>2]|0; //@line 165 "mcbits/fft_tr.c"
  $3162 = $3148 ^ $3158; //@line 165 "mcbits/fft_tr.c"
  $3163 = $3151 ^ $3161; //@line 165 "mcbits/fft_tr.c"
  $3164 = $8; //@line 165 "mcbits/fft_tr.c"
  $3165 = (($10) + ($3164<<3)|0); //@line 165 "mcbits/fft_tr.c"
  $3166 = $3165; //@line 165 "mcbits/fft_tr.c"
  $3167 = $3166; //@line 165 "mcbits/fft_tr.c"
  HEAP32[$3167>>2] = $3162; //@line 165 "mcbits/fft_tr.c"
  $3168 = (($3166) + 4)|0; //@line 165 "mcbits/fft_tr.c"
  $3169 = $3168; //@line 165 "mcbits/fft_tr.c"
  HEAP32[$3169>>2] = $3163; //@line 165 "mcbits/fft_tr.c"
  $3170 = $8; //@line 165 "mcbits/fft_tr.c"
  $3171 = (($3170) + 1)|0; //@line 165 "mcbits/fft_tr.c"
  $8 = $3171; //@line 165 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 165 "mcbits/fft_tr.c"
 while(1) {
  $3172 = $8; //@line 165 "mcbits/fft_tr.c"
  $3173 = ($3172|0)<(12); //@line 165 "mcbits/fft_tr.c"
  if (!($3173)) {
   break;
  }
  $3174 = $3; //@line 165 "mcbits/fft_tr.c"
  $3175 = ((($3174)) + 864|0); //@line 165 "mcbits/fft_tr.c"
  $3176 = $8; //@line 165 "mcbits/fft_tr.c"
  $3177 = (($3175) + ($3176<<3)|0); //@line 165 "mcbits/fft_tr.c"
  $3178 = $3177; //@line 165 "mcbits/fft_tr.c"
  $3179 = $3178; //@line 165 "mcbits/fft_tr.c"
  $3180 = HEAP32[$3179>>2]|0; //@line 165 "mcbits/fft_tr.c"
  $3181 = (($3178) + 4)|0; //@line 165 "mcbits/fft_tr.c"
  $3182 = $3181; //@line 165 "mcbits/fft_tr.c"
  $3183 = HEAP32[$3182>>2]|0; //@line 165 "mcbits/fft_tr.c"
  $3184 = $3; //@line 165 "mcbits/fft_tr.c"
  $3185 = ((($3184)) + 768|0); //@line 165 "mcbits/fft_tr.c"
  $3186 = $8; //@line 165 "mcbits/fft_tr.c"
  $3187 = (($3185) + ($3186<<3)|0); //@line 165 "mcbits/fft_tr.c"
  $3188 = $3187; //@line 165 "mcbits/fft_tr.c"
  $3189 = $3188; //@line 165 "mcbits/fft_tr.c"
  $3190 = HEAP32[$3189>>2]|0; //@line 165 "mcbits/fft_tr.c"
  $3191 = (($3188) + 4)|0; //@line 165 "mcbits/fft_tr.c"
  $3192 = $3191; //@line 165 "mcbits/fft_tr.c"
  $3193 = HEAP32[$3192>>2]|0; //@line 165 "mcbits/fft_tr.c"
  $3194 = $3180 ^ $3190; //@line 165 "mcbits/fft_tr.c"
  $3195 = $3183 ^ $3193; //@line 165 "mcbits/fft_tr.c"
  $3196 = $3; //@line 165 "mcbits/fft_tr.c"
  $3197 = ((($3196)) + 864|0); //@line 165 "mcbits/fft_tr.c"
  $3198 = $8; //@line 165 "mcbits/fft_tr.c"
  $3199 = (($3197) + ($3198<<3)|0); //@line 165 "mcbits/fft_tr.c"
  $3200 = $3199; //@line 165 "mcbits/fft_tr.c"
  $3201 = $3200; //@line 165 "mcbits/fft_tr.c"
  HEAP32[$3201>>2] = $3194; //@line 165 "mcbits/fft_tr.c"
  $3202 = (($3200) + 4)|0; //@line 165 "mcbits/fft_tr.c"
  $3203 = $3202; //@line 165 "mcbits/fft_tr.c"
  HEAP32[$3203>>2] = $3195; //@line 165 "mcbits/fft_tr.c"
  $3204 = $8; //@line 165 "mcbits/fft_tr.c"
  $3205 = (($3204) + 1)|0; //@line 165 "mcbits/fft_tr.c"
  $8 = $3205; //@line 165 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 166 "mcbits/fft_tr.c"
 while(1) {
  $3206 = $8; //@line 166 "mcbits/fft_tr.c"
  $3207 = ($3206|0)<(12); //@line 166 "mcbits/fft_tr.c"
  if (!($3207)) {
   break;
  }
  $3208 = ((($10)) + 96|0); //@line 166 "mcbits/fft_tr.c"
  $3209 = $8; //@line 166 "mcbits/fft_tr.c"
  $3210 = (($3208) + ($3209<<3)|0); //@line 166 "mcbits/fft_tr.c"
  $3211 = $3210; //@line 166 "mcbits/fft_tr.c"
  $3212 = $3211; //@line 166 "mcbits/fft_tr.c"
  $3213 = HEAP32[$3212>>2]|0; //@line 166 "mcbits/fft_tr.c"
  $3214 = (($3211) + 4)|0; //@line 166 "mcbits/fft_tr.c"
  $3215 = $3214; //@line 166 "mcbits/fft_tr.c"
  $3216 = HEAP32[$3215>>2]|0; //@line 166 "mcbits/fft_tr.c"
  $3217 = $3; //@line 166 "mcbits/fft_tr.c"
  $3218 = ((($3217)) + 864|0); //@line 166 "mcbits/fft_tr.c"
  $3219 = $8; //@line 166 "mcbits/fft_tr.c"
  $3220 = (($3218) + ($3219<<3)|0); //@line 166 "mcbits/fft_tr.c"
  $3221 = $3220; //@line 166 "mcbits/fft_tr.c"
  $3222 = $3221; //@line 166 "mcbits/fft_tr.c"
  $3223 = HEAP32[$3222>>2]|0; //@line 166 "mcbits/fft_tr.c"
  $3224 = (($3221) + 4)|0; //@line 166 "mcbits/fft_tr.c"
  $3225 = $3224; //@line 166 "mcbits/fft_tr.c"
  $3226 = HEAP32[$3225>>2]|0; //@line 166 "mcbits/fft_tr.c"
  $3227 = $3213 ^ $3223; //@line 166 "mcbits/fft_tr.c"
  $3228 = $3216 ^ $3226; //@line 166 "mcbits/fft_tr.c"
  $3229 = ((($10)) + 96|0); //@line 166 "mcbits/fft_tr.c"
  $3230 = $8; //@line 166 "mcbits/fft_tr.c"
  $3231 = (($3229) + ($3230<<3)|0); //@line 166 "mcbits/fft_tr.c"
  $3232 = $3231; //@line 166 "mcbits/fft_tr.c"
  $3233 = $3232; //@line 166 "mcbits/fft_tr.c"
  HEAP32[$3233>>2] = $3227; //@line 166 "mcbits/fft_tr.c"
  $3234 = (($3232) + 4)|0; //@line 166 "mcbits/fft_tr.c"
  $3235 = $3234; //@line 166 "mcbits/fft_tr.c"
  HEAP32[$3235>>2] = $3228; //@line 166 "mcbits/fft_tr.c"
  $3236 = $8; //@line 166 "mcbits/fft_tr.c"
  $3237 = (($3236) + 1)|0; //@line 166 "mcbits/fft_tr.c"
  $8 = $3237; //@line 166 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 166 "mcbits/fft_tr.c"
 while(1) {
  $3238 = $8; //@line 166 "mcbits/fft_tr.c"
  $3239 = ($3238|0)<(12); //@line 166 "mcbits/fft_tr.c"
  if (!($3239)) {
   break;
  }
  $3240 = $3; //@line 166 "mcbits/fft_tr.c"
  $3241 = ((($3240)) + 1056|0); //@line 166 "mcbits/fft_tr.c"
  $3242 = $8; //@line 166 "mcbits/fft_tr.c"
  $3243 = (($3241) + ($3242<<3)|0); //@line 166 "mcbits/fft_tr.c"
  $3244 = $3243; //@line 166 "mcbits/fft_tr.c"
  $3245 = $3244; //@line 166 "mcbits/fft_tr.c"
  $3246 = HEAP32[$3245>>2]|0; //@line 166 "mcbits/fft_tr.c"
  $3247 = (($3244) + 4)|0; //@line 166 "mcbits/fft_tr.c"
  $3248 = $3247; //@line 166 "mcbits/fft_tr.c"
  $3249 = HEAP32[$3248>>2]|0; //@line 166 "mcbits/fft_tr.c"
  $3250 = $3; //@line 166 "mcbits/fft_tr.c"
  $3251 = ((($3250)) + 864|0); //@line 166 "mcbits/fft_tr.c"
  $3252 = $8; //@line 166 "mcbits/fft_tr.c"
  $3253 = (($3251) + ($3252<<3)|0); //@line 166 "mcbits/fft_tr.c"
  $3254 = $3253; //@line 166 "mcbits/fft_tr.c"
  $3255 = $3254; //@line 166 "mcbits/fft_tr.c"
  $3256 = HEAP32[$3255>>2]|0; //@line 166 "mcbits/fft_tr.c"
  $3257 = (($3254) + 4)|0; //@line 166 "mcbits/fft_tr.c"
  $3258 = $3257; //@line 166 "mcbits/fft_tr.c"
  $3259 = HEAP32[$3258>>2]|0; //@line 166 "mcbits/fft_tr.c"
  $3260 = $3246 ^ $3256; //@line 166 "mcbits/fft_tr.c"
  $3261 = $3249 ^ $3259; //@line 166 "mcbits/fft_tr.c"
  $3262 = $3; //@line 166 "mcbits/fft_tr.c"
  $3263 = ((($3262)) + 1056|0); //@line 166 "mcbits/fft_tr.c"
  $3264 = $8; //@line 166 "mcbits/fft_tr.c"
  $3265 = (($3263) + ($3264<<3)|0); //@line 166 "mcbits/fft_tr.c"
  $3266 = $3265; //@line 166 "mcbits/fft_tr.c"
  $3267 = $3266; //@line 166 "mcbits/fft_tr.c"
  HEAP32[$3267>>2] = $3260; //@line 166 "mcbits/fft_tr.c"
  $3268 = (($3266) + 4)|0; //@line 166 "mcbits/fft_tr.c"
  $3269 = $3268; //@line 166 "mcbits/fft_tr.c"
  HEAP32[$3269>>2] = $3261; //@line 166 "mcbits/fft_tr.c"
  $3270 = $8; //@line 166 "mcbits/fft_tr.c"
  $3271 = (($3270) + 1)|0; //@line 166 "mcbits/fft_tr.c"
  $8 = $3271; //@line 166 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 167 "mcbits/fft_tr.c"
 while(1) {
  $3272 = $8; //@line 167 "mcbits/fft_tr.c"
  $3273 = ($3272|0)<(12); //@line 167 "mcbits/fft_tr.c"
  if (!($3273)) {
   break;
  }
  $3274 = $8; //@line 167 "mcbits/fft_tr.c"
  $3275 = (($10) + ($3274<<3)|0); //@line 167 "mcbits/fft_tr.c"
  $3276 = $3275; //@line 167 "mcbits/fft_tr.c"
  $3277 = $3276; //@line 167 "mcbits/fft_tr.c"
  $3278 = HEAP32[$3277>>2]|0; //@line 167 "mcbits/fft_tr.c"
  $3279 = (($3276) + 4)|0; //@line 167 "mcbits/fft_tr.c"
  $3280 = $3279; //@line 167 "mcbits/fft_tr.c"
  $3281 = HEAP32[$3280>>2]|0; //@line 167 "mcbits/fft_tr.c"
  $3282 = $3; //@line 167 "mcbits/fft_tr.c"
  $3283 = ((($3282)) + 1056|0); //@line 167 "mcbits/fft_tr.c"
  $3284 = $8; //@line 167 "mcbits/fft_tr.c"
  $3285 = (($3283) + ($3284<<3)|0); //@line 167 "mcbits/fft_tr.c"
  $3286 = $3285; //@line 167 "mcbits/fft_tr.c"
  $3287 = $3286; //@line 167 "mcbits/fft_tr.c"
  $3288 = HEAP32[$3287>>2]|0; //@line 167 "mcbits/fft_tr.c"
  $3289 = (($3286) + 4)|0; //@line 167 "mcbits/fft_tr.c"
  $3290 = $3289; //@line 167 "mcbits/fft_tr.c"
  $3291 = HEAP32[$3290>>2]|0; //@line 167 "mcbits/fft_tr.c"
  $3292 = $3278 ^ $3288; //@line 167 "mcbits/fft_tr.c"
  $3293 = $3281 ^ $3291; //@line 167 "mcbits/fft_tr.c"
  $3294 = $8; //@line 167 "mcbits/fft_tr.c"
  $3295 = (($10) + ($3294<<3)|0); //@line 167 "mcbits/fft_tr.c"
  $3296 = $3295; //@line 167 "mcbits/fft_tr.c"
  $3297 = $3296; //@line 167 "mcbits/fft_tr.c"
  HEAP32[$3297>>2] = $3292; //@line 167 "mcbits/fft_tr.c"
  $3298 = (($3296) + 4)|0; //@line 167 "mcbits/fft_tr.c"
  $3299 = $3298; //@line 167 "mcbits/fft_tr.c"
  HEAP32[$3299>>2] = $3293; //@line 167 "mcbits/fft_tr.c"
  $3300 = $8; //@line 167 "mcbits/fft_tr.c"
  $3301 = (($3300) + 1)|0; //@line 167 "mcbits/fft_tr.c"
  $8 = $3301; //@line 167 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 167 "mcbits/fft_tr.c"
 while(1) {
  $3302 = $8; //@line 167 "mcbits/fft_tr.c"
  $3303 = ($3302|0)<(12); //@line 167 "mcbits/fft_tr.c"
  if (!($3303)) {
   break;
  }
  $3304 = $3; //@line 167 "mcbits/fft_tr.c"
  $3305 = ((($3304)) + 960|0); //@line 167 "mcbits/fft_tr.c"
  $3306 = $8; //@line 167 "mcbits/fft_tr.c"
  $3307 = (($3305) + ($3306<<3)|0); //@line 167 "mcbits/fft_tr.c"
  $3308 = $3307; //@line 167 "mcbits/fft_tr.c"
  $3309 = $3308; //@line 167 "mcbits/fft_tr.c"
  $3310 = HEAP32[$3309>>2]|0; //@line 167 "mcbits/fft_tr.c"
  $3311 = (($3308) + 4)|0; //@line 167 "mcbits/fft_tr.c"
  $3312 = $3311; //@line 167 "mcbits/fft_tr.c"
  $3313 = HEAP32[$3312>>2]|0; //@line 167 "mcbits/fft_tr.c"
  $3314 = $3; //@line 167 "mcbits/fft_tr.c"
  $3315 = ((($3314)) + 1056|0); //@line 167 "mcbits/fft_tr.c"
  $3316 = $8; //@line 167 "mcbits/fft_tr.c"
  $3317 = (($3315) + ($3316<<3)|0); //@line 167 "mcbits/fft_tr.c"
  $3318 = $3317; //@line 167 "mcbits/fft_tr.c"
  $3319 = $3318; //@line 167 "mcbits/fft_tr.c"
  $3320 = HEAP32[$3319>>2]|0; //@line 167 "mcbits/fft_tr.c"
  $3321 = (($3318) + 4)|0; //@line 167 "mcbits/fft_tr.c"
  $3322 = $3321; //@line 167 "mcbits/fft_tr.c"
  $3323 = HEAP32[$3322>>2]|0; //@line 167 "mcbits/fft_tr.c"
  $3324 = $3310 ^ $3320; //@line 167 "mcbits/fft_tr.c"
  $3325 = $3313 ^ $3323; //@line 167 "mcbits/fft_tr.c"
  $3326 = $3; //@line 167 "mcbits/fft_tr.c"
  $3327 = ((($3326)) + 960|0); //@line 167 "mcbits/fft_tr.c"
  $3328 = $8; //@line 167 "mcbits/fft_tr.c"
  $3329 = (($3327) + ($3328<<3)|0); //@line 167 "mcbits/fft_tr.c"
  $3330 = $3329; //@line 167 "mcbits/fft_tr.c"
  $3331 = $3330; //@line 167 "mcbits/fft_tr.c"
  HEAP32[$3331>>2] = $3324; //@line 167 "mcbits/fft_tr.c"
  $3332 = (($3330) + 4)|0; //@line 167 "mcbits/fft_tr.c"
  $3333 = $3332; //@line 167 "mcbits/fft_tr.c"
  HEAP32[$3333>>2] = $3325; //@line 167 "mcbits/fft_tr.c"
  $3334 = $8; //@line 167 "mcbits/fft_tr.c"
  $3335 = (($3334) + 1)|0; //@line 167 "mcbits/fft_tr.c"
  $8 = $3335; //@line 167 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 168 "mcbits/fft_tr.c"
 while(1) {
  $3336 = $8; //@line 168 "mcbits/fft_tr.c"
  $3337 = ($3336|0)<(12); //@line 168 "mcbits/fft_tr.c"
  if (!($3337)) {
   break;
  }
  $3338 = ((($10)) + 192|0); //@line 168 "mcbits/fft_tr.c"
  $3339 = $8; //@line 168 "mcbits/fft_tr.c"
  $3340 = (($3338) + ($3339<<3)|0); //@line 168 "mcbits/fft_tr.c"
  $3341 = $3340; //@line 168 "mcbits/fft_tr.c"
  $3342 = $3341; //@line 168 "mcbits/fft_tr.c"
  $3343 = HEAP32[$3342>>2]|0; //@line 168 "mcbits/fft_tr.c"
  $3344 = (($3341) + 4)|0; //@line 168 "mcbits/fft_tr.c"
  $3345 = $3344; //@line 168 "mcbits/fft_tr.c"
  $3346 = HEAP32[$3345>>2]|0; //@line 168 "mcbits/fft_tr.c"
  $3347 = $3; //@line 168 "mcbits/fft_tr.c"
  $3348 = ((($3347)) + 960|0); //@line 168 "mcbits/fft_tr.c"
  $3349 = $8; //@line 168 "mcbits/fft_tr.c"
  $3350 = (($3348) + ($3349<<3)|0); //@line 168 "mcbits/fft_tr.c"
  $3351 = $3350; //@line 168 "mcbits/fft_tr.c"
  $3352 = $3351; //@line 168 "mcbits/fft_tr.c"
  $3353 = HEAP32[$3352>>2]|0; //@line 168 "mcbits/fft_tr.c"
  $3354 = (($3351) + 4)|0; //@line 168 "mcbits/fft_tr.c"
  $3355 = $3354; //@line 168 "mcbits/fft_tr.c"
  $3356 = HEAP32[$3355>>2]|0; //@line 168 "mcbits/fft_tr.c"
  $3357 = $3343 ^ $3353; //@line 168 "mcbits/fft_tr.c"
  $3358 = $3346 ^ $3356; //@line 168 "mcbits/fft_tr.c"
  $3359 = ((($10)) + 192|0); //@line 168 "mcbits/fft_tr.c"
  $3360 = $8; //@line 168 "mcbits/fft_tr.c"
  $3361 = (($3359) + ($3360<<3)|0); //@line 168 "mcbits/fft_tr.c"
  $3362 = $3361; //@line 168 "mcbits/fft_tr.c"
  $3363 = $3362; //@line 168 "mcbits/fft_tr.c"
  HEAP32[$3363>>2] = $3357; //@line 168 "mcbits/fft_tr.c"
  $3364 = (($3362) + 4)|0; //@line 168 "mcbits/fft_tr.c"
  $3365 = $3364; //@line 168 "mcbits/fft_tr.c"
  HEAP32[$3365>>2] = $3358; //@line 168 "mcbits/fft_tr.c"
  $3366 = $8; //@line 168 "mcbits/fft_tr.c"
  $3367 = (($3366) + 1)|0; //@line 168 "mcbits/fft_tr.c"
  $8 = $3367; //@line 168 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 168 "mcbits/fft_tr.c"
 while(1) {
  $3368 = $8; //@line 168 "mcbits/fft_tr.c"
  $3369 = ($3368|0)<(12); //@line 168 "mcbits/fft_tr.c"
  if (!($3369)) {
   break;
  }
  $3370 = $3; //@line 168 "mcbits/fft_tr.c"
  $3371 = ((($3370)) + 1344|0); //@line 168 "mcbits/fft_tr.c"
  $3372 = $8; //@line 168 "mcbits/fft_tr.c"
  $3373 = (($3371) + ($3372<<3)|0); //@line 168 "mcbits/fft_tr.c"
  $3374 = $3373; //@line 168 "mcbits/fft_tr.c"
  $3375 = $3374; //@line 168 "mcbits/fft_tr.c"
  $3376 = HEAP32[$3375>>2]|0; //@line 168 "mcbits/fft_tr.c"
  $3377 = (($3374) + 4)|0; //@line 168 "mcbits/fft_tr.c"
  $3378 = $3377; //@line 168 "mcbits/fft_tr.c"
  $3379 = HEAP32[$3378>>2]|0; //@line 168 "mcbits/fft_tr.c"
  $3380 = $3; //@line 168 "mcbits/fft_tr.c"
  $3381 = ((($3380)) + 960|0); //@line 168 "mcbits/fft_tr.c"
  $3382 = $8; //@line 168 "mcbits/fft_tr.c"
  $3383 = (($3381) + ($3382<<3)|0); //@line 168 "mcbits/fft_tr.c"
  $3384 = $3383; //@line 168 "mcbits/fft_tr.c"
  $3385 = $3384; //@line 168 "mcbits/fft_tr.c"
  $3386 = HEAP32[$3385>>2]|0; //@line 168 "mcbits/fft_tr.c"
  $3387 = (($3384) + 4)|0; //@line 168 "mcbits/fft_tr.c"
  $3388 = $3387; //@line 168 "mcbits/fft_tr.c"
  $3389 = HEAP32[$3388>>2]|0; //@line 168 "mcbits/fft_tr.c"
  $3390 = $3376 ^ $3386; //@line 168 "mcbits/fft_tr.c"
  $3391 = $3379 ^ $3389; //@line 168 "mcbits/fft_tr.c"
  $3392 = $3; //@line 168 "mcbits/fft_tr.c"
  $3393 = ((($3392)) + 1344|0); //@line 168 "mcbits/fft_tr.c"
  $3394 = $8; //@line 168 "mcbits/fft_tr.c"
  $3395 = (($3393) + ($3394<<3)|0); //@line 168 "mcbits/fft_tr.c"
  $3396 = $3395; //@line 168 "mcbits/fft_tr.c"
  $3397 = $3396; //@line 168 "mcbits/fft_tr.c"
  HEAP32[$3397>>2] = $3390; //@line 168 "mcbits/fft_tr.c"
  $3398 = (($3396) + 4)|0; //@line 168 "mcbits/fft_tr.c"
  $3399 = $3398; //@line 168 "mcbits/fft_tr.c"
  HEAP32[$3399>>2] = $3391; //@line 168 "mcbits/fft_tr.c"
  $3400 = $8; //@line 168 "mcbits/fft_tr.c"
  $3401 = (($3400) + 1)|0; //@line 168 "mcbits/fft_tr.c"
  $8 = $3401; //@line 168 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 169 "mcbits/fft_tr.c"
 while(1) {
  $3402 = $8; //@line 169 "mcbits/fft_tr.c"
  $3403 = ($3402|0)<(12); //@line 169 "mcbits/fft_tr.c"
  if (!($3403)) {
   break;
  }
  $3404 = $8; //@line 169 "mcbits/fft_tr.c"
  $3405 = (($10) + ($3404<<3)|0); //@line 169 "mcbits/fft_tr.c"
  $3406 = $3405; //@line 169 "mcbits/fft_tr.c"
  $3407 = $3406; //@line 169 "mcbits/fft_tr.c"
  $3408 = HEAP32[$3407>>2]|0; //@line 169 "mcbits/fft_tr.c"
  $3409 = (($3406) + 4)|0; //@line 169 "mcbits/fft_tr.c"
  $3410 = $3409; //@line 169 "mcbits/fft_tr.c"
  $3411 = HEAP32[$3410>>2]|0; //@line 169 "mcbits/fft_tr.c"
  $3412 = $3; //@line 169 "mcbits/fft_tr.c"
  $3413 = ((($3412)) + 1344|0); //@line 169 "mcbits/fft_tr.c"
  $3414 = $8; //@line 169 "mcbits/fft_tr.c"
  $3415 = (($3413) + ($3414<<3)|0); //@line 169 "mcbits/fft_tr.c"
  $3416 = $3415; //@line 169 "mcbits/fft_tr.c"
  $3417 = $3416; //@line 169 "mcbits/fft_tr.c"
  $3418 = HEAP32[$3417>>2]|0; //@line 169 "mcbits/fft_tr.c"
  $3419 = (($3416) + 4)|0; //@line 169 "mcbits/fft_tr.c"
  $3420 = $3419; //@line 169 "mcbits/fft_tr.c"
  $3421 = HEAP32[$3420>>2]|0; //@line 169 "mcbits/fft_tr.c"
  $3422 = $3408 ^ $3418; //@line 169 "mcbits/fft_tr.c"
  $3423 = $3411 ^ $3421; //@line 169 "mcbits/fft_tr.c"
  $3424 = $8; //@line 169 "mcbits/fft_tr.c"
  $3425 = (($10) + ($3424<<3)|0); //@line 169 "mcbits/fft_tr.c"
  $3426 = $3425; //@line 169 "mcbits/fft_tr.c"
  $3427 = $3426; //@line 169 "mcbits/fft_tr.c"
  HEAP32[$3427>>2] = $3422; //@line 169 "mcbits/fft_tr.c"
  $3428 = (($3426) + 4)|0; //@line 169 "mcbits/fft_tr.c"
  $3429 = $3428; //@line 169 "mcbits/fft_tr.c"
  HEAP32[$3429>>2] = $3423; //@line 169 "mcbits/fft_tr.c"
  $3430 = $8; //@line 169 "mcbits/fft_tr.c"
  $3431 = (($3430) + 1)|0; //@line 169 "mcbits/fft_tr.c"
  $8 = $3431; //@line 169 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 169 "mcbits/fft_tr.c"
 while(1) {
  $3432 = $8; //@line 169 "mcbits/fft_tr.c"
  $3433 = ($3432|0)<(12); //@line 169 "mcbits/fft_tr.c"
  if (!($3433)) {
   break;
  }
  $3434 = $3; //@line 169 "mcbits/fft_tr.c"
  $3435 = ((($3434)) + 1440|0); //@line 169 "mcbits/fft_tr.c"
  $3436 = $8; //@line 169 "mcbits/fft_tr.c"
  $3437 = (($3435) + ($3436<<3)|0); //@line 169 "mcbits/fft_tr.c"
  $3438 = $3437; //@line 169 "mcbits/fft_tr.c"
  $3439 = $3438; //@line 169 "mcbits/fft_tr.c"
  $3440 = HEAP32[$3439>>2]|0; //@line 169 "mcbits/fft_tr.c"
  $3441 = (($3438) + 4)|0; //@line 169 "mcbits/fft_tr.c"
  $3442 = $3441; //@line 169 "mcbits/fft_tr.c"
  $3443 = HEAP32[$3442>>2]|0; //@line 169 "mcbits/fft_tr.c"
  $3444 = $3; //@line 169 "mcbits/fft_tr.c"
  $3445 = ((($3444)) + 1344|0); //@line 169 "mcbits/fft_tr.c"
  $3446 = $8; //@line 169 "mcbits/fft_tr.c"
  $3447 = (($3445) + ($3446<<3)|0); //@line 169 "mcbits/fft_tr.c"
  $3448 = $3447; //@line 169 "mcbits/fft_tr.c"
  $3449 = $3448; //@line 169 "mcbits/fft_tr.c"
  $3450 = HEAP32[$3449>>2]|0; //@line 169 "mcbits/fft_tr.c"
  $3451 = (($3448) + 4)|0; //@line 169 "mcbits/fft_tr.c"
  $3452 = $3451; //@line 169 "mcbits/fft_tr.c"
  $3453 = HEAP32[$3452>>2]|0; //@line 169 "mcbits/fft_tr.c"
  $3454 = $3440 ^ $3450; //@line 169 "mcbits/fft_tr.c"
  $3455 = $3443 ^ $3453; //@line 169 "mcbits/fft_tr.c"
  $3456 = $3; //@line 169 "mcbits/fft_tr.c"
  $3457 = ((($3456)) + 1440|0); //@line 169 "mcbits/fft_tr.c"
  $3458 = $8; //@line 169 "mcbits/fft_tr.c"
  $3459 = (($3457) + ($3458<<3)|0); //@line 169 "mcbits/fft_tr.c"
  $3460 = $3459; //@line 169 "mcbits/fft_tr.c"
  $3461 = $3460; //@line 169 "mcbits/fft_tr.c"
  HEAP32[$3461>>2] = $3454; //@line 169 "mcbits/fft_tr.c"
  $3462 = (($3460) + 4)|0; //@line 169 "mcbits/fft_tr.c"
  $3463 = $3462; //@line 169 "mcbits/fft_tr.c"
  HEAP32[$3463>>2] = $3455; //@line 169 "mcbits/fft_tr.c"
  $3464 = $8; //@line 169 "mcbits/fft_tr.c"
  $3465 = (($3464) + 1)|0; //@line 169 "mcbits/fft_tr.c"
  $8 = $3465; //@line 169 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 170 "mcbits/fft_tr.c"
 while(1) {
  $3466 = $8; //@line 170 "mcbits/fft_tr.c"
  $3467 = ($3466|0)<(12); //@line 170 "mcbits/fft_tr.c"
  if (!($3467)) {
   break;
  }
  $3468 = ((($10)) + 96|0); //@line 170 "mcbits/fft_tr.c"
  $3469 = $8; //@line 170 "mcbits/fft_tr.c"
  $3470 = (($3468) + ($3469<<3)|0); //@line 170 "mcbits/fft_tr.c"
  $3471 = $3470; //@line 170 "mcbits/fft_tr.c"
  $3472 = $3471; //@line 170 "mcbits/fft_tr.c"
  $3473 = HEAP32[$3472>>2]|0; //@line 170 "mcbits/fft_tr.c"
  $3474 = (($3471) + 4)|0; //@line 170 "mcbits/fft_tr.c"
  $3475 = $3474; //@line 170 "mcbits/fft_tr.c"
  $3476 = HEAP32[$3475>>2]|0; //@line 170 "mcbits/fft_tr.c"
  $3477 = $3; //@line 170 "mcbits/fft_tr.c"
  $3478 = ((($3477)) + 1440|0); //@line 170 "mcbits/fft_tr.c"
  $3479 = $8; //@line 170 "mcbits/fft_tr.c"
  $3480 = (($3478) + ($3479<<3)|0); //@line 170 "mcbits/fft_tr.c"
  $3481 = $3480; //@line 170 "mcbits/fft_tr.c"
  $3482 = $3481; //@line 170 "mcbits/fft_tr.c"
  $3483 = HEAP32[$3482>>2]|0; //@line 170 "mcbits/fft_tr.c"
  $3484 = (($3481) + 4)|0; //@line 170 "mcbits/fft_tr.c"
  $3485 = $3484; //@line 170 "mcbits/fft_tr.c"
  $3486 = HEAP32[$3485>>2]|0; //@line 170 "mcbits/fft_tr.c"
  $3487 = $3473 ^ $3483; //@line 170 "mcbits/fft_tr.c"
  $3488 = $3476 ^ $3486; //@line 170 "mcbits/fft_tr.c"
  $3489 = ((($10)) + 96|0); //@line 170 "mcbits/fft_tr.c"
  $3490 = $8; //@line 170 "mcbits/fft_tr.c"
  $3491 = (($3489) + ($3490<<3)|0); //@line 170 "mcbits/fft_tr.c"
  $3492 = $3491; //@line 170 "mcbits/fft_tr.c"
  $3493 = $3492; //@line 170 "mcbits/fft_tr.c"
  HEAP32[$3493>>2] = $3487; //@line 170 "mcbits/fft_tr.c"
  $3494 = (($3492) + 4)|0; //@line 170 "mcbits/fft_tr.c"
  $3495 = $3494; //@line 170 "mcbits/fft_tr.c"
  HEAP32[$3495>>2] = $3488; //@line 170 "mcbits/fft_tr.c"
  $3496 = $8; //@line 170 "mcbits/fft_tr.c"
  $3497 = (($3496) + 1)|0; //@line 170 "mcbits/fft_tr.c"
  $8 = $3497; //@line 170 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 170 "mcbits/fft_tr.c"
 while(1) {
  $3498 = $8; //@line 170 "mcbits/fft_tr.c"
  $3499 = ($3498|0)<(12); //@line 170 "mcbits/fft_tr.c"
  if (!($3499)) {
   break;
  }
  $3500 = $3; //@line 170 "mcbits/fft_tr.c"
  $3501 = ((($3500)) + 1248|0); //@line 170 "mcbits/fft_tr.c"
  $3502 = $8; //@line 170 "mcbits/fft_tr.c"
  $3503 = (($3501) + ($3502<<3)|0); //@line 170 "mcbits/fft_tr.c"
  $3504 = $3503; //@line 170 "mcbits/fft_tr.c"
  $3505 = $3504; //@line 170 "mcbits/fft_tr.c"
  $3506 = HEAP32[$3505>>2]|0; //@line 170 "mcbits/fft_tr.c"
  $3507 = (($3504) + 4)|0; //@line 170 "mcbits/fft_tr.c"
  $3508 = $3507; //@line 170 "mcbits/fft_tr.c"
  $3509 = HEAP32[$3508>>2]|0; //@line 170 "mcbits/fft_tr.c"
  $3510 = $3; //@line 170 "mcbits/fft_tr.c"
  $3511 = ((($3510)) + 1440|0); //@line 170 "mcbits/fft_tr.c"
  $3512 = $8; //@line 170 "mcbits/fft_tr.c"
  $3513 = (($3511) + ($3512<<3)|0); //@line 170 "mcbits/fft_tr.c"
  $3514 = $3513; //@line 170 "mcbits/fft_tr.c"
  $3515 = $3514; //@line 170 "mcbits/fft_tr.c"
  $3516 = HEAP32[$3515>>2]|0; //@line 170 "mcbits/fft_tr.c"
  $3517 = (($3514) + 4)|0; //@line 170 "mcbits/fft_tr.c"
  $3518 = $3517; //@line 170 "mcbits/fft_tr.c"
  $3519 = HEAP32[$3518>>2]|0; //@line 170 "mcbits/fft_tr.c"
  $3520 = $3506 ^ $3516; //@line 170 "mcbits/fft_tr.c"
  $3521 = $3509 ^ $3519; //@line 170 "mcbits/fft_tr.c"
  $3522 = $3; //@line 170 "mcbits/fft_tr.c"
  $3523 = ((($3522)) + 1248|0); //@line 170 "mcbits/fft_tr.c"
  $3524 = $8; //@line 170 "mcbits/fft_tr.c"
  $3525 = (($3523) + ($3524<<3)|0); //@line 170 "mcbits/fft_tr.c"
  $3526 = $3525; //@line 170 "mcbits/fft_tr.c"
  $3527 = $3526; //@line 170 "mcbits/fft_tr.c"
  HEAP32[$3527>>2] = $3520; //@line 170 "mcbits/fft_tr.c"
  $3528 = (($3526) + 4)|0; //@line 170 "mcbits/fft_tr.c"
  $3529 = $3528; //@line 170 "mcbits/fft_tr.c"
  HEAP32[$3529>>2] = $3521; //@line 170 "mcbits/fft_tr.c"
  $3530 = $8; //@line 170 "mcbits/fft_tr.c"
  $3531 = (($3530) + 1)|0; //@line 170 "mcbits/fft_tr.c"
  $8 = $3531; //@line 170 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 171 "mcbits/fft_tr.c"
 while(1) {
  $3532 = $8; //@line 171 "mcbits/fft_tr.c"
  $3533 = ($3532|0)<(12); //@line 171 "mcbits/fft_tr.c"
  if (!($3533)) {
   break;
  }
  $3534 = $8; //@line 171 "mcbits/fft_tr.c"
  $3535 = (($10) + ($3534<<3)|0); //@line 171 "mcbits/fft_tr.c"
  $3536 = $3535; //@line 171 "mcbits/fft_tr.c"
  $3537 = $3536; //@line 171 "mcbits/fft_tr.c"
  $3538 = HEAP32[$3537>>2]|0; //@line 171 "mcbits/fft_tr.c"
  $3539 = (($3536) + 4)|0; //@line 171 "mcbits/fft_tr.c"
  $3540 = $3539; //@line 171 "mcbits/fft_tr.c"
  $3541 = HEAP32[$3540>>2]|0; //@line 171 "mcbits/fft_tr.c"
  $3542 = $3; //@line 171 "mcbits/fft_tr.c"
  $3543 = ((($3542)) + 1248|0); //@line 171 "mcbits/fft_tr.c"
  $3544 = $8; //@line 171 "mcbits/fft_tr.c"
  $3545 = (($3543) + ($3544<<3)|0); //@line 171 "mcbits/fft_tr.c"
  $3546 = $3545; //@line 171 "mcbits/fft_tr.c"
  $3547 = $3546; //@line 171 "mcbits/fft_tr.c"
  $3548 = HEAP32[$3547>>2]|0; //@line 171 "mcbits/fft_tr.c"
  $3549 = (($3546) + 4)|0; //@line 171 "mcbits/fft_tr.c"
  $3550 = $3549; //@line 171 "mcbits/fft_tr.c"
  $3551 = HEAP32[$3550>>2]|0; //@line 171 "mcbits/fft_tr.c"
  $3552 = $3538 ^ $3548; //@line 171 "mcbits/fft_tr.c"
  $3553 = $3541 ^ $3551; //@line 171 "mcbits/fft_tr.c"
  $3554 = $8; //@line 171 "mcbits/fft_tr.c"
  $3555 = (($10) + ($3554<<3)|0); //@line 171 "mcbits/fft_tr.c"
  $3556 = $3555; //@line 171 "mcbits/fft_tr.c"
  $3557 = $3556; //@line 171 "mcbits/fft_tr.c"
  HEAP32[$3557>>2] = $3552; //@line 171 "mcbits/fft_tr.c"
  $3558 = (($3556) + 4)|0; //@line 171 "mcbits/fft_tr.c"
  $3559 = $3558; //@line 171 "mcbits/fft_tr.c"
  HEAP32[$3559>>2] = $3553; //@line 171 "mcbits/fft_tr.c"
  $3560 = $8; //@line 171 "mcbits/fft_tr.c"
  $3561 = (($3560) + 1)|0; //@line 171 "mcbits/fft_tr.c"
  $8 = $3561; //@line 171 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 171 "mcbits/fft_tr.c"
 while(1) {
  $3562 = $8; //@line 171 "mcbits/fft_tr.c"
  $3563 = ($3562|0)<(12); //@line 171 "mcbits/fft_tr.c"
  if (!($3563)) {
   break;
  }
  $3564 = $3; //@line 171 "mcbits/fft_tr.c"
  $3565 = ((($3564)) + 1152|0); //@line 171 "mcbits/fft_tr.c"
  $3566 = $8; //@line 171 "mcbits/fft_tr.c"
  $3567 = (($3565) + ($3566<<3)|0); //@line 171 "mcbits/fft_tr.c"
  $3568 = $3567; //@line 171 "mcbits/fft_tr.c"
  $3569 = $3568; //@line 171 "mcbits/fft_tr.c"
  $3570 = HEAP32[$3569>>2]|0; //@line 171 "mcbits/fft_tr.c"
  $3571 = (($3568) + 4)|0; //@line 171 "mcbits/fft_tr.c"
  $3572 = $3571; //@line 171 "mcbits/fft_tr.c"
  $3573 = HEAP32[$3572>>2]|0; //@line 171 "mcbits/fft_tr.c"
  $3574 = $3; //@line 171 "mcbits/fft_tr.c"
  $3575 = ((($3574)) + 1248|0); //@line 171 "mcbits/fft_tr.c"
  $3576 = $8; //@line 171 "mcbits/fft_tr.c"
  $3577 = (($3575) + ($3576<<3)|0); //@line 171 "mcbits/fft_tr.c"
  $3578 = $3577; //@line 171 "mcbits/fft_tr.c"
  $3579 = $3578; //@line 171 "mcbits/fft_tr.c"
  $3580 = HEAP32[$3579>>2]|0; //@line 171 "mcbits/fft_tr.c"
  $3581 = (($3578) + 4)|0; //@line 171 "mcbits/fft_tr.c"
  $3582 = $3581; //@line 171 "mcbits/fft_tr.c"
  $3583 = HEAP32[$3582>>2]|0; //@line 171 "mcbits/fft_tr.c"
  $3584 = $3570 ^ $3580; //@line 171 "mcbits/fft_tr.c"
  $3585 = $3573 ^ $3583; //@line 171 "mcbits/fft_tr.c"
  $3586 = $3; //@line 171 "mcbits/fft_tr.c"
  $3587 = ((($3586)) + 1152|0); //@line 171 "mcbits/fft_tr.c"
  $3588 = $8; //@line 171 "mcbits/fft_tr.c"
  $3589 = (($3587) + ($3588<<3)|0); //@line 171 "mcbits/fft_tr.c"
  $3590 = $3589; //@line 171 "mcbits/fft_tr.c"
  $3591 = $3590; //@line 171 "mcbits/fft_tr.c"
  HEAP32[$3591>>2] = $3584; //@line 171 "mcbits/fft_tr.c"
  $3592 = (($3590) + 4)|0; //@line 171 "mcbits/fft_tr.c"
  $3593 = $3592; //@line 171 "mcbits/fft_tr.c"
  HEAP32[$3593>>2] = $3585; //@line 171 "mcbits/fft_tr.c"
  $3594 = $8; //@line 171 "mcbits/fft_tr.c"
  $3595 = (($3594) + 1)|0; //@line 171 "mcbits/fft_tr.c"
  $8 = $3595; //@line 171 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 172 "mcbits/fft_tr.c"
 while(1) {
  $3596 = $8; //@line 172 "mcbits/fft_tr.c"
  $3597 = ($3596|0)<(12); //@line 172 "mcbits/fft_tr.c"
  if (!($3597)) {
   break;
  }
  $3598 = ((($10)) + 288|0); //@line 172 "mcbits/fft_tr.c"
  $3599 = $8; //@line 172 "mcbits/fft_tr.c"
  $3600 = (($3598) + ($3599<<3)|0); //@line 172 "mcbits/fft_tr.c"
  $3601 = $3600; //@line 172 "mcbits/fft_tr.c"
  $3602 = $3601; //@line 172 "mcbits/fft_tr.c"
  $3603 = HEAP32[$3602>>2]|0; //@line 172 "mcbits/fft_tr.c"
  $3604 = (($3601) + 4)|0; //@line 172 "mcbits/fft_tr.c"
  $3605 = $3604; //@line 172 "mcbits/fft_tr.c"
  $3606 = HEAP32[$3605>>2]|0; //@line 172 "mcbits/fft_tr.c"
  $3607 = $3; //@line 172 "mcbits/fft_tr.c"
  $3608 = ((($3607)) + 1152|0); //@line 172 "mcbits/fft_tr.c"
  $3609 = $8; //@line 172 "mcbits/fft_tr.c"
  $3610 = (($3608) + ($3609<<3)|0); //@line 172 "mcbits/fft_tr.c"
  $3611 = $3610; //@line 172 "mcbits/fft_tr.c"
  $3612 = $3611; //@line 172 "mcbits/fft_tr.c"
  $3613 = HEAP32[$3612>>2]|0; //@line 172 "mcbits/fft_tr.c"
  $3614 = (($3611) + 4)|0; //@line 172 "mcbits/fft_tr.c"
  $3615 = $3614; //@line 172 "mcbits/fft_tr.c"
  $3616 = HEAP32[$3615>>2]|0; //@line 172 "mcbits/fft_tr.c"
  $3617 = $3603 ^ $3613; //@line 172 "mcbits/fft_tr.c"
  $3618 = $3606 ^ $3616; //@line 172 "mcbits/fft_tr.c"
  $3619 = ((($10)) + 288|0); //@line 172 "mcbits/fft_tr.c"
  $3620 = $8; //@line 172 "mcbits/fft_tr.c"
  $3621 = (($3619) + ($3620<<3)|0); //@line 172 "mcbits/fft_tr.c"
  $3622 = $3621; //@line 172 "mcbits/fft_tr.c"
  $3623 = $3622; //@line 172 "mcbits/fft_tr.c"
  HEAP32[$3623>>2] = $3617; //@line 172 "mcbits/fft_tr.c"
  $3624 = (($3622) + 4)|0; //@line 172 "mcbits/fft_tr.c"
  $3625 = $3624; //@line 172 "mcbits/fft_tr.c"
  HEAP32[$3625>>2] = $3618; //@line 172 "mcbits/fft_tr.c"
  $3626 = $8; //@line 172 "mcbits/fft_tr.c"
  $3627 = (($3626) + 1)|0; //@line 172 "mcbits/fft_tr.c"
  $8 = $3627; //@line 172 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 172 "mcbits/fft_tr.c"
 while(1) {
  $3628 = $8; //@line 172 "mcbits/fft_tr.c"
  $3629 = ($3628|0)<(12); //@line 172 "mcbits/fft_tr.c"
  if (!($3629)) {
   break;
  }
  $3630 = $3; //@line 172 "mcbits/fft_tr.c"
  $3631 = ((($3630)) + 384|0); //@line 172 "mcbits/fft_tr.c"
  $3632 = $8; //@line 172 "mcbits/fft_tr.c"
  $3633 = (($3631) + ($3632<<3)|0); //@line 172 "mcbits/fft_tr.c"
  $3634 = $3633; //@line 172 "mcbits/fft_tr.c"
  $3635 = $3634; //@line 172 "mcbits/fft_tr.c"
  $3636 = HEAP32[$3635>>2]|0; //@line 172 "mcbits/fft_tr.c"
  $3637 = (($3634) + 4)|0; //@line 172 "mcbits/fft_tr.c"
  $3638 = $3637; //@line 172 "mcbits/fft_tr.c"
  $3639 = HEAP32[$3638>>2]|0; //@line 172 "mcbits/fft_tr.c"
  $3640 = $3; //@line 172 "mcbits/fft_tr.c"
  $3641 = ((($3640)) + 1152|0); //@line 172 "mcbits/fft_tr.c"
  $3642 = $8; //@line 172 "mcbits/fft_tr.c"
  $3643 = (($3641) + ($3642<<3)|0); //@line 172 "mcbits/fft_tr.c"
  $3644 = $3643; //@line 172 "mcbits/fft_tr.c"
  $3645 = $3644; //@line 172 "mcbits/fft_tr.c"
  $3646 = HEAP32[$3645>>2]|0; //@line 172 "mcbits/fft_tr.c"
  $3647 = (($3644) + 4)|0; //@line 172 "mcbits/fft_tr.c"
  $3648 = $3647; //@line 172 "mcbits/fft_tr.c"
  $3649 = HEAP32[$3648>>2]|0; //@line 172 "mcbits/fft_tr.c"
  $3650 = $3636 ^ $3646; //@line 172 "mcbits/fft_tr.c"
  $3651 = $3639 ^ $3649; //@line 172 "mcbits/fft_tr.c"
  $3652 = $3; //@line 172 "mcbits/fft_tr.c"
  $3653 = ((($3652)) + 384|0); //@line 172 "mcbits/fft_tr.c"
  $3654 = $8; //@line 172 "mcbits/fft_tr.c"
  $3655 = (($3653) + ($3654<<3)|0); //@line 172 "mcbits/fft_tr.c"
  $3656 = $3655; //@line 172 "mcbits/fft_tr.c"
  $3657 = $3656; //@line 172 "mcbits/fft_tr.c"
  HEAP32[$3657>>2] = $3650; //@line 172 "mcbits/fft_tr.c"
  $3658 = (($3656) + 4)|0; //@line 172 "mcbits/fft_tr.c"
  $3659 = $3658; //@line 172 "mcbits/fft_tr.c"
  HEAP32[$3659>>2] = $3651; //@line 172 "mcbits/fft_tr.c"
  $3660 = $8; //@line 172 "mcbits/fft_tr.c"
  $3661 = (($3660) + 1)|0; //@line 172 "mcbits/fft_tr.c"
  $8 = $3661; //@line 172 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 173 "mcbits/fft_tr.c"
 while(1) {
  $3662 = $8; //@line 173 "mcbits/fft_tr.c"
  $3663 = ($3662|0)<(12); //@line 173 "mcbits/fft_tr.c"
  if (!($3663)) {
   break;
  }
  $3664 = $8; //@line 173 "mcbits/fft_tr.c"
  $3665 = (($10) + ($3664<<3)|0); //@line 173 "mcbits/fft_tr.c"
  $3666 = $3665; //@line 173 "mcbits/fft_tr.c"
  $3667 = $3666; //@line 173 "mcbits/fft_tr.c"
  $3668 = HEAP32[$3667>>2]|0; //@line 173 "mcbits/fft_tr.c"
  $3669 = (($3666) + 4)|0; //@line 173 "mcbits/fft_tr.c"
  $3670 = $3669; //@line 173 "mcbits/fft_tr.c"
  $3671 = HEAP32[$3670>>2]|0; //@line 173 "mcbits/fft_tr.c"
  $3672 = $3; //@line 173 "mcbits/fft_tr.c"
  $3673 = ((($3672)) + 384|0); //@line 173 "mcbits/fft_tr.c"
  $3674 = $8; //@line 173 "mcbits/fft_tr.c"
  $3675 = (($3673) + ($3674<<3)|0); //@line 173 "mcbits/fft_tr.c"
  $3676 = $3675; //@line 173 "mcbits/fft_tr.c"
  $3677 = $3676; //@line 173 "mcbits/fft_tr.c"
  $3678 = HEAP32[$3677>>2]|0; //@line 173 "mcbits/fft_tr.c"
  $3679 = (($3676) + 4)|0; //@line 173 "mcbits/fft_tr.c"
  $3680 = $3679; //@line 173 "mcbits/fft_tr.c"
  $3681 = HEAP32[$3680>>2]|0; //@line 173 "mcbits/fft_tr.c"
  $3682 = $3668 ^ $3678; //@line 173 "mcbits/fft_tr.c"
  $3683 = $3671 ^ $3681; //@line 173 "mcbits/fft_tr.c"
  $3684 = $8; //@line 173 "mcbits/fft_tr.c"
  $3685 = (($10) + ($3684<<3)|0); //@line 173 "mcbits/fft_tr.c"
  $3686 = $3685; //@line 173 "mcbits/fft_tr.c"
  $3687 = $3686; //@line 173 "mcbits/fft_tr.c"
  HEAP32[$3687>>2] = $3682; //@line 173 "mcbits/fft_tr.c"
  $3688 = (($3686) + 4)|0; //@line 173 "mcbits/fft_tr.c"
  $3689 = $3688; //@line 173 "mcbits/fft_tr.c"
  HEAP32[$3689>>2] = $3683; //@line 173 "mcbits/fft_tr.c"
  $3690 = $8; //@line 173 "mcbits/fft_tr.c"
  $3691 = (($3690) + 1)|0; //@line 173 "mcbits/fft_tr.c"
  $8 = $3691; //@line 173 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 173 "mcbits/fft_tr.c"
 while(1) {
  $3692 = $8; //@line 173 "mcbits/fft_tr.c"
  $3693 = ($3692|0)<(12); //@line 173 "mcbits/fft_tr.c"
  if (!($3693)) {
   break;
  }
  $3694 = $3; //@line 173 "mcbits/fft_tr.c"
  $3695 = ((($3694)) + 480|0); //@line 173 "mcbits/fft_tr.c"
  $3696 = $8; //@line 173 "mcbits/fft_tr.c"
  $3697 = (($3695) + ($3696<<3)|0); //@line 173 "mcbits/fft_tr.c"
  $3698 = $3697; //@line 173 "mcbits/fft_tr.c"
  $3699 = $3698; //@line 173 "mcbits/fft_tr.c"
  $3700 = HEAP32[$3699>>2]|0; //@line 173 "mcbits/fft_tr.c"
  $3701 = (($3698) + 4)|0; //@line 173 "mcbits/fft_tr.c"
  $3702 = $3701; //@line 173 "mcbits/fft_tr.c"
  $3703 = HEAP32[$3702>>2]|0; //@line 173 "mcbits/fft_tr.c"
  $3704 = $3; //@line 173 "mcbits/fft_tr.c"
  $3705 = ((($3704)) + 384|0); //@line 173 "mcbits/fft_tr.c"
  $3706 = $8; //@line 173 "mcbits/fft_tr.c"
  $3707 = (($3705) + ($3706<<3)|0); //@line 173 "mcbits/fft_tr.c"
  $3708 = $3707; //@line 173 "mcbits/fft_tr.c"
  $3709 = $3708; //@line 173 "mcbits/fft_tr.c"
  $3710 = HEAP32[$3709>>2]|0; //@line 173 "mcbits/fft_tr.c"
  $3711 = (($3708) + 4)|0; //@line 173 "mcbits/fft_tr.c"
  $3712 = $3711; //@line 173 "mcbits/fft_tr.c"
  $3713 = HEAP32[$3712>>2]|0; //@line 173 "mcbits/fft_tr.c"
  $3714 = $3700 ^ $3710; //@line 173 "mcbits/fft_tr.c"
  $3715 = $3703 ^ $3713; //@line 173 "mcbits/fft_tr.c"
  $3716 = $3; //@line 173 "mcbits/fft_tr.c"
  $3717 = ((($3716)) + 480|0); //@line 173 "mcbits/fft_tr.c"
  $3718 = $8; //@line 173 "mcbits/fft_tr.c"
  $3719 = (($3717) + ($3718<<3)|0); //@line 173 "mcbits/fft_tr.c"
  $3720 = $3719; //@line 173 "mcbits/fft_tr.c"
  $3721 = $3720; //@line 173 "mcbits/fft_tr.c"
  HEAP32[$3721>>2] = $3714; //@line 173 "mcbits/fft_tr.c"
  $3722 = (($3720) + 4)|0; //@line 173 "mcbits/fft_tr.c"
  $3723 = $3722; //@line 173 "mcbits/fft_tr.c"
  HEAP32[$3723>>2] = $3715; //@line 173 "mcbits/fft_tr.c"
  $3724 = $8; //@line 173 "mcbits/fft_tr.c"
  $3725 = (($3724) + 1)|0; //@line 173 "mcbits/fft_tr.c"
  $8 = $3725; //@line 173 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 174 "mcbits/fft_tr.c"
 while(1) {
  $3726 = $8; //@line 174 "mcbits/fft_tr.c"
  $3727 = ($3726|0)<(12); //@line 174 "mcbits/fft_tr.c"
  if (!($3727)) {
   break;
  }
  $3728 = ((($10)) + 96|0); //@line 174 "mcbits/fft_tr.c"
  $3729 = $8; //@line 174 "mcbits/fft_tr.c"
  $3730 = (($3728) + ($3729<<3)|0); //@line 174 "mcbits/fft_tr.c"
  $3731 = $3730; //@line 174 "mcbits/fft_tr.c"
  $3732 = $3731; //@line 174 "mcbits/fft_tr.c"
  $3733 = HEAP32[$3732>>2]|0; //@line 174 "mcbits/fft_tr.c"
  $3734 = (($3731) + 4)|0; //@line 174 "mcbits/fft_tr.c"
  $3735 = $3734; //@line 174 "mcbits/fft_tr.c"
  $3736 = HEAP32[$3735>>2]|0; //@line 174 "mcbits/fft_tr.c"
  $3737 = $3; //@line 174 "mcbits/fft_tr.c"
  $3738 = ((($3737)) + 480|0); //@line 174 "mcbits/fft_tr.c"
  $3739 = $8; //@line 174 "mcbits/fft_tr.c"
  $3740 = (($3738) + ($3739<<3)|0); //@line 174 "mcbits/fft_tr.c"
  $3741 = $3740; //@line 174 "mcbits/fft_tr.c"
  $3742 = $3741; //@line 174 "mcbits/fft_tr.c"
  $3743 = HEAP32[$3742>>2]|0; //@line 174 "mcbits/fft_tr.c"
  $3744 = (($3741) + 4)|0; //@line 174 "mcbits/fft_tr.c"
  $3745 = $3744; //@line 174 "mcbits/fft_tr.c"
  $3746 = HEAP32[$3745>>2]|0; //@line 174 "mcbits/fft_tr.c"
  $3747 = $3733 ^ $3743; //@line 174 "mcbits/fft_tr.c"
  $3748 = $3736 ^ $3746; //@line 174 "mcbits/fft_tr.c"
  $3749 = ((($10)) + 96|0); //@line 174 "mcbits/fft_tr.c"
  $3750 = $8; //@line 174 "mcbits/fft_tr.c"
  $3751 = (($3749) + ($3750<<3)|0); //@line 174 "mcbits/fft_tr.c"
  $3752 = $3751; //@line 174 "mcbits/fft_tr.c"
  $3753 = $3752; //@line 174 "mcbits/fft_tr.c"
  HEAP32[$3753>>2] = $3747; //@line 174 "mcbits/fft_tr.c"
  $3754 = (($3752) + 4)|0; //@line 174 "mcbits/fft_tr.c"
  $3755 = $3754; //@line 174 "mcbits/fft_tr.c"
  HEAP32[$3755>>2] = $3748; //@line 174 "mcbits/fft_tr.c"
  $3756 = $8; //@line 174 "mcbits/fft_tr.c"
  $3757 = (($3756) + 1)|0; //@line 174 "mcbits/fft_tr.c"
  $8 = $3757; //@line 174 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 174 "mcbits/fft_tr.c"
 while(1) {
  $3758 = $8; //@line 174 "mcbits/fft_tr.c"
  $3759 = ($3758|0)<(12); //@line 174 "mcbits/fft_tr.c"
  if (!($3759)) {
   break;
  }
  $3760 = $3; //@line 174 "mcbits/fft_tr.c"
  $3761 = ((($3760)) + 672|0); //@line 174 "mcbits/fft_tr.c"
  $3762 = $8; //@line 174 "mcbits/fft_tr.c"
  $3763 = (($3761) + ($3762<<3)|0); //@line 174 "mcbits/fft_tr.c"
  $3764 = $3763; //@line 174 "mcbits/fft_tr.c"
  $3765 = $3764; //@line 174 "mcbits/fft_tr.c"
  $3766 = HEAP32[$3765>>2]|0; //@line 174 "mcbits/fft_tr.c"
  $3767 = (($3764) + 4)|0; //@line 174 "mcbits/fft_tr.c"
  $3768 = $3767; //@line 174 "mcbits/fft_tr.c"
  $3769 = HEAP32[$3768>>2]|0; //@line 174 "mcbits/fft_tr.c"
  $3770 = $3; //@line 174 "mcbits/fft_tr.c"
  $3771 = ((($3770)) + 480|0); //@line 174 "mcbits/fft_tr.c"
  $3772 = $8; //@line 174 "mcbits/fft_tr.c"
  $3773 = (($3771) + ($3772<<3)|0); //@line 174 "mcbits/fft_tr.c"
  $3774 = $3773; //@line 174 "mcbits/fft_tr.c"
  $3775 = $3774; //@line 174 "mcbits/fft_tr.c"
  $3776 = HEAP32[$3775>>2]|0; //@line 174 "mcbits/fft_tr.c"
  $3777 = (($3774) + 4)|0; //@line 174 "mcbits/fft_tr.c"
  $3778 = $3777; //@line 174 "mcbits/fft_tr.c"
  $3779 = HEAP32[$3778>>2]|0; //@line 174 "mcbits/fft_tr.c"
  $3780 = $3766 ^ $3776; //@line 174 "mcbits/fft_tr.c"
  $3781 = $3769 ^ $3779; //@line 174 "mcbits/fft_tr.c"
  $3782 = $3; //@line 174 "mcbits/fft_tr.c"
  $3783 = ((($3782)) + 672|0); //@line 174 "mcbits/fft_tr.c"
  $3784 = $8; //@line 174 "mcbits/fft_tr.c"
  $3785 = (($3783) + ($3784<<3)|0); //@line 174 "mcbits/fft_tr.c"
  $3786 = $3785; //@line 174 "mcbits/fft_tr.c"
  $3787 = $3786; //@line 174 "mcbits/fft_tr.c"
  HEAP32[$3787>>2] = $3780; //@line 174 "mcbits/fft_tr.c"
  $3788 = (($3786) + 4)|0; //@line 174 "mcbits/fft_tr.c"
  $3789 = $3788; //@line 174 "mcbits/fft_tr.c"
  HEAP32[$3789>>2] = $3781; //@line 174 "mcbits/fft_tr.c"
  $3790 = $8; //@line 174 "mcbits/fft_tr.c"
  $3791 = (($3790) + 1)|0; //@line 174 "mcbits/fft_tr.c"
  $8 = $3791; //@line 174 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 175 "mcbits/fft_tr.c"
 while(1) {
  $3792 = $8; //@line 175 "mcbits/fft_tr.c"
  $3793 = ($3792|0)<(12); //@line 175 "mcbits/fft_tr.c"
  if (!($3793)) {
   break;
  }
  $3794 = $8; //@line 175 "mcbits/fft_tr.c"
  $3795 = (($10) + ($3794<<3)|0); //@line 175 "mcbits/fft_tr.c"
  $3796 = $3795; //@line 175 "mcbits/fft_tr.c"
  $3797 = $3796; //@line 175 "mcbits/fft_tr.c"
  $3798 = HEAP32[$3797>>2]|0; //@line 175 "mcbits/fft_tr.c"
  $3799 = (($3796) + 4)|0; //@line 175 "mcbits/fft_tr.c"
  $3800 = $3799; //@line 175 "mcbits/fft_tr.c"
  $3801 = HEAP32[$3800>>2]|0; //@line 175 "mcbits/fft_tr.c"
  $3802 = $3; //@line 175 "mcbits/fft_tr.c"
  $3803 = ((($3802)) + 672|0); //@line 175 "mcbits/fft_tr.c"
  $3804 = $8; //@line 175 "mcbits/fft_tr.c"
  $3805 = (($3803) + ($3804<<3)|0); //@line 175 "mcbits/fft_tr.c"
  $3806 = $3805; //@line 175 "mcbits/fft_tr.c"
  $3807 = $3806; //@line 175 "mcbits/fft_tr.c"
  $3808 = HEAP32[$3807>>2]|0; //@line 175 "mcbits/fft_tr.c"
  $3809 = (($3806) + 4)|0; //@line 175 "mcbits/fft_tr.c"
  $3810 = $3809; //@line 175 "mcbits/fft_tr.c"
  $3811 = HEAP32[$3810>>2]|0; //@line 175 "mcbits/fft_tr.c"
  $3812 = $3798 ^ $3808; //@line 175 "mcbits/fft_tr.c"
  $3813 = $3801 ^ $3811; //@line 175 "mcbits/fft_tr.c"
  $3814 = $8; //@line 175 "mcbits/fft_tr.c"
  $3815 = (($10) + ($3814<<3)|0); //@line 175 "mcbits/fft_tr.c"
  $3816 = $3815; //@line 175 "mcbits/fft_tr.c"
  $3817 = $3816; //@line 175 "mcbits/fft_tr.c"
  HEAP32[$3817>>2] = $3812; //@line 175 "mcbits/fft_tr.c"
  $3818 = (($3816) + 4)|0; //@line 175 "mcbits/fft_tr.c"
  $3819 = $3818; //@line 175 "mcbits/fft_tr.c"
  HEAP32[$3819>>2] = $3813; //@line 175 "mcbits/fft_tr.c"
  $3820 = $8; //@line 175 "mcbits/fft_tr.c"
  $3821 = (($3820) + 1)|0; //@line 175 "mcbits/fft_tr.c"
  $8 = $3821; //@line 175 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 175 "mcbits/fft_tr.c"
 while(1) {
  $3822 = $8; //@line 175 "mcbits/fft_tr.c"
  $3823 = ($3822|0)<(12); //@line 175 "mcbits/fft_tr.c"
  if (!($3823)) {
   break;
  }
  $3824 = $3; //@line 175 "mcbits/fft_tr.c"
  $3825 = ((($3824)) + 576|0); //@line 175 "mcbits/fft_tr.c"
  $3826 = $8; //@line 175 "mcbits/fft_tr.c"
  $3827 = (($3825) + ($3826<<3)|0); //@line 175 "mcbits/fft_tr.c"
  $3828 = $3827; //@line 175 "mcbits/fft_tr.c"
  $3829 = $3828; //@line 175 "mcbits/fft_tr.c"
  $3830 = HEAP32[$3829>>2]|0; //@line 175 "mcbits/fft_tr.c"
  $3831 = (($3828) + 4)|0; //@line 175 "mcbits/fft_tr.c"
  $3832 = $3831; //@line 175 "mcbits/fft_tr.c"
  $3833 = HEAP32[$3832>>2]|0; //@line 175 "mcbits/fft_tr.c"
  $3834 = $3; //@line 175 "mcbits/fft_tr.c"
  $3835 = ((($3834)) + 672|0); //@line 175 "mcbits/fft_tr.c"
  $3836 = $8; //@line 175 "mcbits/fft_tr.c"
  $3837 = (($3835) + ($3836<<3)|0); //@line 175 "mcbits/fft_tr.c"
  $3838 = $3837; //@line 175 "mcbits/fft_tr.c"
  $3839 = $3838; //@line 175 "mcbits/fft_tr.c"
  $3840 = HEAP32[$3839>>2]|0; //@line 175 "mcbits/fft_tr.c"
  $3841 = (($3838) + 4)|0; //@line 175 "mcbits/fft_tr.c"
  $3842 = $3841; //@line 175 "mcbits/fft_tr.c"
  $3843 = HEAP32[$3842>>2]|0; //@line 175 "mcbits/fft_tr.c"
  $3844 = $3830 ^ $3840; //@line 175 "mcbits/fft_tr.c"
  $3845 = $3833 ^ $3843; //@line 175 "mcbits/fft_tr.c"
  $3846 = $3; //@line 175 "mcbits/fft_tr.c"
  $3847 = ((($3846)) + 576|0); //@line 175 "mcbits/fft_tr.c"
  $3848 = $8; //@line 175 "mcbits/fft_tr.c"
  $3849 = (($3847) + ($3848<<3)|0); //@line 175 "mcbits/fft_tr.c"
  $3850 = $3849; //@line 175 "mcbits/fft_tr.c"
  $3851 = $3850; //@line 175 "mcbits/fft_tr.c"
  HEAP32[$3851>>2] = $3844; //@line 175 "mcbits/fft_tr.c"
  $3852 = (($3850) + 4)|0; //@line 175 "mcbits/fft_tr.c"
  $3853 = $3852; //@line 175 "mcbits/fft_tr.c"
  HEAP32[$3853>>2] = $3845; //@line 175 "mcbits/fft_tr.c"
  $3854 = $8; //@line 175 "mcbits/fft_tr.c"
  $3855 = (($3854) + 1)|0; //@line 175 "mcbits/fft_tr.c"
  $8 = $3855; //@line 175 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 176 "mcbits/fft_tr.c"
 while(1) {
  $3856 = $8; //@line 176 "mcbits/fft_tr.c"
  $3857 = ($3856|0)<(12); //@line 176 "mcbits/fft_tr.c"
  if (!($3857)) {
   break;
  }
  $3858 = ((($10)) + 192|0); //@line 176 "mcbits/fft_tr.c"
  $3859 = $8; //@line 176 "mcbits/fft_tr.c"
  $3860 = (($3858) + ($3859<<3)|0); //@line 176 "mcbits/fft_tr.c"
  $3861 = $3860; //@line 176 "mcbits/fft_tr.c"
  $3862 = $3861; //@line 176 "mcbits/fft_tr.c"
  $3863 = HEAP32[$3862>>2]|0; //@line 176 "mcbits/fft_tr.c"
  $3864 = (($3861) + 4)|0; //@line 176 "mcbits/fft_tr.c"
  $3865 = $3864; //@line 176 "mcbits/fft_tr.c"
  $3866 = HEAP32[$3865>>2]|0; //@line 176 "mcbits/fft_tr.c"
  $3867 = $3; //@line 176 "mcbits/fft_tr.c"
  $3868 = ((($3867)) + 576|0); //@line 176 "mcbits/fft_tr.c"
  $3869 = $8; //@line 176 "mcbits/fft_tr.c"
  $3870 = (($3868) + ($3869<<3)|0); //@line 176 "mcbits/fft_tr.c"
  $3871 = $3870; //@line 176 "mcbits/fft_tr.c"
  $3872 = $3871; //@line 176 "mcbits/fft_tr.c"
  $3873 = HEAP32[$3872>>2]|0; //@line 176 "mcbits/fft_tr.c"
  $3874 = (($3871) + 4)|0; //@line 176 "mcbits/fft_tr.c"
  $3875 = $3874; //@line 176 "mcbits/fft_tr.c"
  $3876 = HEAP32[$3875>>2]|0; //@line 176 "mcbits/fft_tr.c"
  $3877 = $3863 ^ $3873; //@line 176 "mcbits/fft_tr.c"
  $3878 = $3866 ^ $3876; //@line 176 "mcbits/fft_tr.c"
  $3879 = ((($10)) + 192|0); //@line 176 "mcbits/fft_tr.c"
  $3880 = $8; //@line 176 "mcbits/fft_tr.c"
  $3881 = (($3879) + ($3880<<3)|0); //@line 176 "mcbits/fft_tr.c"
  $3882 = $3881; //@line 176 "mcbits/fft_tr.c"
  $3883 = $3882; //@line 176 "mcbits/fft_tr.c"
  HEAP32[$3883>>2] = $3877; //@line 176 "mcbits/fft_tr.c"
  $3884 = (($3882) + 4)|0; //@line 176 "mcbits/fft_tr.c"
  $3885 = $3884; //@line 176 "mcbits/fft_tr.c"
  HEAP32[$3885>>2] = $3878; //@line 176 "mcbits/fft_tr.c"
  $3886 = $8; //@line 176 "mcbits/fft_tr.c"
  $3887 = (($3886) + 1)|0; //@line 176 "mcbits/fft_tr.c"
  $8 = $3887; //@line 176 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 176 "mcbits/fft_tr.c"
 while(1) {
  $3888 = $8; //@line 176 "mcbits/fft_tr.c"
  $3889 = ($3888|0)<(12); //@line 176 "mcbits/fft_tr.c"
  if (!($3889)) {
   break;
  }
  $3890 = $3; //@line 176 "mcbits/fft_tr.c"
  $3891 = ((($3890)) + 192|0); //@line 176 "mcbits/fft_tr.c"
  $3892 = $8; //@line 176 "mcbits/fft_tr.c"
  $3893 = (($3891) + ($3892<<3)|0); //@line 176 "mcbits/fft_tr.c"
  $3894 = $3893; //@line 176 "mcbits/fft_tr.c"
  $3895 = $3894; //@line 176 "mcbits/fft_tr.c"
  $3896 = HEAP32[$3895>>2]|0; //@line 176 "mcbits/fft_tr.c"
  $3897 = (($3894) + 4)|0; //@line 176 "mcbits/fft_tr.c"
  $3898 = $3897; //@line 176 "mcbits/fft_tr.c"
  $3899 = HEAP32[$3898>>2]|0; //@line 176 "mcbits/fft_tr.c"
  $3900 = $3; //@line 176 "mcbits/fft_tr.c"
  $3901 = ((($3900)) + 576|0); //@line 176 "mcbits/fft_tr.c"
  $3902 = $8; //@line 176 "mcbits/fft_tr.c"
  $3903 = (($3901) + ($3902<<3)|0); //@line 176 "mcbits/fft_tr.c"
  $3904 = $3903; //@line 176 "mcbits/fft_tr.c"
  $3905 = $3904; //@line 176 "mcbits/fft_tr.c"
  $3906 = HEAP32[$3905>>2]|0; //@line 176 "mcbits/fft_tr.c"
  $3907 = (($3904) + 4)|0; //@line 176 "mcbits/fft_tr.c"
  $3908 = $3907; //@line 176 "mcbits/fft_tr.c"
  $3909 = HEAP32[$3908>>2]|0; //@line 176 "mcbits/fft_tr.c"
  $3910 = $3896 ^ $3906; //@line 176 "mcbits/fft_tr.c"
  $3911 = $3899 ^ $3909; //@line 176 "mcbits/fft_tr.c"
  $3912 = $3; //@line 176 "mcbits/fft_tr.c"
  $3913 = ((($3912)) + 192|0); //@line 176 "mcbits/fft_tr.c"
  $3914 = $8; //@line 176 "mcbits/fft_tr.c"
  $3915 = (($3913) + ($3914<<3)|0); //@line 176 "mcbits/fft_tr.c"
  $3916 = $3915; //@line 176 "mcbits/fft_tr.c"
  $3917 = $3916; //@line 176 "mcbits/fft_tr.c"
  HEAP32[$3917>>2] = $3910; //@line 176 "mcbits/fft_tr.c"
  $3918 = (($3916) + 4)|0; //@line 176 "mcbits/fft_tr.c"
  $3919 = $3918; //@line 176 "mcbits/fft_tr.c"
  HEAP32[$3919>>2] = $3911; //@line 176 "mcbits/fft_tr.c"
  $3920 = $8; //@line 176 "mcbits/fft_tr.c"
  $3921 = (($3920) + 1)|0; //@line 176 "mcbits/fft_tr.c"
  $8 = $3921; //@line 176 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 177 "mcbits/fft_tr.c"
 while(1) {
  $3922 = $8; //@line 177 "mcbits/fft_tr.c"
  $3923 = ($3922|0)<(12); //@line 177 "mcbits/fft_tr.c"
  if (!($3923)) {
   break;
  }
  $3924 = $8; //@line 177 "mcbits/fft_tr.c"
  $3925 = (($10) + ($3924<<3)|0); //@line 177 "mcbits/fft_tr.c"
  $3926 = $3925; //@line 177 "mcbits/fft_tr.c"
  $3927 = $3926; //@line 177 "mcbits/fft_tr.c"
  $3928 = HEAP32[$3927>>2]|0; //@line 177 "mcbits/fft_tr.c"
  $3929 = (($3926) + 4)|0; //@line 177 "mcbits/fft_tr.c"
  $3930 = $3929; //@line 177 "mcbits/fft_tr.c"
  $3931 = HEAP32[$3930>>2]|0; //@line 177 "mcbits/fft_tr.c"
  $3932 = $3; //@line 177 "mcbits/fft_tr.c"
  $3933 = ((($3932)) + 192|0); //@line 177 "mcbits/fft_tr.c"
  $3934 = $8; //@line 177 "mcbits/fft_tr.c"
  $3935 = (($3933) + ($3934<<3)|0); //@line 177 "mcbits/fft_tr.c"
  $3936 = $3935; //@line 177 "mcbits/fft_tr.c"
  $3937 = $3936; //@line 177 "mcbits/fft_tr.c"
  $3938 = HEAP32[$3937>>2]|0; //@line 177 "mcbits/fft_tr.c"
  $3939 = (($3936) + 4)|0; //@line 177 "mcbits/fft_tr.c"
  $3940 = $3939; //@line 177 "mcbits/fft_tr.c"
  $3941 = HEAP32[$3940>>2]|0; //@line 177 "mcbits/fft_tr.c"
  $3942 = $3928 ^ $3938; //@line 177 "mcbits/fft_tr.c"
  $3943 = $3931 ^ $3941; //@line 177 "mcbits/fft_tr.c"
  $3944 = $8; //@line 177 "mcbits/fft_tr.c"
  $3945 = (($10) + ($3944<<3)|0); //@line 177 "mcbits/fft_tr.c"
  $3946 = $3945; //@line 177 "mcbits/fft_tr.c"
  $3947 = $3946; //@line 177 "mcbits/fft_tr.c"
  HEAP32[$3947>>2] = $3942; //@line 177 "mcbits/fft_tr.c"
  $3948 = (($3946) + 4)|0; //@line 177 "mcbits/fft_tr.c"
  $3949 = $3948; //@line 177 "mcbits/fft_tr.c"
  HEAP32[$3949>>2] = $3943; //@line 177 "mcbits/fft_tr.c"
  $3950 = $8; //@line 177 "mcbits/fft_tr.c"
  $3951 = (($3950) + 1)|0; //@line 177 "mcbits/fft_tr.c"
  $8 = $3951; //@line 177 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 177 "mcbits/fft_tr.c"
 while(1) {
  $3952 = $8; //@line 177 "mcbits/fft_tr.c"
  $3953 = ($3952|0)<(12); //@line 177 "mcbits/fft_tr.c"
  if (!($3953)) {
   break;
  }
  $3954 = $3; //@line 177 "mcbits/fft_tr.c"
  $3955 = ((($3954)) + 288|0); //@line 177 "mcbits/fft_tr.c"
  $3956 = $8; //@line 177 "mcbits/fft_tr.c"
  $3957 = (($3955) + ($3956<<3)|0); //@line 177 "mcbits/fft_tr.c"
  $3958 = $3957; //@line 177 "mcbits/fft_tr.c"
  $3959 = $3958; //@line 177 "mcbits/fft_tr.c"
  $3960 = HEAP32[$3959>>2]|0; //@line 177 "mcbits/fft_tr.c"
  $3961 = (($3958) + 4)|0; //@line 177 "mcbits/fft_tr.c"
  $3962 = $3961; //@line 177 "mcbits/fft_tr.c"
  $3963 = HEAP32[$3962>>2]|0; //@line 177 "mcbits/fft_tr.c"
  $3964 = $3; //@line 177 "mcbits/fft_tr.c"
  $3965 = ((($3964)) + 192|0); //@line 177 "mcbits/fft_tr.c"
  $3966 = $8; //@line 177 "mcbits/fft_tr.c"
  $3967 = (($3965) + ($3966<<3)|0); //@line 177 "mcbits/fft_tr.c"
  $3968 = $3967; //@line 177 "mcbits/fft_tr.c"
  $3969 = $3968; //@line 177 "mcbits/fft_tr.c"
  $3970 = HEAP32[$3969>>2]|0; //@line 177 "mcbits/fft_tr.c"
  $3971 = (($3968) + 4)|0; //@line 177 "mcbits/fft_tr.c"
  $3972 = $3971; //@line 177 "mcbits/fft_tr.c"
  $3973 = HEAP32[$3972>>2]|0; //@line 177 "mcbits/fft_tr.c"
  $3974 = $3960 ^ $3970; //@line 177 "mcbits/fft_tr.c"
  $3975 = $3963 ^ $3973; //@line 177 "mcbits/fft_tr.c"
  $3976 = $3; //@line 177 "mcbits/fft_tr.c"
  $3977 = ((($3976)) + 288|0); //@line 177 "mcbits/fft_tr.c"
  $3978 = $8; //@line 177 "mcbits/fft_tr.c"
  $3979 = (($3977) + ($3978<<3)|0); //@line 177 "mcbits/fft_tr.c"
  $3980 = $3979; //@line 177 "mcbits/fft_tr.c"
  $3981 = $3980; //@line 177 "mcbits/fft_tr.c"
  HEAP32[$3981>>2] = $3974; //@line 177 "mcbits/fft_tr.c"
  $3982 = (($3980) + 4)|0; //@line 177 "mcbits/fft_tr.c"
  $3983 = $3982; //@line 177 "mcbits/fft_tr.c"
  HEAP32[$3983>>2] = $3975; //@line 177 "mcbits/fft_tr.c"
  $3984 = $8; //@line 177 "mcbits/fft_tr.c"
  $3985 = (($3984) + 1)|0; //@line 177 "mcbits/fft_tr.c"
  $8 = $3985; //@line 177 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 178 "mcbits/fft_tr.c"
 while(1) {
  $3986 = $8; //@line 178 "mcbits/fft_tr.c"
  $3987 = ($3986|0)<(12); //@line 178 "mcbits/fft_tr.c"
  if (!($3987)) {
   break;
  }
  $3988 = ((($10)) + 96|0); //@line 178 "mcbits/fft_tr.c"
  $3989 = $8; //@line 178 "mcbits/fft_tr.c"
  $3990 = (($3988) + ($3989<<3)|0); //@line 178 "mcbits/fft_tr.c"
  $3991 = $3990; //@line 178 "mcbits/fft_tr.c"
  $3992 = $3991; //@line 178 "mcbits/fft_tr.c"
  $3993 = HEAP32[$3992>>2]|0; //@line 178 "mcbits/fft_tr.c"
  $3994 = (($3991) + 4)|0; //@line 178 "mcbits/fft_tr.c"
  $3995 = $3994; //@line 178 "mcbits/fft_tr.c"
  $3996 = HEAP32[$3995>>2]|0; //@line 178 "mcbits/fft_tr.c"
  $3997 = $3; //@line 178 "mcbits/fft_tr.c"
  $3998 = ((($3997)) + 288|0); //@line 178 "mcbits/fft_tr.c"
  $3999 = $8; //@line 178 "mcbits/fft_tr.c"
  $4000 = (($3998) + ($3999<<3)|0); //@line 178 "mcbits/fft_tr.c"
  $4001 = $4000; //@line 178 "mcbits/fft_tr.c"
  $4002 = $4001; //@line 178 "mcbits/fft_tr.c"
  $4003 = HEAP32[$4002>>2]|0; //@line 178 "mcbits/fft_tr.c"
  $4004 = (($4001) + 4)|0; //@line 178 "mcbits/fft_tr.c"
  $4005 = $4004; //@line 178 "mcbits/fft_tr.c"
  $4006 = HEAP32[$4005>>2]|0; //@line 178 "mcbits/fft_tr.c"
  $4007 = $3993 ^ $4003; //@line 178 "mcbits/fft_tr.c"
  $4008 = $3996 ^ $4006; //@line 178 "mcbits/fft_tr.c"
  $4009 = ((($10)) + 96|0); //@line 178 "mcbits/fft_tr.c"
  $4010 = $8; //@line 178 "mcbits/fft_tr.c"
  $4011 = (($4009) + ($4010<<3)|0); //@line 178 "mcbits/fft_tr.c"
  $4012 = $4011; //@line 178 "mcbits/fft_tr.c"
  $4013 = $4012; //@line 178 "mcbits/fft_tr.c"
  HEAP32[$4013>>2] = $4007; //@line 178 "mcbits/fft_tr.c"
  $4014 = (($4012) + 4)|0; //@line 178 "mcbits/fft_tr.c"
  $4015 = $4014; //@line 178 "mcbits/fft_tr.c"
  HEAP32[$4015>>2] = $4008; //@line 178 "mcbits/fft_tr.c"
  $4016 = $8; //@line 178 "mcbits/fft_tr.c"
  $4017 = (($4016) + 1)|0; //@line 178 "mcbits/fft_tr.c"
  $8 = $4017; //@line 178 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 178 "mcbits/fft_tr.c"
 while(1) {
  $4018 = $8; //@line 178 "mcbits/fft_tr.c"
  $4019 = ($4018|0)<(12); //@line 178 "mcbits/fft_tr.c"
  if (!($4019)) {
   break;
  }
  $4020 = $3; //@line 178 "mcbits/fft_tr.c"
  $4021 = ((($4020)) + 96|0); //@line 178 "mcbits/fft_tr.c"
  $4022 = $8; //@line 178 "mcbits/fft_tr.c"
  $4023 = (($4021) + ($4022<<3)|0); //@line 178 "mcbits/fft_tr.c"
  $4024 = $4023; //@line 178 "mcbits/fft_tr.c"
  $4025 = $4024; //@line 178 "mcbits/fft_tr.c"
  $4026 = HEAP32[$4025>>2]|0; //@line 178 "mcbits/fft_tr.c"
  $4027 = (($4024) + 4)|0; //@line 178 "mcbits/fft_tr.c"
  $4028 = $4027; //@line 178 "mcbits/fft_tr.c"
  $4029 = HEAP32[$4028>>2]|0; //@line 178 "mcbits/fft_tr.c"
  $4030 = $3; //@line 178 "mcbits/fft_tr.c"
  $4031 = ((($4030)) + 288|0); //@line 178 "mcbits/fft_tr.c"
  $4032 = $8; //@line 178 "mcbits/fft_tr.c"
  $4033 = (($4031) + ($4032<<3)|0); //@line 178 "mcbits/fft_tr.c"
  $4034 = $4033; //@line 178 "mcbits/fft_tr.c"
  $4035 = $4034; //@line 178 "mcbits/fft_tr.c"
  $4036 = HEAP32[$4035>>2]|0; //@line 178 "mcbits/fft_tr.c"
  $4037 = (($4034) + 4)|0; //@line 178 "mcbits/fft_tr.c"
  $4038 = $4037; //@line 178 "mcbits/fft_tr.c"
  $4039 = HEAP32[$4038>>2]|0; //@line 178 "mcbits/fft_tr.c"
  $4040 = $4026 ^ $4036; //@line 178 "mcbits/fft_tr.c"
  $4041 = $4029 ^ $4039; //@line 178 "mcbits/fft_tr.c"
  $4042 = $3; //@line 178 "mcbits/fft_tr.c"
  $4043 = ((($4042)) + 96|0); //@line 178 "mcbits/fft_tr.c"
  $4044 = $8; //@line 178 "mcbits/fft_tr.c"
  $4045 = (($4043) + ($4044<<3)|0); //@line 178 "mcbits/fft_tr.c"
  $4046 = $4045; //@line 178 "mcbits/fft_tr.c"
  $4047 = $4046; //@line 178 "mcbits/fft_tr.c"
  HEAP32[$4047>>2] = $4040; //@line 178 "mcbits/fft_tr.c"
  $4048 = (($4046) + 4)|0; //@line 178 "mcbits/fft_tr.c"
  $4049 = $4048; //@line 178 "mcbits/fft_tr.c"
  HEAP32[$4049>>2] = $4041; //@line 178 "mcbits/fft_tr.c"
  $4050 = $8; //@line 178 "mcbits/fft_tr.c"
  $4051 = (($4050) + 1)|0; //@line 178 "mcbits/fft_tr.c"
  $8 = $4051; //@line 178 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 180 "mcbits/fft_tr.c"
 while(1) {
  $4052 = $8; //@line 180 "mcbits/fft_tr.c"
  $4053 = ($4052|0)<(12); //@line 180 "mcbits/fft_tr.c"
  if (!($4053)) {
   break;
  }
  $4054 = $8; //@line 180 "mcbits/fft_tr.c"
  $4055 = (($10) + ($4054<<3)|0); //@line 180 "mcbits/fft_tr.c"
  $4056 = $4055; //@line 180 "mcbits/fft_tr.c"
  $4057 = $4056; //@line 180 "mcbits/fft_tr.c"
  $4058 = HEAP32[$4057>>2]|0; //@line 180 "mcbits/fft_tr.c"
  $4059 = (($4056) + 4)|0; //@line 180 "mcbits/fft_tr.c"
  $4060 = $4059; //@line 180 "mcbits/fft_tr.c"
  $4061 = HEAP32[$4060>>2]|0; //@line 180 "mcbits/fft_tr.c"
  $4062 = $3; //@line 180 "mcbits/fft_tr.c"
  $4063 = ((($4062)) + 96|0); //@line 180 "mcbits/fft_tr.c"
  $4064 = $8; //@line 180 "mcbits/fft_tr.c"
  $4065 = (($4063) + ($4064<<3)|0); //@line 180 "mcbits/fft_tr.c"
  $4066 = $4065; //@line 180 "mcbits/fft_tr.c"
  $4067 = $4066; //@line 180 "mcbits/fft_tr.c"
  $4068 = HEAP32[$4067>>2]|0; //@line 180 "mcbits/fft_tr.c"
  $4069 = (($4066) + 4)|0; //@line 180 "mcbits/fft_tr.c"
  $4070 = $4069; //@line 180 "mcbits/fft_tr.c"
  $4071 = HEAP32[$4070>>2]|0; //@line 180 "mcbits/fft_tr.c"
  $4072 = $4058 ^ $4068; //@line 180 "mcbits/fft_tr.c"
  $4073 = $4061 ^ $4071; //@line 180 "mcbits/fft_tr.c"
  $4074 = $8; //@line 180 "mcbits/fft_tr.c"
  $4075 = (($10) + ($4074<<3)|0); //@line 180 "mcbits/fft_tr.c"
  $4076 = $4075; //@line 180 "mcbits/fft_tr.c"
  $4077 = $4076; //@line 180 "mcbits/fft_tr.c"
  HEAP32[$4077>>2] = $4072; //@line 180 "mcbits/fft_tr.c"
  $4078 = (($4076) + 4)|0; //@line 180 "mcbits/fft_tr.c"
  $4079 = $4078; //@line 180 "mcbits/fft_tr.c"
  HEAP32[$4079>>2] = $4073; //@line 180 "mcbits/fft_tr.c"
  $4080 = $8; //@line 180 "mcbits/fft_tr.c"
  $4081 = (($4080) + 1)|0; //@line 180 "mcbits/fft_tr.c"
  $8 = $4081; //@line 180 "mcbits/fft_tr.c"
 }
 $8 = 0; //@line 180 "mcbits/fft_tr.c"
 while(1) {
  $4082 = $8; //@line 180 "mcbits/fft_tr.c"
  $4083 = ($4082|0)<(12); //@line 180 "mcbits/fft_tr.c"
  if (!($4083)) {
   break;
  }
  $4084 = $3; //@line 180 "mcbits/fft_tr.c"
  $4085 = $8; //@line 180 "mcbits/fft_tr.c"
  $4086 = (($4084) + ($4085<<3)|0); //@line 180 "mcbits/fft_tr.c"
  $4087 = $4086; //@line 180 "mcbits/fft_tr.c"
  $4088 = $4087; //@line 180 "mcbits/fft_tr.c"
  $4089 = HEAP32[$4088>>2]|0; //@line 180 "mcbits/fft_tr.c"
  $4090 = (($4087) + 4)|0; //@line 180 "mcbits/fft_tr.c"
  $4091 = $4090; //@line 180 "mcbits/fft_tr.c"
  $4092 = HEAP32[$4091>>2]|0; //@line 180 "mcbits/fft_tr.c"
  $4093 = $3; //@line 180 "mcbits/fft_tr.c"
  $4094 = ((($4093)) + 96|0); //@line 180 "mcbits/fft_tr.c"
  $4095 = $8; //@line 180 "mcbits/fft_tr.c"
  $4096 = (($4094) + ($4095<<3)|0); //@line 180 "mcbits/fft_tr.c"
  $4097 = $4096; //@line 180 "mcbits/fft_tr.c"
  $4098 = $4097; //@line 180 "mcbits/fft_tr.c"
  $4099 = HEAP32[$4098>>2]|0; //@line 180 "mcbits/fft_tr.c"
  $4100 = (($4097) + 4)|0; //@line 180 "mcbits/fft_tr.c"
  $4101 = $4100; //@line 180 "mcbits/fft_tr.c"
  $4102 = HEAP32[$4101>>2]|0; //@line 180 "mcbits/fft_tr.c"
  $4103 = $4089 ^ $4099; //@line 180 "mcbits/fft_tr.c"
  $4104 = $4092 ^ $4102; //@line 180 "mcbits/fft_tr.c"
  $4105 = $2; //@line 180 "mcbits/fft_tr.c"
  $4106 = $8; //@line 180 "mcbits/fft_tr.c"
  $4107 = (($4105) + ($4106<<3)|0); //@line 180 "mcbits/fft_tr.c"
  $4108 = $4107; //@line 180 "mcbits/fft_tr.c"
  $4109 = $4108; //@line 180 "mcbits/fft_tr.c"
  HEAP32[$4109>>2] = $4103; //@line 180 "mcbits/fft_tr.c"
  $4110 = (($4108) + 4)|0; //@line 180 "mcbits/fft_tr.c"
  $4111 = $4110; //@line 180 "mcbits/fft_tr.c"
  HEAP32[$4111>>2] = $4104; //@line 180 "mcbits/fft_tr.c"
  $4112 = $8; //@line 180 "mcbits/fft_tr.c"
  $4113 = (($4112) + 1)|0; //@line 180 "mcbits/fft_tr.c"
  $8 = $4113; //@line 180 "mcbits/fft_tr.c"
 }
 $5 = 0; //@line 184 "mcbits/fft_tr.c"
 while(1) {
  $4114 = $5; //@line 184 "mcbits/fft_tr.c"
  $4115 = ($4114|0)<(12); //@line 184 "mcbits/fft_tr.c"
  if (!($4115)) {
   break;
  }
  $4116 = HEAP16[7224]|0; //@line 184 "mcbits/fft_tr.c"
  $4117 = $4116&65535; //@line 184 "mcbits/fft_tr.c"
  $4118 = $5; //@line 184 "mcbits/fft_tr.c"
  $4119 = $4117 >> $4118; //@line 184 "mcbits/fft_tr.c"
  $4120 = $4119 & 1; //@line 184 "mcbits/fft_tr.c"
  $4121 = ($4120|0)<(0); //@line 184 "mcbits/fft_tr.c"
  $4122 = $4121 << 31 >> 31; //@line 184 "mcbits/fft_tr.c"
  $4123 = $5; //@line 184 "mcbits/fft_tr.c"
  $4124 = (($9) + ($4123<<3)|0); //@line 184 "mcbits/fft_tr.c"
  $4125 = $4124; //@line 184 "mcbits/fft_tr.c"
  $4126 = $4125; //@line 184 "mcbits/fft_tr.c"
  HEAP32[$4126>>2] = $4120; //@line 184 "mcbits/fft_tr.c"
  $4127 = (($4125) + 4)|0; //@line 184 "mcbits/fft_tr.c"
  $4128 = $4127; //@line 184 "mcbits/fft_tr.c"
  HEAP32[$4128>>2] = $4122; //@line 184 "mcbits/fft_tr.c"
  $4129 = $5; //@line 184 "mcbits/fft_tr.c"
  $4130 = (($9) + ($4129<<3)|0); //@line 184 "mcbits/fft_tr.c"
  $4131 = $4130; //@line 184 "mcbits/fft_tr.c"
  $4132 = $4131; //@line 184 "mcbits/fft_tr.c"
  $4133 = HEAP32[$4132>>2]|0; //@line 184 "mcbits/fft_tr.c"
  $4134 = (($4131) + 4)|0; //@line 184 "mcbits/fft_tr.c"
  $4135 = $4134; //@line 184 "mcbits/fft_tr.c"
  $4136 = HEAP32[$4135>>2]|0; //@line 184 "mcbits/fft_tr.c"
  $4137 = (_i64Subtract(0,0,($4133|0),($4136|0))|0); //@line 184 "mcbits/fft_tr.c"
  $4138 = tempRet0; //@line 184 "mcbits/fft_tr.c"
  $4139 = $5; //@line 184 "mcbits/fft_tr.c"
  $4140 = (($9) + ($4139<<3)|0); //@line 184 "mcbits/fft_tr.c"
  $4141 = $4140; //@line 184 "mcbits/fft_tr.c"
  $4142 = $4141; //@line 184 "mcbits/fft_tr.c"
  HEAP32[$4142>>2] = $4137; //@line 184 "mcbits/fft_tr.c"
  $4143 = (($4141) + 4)|0; //@line 184 "mcbits/fft_tr.c"
  $4144 = $4143; //@line 184 "mcbits/fft_tr.c"
  HEAP32[$4144>>2] = $4138; //@line 184 "mcbits/fft_tr.c"
  $4145 = $5; //@line 184 "mcbits/fft_tr.c"
  $4146 = (($4145) + 1)|0; //@line 184 "mcbits/fft_tr.c"
  $5 = $4146; //@line 184 "mcbits/fft_tr.c"
 }
 $4147 = $2; //@line 186 "mcbits/fft_tr.c"
 $4148 = ((($4147)) + 96|0); //@line 186 "mcbits/fft_tr.c"
 _vec_mul($4148,$10,$9); //@line 186 "mcbits/fft_tr.c"
 $4 = 1; //@line 188 "mcbits/fft_tr.c"
 while(1) {
  $4149 = $4; //@line 188 "mcbits/fft_tr.c"
  $4150 = ($4149|0)<(6); //@line 188 "mcbits/fft_tr.c"
  if (!($4150)) {
   break;
  }
  $5 = 0; //@line 190 "mcbits/fft_tr.c"
  while(1) {
   $4151 = $5; //@line 190 "mcbits/fft_tr.c"
   $4152 = ($4151|0)<(12); //@line 190 "mcbits/fft_tr.c"
   if (!($4152)) {
    break;
   }
   $4153 = $4; //@line 190 "mcbits/fft_tr.c"
   $4154 = (14448 + ($4153<<1)|0); //@line 190 "mcbits/fft_tr.c"
   $4155 = HEAP16[$4154>>1]|0; //@line 190 "mcbits/fft_tr.c"
   $4156 = $4155&65535; //@line 190 "mcbits/fft_tr.c"
   $4157 = $5; //@line 190 "mcbits/fft_tr.c"
   $4158 = $4156 >> $4157; //@line 190 "mcbits/fft_tr.c"
   $4159 = $4158 & 1; //@line 190 "mcbits/fft_tr.c"
   $4160 = ($4159|0)<(0); //@line 190 "mcbits/fft_tr.c"
   $4161 = $4160 << 31 >> 31; //@line 190 "mcbits/fft_tr.c"
   $4162 = $5; //@line 190 "mcbits/fft_tr.c"
   $4163 = (($9) + ($4162<<3)|0); //@line 190 "mcbits/fft_tr.c"
   $4164 = $4163; //@line 190 "mcbits/fft_tr.c"
   $4165 = $4164; //@line 190 "mcbits/fft_tr.c"
   HEAP32[$4165>>2] = $4159; //@line 190 "mcbits/fft_tr.c"
   $4166 = (($4164) + 4)|0; //@line 190 "mcbits/fft_tr.c"
   $4167 = $4166; //@line 190 "mcbits/fft_tr.c"
   HEAP32[$4167>>2] = $4161; //@line 190 "mcbits/fft_tr.c"
   $4168 = $5; //@line 190 "mcbits/fft_tr.c"
   $4169 = (($9) + ($4168<<3)|0); //@line 190 "mcbits/fft_tr.c"
   $4170 = $4169; //@line 190 "mcbits/fft_tr.c"
   $4171 = $4170; //@line 190 "mcbits/fft_tr.c"
   $4172 = HEAP32[$4171>>2]|0; //@line 190 "mcbits/fft_tr.c"
   $4173 = (($4170) + 4)|0; //@line 190 "mcbits/fft_tr.c"
   $4174 = $4173; //@line 190 "mcbits/fft_tr.c"
   $4175 = HEAP32[$4174>>2]|0; //@line 190 "mcbits/fft_tr.c"
   $4176 = (_i64Subtract(0,0,($4172|0),($4175|0))|0); //@line 190 "mcbits/fft_tr.c"
   $4177 = tempRet0; //@line 190 "mcbits/fft_tr.c"
   $4178 = $5; //@line 190 "mcbits/fft_tr.c"
   $4179 = (($9) + ($4178<<3)|0); //@line 190 "mcbits/fft_tr.c"
   $4180 = $4179; //@line 190 "mcbits/fft_tr.c"
   $4181 = $4180; //@line 190 "mcbits/fft_tr.c"
   HEAP32[$4181>>2] = $4176; //@line 190 "mcbits/fft_tr.c"
   $4182 = (($4180) + 4)|0; //@line 190 "mcbits/fft_tr.c"
   $4183 = $4182; //@line 190 "mcbits/fft_tr.c"
   HEAP32[$4183>>2] = $4177; //@line 190 "mcbits/fft_tr.c"
   $4184 = $5; //@line 190 "mcbits/fft_tr.c"
   $4185 = (($4184) + 1)|0; //@line 190 "mcbits/fft_tr.c"
   $5 = $4185; //@line 190 "mcbits/fft_tr.c"
  }
  $4186 = $4; //@line 192 "mcbits/fft_tr.c"
  $4187 = (($10) + (($4186*96)|0)|0); //@line 192 "mcbits/fft_tr.c"
  _vec_mul($9,$4187,$9); //@line 192 "mcbits/fft_tr.c"
  $8 = 0; //@line 193 "mcbits/fft_tr.c"
  while(1) {
   $4188 = $8; //@line 193 "mcbits/fft_tr.c"
   $4189 = ($4188|0)<(12); //@line 193 "mcbits/fft_tr.c"
   if (!($4189)) {
    break;
   }
   $4190 = $2; //@line 193 "mcbits/fft_tr.c"
   $4191 = ((($4190)) + 96|0); //@line 193 "mcbits/fft_tr.c"
   $4192 = $8; //@line 193 "mcbits/fft_tr.c"
   $4193 = (($4191) + ($4192<<3)|0); //@line 193 "mcbits/fft_tr.c"
   $4194 = $4193; //@line 193 "mcbits/fft_tr.c"
   $4195 = $4194; //@line 193 "mcbits/fft_tr.c"
   $4196 = HEAP32[$4195>>2]|0; //@line 193 "mcbits/fft_tr.c"
   $4197 = (($4194) + 4)|0; //@line 193 "mcbits/fft_tr.c"
   $4198 = $4197; //@line 193 "mcbits/fft_tr.c"
   $4199 = HEAP32[$4198>>2]|0; //@line 193 "mcbits/fft_tr.c"
   $4200 = $8; //@line 193 "mcbits/fft_tr.c"
   $4201 = (($9) + ($4200<<3)|0); //@line 193 "mcbits/fft_tr.c"
   $4202 = $4201; //@line 193 "mcbits/fft_tr.c"
   $4203 = $4202; //@line 193 "mcbits/fft_tr.c"
   $4204 = HEAP32[$4203>>2]|0; //@line 193 "mcbits/fft_tr.c"
   $4205 = (($4202) + 4)|0; //@line 193 "mcbits/fft_tr.c"
   $4206 = $4205; //@line 193 "mcbits/fft_tr.c"
   $4207 = HEAP32[$4206>>2]|0; //@line 193 "mcbits/fft_tr.c"
   $4208 = $4196 ^ $4204; //@line 193 "mcbits/fft_tr.c"
   $4209 = $4199 ^ $4207; //@line 193 "mcbits/fft_tr.c"
   $4210 = $2; //@line 193 "mcbits/fft_tr.c"
   $4211 = ((($4210)) + 96|0); //@line 193 "mcbits/fft_tr.c"
   $4212 = $8; //@line 193 "mcbits/fft_tr.c"
   $4213 = (($4211) + ($4212<<3)|0); //@line 193 "mcbits/fft_tr.c"
   $4214 = $4213; //@line 193 "mcbits/fft_tr.c"
   $4215 = $4214; //@line 193 "mcbits/fft_tr.c"
   HEAP32[$4215>>2] = $4208; //@line 193 "mcbits/fft_tr.c"
   $4216 = (($4214) + 4)|0; //@line 193 "mcbits/fft_tr.c"
   $4217 = $4216; //@line 193 "mcbits/fft_tr.c"
   HEAP32[$4217>>2] = $4209; //@line 193 "mcbits/fft_tr.c"
   $4218 = $8; //@line 193 "mcbits/fft_tr.c"
   $4219 = (($4218) + 1)|0; //@line 193 "mcbits/fft_tr.c"
   $8 = $4219; //@line 193 "mcbits/fft_tr.c"
  }
  $4220 = $4; //@line 188 "mcbits/fft_tr.c"
  $4221 = (($4220) + 1)|0; //@line 188 "mcbits/fft_tr.c"
  $4 = $4221; //@line 188 "mcbits/fft_tr.c"
 }
 STACKTOP = sp;return; //@line 195 "mcbits/fft_tr.c"
}
function _fft_tr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 199 "mcbits/fft_tr.c"
 $5 = $3; //@line 199 "mcbits/fft_tr.c"
 _butterflies_tr($4,$5); //@line 199 "mcbits/fft_tr.c"
 $6 = $2; //@line 200 "mcbits/fft_tr.c"
 _radix_conversions_tr($6); //@line 200 "mcbits/fft_tr.c"
 STACKTOP = sp;return; //@line 201 "mcbits/fft_tr.c"
}
function _gf_mul($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = $0;
 $3 = $1;
 $9 = $2; //@line 13 "mcbits/gf.c"
 $10 = $9&65535; //@line 13 "mcbits/gf.c"
 $6 = $10; //@line 13 "mcbits/gf.c"
 $11 = $3; //@line 14 "mcbits/gf.c"
 $12 = $11&65535; //@line 14 "mcbits/gf.c"
 $7 = $12; //@line 14 "mcbits/gf.c"
 $13 = $6; //@line 16 "mcbits/gf.c"
 $14 = $7; //@line 16 "mcbits/gf.c"
 $15 = $14 & 1; //@line 16 "mcbits/gf.c"
 $16 = Math_imul($13, $15)|0; //@line 16 "mcbits/gf.c"
 $5 = $16; //@line 16 "mcbits/gf.c"
 $4 = 1; //@line 18 "mcbits/gf.c"
 while(1) {
  $17 = $4; //@line 18 "mcbits/gf.c"
  $18 = ($17|0)<(12); //@line 18 "mcbits/gf.c"
  if (!($18)) {
   break;
  }
  $19 = $6; //@line 19 "mcbits/gf.c"
  $20 = $7; //@line 19 "mcbits/gf.c"
  $21 = $4; //@line 19 "mcbits/gf.c"
  $22 = 1 << $21; //@line 19 "mcbits/gf.c"
  $23 = $20 & $22; //@line 19 "mcbits/gf.c"
  $24 = Math_imul($19, $23)|0; //@line 19 "mcbits/gf.c"
  $25 = $5; //@line 19 "mcbits/gf.c"
  $26 = $25 ^ $24; //@line 19 "mcbits/gf.c"
  $5 = $26; //@line 19 "mcbits/gf.c"
  $27 = $4; //@line 18 "mcbits/gf.c"
  $28 = (($27) + 1)|0; //@line 18 "mcbits/gf.c"
  $4 = $28; //@line 18 "mcbits/gf.c"
 }
 $29 = $5; //@line 21 "mcbits/gf.c"
 $30 = $29 & 8372224; //@line 21 "mcbits/gf.c"
 $8 = $30; //@line 21 "mcbits/gf.c"
 $31 = $8; //@line 22 "mcbits/gf.c"
 $32 = $31 >>> 9; //@line 22 "mcbits/gf.c"
 $33 = $5; //@line 22 "mcbits/gf.c"
 $34 = $33 ^ $32; //@line 22 "mcbits/gf.c"
 $5 = $34; //@line 22 "mcbits/gf.c"
 $35 = $8; //@line 23 "mcbits/gf.c"
 $36 = $35 >>> 12; //@line 23 "mcbits/gf.c"
 $37 = $5; //@line 23 "mcbits/gf.c"
 $38 = $37 ^ $36; //@line 23 "mcbits/gf.c"
 $5 = $38; //@line 23 "mcbits/gf.c"
 $39 = $5; //@line 25 "mcbits/gf.c"
 $40 = $39 & 12288; //@line 25 "mcbits/gf.c"
 $8 = $40; //@line 25 "mcbits/gf.c"
 $41 = $8; //@line 26 "mcbits/gf.c"
 $42 = $41 >>> 9; //@line 26 "mcbits/gf.c"
 $43 = $5; //@line 26 "mcbits/gf.c"
 $44 = $43 ^ $42; //@line 26 "mcbits/gf.c"
 $5 = $44; //@line 26 "mcbits/gf.c"
 $45 = $8; //@line 27 "mcbits/gf.c"
 $46 = $45 >>> 12; //@line 27 "mcbits/gf.c"
 $47 = $5; //@line 27 "mcbits/gf.c"
 $48 = $47 ^ $46; //@line 27 "mcbits/gf.c"
 $5 = $48; //@line 27 "mcbits/gf.c"
 $49 = $5; //@line 29 "mcbits/gf.c"
 $50 = $49 & 4095; //@line 29 "mcbits/gf.c"
 $51 = $50&65535; //@line 29 "mcbits/gf.c"
 STACKTOP = sp;return ($51|0); //@line 29 "mcbits/gf.c"
}
function _gf_sq($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $4 = $1; //@line 36 "mcbits/gf.c"
 $5 = $4&65535; //@line 36 "mcbits/gf.c"
 $2 = $5; //@line 36 "mcbits/gf.c"
 $6 = $2; //@line 39 "mcbits/gf.c"
 $7 = $2; //@line 39 "mcbits/gf.c"
 $8 = $7 << 8; //@line 39 "mcbits/gf.c"
 $9 = $6 | $8; //@line 39 "mcbits/gf.c"
 $10 = HEAP32[(14200)>>2]|0; //@line 39 "mcbits/gf.c"
 $11 = $9 & $10; //@line 39 "mcbits/gf.c"
 $2 = $11; //@line 39 "mcbits/gf.c"
 $12 = $2; //@line 40 "mcbits/gf.c"
 $13 = $2; //@line 40 "mcbits/gf.c"
 $14 = $13 << 4; //@line 40 "mcbits/gf.c"
 $15 = $12 | $14; //@line 40 "mcbits/gf.c"
 $16 = HEAP32[(14196)>>2]|0; //@line 40 "mcbits/gf.c"
 $17 = $15 & $16; //@line 40 "mcbits/gf.c"
 $2 = $17; //@line 40 "mcbits/gf.c"
 $18 = $2; //@line 41 "mcbits/gf.c"
 $19 = $2; //@line 41 "mcbits/gf.c"
 $20 = $19 << 2; //@line 41 "mcbits/gf.c"
 $21 = $18 | $20; //@line 41 "mcbits/gf.c"
 $22 = HEAP32[(14192)>>2]|0; //@line 41 "mcbits/gf.c"
 $23 = $21 & $22; //@line 41 "mcbits/gf.c"
 $2 = $23; //@line 41 "mcbits/gf.c"
 $24 = $2; //@line 42 "mcbits/gf.c"
 $25 = $2; //@line 42 "mcbits/gf.c"
 $26 = $25 << 1; //@line 42 "mcbits/gf.c"
 $27 = $24 | $26; //@line 42 "mcbits/gf.c"
 $28 = HEAP32[3547]|0; //@line 42 "mcbits/gf.c"
 $29 = $27 & $28; //@line 42 "mcbits/gf.c"
 $2 = $29; //@line 42 "mcbits/gf.c"
 $30 = $2; //@line 44 "mcbits/gf.c"
 $31 = $30 & 8372224; //@line 44 "mcbits/gf.c"
 $3 = $31; //@line 44 "mcbits/gf.c"
 $32 = $3; //@line 45 "mcbits/gf.c"
 $33 = $32 >>> 9; //@line 45 "mcbits/gf.c"
 $34 = $2; //@line 45 "mcbits/gf.c"
 $35 = $34 ^ $33; //@line 45 "mcbits/gf.c"
 $2 = $35; //@line 45 "mcbits/gf.c"
 $36 = $3; //@line 46 "mcbits/gf.c"
 $37 = $36 >>> 12; //@line 46 "mcbits/gf.c"
 $38 = $2; //@line 46 "mcbits/gf.c"
 $39 = $38 ^ $37; //@line 46 "mcbits/gf.c"
 $2 = $39; //@line 46 "mcbits/gf.c"
 $40 = $2; //@line 48 "mcbits/gf.c"
 $41 = $40 & 12288; //@line 48 "mcbits/gf.c"
 $3 = $41; //@line 48 "mcbits/gf.c"
 $42 = $3; //@line 49 "mcbits/gf.c"
 $43 = $42 >>> 9; //@line 49 "mcbits/gf.c"
 $44 = $2; //@line 49 "mcbits/gf.c"
 $45 = $44 ^ $43; //@line 49 "mcbits/gf.c"
 $2 = $45; //@line 49 "mcbits/gf.c"
 $46 = $3; //@line 50 "mcbits/gf.c"
 $47 = $46 >>> 12; //@line 50 "mcbits/gf.c"
 $48 = $2; //@line 50 "mcbits/gf.c"
 $49 = $48 ^ $47; //@line 50 "mcbits/gf.c"
 $2 = $49; //@line 50 "mcbits/gf.c"
 $50 = $2; //@line 52 "mcbits/gf.c"
 $51 = $50 & 4095; //@line 52 "mcbits/gf.c"
 $52 = $51&65535; //@line 52 "mcbits/gf.c"
 STACKTOP = sp;return ($52|0); //@line 52 "mcbits/gf.c"
}
function _gf_inv($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = $0;
 $5 = $1; //@line 60 "mcbits/gf.c"
 $4 = $5; //@line 60 "mcbits/gf.c"
 $6 = $4; //@line 62 "mcbits/gf.c"
 $7 = (_gf_sq($6)|0); //@line 62 "mcbits/gf.c"
 $4 = $7; //@line 62 "mcbits/gf.c"
 $8 = $4; //@line 63 "mcbits/gf.c"
 $9 = $1; //@line 63 "mcbits/gf.c"
 $10 = (_gf_mul($8,$9)|0); //@line 63 "mcbits/gf.c"
 $2 = $10; //@line 63 "mcbits/gf.c"
 $11 = $2; //@line 65 "mcbits/gf.c"
 $12 = (_gf_sq($11)|0); //@line 65 "mcbits/gf.c"
 $4 = $12; //@line 65 "mcbits/gf.c"
 $13 = $4; //@line 66 "mcbits/gf.c"
 $14 = (_gf_sq($13)|0); //@line 66 "mcbits/gf.c"
 $4 = $14; //@line 66 "mcbits/gf.c"
 $15 = $4; //@line 67 "mcbits/gf.c"
 $16 = $2; //@line 67 "mcbits/gf.c"
 $17 = (_gf_mul($15,$16)|0); //@line 67 "mcbits/gf.c"
 $3 = $17; //@line 67 "mcbits/gf.c"
 $18 = $3; //@line 69 "mcbits/gf.c"
 $19 = (_gf_sq($18)|0); //@line 69 "mcbits/gf.c"
 $4 = $19; //@line 69 "mcbits/gf.c"
 $20 = $4; //@line 70 "mcbits/gf.c"
 $21 = (_gf_sq($20)|0); //@line 70 "mcbits/gf.c"
 $4 = $21; //@line 70 "mcbits/gf.c"
 $22 = $4; //@line 71 "mcbits/gf.c"
 $23 = (_gf_sq($22)|0); //@line 71 "mcbits/gf.c"
 $4 = $23; //@line 71 "mcbits/gf.c"
 $24 = $4; //@line 72 "mcbits/gf.c"
 $25 = (_gf_sq($24)|0); //@line 72 "mcbits/gf.c"
 $4 = $25; //@line 72 "mcbits/gf.c"
 $26 = $4; //@line 73 "mcbits/gf.c"
 $27 = $3; //@line 73 "mcbits/gf.c"
 $28 = (_gf_mul($26,$27)|0); //@line 73 "mcbits/gf.c"
 $4 = $28; //@line 73 "mcbits/gf.c"
 $29 = $4; //@line 75 "mcbits/gf.c"
 $30 = (_gf_sq($29)|0); //@line 75 "mcbits/gf.c"
 $4 = $30; //@line 75 "mcbits/gf.c"
 $31 = $4; //@line 76 "mcbits/gf.c"
 $32 = (_gf_sq($31)|0); //@line 76 "mcbits/gf.c"
 $4 = $32; //@line 76 "mcbits/gf.c"
 $33 = $4; //@line 77 "mcbits/gf.c"
 $34 = $2; //@line 77 "mcbits/gf.c"
 $35 = (_gf_mul($33,$34)|0); //@line 77 "mcbits/gf.c"
 $4 = $35; //@line 77 "mcbits/gf.c"
 $36 = $4; //@line 79 "mcbits/gf.c"
 $37 = (_gf_sq($36)|0); //@line 79 "mcbits/gf.c"
 $4 = $37; //@line 79 "mcbits/gf.c"
 $38 = $4; //@line 80 "mcbits/gf.c"
 $39 = $1; //@line 80 "mcbits/gf.c"
 $40 = (_gf_mul($38,$39)|0); //@line 80 "mcbits/gf.c"
 $4 = $40; //@line 80 "mcbits/gf.c"
 $41 = $4; //@line 82 "mcbits/gf.c"
 $42 = (_gf_sq($41)|0); //@line 82 "mcbits/gf.c"
 STACKTOP = sp;return ($42|0); //@line 82 "mcbits/gf.c"
}
function _gf_diff($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $5 = $2; //@line 87 "mcbits/gf.c"
 $6 = $5&65535; //@line 87 "mcbits/gf.c"
 $7 = $3; //@line 87 "mcbits/gf.c"
 $8 = $7&65535; //@line 87 "mcbits/gf.c"
 $9 = $6 ^ $8; //@line 87 "mcbits/gf.c"
 $4 = $9; //@line 87 "mcbits/gf.c"
 $10 = $4; //@line 89 "mcbits/gf.c"
 $11 = (($10) - 1)|0; //@line 89 "mcbits/gf.c"
 $12 = $11 >>> 20; //@line 89 "mcbits/gf.c"
 $13 = $12 ^ 4095; //@line 89 "mcbits/gf.c"
 $4 = $13; //@line 89 "mcbits/gf.c"
 $14 = $4; //@line 91 "mcbits/gf.c"
 $15 = $14&65535; //@line 91 "mcbits/gf.c"
 STACKTOP = sp;return ($15|0); //@line 91 "mcbits/gf.c"
}
function _GF_mul($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 272|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(272|0);
 $8 = sp_a + 20|0;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $6 = 0; //@line 102 "mcbits/gf.c"
 while(1) {
  $9 = $6; //@line 102 "mcbits/gf.c"
  $10 = ($9|0)<(123); //@line 102 "mcbits/gf.c"
  if (!($10)) {
   break;
  }
  $11 = $6; //@line 103 "mcbits/gf.c"
  $12 = (($8) + ($11<<1)|0); //@line 103 "mcbits/gf.c"
  HEAP16[$12>>1] = 0; //@line 103 "mcbits/gf.c"
  $13 = $6; //@line 102 "mcbits/gf.c"
  $14 = (($13) + 1)|0; //@line 102 "mcbits/gf.c"
  $6 = $14; //@line 102 "mcbits/gf.c"
 }
 $6 = 0; //@line 105 "mcbits/gf.c"
 while(1) {
  $15 = $6; //@line 105 "mcbits/gf.c"
  $16 = ($15|0)<(62); //@line 105 "mcbits/gf.c"
  if (!($16)) {
   break;
  }
  $7 = 0; //@line 106 "mcbits/gf.c"
  while(1) {
   $17 = $7; //@line 106 "mcbits/gf.c"
   $18 = ($17|0)<(62); //@line 106 "mcbits/gf.c"
   if (!($18)) {
    break;
   }
   $19 = $4; //@line 107 "mcbits/gf.c"
   $20 = $6; //@line 107 "mcbits/gf.c"
   $21 = (($19) + ($20<<1)|0); //@line 107 "mcbits/gf.c"
   $22 = HEAP16[$21>>1]|0; //@line 107 "mcbits/gf.c"
   $23 = $5; //@line 107 "mcbits/gf.c"
   $24 = $7; //@line 107 "mcbits/gf.c"
   $25 = (($23) + ($24<<1)|0); //@line 107 "mcbits/gf.c"
   $26 = HEAP16[$25>>1]|0; //@line 107 "mcbits/gf.c"
   $27 = (_gf_mul($22,$26)|0); //@line 107 "mcbits/gf.c"
   $28 = $27&65535; //@line 107 "mcbits/gf.c"
   $29 = $6; //@line 107 "mcbits/gf.c"
   $30 = $7; //@line 107 "mcbits/gf.c"
   $31 = (($29) + ($30))|0; //@line 107 "mcbits/gf.c"
   $32 = (($8) + ($31<<1)|0); //@line 107 "mcbits/gf.c"
   $33 = HEAP16[$32>>1]|0; //@line 107 "mcbits/gf.c"
   $34 = $33&65535; //@line 107 "mcbits/gf.c"
   $35 = $34 ^ $28; //@line 107 "mcbits/gf.c"
   $36 = $35&65535; //@line 107 "mcbits/gf.c"
   HEAP16[$32>>1] = $36; //@line 107 "mcbits/gf.c"
   $37 = $7; //@line 106 "mcbits/gf.c"
   $38 = (($37) + 1)|0; //@line 106 "mcbits/gf.c"
   $7 = $38; //@line 106 "mcbits/gf.c"
  }
  $39 = $6; //@line 105 "mcbits/gf.c"
  $40 = (($39) + 1)|0; //@line 105 "mcbits/gf.c"
  $6 = $40; //@line 105 "mcbits/gf.c"
 }
 $6 = 122; //@line 111 "mcbits/gf.c"
 while(1) {
  $41 = $6; //@line 111 "mcbits/gf.c"
  $42 = ($41|0)>=(62); //@line 111 "mcbits/gf.c"
  if (!($42)) {
   break;
  }
  $43 = $6; //@line 113 "mcbits/gf.c"
  $44 = (($8) + ($43<<1)|0); //@line 113 "mcbits/gf.c"
  $45 = HEAP16[$44>>1]|0; //@line 113 "mcbits/gf.c"
  $46 = (_gf_mul($45,1763)|0); //@line 113 "mcbits/gf.c"
  $47 = $46&65535; //@line 113 "mcbits/gf.c"
  $48 = $6; //@line 113 "mcbits/gf.c"
  $49 = (($48) - 55)|0; //@line 113 "mcbits/gf.c"
  $50 = (($8) + ($49<<1)|0); //@line 113 "mcbits/gf.c"
  $51 = HEAP16[$50>>1]|0; //@line 113 "mcbits/gf.c"
  $52 = $51&65535; //@line 113 "mcbits/gf.c"
  $53 = $52 ^ $47; //@line 113 "mcbits/gf.c"
  $54 = $53&65535; //@line 113 "mcbits/gf.c"
  HEAP16[$50>>1] = $54; //@line 113 "mcbits/gf.c"
  $55 = $6; //@line 114 "mcbits/gf.c"
  $56 = (($8) + ($55<<1)|0); //@line 114 "mcbits/gf.c"
  $57 = HEAP16[$56>>1]|0; //@line 114 "mcbits/gf.c"
  $58 = (_gf_mul($57,1722)|0); //@line 114 "mcbits/gf.c"
  $59 = $58&65535; //@line 114 "mcbits/gf.c"
  $60 = $6; //@line 114 "mcbits/gf.c"
  $61 = (($60) - 61)|0; //@line 114 "mcbits/gf.c"
  $62 = (($8) + ($61<<1)|0); //@line 114 "mcbits/gf.c"
  $63 = HEAP16[$62>>1]|0; //@line 114 "mcbits/gf.c"
  $64 = $63&65535; //@line 114 "mcbits/gf.c"
  $65 = $64 ^ $59; //@line 114 "mcbits/gf.c"
  $66 = $65&65535; //@line 114 "mcbits/gf.c"
  HEAP16[$62>>1] = $66; //@line 114 "mcbits/gf.c"
  $67 = $6; //@line 115 "mcbits/gf.c"
  $68 = (($8) + ($67<<1)|0); //@line 115 "mcbits/gf.c"
  $69 = HEAP16[$68>>1]|0; //@line 115 "mcbits/gf.c"
  $70 = (_gf_mul($69,4033)|0); //@line 115 "mcbits/gf.c"
  $71 = $70&65535; //@line 115 "mcbits/gf.c"
  $72 = $6; //@line 115 "mcbits/gf.c"
  $73 = (($72) - 62)|0; //@line 115 "mcbits/gf.c"
  $74 = (($8) + ($73<<1)|0); //@line 115 "mcbits/gf.c"
  $75 = HEAP16[$74>>1]|0; //@line 115 "mcbits/gf.c"
  $76 = $75&65535; //@line 115 "mcbits/gf.c"
  $77 = $76 ^ $71; //@line 115 "mcbits/gf.c"
  $78 = $77&65535; //@line 115 "mcbits/gf.c"
  HEAP16[$74>>1] = $78; //@line 115 "mcbits/gf.c"
  $79 = $6; //@line 111 "mcbits/gf.c"
  $80 = (($79) + -1)|0; //@line 111 "mcbits/gf.c"
  $6 = $80; //@line 111 "mcbits/gf.c"
 }
 $6 = 0; //@line 118 "mcbits/gf.c"
 while(1) {
  $81 = $6; //@line 118 "mcbits/gf.c"
  $82 = ($81|0)<(62); //@line 118 "mcbits/gf.c"
  if (!($82)) {
   break;
  }
  $83 = $6; //@line 119 "mcbits/gf.c"
  $84 = (($8) + ($83<<1)|0); //@line 119 "mcbits/gf.c"
  $85 = HEAP16[$84>>1]|0; //@line 119 "mcbits/gf.c"
  $86 = $3; //@line 119 "mcbits/gf.c"
  $87 = $6; //@line 119 "mcbits/gf.c"
  $88 = (($86) + ($87<<1)|0); //@line 119 "mcbits/gf.c"
  HEAP16[$88>>1] = $85; //@line 119 "mcbits/gf.c"
  $89 = $6; //@line 118 "mcbits/gf.c"
  $90 = (($89) + 1)|0; //@line 118 "mcbits/gf.c"
  $6 = $90; //@line 118 "mcbits/gf.c"
 }
 STACKTOP = sp;return; //@line 120 "mcbits/gf.c"
}
function _crypto_encrypt($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 608|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(608|0);
 $9 = sp_a;
 $11 = sp_a + 96|0;
 $12 = sp_a + 32|0;
 $13 = sp_a + 24|0;
 $6 = $0;
 $7 = $1;
 $8 = $2;
 $14 = $9;
 $15 = $14;
 HEAP32[$15>>2] = $3;
 $16 = (($14) + 4)|0;
 $17 = $16;
 HEAP32[$17>>2] = $4;
 $10 = $5;
 ;HEAP8[$13>>0]=0|0;HEAP8[$13+1>>0]=0|0;HEAP8[$13+2>>0]=0|0;HEAP8[$13+3>>0]=0|0;HEAP8[$13+4>>0]=0|0;HEAP8[$13+5>>0]=0|0;HEAP8[$13+6>>0]=0|0;HEAP8[$13+7>>0]=0|0; //@line 22 "mcbits/operations.c"
 $18 = $6; //@line 29 "mcbits/operations.c"
 $19 = $10; //@line 29 "mcbits/operations.c"
 _encrypt_mcbits($18,$11,$19); //@line 29 "mcbits/operations.c"
 (_crypto_hash($12,$11,512,0)|0); //@line 31 "mcbits/operations.c"
 $20 = $6; //@line 32 "mcbits/operations.c"
 $21 = ((($20)) + 93|0); //@line 32 "mcbits/operations.c"
 $22 = $8; //@line 32 "mcbits/operations.c"
 $23 = $9; //@line 32 "mcbits/operations.c"
 $24 = $23; //@line 32 "mcbits/operations.c"
 $25 = HEAP32[$24>>2]|0; //@line 32 "mcbits/operations.c"
 $26 = (($23) + 4)|0; //@line 32 "mcbits/operations.c"
 $27 = $26; //@line 32 "mcbits/operations.c"
 $28 = HEAP32[$27>>2]|0; //@line 32 "mcbits/operations.c"
 (_crypto_stream_salsa20_xor($21,$22,$25,$28,$13,$12)|0); //@line 32 "mcbits/operations.c"
 $29 = $6; //@line 33 "mcbits/operations.c"
 $30 = ((($29)) + 93|0); //@line 33 "mcbits/operations.c"
 $31 = $9; //@line 33 "mcbits/operations.c"
 $32 = $31; //@line 33 "mcbits/operations.c"
 $33 = HEAP32[$32>>2]|0; //@line 33 "mcbits/operations.c"
 $34 = (($31) + 4)|0; //@line 33 "mcbits/operations.c"
 $35 = $34; //@line 33 "mcbits/operations.c"
 $36 = HEAP32[$35>>2]|0; //@line 33 "mcbits/operations.c"
 $37 = (($30) + ($33)|0); //@line 33 "mcbits/operations.c"
 $38 = $6; //@line 33 "mcbits/operations.c"
 $39 = ((($38)) + 93|0); //@line 33 "mcbits/operations.c"
 $40 = $9; //@line 33 "mcbits/operations.c"
 $41 = $40; //@line 33 "mcbits/operations.c"
 $42 = HEAP32[$41>>2]|0; //@line 33 "mcbits/operations.c"
 $43 = (($40) + 4)|0; //@line 33 "mcbits/operations.c"
 $44 = $43; //@line 33 "mcbits/operations.c"
 $45 = HEAP32[$44>>2]|0; //@line 33 "mcbits/operations.c"
 $46 = ((($12)) + 32|0); //@line 33 "mcbits/operations.c"
 (_crypto_onetimeauth_poly1305($37,$39,$42,$45,$46)|0); //@line 33 "mcbits/operations.c"
 $47 = $9; //@line 35 "mcbits/operations.c"
 $48 = $47; //@line 35 "mcbits/operations.c"
 $49 = HEAP32[$48>>2]|0; //@line 35 "mcbits/operations.c"
 $50 = (($47) + 4)|0; //@line 35 "mcbits/operations.c"
 $51 = $50; //@line 35 "mcbits/operations.c"
 $52 = HEAP32[$51>>2]|0; //@line 35 "mcbits/operations.c"
 $53 = (_i64Add(93,0,($49|0),($52|0))|0); //@line 35 "mcbits/operations.c"
 $54 = tempRet0; //@line 35 "mcbits/operations.c"
 $55 = (_i64Add(($53|0),($54|0),16,0)|0); //@line 35 "mcbits/operations.c"
 $56 = tempRet0; //@line 35 "mcbits/operations.c"
 $57 = $7; //@line 35 "mcbits/operations.c"
 $58 = $57; //@line 35 "mcbits/operations.c"
 $59 = $58; //@line 35 "mcbits/operations.c"
 HEAP32[$59>>2] = $55; //@line 35 "mcbits/operations.c"
 $60 = (($58) + 4)|0; //@line 35 "mcbits/operations.c"
 $61 = $60; //@line 35 "mcbits/operations.c"
 HEAP32[$61>>2] = $56; //@line 35 "mcbits/operations.c"
 STACKTOP = sp;return 0; //@line 40 "mcbits/operations.c"
}
function _crypto_encrypt_open($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 624|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(624|0);
 $10 = sp_a;
 $15 = sp_a + 560|0;
 $16 = sp_a + 552|0;
 $17 = sp_a + 40|0;
 $7 = $0;
 $8 = $1;
 $9 = $2;
 $18 = $10;
 $19 = $18;
 HEAP32[$19>>2] = $3;
 $20 = (($18) + 4)|0;
 $21 = $20;
 HEAP32[$21>>2] = $4;
 $11 = $5;
 ;HEAP8[$16>>0]=0|0;HEAP8[$16+1>>0]=0|0;HEAP8[$16+2>>0]=0|0;HEAP8[$16+3>>0]=0|0;HEAP8[$16+4>>0]=0|0;HEAP8[$16+5>>0]=0|0;HEAP8[$16+6>>0]=0|0;HEAP8[$16+7>>0]=0|0; //@line 54 "mcbits/operations.c"
 $22 = $10; //@line 59 "mcbits/operations.c"
 $23 = $22; //@line 59 "mcbits/operations.c"
 $24 = HEAP32[$23>>2]|0; //@line 59 "mcbits/operations.c"
 $25 = (($22) + 4)|0; //@line 59 "mcbits/operations.c"
 $26 = $25; //@line 59 "mcbits/operations.c"
 $27 = HEAP32[$26>>2]|0; //@line 59 "mcbits/operations.c"
 $28 = ($27>>>0)<(0); //@line 59 "mcbits/operations.c"
 $29 = ($24>>>0)<(109); //@line 59 "mcbits/operations.c"
 $30 = ($27|0)==(0); //@line 59 "mcbits/operations.c"
 $31 = $30 & $29; //@line 59 "mcbits/operations.c"
 $32 = $28 | $31; //@line 59 "mcbits/operations.c"
 if ($32) {
  $6 = -1; //@line 59 "mcbits/operations.c"
  $86 = $6; //@line 78 "mcbits/operations.c"
  STACKTOP = sp;return ($86|0); //@line 78 "mcbits/operations.c"
 } else {
  $33 = $10; //@line 60 "mcbits/operations.c"
  $34 = $33; //@line 60 "mcbits/operations.c"
  $35 = HEAP32[$34>>2]|0; //@line 60 "mcbits/operations.c"
  $36 = (($33) + 4)|0; //@line 60 "mcbits/operations.c"
  $37 = $36; //@line 60 "mcbits/operations.c"
  $38 = HEAP32[$37>>2]|0; //@line 60 "mcbits/operations.c"
  $39 = (_i64Subtract(($35|0),($38|0),93,0)|0); //@line 60 "mcbits/operations.c"
  $40 = tempRet0; //@line 60 "mcbits/operations.c"
  $41 = (_i64Subtract(($39|0),($40|0),16,0)|0); //@line 60 "mcbits/operations.c"
  $42 = tempRet0; //@line 60 "mcbits/operations.c"
  $43 = $8; //@line 60 "mcbits/operations.c"
  $44 = $43; //@line 60 "mcbits/operations.c"
  $45 = $44; //@line 60 "mcbits/operations.c"
  HEAP32[$45>>2] = $41; //@line 60 "mcbits/operations.c"
  $46 = (($44) + 4)|0; //@line 60 "mcbits/operations.c"
  $47 = $46; //@line 60 "mcbits/operations.c"
  HEAP32[$47>>2] = $42; //@line 60 "mcbits/operations.c"
  $48 = $11; //@line 65 "mcbits/operations.c"
  $49 = $9; //@line 65 "mcbits/operations.c"
  $50 = (_decrypt_mcbits($17,$48,$49)|0); //@line 65 "mcbits/operations.c"
  $14 = $50; //@line 65 "mcbits/operations.c"
  (_crypto_hash($15,$17,512,0)|0); //@line 67 "mcbits/operations.c"
  $51 = $9; //@line 69 "mcbits/operations.c"
  $52 = ((($51)) + 93|0); //@line 69 "mcbits/operations.c"
  $53 = $8; //@line 69 "mcbits/operations.c"
  $54 = $53; //@line 69 "mcbits/operations.c"
  $55 = $54; //@line 69 "mcbits/operations.c"
  $56 = HEAP32[$55>>2]|0; //@line 69 "mcbits/operations.c"
  $57 = (($54) + 4)|0; //@line 69 "mcbits/operations.c"
  $58 = $57; //@line 69 "mcbits/operations.c"
  $59 = HEAP32[$58>>2]|0; //@line 69 "mcbits/operations.c"
  $60 = (($52) + ($56)|0); //@line 69 "mcbits/operations.c"
  $61 = $9; //@line 69 "mcbits/operations.c"
  $62 = ((($61)) + 93|0); //@line 69 "mcbits/operations.c"
  $63 = $8; //@line 69 "mcbits/operations.c"
  $64 = $63; //@line 69 "mcbits/operations.c"
  $65 = $64; //@line 69 "mcbits/operations.c"
  $66 = HEAP32[$65>>2]|0; //@line 69 "mcbits/operations.c"
  $67 = (($64) + 4)|0; //@line 69 "mcbits/operations.c"
  $68 = $67; //@line 69 "mcbits/operations.c"
  $69 = HEAP32[$68>>2]|0; //@line 69 "mcbits/operations.c"
  $70 = ((($15)) + 32|0); //@line 69 "mcbits/operations.c"
  $71 = (_crypto_onetimeauth_poly1305_verify($60,$62,$66,$69,$70)|0); //@line 69 "mcbits/operations.c"
  $13 = $71; //@line 69 "mcbits/operations.c"
  $72 = $7; //@line 70 "mcbits/operations.c"
  $73 = $9; //@line 70 "mcbits/operations.c"
  $74 = ((($73)) + 93|0); //@line 70 "mcbits/operations.c"
  $75 = $8; //@line 70 "mcbits/operations.c"
  $76 = $75; //@line 70 "mcbits/operations.c"
  $77 = $76; //@line 70 "mcbits/operations.c"
  $78 = HEAP32[$77>>2]|0; //@line 70 "mcbits/operations.c"
  $79 = (($76) + 4)|0; //@line 70 "mcbits/operations.c"
  $80 = $79; //@line 70 "mcbits/operations.c"
  $81 = HEAP32[$80>>2]|0; //@line 70 "mcbits/operations.c"
  (_crypto_stream_salsa20_xor($72,$74,$78,$81,$16,$15)|0); //@line 70 "mcbits/operations.c"
  $82 = $13; //@line 72 "mcbits/operations.c"
  $83 = $14; //@line 72 "mcbits/operations.c"
  $84 = $82 | $83; //@line 72 "mcbits/operations.c"
  $12 = $84; //@line 72 "mcbits/operations.c"
  $85 = $12; //@line 77 "mcbits/operations.c"
  $6 = $85; //@line 77 "mcbits/operations.c"
  $86 = $6; //@line 78 "mcbits/operations.c"
  STACKTOP = sp;return ($86|0); //@line 78 "mcbits/operations.c"
 }
 return (0)|0;
}
function _crypto_encrypt_keypair($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 while(1) {
  $4 = $3; //@line 88 "mcbits/operations.c"
  _sk_gen($4); //@line 88 "mcbits/operations.c"
  $5 = $2; //@line 90 "mcbits/operations.c"
  $6 = $3; //@line 90 "mcbits/operations.c"
  $7 = (_pk_gen($5,$6)|0); //@line 90 "mcbits/operations.c"
  $8 = ($7|0)==(0); //@line 90 "mcbits/operations.c"
  if ($8) {
   break;
  }
 }
 STACKTOP = sp;return 0; //@line 94 "mcbits/operations.c"
}
function _pk_gen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0;
 var $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0;
 var $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0;
 var $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 var sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 405504|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(405504|0);
 $12 = sp_a + 24528|0;
 $13 = sp_a + 24520|0;
 $14 = sp_a + 24512|0;
 $15 = sp_a + 18368|0;
 $16 = sp_a + 18272|0;
 $17 = sp_a + 12128|0;
 $18 = sp_a + 5984|0;
 $19 = sp_a + 5888|0;
 $20 = sp_a;
 $3 = $0;
 $4 = $1;
 $21 = $3; //@line 12 "mcbits/pk_gen.c"
 $5 = $21; //@line 12 "mcbits/pk_gen.c"
 _memcpy(($15|0),(7864|0),6144)|0; //@line 21 "mcbits/pk_gen.c"
 $6 = 0; //@line 36 "mcbits/pk_gen.c"
 while(1) {
  $22 = $6; //@line 36 "mcbits/pk_gen.c"
  $23 = ($22|0)<(12); //@line 36 "mcbits/pk_gen.c"
  if (!($23)) {
   break;
  }
  $24 = $4; //@line 37 "mcbits/pk_gen.c"
  $25 = $6; //@line 37 "mcbits/pk_gen.c"
  $26 = $25<<3; //@line 37 "mcbits/pk_gen.c"
  $27 = (($24) + ($26)|0); //@line 37 "mcbits/pk_gen.c"
  $28 = (_load8($27)|0); //@line 37 "mcbits/pk_gen.c"
  $29 = tempRet0; //@line 37 "mcbits/pk_gen.c"
  $30 = $6; //@line 37 "mcbits/pk_gen.c"
  $31 = (($16) + ($30<<3)|0); //@line 37 "mcbits/pk_gen.c"
  $32 = $31; //@line 37 "mcbits/pk_gen.c"
  $33 = $32; //@line 37 "mcbits/pk_gen.c"
  HEAP32[$33>>2] = $28; //@line 37 "mcbits/pk_gen.c"
  $34 = (($32) + 4)|0; //@line 37 "mcbits/pk_gen.c"
  $35 = $34; //@line 37 "mcbits/pk_gen.c"
  HEAP32[$35>>2] = $29; //@line 37 "mcbits/pk_gen.c"
  $36 = $6; //@line 36 "mcbits/pk_gen.c"
  $37 = (($36) + 1)|0; //@line 36 "mcbits/pk_gen.c"
  $6 = $37; //@line 36 "mcbits/pk_gen.c"
 }
 _fft($17,$16); //@line 39 "mcbits/pk_gen.c"
 _vec_copy($18,$17); //@line 41 "mcbits/pk_gen.c"
 $6 = 1; //@line 43 "mcbits/pk_gen.c"
 while(1) {
  $38 = $6; //@line 43 "mcbits/pk_gen.c"
  $39 = ($38|0)<(64); //@line 43 "mcbits/pk_gen.c"
  if (!($39)) {
   break;
  }
  $40 = $6; //@line 44 "mcbits/pk_gen.c"
  $41 = (($18) + (($40*96)|0)|0); //@line 44 "mcbits/pk_gen.c"
  $42 = $6; //@line 44 "mcbits/pk_gen.c"
  $43 = (($42) - 1)|0; //@line 44 "mcbits/pk_gen.c"
  $44 = (($18) + (($43*96)|0)|0); //@line 44 "mcbits/pk_gen.c"
  $45 = $6; //@line 44 "mcbits/pk_gen.c"
  $46 = (($17) + (($45*96)|0)|0); //@line 44 "mcbits/pk_gen.c"
  _vec_mul($41,$44,$46); //@line 44 "mcbits/pk_gen.c"
  $47 = $6; //@line 43 "mcbits/pk_gen.c"
  $48 = (($47) + 1)|0; //@line 43 "mcbits/pk_gen.c"
  $6 = $48; //@line 43 "mcbits/pk_gen.c"
 }
 $49 = ((($18)) + 6048|0); //@line 46 "mcbits/pk_gen.c"
 _vec_inv($19,$49); //@line 46 "mcbits/pk_gen.c"
 $6 = 62; //@line 48 "mcbits/pk_gen.c"
 while(1) {
  $50 = $6; //@line 48 "mcbits/pk_gen.c"
  $51 = ($50|0)>=(0); //@line 48 "mcbits/pk_gen.c"
  if (!($51)) {
   break;
  }
  $52 = $6; //@line 50 "mcbits/pk_gen.c"
  $53 = (($52) + 1)|0; //@line 50 "mcbits/pk_gen.c"
  $54 = (($18) + (($53*96)|0)|0); //@line 50 "mcbits/pk_gen.c"
  $55 = $6; //@line 50 "mcbits/pk_gen.c"
  $56 = (($18) + (($55*96)|0)|0); //@line 50 "mcbits/pk_gen.c"
  _vec_mul($54,$19,$56); //@line 50 "mcbits/pk_gen.c"
  $57 = $6; //@line 51 "mcbits/pk_gen.c"
  $58 = (($57) + 1)|0; //@line 51 "mcbits/pk_gen.c"
  $59 = (($17) + (($58*96)|0)|0); //@line 51 "mcbits/pk_gen.c"
  _vec_mul($19,$19,$59); //@line 51 "mcbits/pk_gen.c"
  $60 = $6; //@line 48 "mcbits/pk_gen.c"
  $61 = (($60) + -1)|0; //@line 48 "mcbits/pk_gen.c"
  $6 = $61; //@line 48 "mcbits/pk_gen.c"
 }
 _vec_copy($18,$19); //@line 54 "mcbits/pk_gen.c"
 $7 = 0; //@line 58 "mcbits/pk_gen.c"
 while(1) {
  $62 = $7; //@line 58 "mcbits/pk_gen.c"
  $63 = ($62|0)<(64); //@line 58 "mcbits/pk_gen.c"
  if (!($63)) {
   break;
  }
  $8 = 0; //@line 59 "mcbits/pk_gen.c"
  while(1) {
   $64 = $8; //@line 59 "mcbits/pk_gen.c"
   $65 = ($64|0)<(12); //@line 59 "mcbits/pk_gen.c"
   $66 = $7;
   if (!($65)) {
    break;
   }
   $67 = (($18) + (($66*96)|0)|0); //@line 60 "mcbits/pk_gen.c"
   $68 = $8; //@line 60 "mcbits/pk_gen.c"
   $69 = (($67) + ($68<<3)|0); //@line 60 "mcbits/pk_gen.c"
   $70 = $69; //@line 60 "mcbits/pk_gen.c"
   $71 = $70; //@line 60 "mcbits/pk_gen.c"
   $72 = HEAP32[$71>>2]|0; //@line 60 "mcbits/pk_gen.c"
   $73 = (($70) + 4)|0; //@line 60 "mcbits/pk_gen.c"
   $74 = $73; //@line 60 "mcbits/pk_gen.c"
   $75 = HEAP32[$74>>2]|0; //@line 60 "mcbits/pk_gen.c"
   $76 = $8; //@line 60 "mcbits/pk_gen.c"
   $77 = (($12) + ($76<<9)|0); //@line 60 "mcbits/pk_gen.c"
   $78 = $7; //@line 60 "mcbits/pk_gen.c"
   $79 = (($77) + ($78<<3)|0); //@line 60 "mcbits/pk_gen.c"
   $80 = $79; //@line 60 "mcbits/pk_gen.c"
   $81 = $80; //@line 60 "mcbits/pk_gen.c"
   HEAP32[$81>>2] = $72; //@line 60 "mcbits/pk_gen.c"
   $82 = (($80) + 4)|0; //@line 60 "mcbits/pk_gen.c"
   $83 = $82; //@line 60 "mcbits/pk_gen.c"
   HEAP32[$83>>2] = $75; //@line 60 "mcbits/pk_gen.c"
   $84 = $8; //@line 59 "mcbits/pk_gen.c"
   $85 = (($84) + 1)|0; //@line 59 "mcbits/pk_gen.c"
   $8 = $85; //@line 59 "mcbits/pk_gen.c"
  }
  $86 = (($66) + 1)|0; //@line 58 "mcbits/pk_gen.c"
  $7 = $86; //@line 58 "mcbits/pk_gen.c"
 }
 $6 = 1; //@line 62 "mcbits/pk_gen.c"
 while(1) {
  $87 = $6; //@line 62 "mcbits/pk_gen.c"
  $88 = ($87|0)<(62); //@line 62 "mcbits/pk_gen.c"
  if (!($88)) {
   break;
  }
  $7 = 0; //@line 63 "mcbits/pk_gen.c"
  while(1) {
   $89 = $7; //@line 63 "mcbits/pk_gen.c"
   $90 = ($89|0)<(64); //@line 63 "mcbits/pk_gen.c"
   if (!($90)) {
    break;
   }
   $91 = $7; //@line 65 "mcbits/pk_gen.c"
   $92 = (($18) + (($91*96)|0)|0); //@line 65 "mcbits/pk_gen.c"
   $93 = $7; //@line 65 "mcbits/pk_gen.c"
   $94 = (($18) + (($93*96)|0)|0); //@line 65 "mcbits/pk_gen.c"
   $95 = $7; //@line 65 "mcbits/pk_gen.c"
   $96 = (($15) + (($95*96)|0)|0); //@line 65 "mcbits/pk_gen.c"
   _vec_mul($92,$94,$96); //@line 65 "mcbits/pk_gen.c"
   $8 = 0; //@line 67 "mcbits/pk_gen.c"
   while(1) {
    $97 = $8; //@line 67 "mcbits/pk_gen.c"
    $98 = ($97|0)<(12); //@line 67 "mcbits/pk_gen.c"
    $99 = $7;
    if (!($98)) {
     break;
    }
    $100 = (($18) + (($99*96)|0)|0); //@line 68 "mcbits/pk_gen.c"
    $101 = $8; //@line 68 "mcbits/pk_gen.c"
    $102 = (($100) + ($101<<3)|0); //@line 68 "mcbits/pk_gen.c"
    $103 = $102; //@line 68 "mcbits/pk_gen.c"
    $104 = $103; //@line 68 "mcbits/pk_gen.c"
    $105 = HEAP32[$104>>2]|0; //@line 68 "mcbits/pk_gen.c"
    $106 = (($103) + 4)|0; //@line 68 "mcbits/pk_gen.c"
    $107 = $106; //@line 68 "mcbits/pk_gen.c"
    $108 = HEAP32[$107>>2]|0; //@line 68 "mcbits/pk_gen.c"
    $109 = $6; //@line 68 "mcbits/pk_gen.c"
    $110 = ($109*12)|0; //@line 68 "mcbits/pk_gen.c"
    $111 = $8; //@line 68 "mcbits/pk_gen.c"
    $112 = (($110) + ($111))|0; //@line 68 "mcbits/pk_gen.c"
    $113 = (($12) + ($112<<9)|0); //@line 68 "mcbits/pk_gen.c"
    $114 = $7; //@line 68 "mcbits/pk_gen.c"
    $115 = (($113) + ($114<<3)|0); //@line 68 "mcbits/pk_gen.c"
    $116 = $115; //@line 68 "mcbits/pk_gen.c"
    $117 = $116; //@line 68 "mcbits/pk_gen.c"
    HEAP32[$117>>2] = $105; //@line 68 "mcbits/pk_gen.c"
    $118 = (($116) + 4)|0; //@line 68 "mcbits/pk_gen.c"
    $119 = $118; //@line 68 "mcbits/pk_gen.c"
    HEAP32[$119>>2] = $108; //@line 68 "mcbits/pk_gen.c"
    $120 = $8; //@line 67 "mcbits/pk_gen.c"
    $121 = (($120) + 1)|0; //@line 67 "mcbits/pk_gen.c"
    $8 = $121; //@line 67 "mcbits/pk_gen.c"
   }
   $122 = (($99) + 1)|0; //@line 63 "mcbits/pk_gen.c"
   $7 = $122; //@line 63 "mcbits/pk_gen.c"
  }
  $123 = $6; //@line 62 "mcbits/pk_gen.c"
  $124 = (($123) + 1)|0; //@line 62 "mcbits/pk_gen.c"
  $6 = $124; //@line 62 "mcbits/pk_gen.c"
 }
 $6 = 0; //@line 73 "mcbits/pk_gen.c"
 while(1) {
  $125 = $6; //@line 73 "mcbits/pk_gen.c"
  $126 = ($125|0)<(736); //@line 73 "mcbits/pk_gen.c"
  if (!($126)) {
   break;
  }
  $127 = $4; //@line 74 "mcbits/pk_gen.c"
  $128 = ((($127)) + 96|0); //@line 74 "mcbits/pk_gen.c"
  $129 = $6; //@line 74 "mcbits/pk_gen.c"
  $130 = $129<<3; //@line 74 "mcbits/pk_gen.c"
  $131 = (($128) + ($130)|0); //@line 74 "mcbits/pk_gen.c"
  $132 = (_load8($131)|0); //@line 74 "mcbits/pk_gen.c"
  $133 = tempRet0; //@line 74 "mcbits/pk_gen.c"
  $134 = $6; //@line 74 "mcbits/pk_gen.c"
  $135 = (($20) + ($134<<3)|0); //@line 74 "mcbits/pk_gen.c"
  $136 = $135; //@line 74 "mcbits/pk_gen.c"
  $137 = $136; //@line 74 "mcbits/pk_gen.c"
  HEAP32[$137>>2] = $132; //@line 74 "mcbits/pk_gen.c"
  $138 = (($136) + 4)|0; //@line 74 "mcbits/pk_gen.c"
  $139 = $138; //@line 74 "mcbits/pk_gen.c"
  HEAP32[$139>>2] = $133; //@line 74 "mcbits/pk_gen.c"
  $140 = $6; //@line 73 "mcbits/pk_gen.c"
  $141 = (($140) + 1)|0; //@line 73 "mcbits/pk_gen.c"
  $6 = $141; //@line 73 "mcbits/pk_gen.c"
 }
 $6 = 0; //@line 76 "mcbits/pk_gen.c"
 while(1) {
  $142 = $6; //@line 76 "mcbits/pk_gen.c"
  $143 = ($142|0)<(744); //@line 76 "mcbits/pk_gen.c"
  if (!($143)) {
   break;
  }
  $144 = $6; //@line 77 "mcbits/pk_gen.c"
  $145 = (($12) + ($144<<9)|0); //@line 77 "mcbits/pk_gen.c"
  _benes_compact($145,$20,0); //@line 77 "mcbits/pk_gen.c"
  $146 = $6; //@line 76 "mcbits/pk_gen.c"
  $147 = (($146) + 1)|0; //@line 76 "mcbits/pk_gen.c"
  $6 = $147; //@line 76 "mcbits/pk_gen.c"
 }
 $6 = 0; //@line 81 "mcbits/pk_gen.c"
 L41: while(1) {
  $148 = $6; //@line 81 "mcbits/pk_gen.c"
  $149 = ($148|0)<(12); //@line 81 "mcbits/pk_gen.c"
  if (!($149)) {
   break;
  }
  $7 = 0; //@line 82 "mcbits/pk_gen.c"
  while(1) {
   $150 = $7; //@line 82 "mcbits/pk_gen.c"
   $151 = ($150|0)<(64); //@line 82 "mcbits/pk_gen.c"
   if (!($151)) {
    break;
   }
   $152 = $6; //@line 84 "mcbits/pk_gen.c"
   $153 = $152<<6; //@line 84 "mcbits/pk_gen.c"
   $154 = $7; //@line 84 "mcbits/pk_gen.c"
   $155 = (($153) + ($154))|0; //@line 84 "mcbits/pk_gen.c"
   $9 = $155; //@line 84 "mcbits/pk_gen.c"
   $156 = $9; //@line 86 "mcbits/pk_gen.c"
   $157 = ($156|0)>=(744); //@line 86 "mcbits/pk_gen.c"
   if ($157) {
    break;
   }
   $158 = $9; //@line 89 "mcbits/pk_gen.c"
   $159 = (($158) + 1)|0; //@line 89 "mcbits/pk_gen.c"
   $8 = $159; //@line 89 "mcbits/pk_gen.c"
   while(1) {
    $160 = $8; //@line 89 "mcbits/pk_gen.c"
    $161 = ($160|0)<(744); //@line 89 "mcbits/pk_gen.c"
    $162 = $9;
    $163 = (($12) + ($162<<9)|0);
    $164 = $6;
    $165 = (($163) + ($164<<3)|0);
    $166 = $165;
    $167 = $166;
    $168 = HEAP32[$167>>2]|0;
    $169 = (($166) + 4)|0;
    $170 = $169;
    $171 = HEAP32[$170>>2]|0;
    if (!($161)) {
     break;
    }
    $172 = $8; //@line 91 "mcbits/pk_gen.c"
    $173 = (($12) + ($172<<9)|0); //@line 91 "mcbits/pk_gen.c"
    $174 = $6; //@line 91 "mcbits/pk_gen.c"
    $175 = (($173) + ($174<<3)|0); //@line 91 "mcbits/pk_gen.c"
    $176 = $175; //@line 91 "mcbits/pk_gen.c"
    $177 = $176; //@line 91 "mcbits/pk_gen.c"
    $178 = HEAP32[$177>>2]|0; //@line 91 "mcbits/pk_gen.c"
    $179 = (($176) + 4)|0; //@line 91 "mcbits/pk_gen.c"
    $180 = $179; //@line 91 "mcbits/pk_gen.c"
    $181 = HEAP32[$180>>2]|0; //@line 91 "mcbits/pk_gen.c"
    $182 = $168 ^ $178; //@line 91 "mcbits/pk_gen.c"
    $183 = $171 ^ $181; //@line 91 "mcbits/pk_gen.c"
    $184 = $13; //@line 91 "mcbits/pk_gen.c"
    $185 = $184; //@line 91 "mcbits/pk_gen.c"
    HEAP32[$185>>2] = $182; //@line 91 "mcbits/pk_gen.c"
    $186 = (($184) + 4)|0; //@line 91 "mcbits/pk_gen.c"
    $187 = $186; //@line 91 "mcbits/pk_gen.c"
    HEAP32[$187>>2] = $183; //@line 91 "mcbits/pk_gen.c"
    $188 = $7; //@line 92 "mcbits/pk_gen.c"
    $189 = $13; //@line 92 "mcbits/pk_gen.c"
    $190 = $189; //@line 92 "mcbits/pk_gen.c"
    $191 = HEAP32[$190>>2]|0; //@line 92 "mcbits/pk_gen.c"
    $192 = (($189) + 4)|0; //@line 92 "mcbits/pk_gen.c"
    $193 = $192; //@line 92 "mcbits/pk_gen.c"
    $194 = HEAP32[$193>>2]|0; //@line 92 "mcbits/pk_gen.c"
    $195 = (_bitshift64Lshr(($191|0),($194|0),($188|0))|0); //@line 92 "mcbits/pk_gen.c"
    $196 = tempRet0; //@line 92 "mcbits/pk_gen.c"
    $197 = $13; //@line 92 "mcbits/pk_gen.c"
    $198 = $197; //@line 92 "mcbits/pk_gen.c"
    HEAP32[$198>>2] = $195; //@line 92 "mcbits/pk_gen.c"
    $199 = (($197) + 4)|0; //@line 92 "mcbits/pk_gen.c"
    $200 = $199; //@line 92 "mcbits/pk_gen.c"
    HEAP32[$200>>2] = $196; //@line 92 "mcbits/pk_gen.c"
    $201 = $13; //@line 93 "mcbits/pk_gen.c"
    $202 = $201; //@line 93 "mcbits/pk_gen.c"
    $203 = HEAP32[$202>>2]|0; //@line 93 "mcbits/pk_gen.c"
    $204 = (($201) + 4)|0; //@line 93 "mcbits/pk_gen.c"
    $205 = $204; //@line 93 "mcbits/pk_gen.c"
    $206 = HEAP32[$205>>2]|0; //@line 93 "mcbits/pk_gen.c"
    $207 = $203 & 1; //@line 93 "mcbits/pk_gen.c"
    $208 = $13; //@line 93 "mcbits/pk_gen.c"
    $209 = $208; //@line 93 "mcbits/pk_gen.c"
    HEAP32[$209>>2] = $207; //@line 93 "mcbits/pk_gen.c"
    $210 = (($208) + 4)|0; //@line 93 "mcbits/pk_gen.c"
    $211 = $210; //@line 93 "mcbits/pk_gen.c"
    HEAP32[$211>>2] = 0; //@line 93 "mcbits/pk_gen.c"
    $212 = $13; //@line 94 "mcbits/pk_gen.c"
    $213 = $212; //@line 94 "mcbits/pk_gen.c"
    $214 = HEAP32[$213>>2]|0; //@line 94 "mcbits/pk_gen.c"
    $215 = (($212) + 4)|0; //@line 94 "mcbits/pk_gen.c"
    $216 = $215; //@line 94 "mcbits/pk_gen.c"
    $217 = HEAP32[$216>>2]|0; //@line 94 "mcbits/pk_gen.c"
    $218 = (_i64Subtract(0,0,($214|0),($217|0))|0); //@line 94 "mcbits/pk_gen.c"
    $219 = tempRet0; //@line 94 "mcbits/pk_gen.c"
    $220 = $13; //@line 94 "mcbits/pk_gen.c"
    $221 = $220; //@line 94 "mcbits/pk_gen.c"
    HEAP32[$221>>2] = $218; //@line 94 "mcbits/pk_gen.c"
    $222 = (($220) + 4)|0; //@line 94 "mcbits/pk_gen.c"
    $223 = $222; //@line 94 "mcbits/pk_gen.c"
    HEAP32[$223>>2] = $219; //@line 94 "mcbits/pk_gen.c"
    $10 = 0; //@line 96 "mcbits/pk_gen.c"
    while(1) {
     $224 = $10; //@line 96 "mcbits/pk_gen.c"
     $225 = ($224|0)<(64); //@line 96 "mcbits/pk_gen.c"
     $226 = $8;
     if (!($225)) {
      break;
     }
     $227 = (($12) + ($226<<9)|0); //@line 97 "mcbits/pk_gen.c"
     $228 = $10; //@line 97 "mcbits/pk_gen.c"
     $229 = (($227) + ($228<<3)|0); //@line 97 "mcbits/pk_gen.c"
     $230 = $229; //@line 97 "mcbits/pk_gen.c"
     $231 = $230; //@line 97 "mcbits/pk_gen.c"
     $232 = HEAP32[$231>>2]|0; //@line 97 "mcbits/pk_gen.c"
     $233 = (($230) + 4)|0; //@line 97 "mcbits/pk_gen.c"
     $234 = $233; //@line 97 "mcbits/pk_gen.c"
     $235 = HEAP32[$234>>2]|0; //@line 97 "mcbits/pk_gen.c"
     $236 = $13; //@line 97 "mcbits/pk_gen.c"
     $237 = $236; //@line 97 "mcbits/pk_gen.c"
     $238 = HEAP32[$237>>2]|0; //@line 97 "mcbits/pk_gen.c"
     $239 = (($236) + 4)|0; //@line 97 "mcbits/pk_gen.c"
     $240 = $239; //@line 97 "mcbits/pk_gen.c"
     $241 = HEAP32[$240>>2]|0; //@line 97 "mcbits/pk_gen.c"
     $242 = $232 & $238; //@line 97 "mcbits/pk_gen.c"
     $243 = $235 & $241; //@line 97 "mcbits/pk_gen.c"
     $244 = $9; //@line 97 "mcbits/pk_gen.c"
     $245 = (($12) + ($244<<9)|0); //@line 97 "mcbits/pk_gen.c"
     $246 = $10; //@line 97 "mcbits/pk_gen.c"
     $247 = (($245) + ($246<<3)|0); //@line 97 "mcbits/pk_gen.c"
     $248 = $247; //@line 97 "mcbits/pk_gen.c"
     $249 = $248; //@line 97 "mcbits/pk_gen.c"
     $250 = HEAP32[$249>>2]|0; //@line 97 "mcbits/pk_gen.c"
     $251 = (($248) + 4)|0; //@line 97 "mcbits/pk_gen.c"
     $252 = $251; //@line 97 "mcbits/pk_gen.c"
     $253 = HEAP32[$252>>2]|0; //@line 97 "mcbits/pk_gen.c"
     $254 = $250 ^ $242; //@line 97 "mcbits/pk_gen.c"
     $255 = $253 ^ $243; //@line 97 "mcbits/pk_gen.c"
     $256 = $247; //@line 97 "mcbits/pk_gen.c"
     $257 = $256; //@line 97 "mcbits/pk_gen.c"
     HEAP32[$257>>2] = $254; //@line 97 "mcbits/pk_gen.c"
     $258 = (($256) + 4)|0; //@line 97 "mcbits/pk_gen.c"
     $259 = $258; //@line 97 "mcbits/pk_gen.c"
     HEAP32[$259>>2] = $255; //@line 97 "mcbits/pk_gen.c"
     $260 = $10; //@line 96 "mcbits/pk_gen.c"
     $261 = (($260) + 1)|0; //@line 96 "mcbits/pk_gen.c"
     $10 = $261; //@line 96 "mcbits/pk_gen.c"
    }
    $262 = (($226) + 1)|0; //@line 89 "mcbits/pk_gen.c"
    $8 = $262; //@line 89 "mcbits/pk_gen.c"
   }
   $263 = $7; //@line 100 "mcbits/pk_gen.c"
   $264 = (_bitshift64Lshr(($168|0),($171|0),($263|0))|0); //@line 100 "mcbits/pk_gen.c"
   $265 = tempRet0; //@line 100 "mcbits/pk_gen.c"
   $266 = $264 & 1; //@line 100 "mcbits/pk_gen.c"
   $267 = ($266|0)==(0); //@line 100 "mcbits/pk_gen.c"
   $268 = (0)==(0); //@line 100 "mcbits/pk_gen.c"
   $269 = $267 & $268; //@line 100 "mcbits/pk_gen.c"
   if ($269) {
    label = 43;
    break L41;
   }
   $8 = 0; //@line 105 "mcbits/pk_gen.c"
   while(1) {
    $270 = $8; //@line 105 "mcbits/pk_gen.c"
    $271 = ($270|0)<(744); //@line 105 "mcbits/pk_gen.c"
    if (!($271)) {
     break;
    }
    $272 = $8; //@line 107 "mcbits/pk_gen.c"
    $273 = $9; //@line 107 "mcbits/pk_gen.c"
    $274 = ($272|0)!=($273|0); //@line 107 "mcbits/pk_gen.c"
    L60: do {
     if ($274) {
      $275 = $8; //@line 109 "mcbits/pk_gen.c"
      $276 = (($12) + ($275<<9)|0); //@line 109 "mcbits/pk_gen.c"
      $277 = $6; //@line 109 "mcbits/pk_gen.c"
      $278 = (($276) + ($277<<3)|0); //@line 109 "mcbits/pk_gen.c"
      $279 = $278; //@line 109 "mcbits/pk_gen.c"
      $280 = $279; //@line 109 "mcbits/pk_gen.c"
      $281 = HEAP32[$280>>2]|0; //@line 109 "mcbits/pk_gen.c"
      $282 = (($279) + 4)|0; //@line 109 "mcbits/pk_gen.c"
      $283 = $282; //@line 109 "mcbits/pk_gen.c"
      $284 = HEAP32[$283>>2]|0; //@line 109 "mcbits/pk_gen.c"
      $285 = $7; //@line 109 "mcbits/pk_gen.c"
      $286 = (_bitshift64Lshr(($281|0),($284|0),($285|0))|0); //@line 109 "mcbits/pk_gen.c"
      $287 = tempRet0; //@line 109 "mcbits/pk_gen.c"
      $288 = $13; //@line 109 "mcbits/pk_gen.c"
      $289 = $288; //@line 109 "mcbits/pk_gen.c"
      HEAP32[$289>>2] = $286; //@line 109 "mcbits/pk_gen.c"
      $290 = (($288) + 4)|0; //@line 109 "mcbits/pk_gen.c"
      $291 = $290; //@line 109 "mcbits/pk_gen.c"
      HEAP32[$291>>2] = $287; //@line 109 "mcbits/pk_gen.c"
      $292 = $13; //@line 110 "mcbits/pk_gen.c"
      $293 = $292; //@line 110 "mcbits/pk_gen.c"
      $294 = HEAP32[$293>>2]|0; //@line 110 "mcbits/pk_gen.c"
      $295 = (($292) + 4)|0; //@line 110 "mcbits/pk_gen.c"
      $296 = $295; //@line 110 "mcbits/pk_gen.c"
      $297 = HEAP32[$296>>2]|0; //@line 110 "mcbits/pk_gen.c"
      $298 = $294 & 1; //@line 110 "mcbits/pk_gen.c"
      $299 = $13; //@line 110 "mcbits/pk_gen.c"
      $300 = $299; //@line 110 "mcbits/pk_gen.c"
      HEAP32[$300>>2] = $298; //@line 110 "mcbits/pk_gen.c"
      $301 = (($299) + 4)|0; //@line 110 "mcbits/pk_gen.c"
      $302 = $301; //@line 110 "mcbits/pk_gen.c"
      HEAP32[$302>>2] = 0; //@line 110 "mcbits/pk_gen.c"
      $303 = $13; //@line 111 "mcbits/pk_gen.c"
      $304 = $303; //@line 111 "mcbits/pk_gen.c"
      $305 = HEAP32[$304>>2]|0; //@line 111 "mcbits/pk_gen.c"
      $306 = (($303) + 4)|0; //@line 111 "mcbits/pk_gen.c"
      $307 = $306; //@line 111 "mcbits/pk_gen.c"
      $308 = HEAP32[$307>>2]|0; //@line 111 "mcbits/pk_gen.c"
      $309 = (_i64Subtract(0,0,($305|0),($308|0))|0); //@line 111 "mcbits/pk_gen.c"
      $310 = tempRet0; //@line 111 "mcbits/pk_gen.c"
      $311 = $13; //@line 111 "mcbits/pk_gen.c"
      $312 = $311; //@line 111 "mcbits/pk_gen.c"
      HEAP32[$312>>2] = $309; //@line 111 "mcbits/pk_gen.c"
      $313 = (($311) + 4)|0; //@line 111 "mcbits/pk_gen.c"
      $314 = $313; //@line 111 "mcbits/pk_gen.c"
      HEAP32[$314>>2] = $310; //@line 111 "mcbits/pk_gen.c"
      $10 = 0; //@line 113 "mcbits/pk_gen.c"
      while(1) {
       $315 = $10; //@line 113 "mcbits/pk_gen.c"
       $316 = ($315|0)<(64); //@line 113 "mcbits/pk_gen.c"
       if (!($316)) {
        break L60;
       }
       $317 = $9; //@line 114 "mcbits/pk_gen.c"
       $318 = (($12) + ($317<<9)|0); //@line 114 "mcbits/pk_gen.c"
       $319 = $10; //@line 114 "mcbits/pk_gen.c"
       $320 = (($318) + ($319<<3)|0); //@line 114 "mcbits/pk_gen.c"
       $321 = $320; //@line 114 "mcbits/pk_gen.c"
       $322 = $321; //@line 114 "mcbits/pk_gen.c"
       $323 = HEAP32[$322>>2]|0; //@line 114 "mcbits/pk_gen.c"
       $324 = (($321) + 4)|0; //@line 114 "mcbits/pk_gen.c"
       $325 = $324; //@line 114 "mcbits/pk_gen.c"
       $326 = HEAP32[$325>>2]|0; //@line 114 "mcbits/pk_gen.c"
       $327 = $13; //@line 114 "mcbits/pk_gen.c"
       $328 = $327; //@line 114 "mcbits/pk_gen.c"
       $329 = HEAP32[$328>>2]|0; //@line 114 "mcbits/pk_gen.c"
       $330 = (($327) + 4)|0; //@line 114 "mcbits/pk_gen.c"
       $331 = $330; //@line 114 "mcbits/pk_gen.c"
       $332 = HEAP32[$331>>2]|0; //@line 114 "mcbits/pk_gen.c"
       $333 = $323 & $329; //@line 114 "mcbits/pk_gen.c"
       $334 = $326 & $332; //@line 114 "mcbits/pk_gen.c"
       $335 = $8; //@line 114 "mcbits/pk_gen.c"
       $336 = (($12) + ($335<<9)|0); //@line 114 "mcbits/pk_gen.c"
       $337 = $10; //@line 114 "mcbits/pk_gen.c"
       $338 = (($336) + ($337<<3)|0); //@line 114 "mcbits/pk_gen.c"
       $339 = $338; //@line 114 "mcbits/pk_gen.c"
       $340 = $339; //@line 114 "mcbits/pk_gen.c"
       $341 = HEAP32[$340>>2]|0; //@line 114 "mcbits/pk_gen.c"
       $342 = (($339) + 4)|0; //@line 114 "mcbits/pk_gen.c"
       $343 = $342; //@line 114 "mcbits/pk_gen.c"
       $344 = HEAP32[$343>>2]|0; //@line 114 "mcbits/pk_gen.c"
       $345 = $341 ^ $333; //@line 114 "mcbits/pk_gen.c"
       $346 = $344 ^ $334; //@line 114 "mcbits/pk_gen.c"
       $347 = $338; //@line 114 "mcbits/pk_gen.c"
       $348 = $347; //@line 114 "mcbits/pk_gen.c"
       HEAP32[$348>>2] = $345; //@line 114 "mcbits/pk_gen.c"
       $349 = (($347) + 4)|0; //@line 114 "mcbits/pk_gen.c"
       $350 = $349; //@line 114 "mcbits/pk_gen.c"
       HEAP32[$350>>2] = $346; //@line 114 "mcbits/pk_gen.c"
       $351 = $10; //@line 113 "mcbits/pk_gen.c"
       $352 = (($351) + 1)|0; //@line 113 "mcbits/pk_gen.c"
       $10 = $352; //@line 113 "mcbits/pk_gen.c"
      }
     }
    } while(0);
    $353 = $8; //@line 105 "mcbits/pk_gen.c"
    $354 = (($353) + 1)|0; //@line 105 "mcbits/pk_gen.c"
    $8 = $354; //@line 105 "mcbits/pk_gen.c"
   }
   $355 = $7; //@line 82 "mcbits/pk_gen.c"
   $356 = (($355) + 1)|0; //@line 82 "mcbits/pk_gen.c"
   $7 = $356; //@line 82 "mcbits/pk_gen.c"
  }
  $357 = $6; //@line 81 "mcbits/pk_gen.c"
  $358 = (($357) + 1)|0; //@line 81 "mcbits/pk_gen.c"
  $6 = $358; //@line 81 "mcbits/pk_gen.c"
 }
 if ((label|0) == 43) {
  $2 = -1; //@line 102 "mcbits/pk_gen.c"
  $419 = $2; //@line 141 "mcbits/pk_gen.c"
  STACKTOP = sp;return ($419|0); //@line 141 "mcbits/pk_gen.c"
 }
 $11 = 5; //@line 121 "mcbits/pk_gen.c"
 $6 = 0; //@line 123 "mcbits/pk_gen.c"
 while(1) {
  $359 = $6; //@line 123 "mcbits/pk_gen.c"
  $360 = ($359|0)<(744); //@line 123 "mcbits/pk_gen.c"
  if (!($360)) {
   break;
  }
  $361 = $6; //@line 125 "mcbits/pk_gen.c"
  $362 = (($12) + ($361<<9)|0); //@line 125 "mcbits/pk_gen.c"
  $363 = ((($362)) + 88|0); //@line 125 "mcbits/pk_gen.c"
  $364 = $363; //@line 125 "mcbits/pk_gen.c"
  $365 = $364; //@line 125 "mcbits/pk_gen.c"
  $366 = HEAP32[$365>>2]|0; //@line 125 "mcbits/pk_gen.c"
  $367 = (($364) + 4)|0; //@line 125 "mcbits/pk_gen.c"
  $368 = $367; //@line 125 "mcbits/pk_gen.c"
  $369 = HEAP32[$368>>2]|0; //@line 125 "mcbits/pk_gen.c"
  $370 = $14; //@line 125 "mcbits/pk_gen.c"
  $371 = $370; //@line 125 "mcbits/pk_gen.c"
  HEAP32[$371>>2] = $366; //@line 125 "mcbits/pk_gen.c"
  $372 = (($370) + 4)|0; //@line 125 "mcbits/pk_gen.c"
  $373 = $372; //@line 125 "mcbits/pk_gen.c"
  HEAP32[$373>>2] = $369; //@line 125 "mcbits/pk_gen.c"
  $374 = $11; //@line 127 "mcbits/pk_gen.c"
  $8 = $374; //@line 127 "mcbits/pk_gen.c"
  while(1) {
   $375 = $8; //@line 127 "mcbits/pk_gen.c"
   $376 = ($375|0)<(8); //@line 127 "mcbits/pk_gen.c"
   if (!($376)) {
    break;
   }
   $377 = $14; //@line 128 "mcbits/pk_gen.c"
   $378 = $377; //@line 128 "mcbits/pk_gen.c"
   $379 = HEAP32[$378>>2]|0; //@line 128 "mcbits/pk_gen.c"
   $380 = (($377) + 4)|0; //@line 128 "mcbits/pk_gen.c"
   $381 = $380; //@line 128 "mcbits/pk_gen.c"
   $382 = HEAP32[$381>>2]|0; //@line 128 "mcbits/pk_gen.c"
   $383 = $8; //@line 128 "mcbits/pk_gen.c"
   $384 = $383<<3; //@line 128 "mcbits/pk_gen.c"
   $385 = (_bitshift64Lshr(($379|0),($382|0),($384|0))|0); //@line 128 "mcbits/pk_gen.c"
   $386 = tempRet0; //@line 128 "mcbits/pk_gen.c"
   $387 = $385 & 255; //@line 128 "mcbits/pk_gen.c"
   $388 = $387&255; //@line 128 "mcbits/pk_gen.c"
   $389 = $5; //@line 128 "mcbits/pk_gen.c"
   $390 = $8; //@line 128 "mcbits/pk_gen.c"
   $391 = $11; //@line 128 "mcbits/pk_gen.c"
   $392 = (($390) - ($391))|0; //@line 128 "mcbits/pk_gen.c"
   $393 = (($389) + ($392)|0); //@line 128 "mcbits/pk_gen.c"
   HEAP8[$393>>0] = $388; //@line 128 "mcbits/pk_gen.c"
   $394 = $8; //@line 127 "mcbits/pk_gen.c"
   $395 = (($394) + 1)|0; //@line 127 "mcbits/pk_gen.c"
   $8 = $395; //@line 127 "mcbits/pk_gen.c"
  }
  $396 = $11; //@line 130 "mcbits/pk_gen.c"
  $397 = (8 - ($396))|0; //@line 130 "mcbits/pk_gen.c"
  $398 = $5; //@line 130 "mcbits/pk_gen.c"
  $399 = (($398) + ($397)|0); //@line 130 "mcbits/pk_gen.c"
  $5 = $399; //@line 130 "mcbits/pk_gen.c"
  $7 = 12; //@line 132 "mcbits/pk_gen.c"
  while(1) {
   $400 = $7; //@line 132 "mcbits/pk_gen.c"
   $401 = ($400|0)<(64); //@line 132 "mcbits/pk_gen.c"
   if (!($401)) {
    break;
   }
   $402 = $5; //@line 134 "mcbits/pk_gen.c"
   $403 = $6; //@line 134 "mcbits/pk_gen.c"
   $404 = (($12) + ($403<<9)|0); //@line 134 "mcbits/pk_gen.c"
   $405 = $7; //@line 134 "mcbits/pk_gen.c"
   $406 = (($404) + ($405<<3)|0); //@line 134 "mcbits/pk_gen.c"
   $407 = $406; //@line 134 "mcbits/pk_gen.c"
   $408 = $407; //@line 134 "mcbits/pk_gen.c"
   $409 = HEAP32[$408>>2]|0; //@line 134 "mcbits/pk_gen.c"
   $410 = (($407) + 4)|0; //@line 134 "mcbits/pk_gen.c"
   $411 = $410; //@line 134 "mcbits/pk_gen.c"
   $412 = HEAP32[$411>>2]|0; //@line 134 "mcbits/pk_gen.c"
   _store8($402,$409,$412); //@line 134 "mcbits/pk_gen.c"
   $413 = $5; //@line 136 "mcbits/pk_gen.c"
   $414 = ((($413)) + 8|0); //@line 136 "mcbits/pk_gen.c"
   $5 = $414; //@line 136 "mcbits/pk_gen.c"
   $415 = $7; //@line 132 "mcbits/pk_gen.c"
   $416 = (($415) + 1)|0; //@line 132 "mcbits/pk_gen.c"
   $7 = $416; //@line 132 "mcbits/pk_gen.c"
  }
  $417 = $6; //@line 123 "mcbits/pk_gen.c"
  $418 = (($417) + 1)|0; //@line 123 "mcbits/pk_gen.c"
  $6 = $418; //@line 123 "mcbits/pk_gen.c"
 }
 $2 = 0; //@line 140 "mcbits/pk_gen.c"
 $419 = $2; //@line 141 "mcbits/pk_gen.c"
 STACKTOP = sp;return ($419|0); //@line 141 "mcbits/pk_gen.c"
}
function _irr_gen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 7856|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(7856|0);
 $9 = sp_a + 36|0;
 $3 = $0;
 $4 = $1;
 HEAP16[$9>>1] = 1; //@line 19 "mcbits/sk_gen.c"
 $5 = 1; //@line 20 "mcbits/sk_gen.c"
 while(1) {
  $13 = $5; //@line 20 "mcbits/sk_gen.c"
  $14 = ($13|0)<(62); //@line 20 "mcbits/sk_gen.c"
  if (!($14)) {
   break;
  }
  $15 = $5; //@line 21 "mcbits/sk_gen.c"
  $16 = (($9) + ($15<<1)|0); //@line 21 "mcbits/sk_gen.c"
  HEAP16[$16>>1] = 0; //@line 21 "mcbits/sk_gen.c"
  $17 = $5; //@line 20 "mcbits/sk_gen.c"
  $18 = (($17) + 1)|0; //@line 20 "mcbits/sk_gen.c"
  $5 = $18; //@line 20 "mcbits/sk_gen.c"
 }
 $5 = 0; //@line 23 "mcbits/sk_gen.c"
 while(1) {
  $19 = $5; //@line 23 "mcbits/sk_gen.c"
  $20 = ($19|0)<(62); //@line 23 "mcbits/sk_gen.c"
  if (!($20)) {
   break;
  }
  $21 = $4; //@line 24 "mcbits/sk_gen.c"
  $22 = $5; //@line 24 "mcbits/sk_gen.c"
  $23 = (($21) + ($22<<1)|0); //@line 24 "mcbits/sk_gen.c"
  $24 = HEAP16[$23>>1]|0; //@line 24 "mcbits/sk_gen.c"
  $25 = ((($9)) + 124|0); //@line 24 "mcbits/sk_gen.c"
  $26 = $5; //@line 24 "mcbits/sk_gen.c"
  $27 = (($25) + ($26<<1)|0); //@line 24 "mcbits/sk_gen.c"
  HEAP16[$27>>1] = $24; //@line 24 "mcbits/sk_gen.c"
  $28 = $5; //@line 23 "mcbits/sk_gen.c"
  $29 = (($28) + 1)|0; //@line 23 "mcbits/sk_gen.c"
  $5 = $29; //@line 23 "mcbits/sk_gen.c"
 }
 $6 = 2; //@line 26 "mcbits/sk_gen.c"
 while(1) {
  $30 = $6; //@line 26 "mcbits/sk_gen.c"
  $31 = ($30|0)<=(62); //@line 26 "mcbits/sk_gen.c"
  if (!($31)) {
   break;
  }
  $32 = $6; //@line 27 "mcbits/sk_gen.c"
  $33 = (($9) + (($32*124)|0)|0); //@line 27 "mcbits/sk_gen.c"
  $34 = $6; //@line 27 "mcbits/sk_gen.c"
  $35 = (($34) - 1)|0; //@line 27 "mcbits/sk_gen.c"
  $36 = (($9) + (($35*124)|0)|0); //@line 27 "mcbits/sk_gen.c"
  $37 = $4; //@line 27 "mcbits/sk_gen.c"
  _GF_mul($33,$36,$37); //@line 27 "mcbits/sk_gen.c"
  $38 = $6; //@line 26 "mcbits/sk_gen.c"
  $39 = (($38) + 1)|0; //@line 26 "mcbits/sk_gen.c"
  $6 = $39; //@line 26 "mcbits/sk_gen.c"
 }
 $6 = 0; //@line 31 "mcbits/sk_gen.c"
 while(1) {
  $40 = $6; //@line 31 "mcbits/sk_gen.c"
  $41 = ($40|0)<(62); //@line 31 "mcbits/sk_gen.c"
  if (!($41)) {
   break;
  }
  $42 = $6; //@line 33 "mcbits/sk_gen.c"
  $43 = (($42) + 1)|0; //@line 33 "mcbits/sk_gen.c"
  $7 = $43; //@line 33 "mcbits/sk_gen.c"
  while(1) {
   $44 = $7; //@line 33 "mcbits/sk_gen.c"
   $45 = ($44|0)<(62); //@line 33 "mcbits/sk_gen.c"
   $46 = $6;
   $47 = (($9) + (($46*124)|0)|0);
   $48 = $6;
   $49 = (($47) + ($48<<1)|0);
   $50 = HEAP16[$49>>1]|0;
   if (!($45)) {
    break;
   }
   $51 = $6; //@line 35 "mcbits/sk_gen.c"
   $52 = (($9) + (($51*124)|0)|0); //@line 35 "mcbits/sk_gen.c"
   $53 = $7; //@line 35 "mcbits/sk_gen.c"
   $54 = (($52) + ($53<<1)|0); //@line 35 "mcbits/sk_gen.c"
   $55 = HEAP16[$54>>1]|0; //@line 35 "mcbits/sk_gen.c"
   $56 = (_gf_diff($50,$55)|0); //@line 35 "mcbits/sk_gen.c"
   $10 = $56; //@line 35 "mcbits/sk_gen.c"
   $8 = 0; //@line 37 "mcbits/sk_gen.c"
   while(1) {
    $57 = $8; //@line 37 "mcbits/sk_gen.c"
    $58 = ($57|0)<(63); //@line 37 "mcbits/sk_gen.c"
    if (!($58)) {
     break;
    }
    $59 = $8; //@line 38 "mcbits/sk_gen.c"
    $60 = (($9) + (($59*124)|0)|0); //@line 38 "mcbits/sk_gen.c"
    $61 = $7; //@line 38 "mcbits/sk_gen.c"
    $62 = (($60) + ($61<<1)|0); //@line 38 "mcbits/sk_gen.c"
    $63 = HEAP16[$62>>1]|0; //@line 38 "mcbits/sk_gen.c"
    $64 = $63&65535; //@line 38 "mcbits/sk_gen.c"
    $65 = $10; //@line 38 "mcbits/sk_gen.c"
    $66 = $65&65535; //@line 38 "mcbits/sk_gen.c"
    $67 = $64 & $66; //@line 38 "mcbits/sk_gen.c"
    $68 = $8; //@line 38 "mcbits/sk_gen.c"
    $69 = (($9) + (($68*124)|0)|0); //@line 38 "mcbits/sk_gen.c"
    $70 = $6; //@line 38 "mcbits/sk_gen.c"
    $71 = (($69) + ($70<<1)|0); //@line 38 "mcbits/sk_gen.c"
    $72 = HEAP16[$71>>1]|0; //@line 38 "mcbits/sk_gen.c"
    $73 = $72&65535; //@line 38 "mcbits/sk_gen.c"
    $74 = $73 ^ $67; //@line 38 "mcbits/sk_gen.c"
    $75 = $74&65535; //@line 38 "mcbits/sk_gen.c"
    HEAP16[$71>>1] = $75; //@line 38 "mcbits/sk_gen.c"
    $76 = $8; //@line 37 "mcbits/sk_gen.c"
    $77 = (($76) + 1)|0; //@line 37 "mcbits/sk_gen.c"
    $8 = $77; //@line 37 "mcbits/sk_gen.c"
   }
   $78 = $7; //@line 33 "mcbits/sk_gen.c"
   $79 = (($78) + 1)|0; //@line 33 "mcbits/sk_gen.c"
   $7 = $79; //@line 33 "mcbits/sk_gen.c"
  }
  $80 = $50&65535; //@line 41 "mcbits/sk_gen.c"
  $81 = ($80|0)==(0); //@line 41 "mcbits/sk_gen.c"
  if ($81) {
   label = 19;
   break;
  }
  $82 = $6; //@line 48 "mcbits/sk_gen.c"
  $83 = (($9) + (($82*124)|0)|0); //@line 48 "mcbits/sk_gen.c"
  $84 = $6; //@line 48 "mcbits/sk_gen.c"
  $85 = (($83) + ($84<<1)|0); //@line 48 "mcbits/sk_gen.c"
  $86 = HEAP16[$85>>1]|0; //@line 48 "mcbits/sk_gen.c"
  $87 = (_gf_inv($86)|0); //@line 48 "mcbits/sk_gen.c"
  $11 = $87; //@line 48 "mcbits/sk_gen.c"
  $8 = 0; //@line 50 "mcbits/sk_gen.c"
  while(1) {
   $88 = $8; //@line 50 "mcbits/sk_gen.c"
   $89 = ($88|0)<(63); //@line 50 "mcbits/sk_gen.c"
   if (!($89)) {
    break;
   }
   $90 = $8; //@line 51 "mcbits/sk_gen.c"
   $91 = (($9) + (($90*124)|0)|0); //@line 51 "mcbits/sk_gen.c"
   $92 = $6; //@line 51 "mcbits/sk_gen.c"
   $93 = (($91) + ($92<<1)|0); //@line 51 "mcbits/sk_gen.c"
   $94 = HEAP16[$93>>1]|0; //@line 51 "mcbits/sk_gen.c"
   $95 = $11; //@line 51 "mcbits/sk_gen.c"
   $96 = (_gf_mul($94,$95)|0); //@line 51 "mcbits/sk_gen.c"
   $97 = $8; //@line 51 "mcbits/sk_gen.c"
   $98 = (($9) + (($97*124)|0)|0); //@line 51 "mcbits/sk_gen.c"
   $99 = $6; //@line 51 "mcbits/sk_gen.c"
   $100 = (($98) + ($99<<1)|0); //@line 51 "mcbits/sk_gen.c"
   HEAP16[$100>>1] = $96; //@line 51 "mcbits/sk_gen.c"
   $101 = $8; //@line 50 "mcbits/sk_gen.c"
   $102 = (($101) + 1)|0; //@line 50 "mcbits/sk_gen.c"
   $8 = $102; //@line 50 "mcbits/sk_gen.c"
  }
  $7 = 0; //@line 55 "mcbits/sk_gen.c"
  while(1) {
   $103 = $7; //@line 55 "mcbits/sk_gen.c"
   $104 = ($103|0)<(62); //@line 55 "mcbits/sk_gen.c"
   $105 = $6;
   if (!($104)) {
    break;
   }
   $106 = (($9) + (($105*124)|0)|0); //@line 57 "mcbits/sk_gen.c"
   $107 = $7; //@line 57 "mcbits/sk_gen.c"
   $108 = (($106) + ($107<<1)|0); //@line 57 "mcbits/sk_gen.c"
   $109 = HEAP16[$108>>1]|0; //@line 57 "mcbits/sk_gen.c"
   $12 = $109; //@line 57 "mcbits/sk_gen.c"
   $110 = $7; //@line 59 "mcbits/sk_gen.c"
   $111 = $6; //@line 59 "mcbits/sk_gen.c"
   $112 = ($110|0)!=($111|0); //@line 59 "mcbits/sk_gen.c"
   L32: do {
    if ($112) {
     $8 = 0; //@line 61 "mcbits/sk_gen.c"
     while(1) {
      $113 = $8; //@line 61 "mcbits/sk_gen.c"
      $114 = ($113|0)<(63); //@line 61 "mcbits/sk_gen.c"
      if (!($114)) {
       break L32;
      }
      $115 = $8; //@line 62 "mcbits/sk_gen.c"
      $116 = (($9) + (($115*124)|0)|0); //@line 62 "mcbits/sk_gen.c"
      $117 = $6; //@line 62 "mcbits/sk_gen.c"
      $118 = (($116) + ($117<<1)|0); //@line 62 "mcbits/sk_gen.c"
      $119 = HEAP16[$118>>1]|0; //@line 62 "mcbits/sk_gen.c"
      $120 = $12; //@line 62 "mcbits/sk_gen.c"
      $121 = (_gf_mul($119,$120)|0); //@line 62 "mcbits/sk_gen.c"
      $122 = $121&65535; //@line 62 "mcbits/sk_gen.c"
      $123 = $8; //@line 62 "mcbits/sk_gen.c"
      $124 = (($9) + (($123*124)|0)|0); //@line 62 "mcbits/sk_gen.c"
      $125 = $7; //@line 62 "mcbits/sk_gen.c"
      $126 = (($124) + ($125<<1)|0); //@line 62 "mcbits/sk_gen.c"
      $127 = HEAP16[$126>>1]|0; //@line 62 "mcbits/sk_gen.c"
      $128 = $127&65535; //@line 62 "mcbits/sk_gen.c"
      $129 = $128 ^ $122; //@line 62 "mcbits/sk_gen.c"
      $130 = $129&65535; //@line 62 "mcbits/sk_gen.c"
      HEAP16[$126>>1] = $130; //@line 62 "mcbits/sk_gen.c"
      $131 = $8; //@line 61 "mcbits/sk_gen.c"
      $132 = (($131) + 1)|0; //@line 61 "mcbits/sk_gen.c"
      $8 = $132; //@line 61 "mcbits/sk_gen.c"
     }
    }
   } while(0);
   $133 = $7; //@line 55 "mcbits/sk_gen.c"
   $134 = (($133) + 1)|0; //@line 55 "mcbits/sk_gen.c"
   $7 = $134; //@line 55 "mcbits/sk_gen.c"
  }
  $135 = (($105) + 1)|0; //@line 31 "mcbits/sk_gen.c"
  $6 = $135; //@line 31 "mcbits/sk_gen.c"
 }
 if ((label|0) == 19) {
  $2 = -1; //@line 43 "mcbits/sk_gen.c"
  $149 = $2; //@line 76 "mcbits/sk_gen.c"
  STACKTOP = sp;return ($149|0); //@line 76 "mcbits/sk_gen.c"
 }
 $5 = 0; //@line 69 "mcbits/sk_gen.c"
 while(1) {
  $136 = $5; //@line 69 "mcbits/sk_gen.c"
  $137 = ($136|0)<(62); //@line 69 "mcbits/sk_gen.c"
  if (!($137)) {
   break;
  }
  $138 = ((($9)) + 7688|0); //@line 70 "mcbits/sk_gen.c"
  $139 = $5; //@line 70 "mcbits/sk_gen.c"
  $140 = (($138) + ($139<<1)|0); //@line 70 "mcbits/sk_gen.c"
  $141 = HEAP16[$140>>1]|0; //@line 70 "mcbits/sk_gen.c"
  $142 = $3; //@line 70 "mcbits/sk_gen.c"
  $143 = $5; //@line 70 "mcbits/sk_gen.c"
  $144 = (($142) + ($143<<1)|0); //@line 70 "mcbits/sk_gen.c"
  HEAP16[$144>>1] = $141; //@line 70 "mcbits/sk_gen.c"
  $145 = $5; //@line 69 "mcbits/sk_gen.c"
  $146 = (($145) + 1)|0; //@line 69 "mcbits/sk_gen.c"
  $5 = $146; //@line 69 "mcbits/sk_gen.c"
 }
 $147 = $3; //@line 72 "mcbits/sk_gen.c"
 $148 = ((($147)) + 124|0); //@line 72 "mcbits/sk_gen.c"
 HEAP16[$148>>1] = 1; //@line 72 "mcbits/sk_gen.c"
 $2 = 0; //@line 74 "mcbits/sk_gen.c"
 $149 = $2; //@line 76 "mcbits/sk_gen.c"
 STACKTOP = sp;return ($149|0); //@line 76 "mcbits/sk_gen.c"
}
function _sk_gen($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 6256|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(6256|0);
 $2 = sp_a + 96|0;
 $3 = sp_a;
 $6 = sp_a + 6120|0;
 $7 = sp_a + 5996|0;
 $1 = $0;
 while(1) {
  _randombytes($7,124,0); //@line 90 "mcbits/sk_gen.c"
  $4 = 0; //@line 92 "mcbits/sk_gen.c"
  while(1) {
   $8 = $4; //@line 92 "mcbits/sk_gen.c"
   $9 = ($8|0)<(62); //@line 92 "mcbits/sk_gen.c"
   if (!($9)) {
    break;
   }
   $10 = $4; //@line 92 "mcbits/sk_gen.c"
   $11 = (($7) + ($10<<1)|0); //@line 92 "mcbits/sk_gen.c"
   $12 = HEAP16[$11>>1]|0; //@line 92 "mcbits/sk_gen.c"
   $13 = $12&65535; //@line 92 "mcbits/sk_gen.c"
   $14 = $13 & 4095; //@line 92 "mcbits/sk_gen.c"
   $15 = $14&65535; //@line 92 "mcbits/sk_gen.c"
   HEAP16[$11>>1] = $15; //@line 92 "mcbits/sk_gen.c"
   $16 = $4; //@line 92 "mcbits/sk_gen.c"
   $17 = (($16) + 1)|0; //@line 92 "mcbits/sk_gen.c"
   $4 = $17; //@line 92 "mcbits/sk_gen.c"
  }
  $18 = (_irr_gen($6,$7)|0); //@line 94 "mcbits/sk_gen.c"
  $19 = ($18|0)==(0); //@line 94 "mcbits/sk_gen.c"
  if ($19) {
   break;
  }
 }
 $4 = 0; //@line 97 "mcbits/sk_gen.c"
 while(1) {
  $20 = $4; //@line 97 "mcbits/sk_gen.c"
  $21 = ($20|0)<(12); //@line 97 "mcbits/sk_gen.c"
  if (!($21)) {
   break;
  }
  $22 = $4; //@line 99 "mcbits/sk_gen.c"
  $23 = (($3) + ($22<<3)|0); //@line 99 "mcbits/sk_gen.c"
  $24 = $23; //@line 99 "mcbits/sk_gen.c"
  $25 = $24; //@line 99 "mcbits/sk_gen.c"
  HEAP32[$25>>2] = 0; //@line 99 "mcbits/sk_gen.c"
  $26 = (($24) + 4)|0; //@line 99 "mcbits/sk_gen.c"
  $27 = $26; //@line 99 "mcbits/sk_gen.c"
  HEAP32[$27>>2] = 0; //@line 99 "mcbits/sk_gen.c"
  $5 = 62; //@line 101 "mcbits/sk_gen.c"
  while(1) {
   $28 = $5; //@line 101 "mcbits/sk_gen.c"
   $29 = ($28|0)>=(0); //@line 101 "mcbits/sk_gen.c"
   if (!($29)) {
    break;
   }
   $30 = $4; //@line 103 "mcbits/sk_gen.c"
   $31 = (($3) + ($30<<3)|0); //@line 103 "mcbits/sk_gen.c"
   $32 = $31; //@line 103 "mcbits/sk_gen.c"
   $33 = $32; //@line 103 "mcbits/sk_gen.c"
   $34 = HEAP32[$33>>2]|0; //@line 103 "mcbits/sk_gen.c"
   $35 = (($32) + 4)|0; //@line 103 "mcbits/sk_gen.c"
   $36 = $35; //@line 103 "mcbits/sk_gen.c"
   $37 = HEAP32[$36>>2]|0; //@line 103 "mcbits/sk_gen.c"
   $38 = (_bitshift64Shl(($34|0),($37|0),1)|0); //@line 103 "mcbits/sk_gen.c"
   $39 = tempRet0; //@line 103 "mcbits/sk_gen.c"
   $40 = $31; //@line 103 "mcbits/sk_gen.c"
   $41 = $40; //@line 103 "mcbits/sk_gen.c"
   HEAP32[$41>>2] = $38; //@line 103 "mcbits/sk_gen.c"
   $42 = (($40) + 4)|0; //@line 103 "mcbits/sk_gen.c"
   $43 = $42; //@line 103 "mcbits/sk_gen.c"
   HEAP32[$43>>2] = $39; //@line 103 "mcbits/sk_gen.c"
   $44 = $5; //@line 104 "mcbits/sk_gen.c"
   $45 = (($6) + ($44<<1)|0); //@line 104 "mcbits/sk_gen.c"
   $46 = HEAP16[$45>>1]|0; //@line 104 "mcbits/sk_gen.c"
   $47 = $46&65535; //@line 104 "mcbits/sk_gen.c"
   $48 = $4; //@line 104 "mcbits/sk_gen.c"
   $49 = $47 >> $48; //@line 104 "mcbits/sk_gen.c"
   $50 = $49 & 1; //@line 104 "mcbits/sk_gen.c"
   $51 = ($50|0)<(0); //@line 104 "mcbits/sk_gen.c"
   $52 = $51 << 31 >> 31; //@line 104 "mcbits/sk_gen.c"
   $53 = $4; //@line 104 "mcbits/sk_gen.c"
   $54 = (($3) + ($53<<3)|0); //@line 104 "mcbits/sk_gen.c"
   $55 = $54; //@line 104 "mcbits/sk_gen.c"
   $56 = $55; //@line 104 "mcbits/sk_gen.c"
   $57 = HEAP32[$56>>2]|0; //@line 104 "mcbits/sk_gen.c"
   $58 = (($55) + 4)|0; //@line 104 "mcbits/sk_gen.c"
   $59 = $58; //@line 104 "mcbits/sk_gen.c"
   $60 = HEAP32[$59>>2]|0; //@line 104 "mcbits/sk_gen.c"
   $61 = $57 | $50; //@line 104 "mcbits/sk_gen.c"
   $62 = $60 | $52; //@line 104 "mcbits/sk_gen.c"
   $63 = $54; //@line 104 "mcbits/sk_gen.c"
   $64 = $63; //@line 104 "mcbits/sk_gen.c"
   HEAP32[$64>>2] = $61; //@line 104 "mcbits/sk_gen.c"
   $65 = (($63) + 4)|0; //@line 104 "mcbits/sk_gen.c"
   $66 = $65; //@line 104 "mcbits/sk_gen.c"
   HEAP32[$66>>2] = $62; //@line 104 "mcbits/sk_gen.c"
   $67 = $5; //@line 101 "mcbits/sk_gen.c"
   $68 = (($67) + -1)|0; //@line 101 "mcbits/sk_gen.c"
   $5 = $68; //@line 101 "mcbits/sk_gen.c"
  }
  $69 = $1; //@line 107 "mcbits/sk_gen.c"
  $70 = $4; //@line 107 "mcbits/sk_gen.c"
  $71 = $70<<3; //@line 107 "mcbits/sk_gen.c"
  $72 = (($69) + ($71)|0); //@line 107 "mcbits/sk_gen.c"
  $73 = $4; //@line 107 "mcbits/sk_gen.c"
  $74 = (($3) + ($73<<3)|0); //@line 107 "mcbits/sk_gen.c"
  $75 = $74; //@line 107 "mcbits/sk_gen.c"
  $76 = $75; //@line 107 "mcbits/sk_gen.c"
  $77 = HEAP32[$76>>2]|0; //@line 107 "mcbits/sk_gen.c"
  $78 = (($75) + 4)|0; //@line 107 "mcbits/sk_gen.c"
  $79 = $78; //@line 107 "mcbits/sk_gen.c"
  $80 = HEAP32[$79>>2]|0; //@line 107 "mcbits/sk_gen.c"
  _store8($72,$77,$80); //@line 107 "mcbits/sk_gen.c"
  $81 = $4; //@line 97 "mcbits/sk_gen.c"
  $82 = (($81) + 1)|0; //@line 97 "mcbits/sk_gen.c"
  $4 = $82; //@line 97 "mcbits/sk_gen.c"
 }
 _randombytes($2,5888,0); //@line 112 "mcbits/sk_gen.c"
 $4 = 0; //@line 114 "mcbits/sk_gen.c"
 while(1) {
  $83 = $4; //@line 114 "mcbits/sk_gen.c"
  $84 = ($83|0)<(736); //@line 114 "mcbits/sk_gen.c"
  if (!($84)) {
   break;
  }
  $85 = $1; //@line 115 "mcbits/sk_gen.c"
  $86 = ((($85)) + 96|0); //@line 115 "mcbits/sk_gen.c"
  $87 = $4; //@line 115 "mcbits/sk_gen.c"
  $88 = $87<<3; //@line 115 "mcbits/sk_gen.c"
  $89 = (($86) + ($88)|0); //@line 115 "mcbits/sk_gen.c"
  $90 = $4; //@line 115 "mcbits/sk_gen.c"
  $91 = (($2) + ($90<<3)|0); //@line 115 "mcbits/sk_gen.c"
  $92 = $91; //@line 115 "mcbits/sk_gen.c"
  $93 = $92; //@line 115 "mcbits/sk_gen.c"
  $94 = HEAP32[$93>>2]|0; //@line 115 "mcbits/sk_gen.c"
  $95 = (($92) + 4)|0; //@line 115 "mcbits/sk_gen.c"
  $96 = $95; //@line 115 "mcbits/sk_gen.c"
  $97 = HEAP32[$96>>2]|0; //@line 115 "mcbits/sk_gen.c"
  _store8($89,$94,$97); //@line 115 "mcbits/sk_gen.c"
  $98 = $4; //@line 114 "mcbits/sk_gen.c"
  $99 = (($98) + 1)|0; //@line 114 "mcbits/sk_gen.c"
  $4 = $99; //@line 114 "mcbits/sk_gen.c"
 }
 STACKTOP = sp;return; //@line 116 "mcbits/sk_gen.c"
}
function _transpose_64x64_compact($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 48|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(48|0);
 $10 = sp_a + 8|0;
 $11 = sp_a;
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 20 "mcbits/transpose.c"
 while(1) {
  $12 = $4; //@line 20 "mcbits/transpose.c"
  $13 = ($12|0)<(64); //@line 20 "mcbits/transpose.c"
  if (!($13)) {
   break;
  }
  $14 = $3; //@line 21 "mcbits/transpose.c"
  $15 = $4; //@line 21 "mcbits/transpose.c"
  $16 = (($14) + ($15<<3)|0); //@line 21 "mcbits/transpose.c"
  $17 = $16; //@line 21 "mcbits/transpose.c"
  $18 = $17; //@line 21 "mcbits/transpose.c"
  $19 = HEAP32[$18>>2]|0; //@line 21 "mcbits/transpose.c"
  $20 = (($17) + 4)|0; //@line 21 "mcbits/transpose.c"
  $21 = $20; //@line 21 "mcbits/transpose.c"
  $22 = HEAP32[$21>>2]|0; //@line 21 "mcbits/transpose.c"
  $23 = $2; //@line 21 "mcbits/transpose.c"
  $24 = $4; //@line 21 "mcbits/transpose.c"
  $25 = (($23) + ($24<<3)|0); //@line 21 "mcbits/transpose.c"
  $26 = $25; //@line 21 "mcbits/transpose.c"
  $27 = $26; //@line 21 "mcbits/transpose.c"
  HEAP32[$27>>2] = $19; //@line 21 "mcbits/transpose.c"
  $28 = (($26) + 4)|0; //@line 21 "mcbits/transpose.c"
  $29 = $28; //@line 21 "mcbits/transpose.c"
  HEAP32[$29>>2] = $22; //@line 21 "mcbits/transpose.c"
  $30 = $4; //@line 20 "mcbits/transpose.c"
  $31 = (($30) + 1)|0; //@line 20 "mcbits/transpose.c"
  $4 = $31; //@line 20 "mcbits/transpose.c"
 }
 $5 = 5; //@line 23 "mcbits/transpose.c"
 while(1) {
  $32 = $5; //@line 23 "mcbits/transpose.c"
  $33 = ($32|0)>=(0); //@line 23 "mcbits/transpose.c"
  if (!($33)) {
   break;
  }
  $34 = $5; //@line 25 "mcbits/transpose.c"
  $35 = 1 << $34; //@line 25 "mcbits/transpose.c"
  $6 = $35; //@line 25 "mcbits/transpose.c"
  $7 = 0; //@line 27 "mcbits/transpose.c"
  while(1) {
   $36 = $7; //@line 27 "mcbits/transpose.c"
   $37 = $6; //@line 27 "mcbits/transpose.c"
   $38 = (32 / ($37|0))&-1; //@line 27 "mcbits/transpose.c"
   $39 = ($36|0)<($38|0); //@line 27 "mcbits/transpose.c"
   if (!($39)) {
    break;
   }
   $4 = 0; //@line 29 "mcbits/transpose.c"
   while(1) {
    $40 = $4; //@line 29 "mcbits/transpose.c"
    $41 = $6; //@line 29 "mcbits/transpose.c"
    $42 = ($40|0)<($41|0); //@line 29 "mcbits/transpose.c"
    $43 = $7;
    if (!($42)) {
     break;
    }
    $44 = $43<<1; //@line 31 "mcbits/transpose.c"
    $45 = $6; //@line 31 "mcbits/transpose.c"
    $46 = Math_imul($44, $45)|0; //@line 31 "mcbits/transpose.c"
    $47 = $4; //@line 31 "mcbits/transpose.c"
    $48 = (($46) + ($47))|0; //@line 31 "mcbits/transpose.c"
    $8 = $48; //@line 31 "mcbits/transpose.c"
    $49 = $7; //@line 32 "mcbits/transpose.c"
    $50 = $49<<1; //@line 32 "mcbits/transpose.c"
    $51 = $6; //@line 32 "mcbits/transpose.c"
    $52 = Math_imul($50, $51)|0; //@line 32 "mcbits/transpose.c"
    $53 = $4; //@line 32 "mcbits/transpose.c"
    $54 = (($52) + ($53))|0; //@line 32 "mcbits/transpose.c"
    $55 = $6; //@line 32 "mcbits/transpose.c"
    $56 = (($54) + ($55))|0; //@line 32 "mcbits/transpose.c"
    $9 = $56; //@line 32 "mcbits/transpose.c"
    $57 = $2; //@line 34 "mcbits/transpose.c"
    $58 = $8; //@line 34 "mcbits/transpose.c"
    $59 = (($57) + ($58<<3)|0); //@line 34 "mcbits/transpose.c"
    $60 = $59; //@line 34 "mcbits/transpose.c"
    $61 = $60; //@line 34 "mcbits/transpose.c"
    $62 = HEAP32[$61>>2]|0; //@line 34 "mcbits/transpose.c"
    $63 = (($60) + 4)|0; //@line 34 "mcbits/transpose.c"
    $64 = $63; //@line 34 "mcbits/transpose.c"
    $65 = HEAP32[$64>>2]|0; //@line 34 "mcbits/transpose.c"
    $66 = $5; //@line 34 "mcbits/transpose.c"
    $67 = (14008 + ($66<<4)|0); //@line 34 "mcbits/transpose.c"
    $68 = $67; //@line 34 "mcbits/transpose.c"
    $69 = $68; //@line 34 "mcbits/transpose.c"
    $70 = HEAP32[$69>>2]|0; //@line 34 "mcbits/transpose.c"
    $71 = (($68) + 4)|0; //@line 34 "mcbits/transpose.c"
    $72 = $71; //@line 34 "mcbits/transpose.c"
    $73 = HEAP32[$72>>2]|0; //@line 34 "mcbits/transpose.c"
    $74 = $62 & $70; //@line 34 "mcbits/transpose.c"
    $75 = $65 & $73; //@line 34 "mcbits/transpose.c"
    $76 = $2; //@line 34 "mcbits/transpose.c"
    $77 = $9; //@line 34 "mcbits/transpose.c"
    $78 = (($76) + ($77<<3)|0); //@line 34 "mcbits/transpose.c"
    $79 = $78; //@line 34 "mcbits/transpose.c"
    $80 = $79; //@line 34 "mcbits/transpose.c"
    $81 = HEAP32[$80>>2]|0; //@line 34 "mcbits/transpose.c"
    $82 = (($79) + 4)|0; //@line 34 "mcbits/transpose.c"
    $83 = $82; //@line 34 "mcbits/transpose.c"
    $84 = HEAP32[$83>>2]|0; //@line 34 "mcbits/transpose.c"
    $85 = $5; //@line 34 "mcbits/transpose.c"
    $86 = (14008 + ($85<<4)|0); //@line 34 "mcbits/transpose.c"
    $87 = $86; //@line 34 "mcbits/transpose.c"
    $88 = $87; //@line 34 "mcbits/transpose.c"
    $89 = HEAP32[$88>>2]|0; //@line 34 "mcbits/transpose.c"
    $90 = (($87) + 4)|0; //@line 34 "mcbits/transpose.c"
    $91 = $90; //@line 34 "mcbits/transpose.c"
    $92 = HEAP32[$91>>2]|0; //@line 34 "mcbits/transpose.c"
    $93 = $81 & $89; //@line 34 "mcbits/transpose.c"
    $94 = $84 & $92; //@line 34 "mcbits/transpose.c"
    $95 = $6; //@line 34 "mcbits/transpose.c"
    $96 = (_bitshift64Shl(($93|0),($94|0),($95|0))|0); //@line 34 "mcbits/transpose.c"
    $97 = tempRet0; //@line 34 "mcbits/transpose.c"
    $98 = $74 | $96; //@line 34 "mcbits/transpose.c"
    $99 = $75 | $97; //@line 34 "mcbits/transpose.c"
    $100 = $10; //@line 34 "mcbits/transpose.c"
    $101 = $100; //@line 34 "mcbits/transpose.c"
    HEAP32[$101>>2] = $98; //@line 34 "mcbits/transpose.c"
    $102 = (($100) + 4)|0; //@line 34 "mcbits/transpose.c"
    $103 = $102; //@line 34 "mcbits/transpose.c"
    HEAP32[$103>>2] = $99; //@line 34 "mcbits/transpose.c"
    $104 = $2; //@line 35 "mcbits/transpose.c"
    $105 = $8; //@line 35 "mcbits/transpose.c"
    $106 = (($104) + ($105<<3)|0); //@line 35 "mcbits/transpose.c"
    $107 = $106; //@line 35 "mcbits/transpose.c"
    $108 = $107; //@line 35 "mcbits/transpose.c"
    $109 = HEAP32[$108>>2]|0; //@line 35 "mcbits/transpose.c"
    $110 = (($107) + 4)|0; //@line 35 "mcbits/transpose.c"
    $111 = $110; //@line 35 "mcbits/transpose.c"
    $112 = HEAP32[$111>>2]|0; //@line 35 "mcbits/transpose.c"
    $113 = $5; //@line 35 "mcbits/transpose.c"
    $114 = (14008 + ($113<<4)|0); //@line 35 "mcbits/transpose.c"
    $115 = ((($114)) + 8|0); //@line 35 "mcbits/transpose.c"
    $116 = $115; //@line 35 "mcbits/transpose.c"
    $117 = $116; //@line 35 "mcbits/transpose.c"
    $118 = HEAP32[$117>>2]|0; //@line 35 "mcbits/transpose.c"
    $119 = (($116) + 4)|0; //@line 35 "mcbits/transpose.c"
    $120 = $119; //@line 35 "mcbits/transpose.c"
    $121 = HEAP32[$120>>2]|0; //@line 35 "mcbits/transpose.c"
    $122 = $109 & $118; //@line 35 "mcbits/transpose.c"
    $123 = $112 & $121; //@line 35 "mcbits/transpose.c"
    $124 = $6; //@line 35 "mcbits/transpose.c"
    $125 = (_bitshift64Lshr(($122|0),($123|0),($124|0))|0); //@line 35 "mcbits/transpose.c"
    $126 = tempRet0; //@line 35 "mcbits/transpose.c"
    $127 = $2; //@line 35 "mcbits/transpose.c"
    $128 = $9; //@line 35 "mcbits/transpose.c"
    $129 = (($127) + ($128<<3)|0); //@line 35 "mcbits/transpose.c"
    $130 = $129; //@line 35 "mcbits/transpose.c"
    $131 = $130; //@line 35 "mcbits/transpose.c"
    $132 = HEAP32[$131>>2]|0; //@line 35 "mcbits/transpose.c"
    $133 = (($130) + 4)|0; //@line 35 "mcbits/transpose.c"
    $134 = $133; //@line 35 "mcbits/transpose.c"
    $135 = HEAP32[$134>>2]|0; //@line 35 "mcbits/transpose.c"
    $136 = $5; //@line 35 "mcbits/transpose.c"
    $137 = (14008 + ($136<<4)|0); //@line 35 "mcbits/transpose.c"
    $138 = ((($137)) + 8|0); //@line 35 "mcbits/transpose.c"
    $139 = $138; //@line 35 "mcbits/transpose.c"
    $140 = $139; //@line 35 "mcbits/transpose.c"
    $141 = HEAP32[$140>>2]|0; //@line 35 "mcbits/transpose.c"
    $142 = (($139) + 4)|0; //@line 35 "mcbits/transpose.c"
    $143 = $142; //@line 35 "mcbits/transpose.c"
    $144 = HEAP32[$143>>2]|0; //@line 35 "mcbits/transpose.c"
    $145 = $132 & $141; //@line 35 "mcbits/transpose.c"
    $146 = $135 & $144; //@line 35 "mcbits/transpose.c"
    $147 = $125 | $145; //@line 35 "mcbits/transpose.c"
    $148 = $126 | $146; //@line 35 "mcbits/transpose.c"
    $149 = $11; //@line 35 "mcbits/transpose.c"
    $150 = $149; //@line 35 "mcbits/transpose.c"
    HEAP32[$150>>2] = $147; //@line 35 "mcbits/transpose.c"
    $151 = (($149) + 4)|0; //@line 35 "mcbits/transpose.c"
    $152 = $151; //@line 35 "mcbits/transpose.c"
    HEAP32[$152>>2] = $148; //@line 35 "mcbits/transpose.c"
    $153 = $10; //@line 37 "mcbits/transpose.c"
    $154 = $153; //@line 37 "mcbits/transpose.c"
    $155 = HEAP32[$154>>2]|0; //@line 37 "mcbits/transpose.c"
    $156 = (($153) + 4)|0; //@line 37 "mcbits/transpose.c"
    $157 = $156; //@line 37 "mcbits/transpose.c"
    $158 = HEAP32[$157>>2]|0; //@line 37 "mcbits/transpose.c"
    $159 = $2; //@line 37 "mcbits/transpose.c"
    $160 = $8; //@line 37 "mcbits/transpose.c"
    $161 = (($159) + ($160<<3)|0); //@line 37 "mcbits/transpose.c"
    $162 = $161; //@line 37 "mcbits/transpose.c"
    $163 = $162; //@line 37 "mcbits/transpose.c"
    HEAP32[$163>>2] = $155; //@line 37 "mcbits/transpose.c"
    $164 = (($162) + 4)|0; //@line 37 "mcbits/transpose.c"
    $165 = $164; //@line 37 "mcbits/transpose.c"
    HEAP32[$165>>2] = $158; //@line 37 "mcbits/transpose.c"
    $166 = $11; //@line 38 "mcbits/transpose.c"
    $167 = $166; //@line 38 "mcbits/transpose.c"
    $168 = HEAP32[$167>>2]|0; //@line 38 "mcbits/transpose.c"
    $169 = (($166) + 4)|0; //@line 38 "mcbits/transpose.c"
    $170 = $169; //@line 38 "mcbits/transpose.c"
    $171 = HEAP32[$170>>2]|0; //@line 38 "mcbits/transpose.c"
    $172 = $2; //@line 38 "mcbits/transpose.c"
    $173 = $9; //@line 38 "mcbits/transpose.c"
    $174 = (($172) + ($173<<3)|0); //@line 38 "mcbits/transpose.c"
    $175 = $174; //@line 38 "mcbits/transpose.c"
    $176 = $175; //@line 38 "mcbits/transpose.c"
    HEAP32[$176>>2] = $168; //@line 38 "mcbits/transpose.c"
    $177 = (($175) + 4)|0; //@line 38 "mcbits/transpose.c"
    $178 = $177; //@line 38 "mcbits/transpose.c"
    HEAP32[$178>>2] = $171; //@line 38 "mcbits/transpose.c"
    $179 = $4; //@line 29 "mcbits/transpose.c"
    $180 = (($179) + 1)|0; //@line 29 "mcbits/transpose.c"
    $4 = $180; //@line 29 "mcbits/transpose.c"
   }
   $181 = (($43) + 1)|0; //@line 27 "mcbits/transpose.c"
   $7 = $181; //@line 27 "mcbits/transpose.c"
  }
  $182 = $5; //@line 23 "mcbits/transpose.c"
  $183 = (($182) + -1)|0; //@line 23 "mcbits/transpose.c"
  $5 = $183; //@line 23 "mcbits/transpose.c"
 }
 STACKTOP = sp;return; //@line 42 "mcbits/transpose.c"
}
function _transpose_8x64($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0;
 var $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0;
 var $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0;
 var $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0;
 var $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0;
 var $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0;
 var $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0;
 var $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0;
 var $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0;
 var $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0;
 var $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0;
 var $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0;
 var $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0;
 var $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0;
 var $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0;
 var $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0;
 var $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0;
 var $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0;
 var $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0;
 var $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0;
 var $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0;
 var $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0;
 var $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0;
 var $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0;
 var $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0;
 var $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0;
 var $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0;
 var $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0;
 var $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0;
 var $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0;
 var $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0;
 var $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0;
 var $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0;
 var $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0;
 var $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0;
 var $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0;
 var $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0;
 var $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0;
 var $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0;
 var $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0;
 var $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0;
 var $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0;
 var $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0;
 var $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0;
 var $998 = 0, $999 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $2 = sp_a + 8|0;
 $3 = sp_a;
 $1 = $0;
 $4 = $1; //@line 57 "mcbits/transpose.c"
 $5 = $4; //@line 57 "mcbits/transpose.c"
 $6 = $5; //@line 57 "mcbits/transpose.c"
 $7 = HEAP32[$6>>2]|0; //@line 57 "mcbits/transpose.c"
 $8 = (($5) + 4)|0; //@line 57 "mcbits/transpose.c"
 $9 = $8; //@line 57 "mcbits/transpose.c"
 $10 = HEAP32[$9>>2]|0; //@line 57 "mcbits/transpose.c"
 $11 = (14136); //@line 57 "mcbits/transpose.c"
 $12 = $11; //@line 57 "mcbits/transpose.c"
 $13 = HEAP32[$12>>2]|0; //@line 57 "mcbits/transpose.c"
 $14 = (($11) + 4)|0; //@line 57 "mcbits/transpose.c"
 $15 = $14; //@line 57 "mcbits/transpose.c"
 $16 = HEAP32[$15>>2]|0; //@line 57 "mcbits/transpose.c"
 $17 = $7 & $13; //@line 57 "mcbits/transpose.c"
 $18 = $10 & $16; //@line 57 "mcbits/transpose.c"
 $19 = $1; //@line 57 "mcbits/transpose.c"
 $20 = ((($19)) + 32|0); //@line 57 "mcbits/transpose.c"
 $21 = $20; //@line 57 "mcbits/transpose.c"
 $22 = $21; //@line 57 "mcbits/transpose.c"
 $23 = HEAP32[$22>>2]|0; //@line 57 "mcbits/transpose.c"
 $24 = (($21) + 4)|0; //@line 57 "mcbits/transpose.c"
 $25 = $24; //@line 57 "mcbits/transpose.c"
 $26 = HEAP32[$25>>2]|0; //@line 57 "mcbits/transpose.c"
 $27 = (14136); //@line 57 "mcbits/transpose.c"
 $28 = $27; //@line 57 "mcbits/transpose.c"
 $29 = HEAP32[$28>>2]|0; //@line 57 "mcbits/transpose.c"
 $30 = (($27) + 4)|0; //@line 57 "mcbits/transpose.c"
 $31 = $30; //@line 57 "mcbits/transpose.c"
 $32 = HEAP32[$31>>2]|0; //@line 57 "mcbits/transpose.c"
 $33 = $23 & $29; //@line 57 "mcbits/transpose.c"
 $34 = $26 & $32; //@line 57 "mcbits/transpose.c"
 $35 = (_bitshift64Shl(($33|0),($34|0),4)|0); //@line 57 "mcbits/transpose.c"
 $36 = tempRet0; //@line 57 "mcbits/transpose.c"
 $37 = $17 | $35; //@line 57 "mcbits/transpose.c"
 $38 = $18 | $36; //@line 57 "mcbits/transpose.c"
 $39 = $2; //@line 57 "mcbits/transpose.c"
 $40 = $39; //@line 57 "mcbits/transpose.c"
 HEAP32[$40>>2] = $37; //@line 57 "mcbits/transpose.c"
 $41 = (($39) + 4)|0; //@line 57 "mcbits/transpose.c"
 $42 = $41; //@line 57 "mcbits/transpose.c"
 HEAP32[$42>>2] = $38; //@line 57 "mcbits/transpose.c"
 $43 = $1; //@line 58 "mcbits/transpose.c"
 $44 = $43; //@line 58 "mcbits/transpose.c"
 $45 = $44; //@line 58 "mcbits/transpose.c"
 $46 = HEAP32[$45>>2]|0; //@line 58 "mcbits/transpose.c"
 $47 = (($44) + 4)|0; //@line 58 "mcbits/transpose.c"
 $48 = $47; //@line 58 "mcbits/transpose.c"
 $49 = HEAP32[$48>>2]|0; //@line 58 "mcbits/transpose.c"
 $50 = (14144); //@line 58 "mcbits/transpose.c"
 $51 = $50; //@line 58 "mcbits/transpose.c"
 $52 = HEAP32[$51>>2]|0; //@line 58 "mcbits/transpose.c"
 $53 = (($50) + 4)|0; //@line 58 "mcbits/transpose.c"
 $54 = $53; //@line 58 "mcbits/transpose.c"
 $55 = HEAP32[$54>>2]|0; //@line 58 "mcbits/transpose.c"
 $56 = $46 & $52; //@line 58 "mcbits/transpose.c"
 $57 = $49 & $55; //@line 58 "mcbits/transpose.c"
 $58 = (_bitshift64Lshr(($56|0),($57|0),4)|0); //@line 58 "mcbits/transpose.c"
 $59 = tempRet0; //@line 58 "mcbits/transpose.c"
 $60 = $1; //@line 58 "mcbits/transpose.c"
 $61 = ((($60)) + 32|0); //@line 58 "mcbits/transpose.c"
 $62 = $61; //@line 58 "mcbits/transpose.c"
 $63 = $62; //@line 58 "mcbits/transpose.c"
 $64 = HEAP32[$63>>2]|0; //@line 58 "mcbits/transpose.c"
 $65 = (($62) + 4)|0; //@line 58 "mcbits/transpose.c"
 $66 = $65; //@line 58 "mcbits/transpose.c"
 $67 = HEAP32[$66>>2]|0; //@line 58 "mcbits/transpose.c"
 $68 = (14144); //@line 58 "mcbits/transpose.c"
 $69 = $68; //@line 58 "mcbits/transpose.c"
 $70 = HEAP32[$69>>2]|0; //@line 58 "mcbits/transpose.c"
 $71 = (($68) + 4)|0; //@line 58 "mcbits/transpose.c"
 $72 = $71; //@line 58 "mcbits/transpose.c"
 $73 = HEAP32[$72>>2]|0; //@line 58 "mcbits/transpose.c"
 $74 = $64 & $70; //@line 58 "mcbits/transpose.c"
 $75 = $67 & $73; //@line 58 "mcbits/transpose.c"
 $76 = $58 | $74; //@line 58 "mcbits/transpose.c"
 $77 = $59 | $75; //@line 58 "mcbits/transpose.c"
 $78 = $3; //@line 58 "mcbits/transpose.c"
 $79 = $78; //@line 58 "mcbits/transpose.c"
 HEAP32[$79>>2] = $76; //@line 58 "mcbits/transpose.c"
 $80 = (($78) + 4)|0; //@line 58 "mcbits/transpose.c"
 $81 = $80; //@line 58 "mcbits/transpose.c"
 HEAP32[$81>>2] = $77; //@line 58 "mcbits/transpose.c"
 $82 = $2; //@line 60 "mcbits/transpose.c"
 $83 = $82; //@line 60 "mcbits/transpose.c"
 $84 = HEAP32[$83>>2]|0; //@line 60 "mcbits/transpose.c"
 $85 = (($82) + 4)|0; //@line 60 "mcbits/transpose.c"
 $86 = $85; //@line 60 "mcbits/transpose.c"
 $87 = HEAP32[$86>>2]|0; //@line 60 "mcbits/transpose.c"
 $88 = $1; //@line 60 "mcbits/transpose.c"
 $89 = $88; //@line 60 "mcbits/transpose.c"
 $90 = $89; //@line 60 "mcbits/transpose.c"
 HEAP32[$90>>2] = $84; //@line 60 "mcbits/transpose.c"
 $91 = (($89) + 4)|0; //@line 60 "mcbits/transpose.c"
 $92 = $91; //@line 60 "mcbits/transpose.c"
 HEAP32[$92>>2] = $87; //@line 60 "mcbits/transpose.c"
 $93 = $3; //@line 61 "mcbits/transpose.c"
 $94 = $93; //@line 61 "mcbits/transpose.c"
 $95 = HEAP32[$94>>2]|0; //@line 61 "mcbits/transpose.c"
 $96 = (($93) + 4)|0; //@line 61 "mcbits/transpose.c"
 $97 = $96; //@line 61 "mcbits/transpose.c"
 $98 = HEAP32[$97>>2]|0; //@line 61 "mcbits/transpose.c"
 $99 = $1; //@line 61 "mcbits/transpose.c"
 $100 = ((($99)) + 32|0); //@line 61 "mcbits/transpose.c"
 $101 = $100; //@line 61 "mcbits/transpose.c"
 $102 = $101; //@line 61 "mcbits/transpose.c"
 HEAP32[$102>>2] = $95; //@line 61 "mcbits/transpose.c"
 $103 = (($101) + 4)|0; //@line 61 "mcbits/transpose.c"
 $104 = $103; //@line 61 "mcbits/transpose.c"
 HEAP32[$104>>2] = $98; //@line 61 "mcbits/transpose.c"
 $105 = $1; //@line 63 "mcbits/transpose.c"
 $106 = ((($105)) + 8|0); //@line 63 "mcbits/transpose.c"
 $107 = $106; //@line 63 "mcbits/transpose.c"
 $108 = $107; //@line 63 "mcbits/transpose.c"
 $109 = HEAP32[$108>>2]|0; //@line 63 "mcbits/transpose.c"
 $110 = (($107) + 4)|0; //@line 63 "mcbits/transpose.c"
 $111 = $110; //@line 63 "mcbits/transpose.c"
 $112 = HEAP32[$111>>2]|0; //@line 63 "mcbits/transpose.c"
 $113 = (14136); //@line 63 "mcbits/transpose.c"
 $114 = $113; //@line 63 "mcbits/transpose.c"
 $115 = HEAP32[$114>>2]|0; //@line 63 "mcbits/transpose.c"
 $116 = (($113) + 4)|0; //@line 63 "mcbits/transpose.c"
 $117 = $116; //@line 63 "mcbits/transpose.c"
 $118 = HEAP32[$117>>2]|0; //@line 63 "mcbits/transpose.c"
 $119 = $109 & $115; //@line 63 "mcbits/transpose.c"
 $120 = $112 & $118; //@line 63 "mcbits/transpose.c"
 $121 = $1; //@line 63 "mcbits/transpose.c"
 $122 = ((($121)) + 40|0); //@line 63 "mcbits/transpose.c"
 $123 = $122; //@line 63 "mcbits/transpose.c"
 $124 = $123; //@line 63 "mcbits/transpose.c"
 $125 = HEAP32[$124>>2]|0; //@line 63 "mcbits/transpose.c"
 $126 = (($123) + 4)|0; //@line 63 "mcbits/transpose.c"
 $127 = $126; //@line 63 "mcbits/transpose.c"
 $128 = HEAP32[$127>>2]|0; //@line 63 "mcbits/transpose.c"
 $129 = (14136); //@line 63 "mcbits/transpose.c"
 $130 = $129; //@line 63 "mcbits/transpose.c"
 $131 = HEAP32[$130>>2]|0; //@line 63 "mcbits/transpose.c"
 $132 = (($129) + 4)|0; //@line 63 "mcbits/transpose.c"
 $133 = $132; //@line 63 "mcbits/transpose.c"
 $134 = HEAP32[$133>>2]|0; //@line 63 "mcbits/transpose.c"
 $135 = $125 & $131; //@line 63 "mcbits/transpose.c"
 $136 = $128 & $134; //@line 63 "mcbits/transpose.c"
 $137 = (_bitshift64Shl(($135|0),($136|0),4)|0); //@line 63 "mcbits/transpose.c"
 $138 = tempRet0; //@line 63 "mcbits/transpose.c"
 $139 = $119 | $137; //@line 63 "mcbits/transpose.c"
 $140 = $120 | $138; //@line 63 "mcbits/transpose.c"
 $141 = $2; //@line 63 "mcbits/transpose.c"
 $142 = $141; //@line 63 "mcbits/transpose.c"
 HEAP32[$142>>2] = $139; //@line 63 "mcbits/transpose.c"
 $143 = (($141) + 4)|0; //@line 63 "mcbits/transpose.c"
 $144 = $143; //@line 63 "mcbits/transpose.c"
 HEAP32[$144>>2] = $140; //@line 63 "mcbits/transpose.c"
 $145 = $1; //@line 64 "mcbits/transpose.c"
 $146 = ((($145)) + 8|0); //@line 64 "mcbits/transpose.c"
 $147 = $146; //@line 64 "mcbits/transpose.c"
 $148 = $147; //@line 64 "mcbits/transpose.c"
 $149 = HEAP32[$148>>2]|0; //@line 64 "mcbits/transpose.c"
 $150 = (($147) + 4)|0; //@line 64 "mcbits/transpose.c"
 $151 = $150; //@line 64 "mcbits/transpose.c"
 $152 = HEAP32[$151>>2]|0; //@line 64 "mcbits/transpose.c"
 $153 = (14144); //@line 64 "mcbits/transpose.c"
 $154 = $153; //@line 64 "mcbits/transpose.c"
 $155 = HEAP32[$154>>2]|0; //@line 64 "mcbits/transpose.c"
 $156 = (($153) + 4)|0; //@line 64 "mcbits/transpose.c"
 $157 = $156; //@line 64 "mcbits/transpose.c"
 $158 = HEAP32[$157>>2]|0; //@line 64 "mcbits/transpose.c"
 $159 = $149 & $155; //@line 64 "mcbits/transpose.c"
 $160 = $152 & $158; //@line 64 "mcbits/transpose.c"
 $161 = (_bitshift64Lshr(($159|0),($160|0),4)|0); //@line 64 "mcbits/transpose.c"
 $162 = tempRet0; //@line 64 "mcbits/transpose.c"
 $163 = $1; //@line 64 "mcbits/transpose.c"
 $164 = ((($163)) + 40|0); //@line 64 "mcbits/transpose.c"
 $165 = $164; //@line 64 "mcbits/transpose.c"
 $166 = $165; //@line 64 "mcbits/transpose.c"
 $167 = HEAP32[$166>>2]|0; //@line 64 "mcbits/transpose.c"
 $168 = (($165) + 4)|0; //@line 64 "mcbits/transpose.c"
 $169 = $168; //@line 64 "mcbits/transpose.c"
 $170 = HEAP32[$169>>2]|0; //@line 64 "mcbits/transpose.c"
 $171 = (14144); //@line 64 "mcbits/transpose.c"
 $172 = $171; //@line 64 "mcbits/transpose.c"
 $173 = HEAP32[$172>>2]|0; //@line 64 "mcbits/transpose.c"
 $174 = (($171) + 4)|0; //@line 64 "mcbits/transpose.c"
 $175 = $174; //@line 64 "mcbits/transpose.c"
 $176 = HEAP32[$175>>2]|0; //@line 64 "mcbits/transpose.c"
 $177 = $167 & $173; //@line 64 "mcbits/transpose.c"
 $178 = $170 & $176; //@line 64 "mcbits/transpose.c"
 $179 = $161 | $177; //@line 64 "mcbits/transpose.c"
 $180 = $162 | $178; //@line 64 "mcbits/transpose.c"
 $181 = $3; //@line 64 "mcbits/transpose.c"
 $182 = $181; //@line 64 "mcbits/transpose.c"
 HEAP32[$182>>2] = $179; //@line 64 "mcbits/transpose.c"
 $183 = (($181) + 4)|0; //@line 64 "mcbits/transpose.c"
 $184 = $183; //@line 64 "mcbits/transpose.c"
 HEAP32[$184>>2] = $180; //@line 64 "mcbits/transpose.c"
 $185 = $2; //@line 66 "mcbits/transpose.c"
 $186 = $185; //@line 66 "mcbits/transpose.c"
 $187 = HEAP32[$186>>2]|0; //@line 66 "mcbits/transpose.c"
 $188 = (($185) + 4)|0; //@line 66 "mcbits/transpose.c"
 $189 = $188; //@line 66 "mcbits/transpose.c"
 $190 = HEAP32[$189>>2]|0; //@line 66 "mcbits/transpose.c"
 $191 = $1; //@line 66 "mcbits/transpose.c"
 $192 = ((($191)) + 8|0); //@line 66 "mcbits/transpose.c"
 $193 = $192; //@line 66 "mcbits/transpose.c"
 $194 = $193; //@line 66 "mcbits/transpose.c"
 HEAP32[$194>>2] = $187; //@line 66 "mcbits/transpose.c"
 $195 = (($193) + 4)|0; //@line 66 "mcbits/transpose.c"
 $196 = $195; //@line 66 "mcbits/transpose.c"
 HEAP32[$196>>2] = $190; //@line 66 "mcbits/transpose.c"
 $197 = $3; //@line 67 "mcbits/transpose.c"
 $198 = $197; //@line 67 "mcbits/transpose.c"
 $199 = HEAP32[$198>>2]|0; //@line 67 "mcbits/transpose.c"
 $200 = (($197) + 4)|0; //@line 67 "mcbits/transpose.c"
 $201 = $200; //@line 67 "mcbits/transpose.c"
 $202 = HEAP32[$201>>2]|0; //@line 67 "mcbits/transpose.c"
 $203 = $1; //@line 67 "mcbits/transpose.c"
 $204 = ((($203)) + 40|0); //@line 67 "mcbits/transpose.c"
 $205 = $204; //@line 67 "mcbits/transpose.c"
 $206 = $205; //@line 67 "mcbits/transpose.c"
 HEAP32[$206>>2] = $199; //@line 67 "mcbits/transpose.c"
 $207 = (($205) + 4)|0; //@line 67 "mcbits/transpose.c"
 $208 = $207; //@line 67 "mcbits/transpose.c"
 HEAP32[$208>>2] = $202; //@line 67 "mcbits/transpose.c"
 $209 = $1; //@line 69 "mcbits/transpose.c"
 $210 = ((($209)) + 16|0); //@line 69 "mcbits/transpose.c"
 $211 = $210; //@line 69 "mcbits/transpose.c"
 $212 = $211; //@line 69 "mcbits/transpose.c"
 $213 = HEAP32[$212>>2]|0; //@line 69 "mcbits/transpose.c"
 $214 = (($211) + 4)|0; //@line 69 "mcbits/transpose.c"
 $215 = $214; //@line 69 "mcbits/transpose.c"
 $216 = HEAP32[$215>>2]|0; //@line 69 "mcbits/transpose.c"
 $217 = (14136); //@line 69 "mcbits/transpose.c"
 $218 = $217; //@line 69 "mcbits/transpose.c"
 $219 = HEAP32[$218>>2]|0; //@line 69 "mcbits/transpose.c"
 $220 = (($217) + 4)|0; //@line 69 "mcbits/transpose.c"
 $221 = $220; //@line 69 "mcbits/transpose.c"
 $222 = HEAP32[$221>>2]|0; //@line 69 "mcbits/transpose.c"
 $223 = $213 & $219; //@line 69 "mcbits/transpose.c"
 $224 = $216 & $222; //@line 69 "mcbits/transpose.c"
 $225 = $1; //@line 69 "mcbits/transpose.c"
 $226 = ((($225)) + 48|0); //@line 69 "mcbits/transpose.c"
 $227 = $226; //@line 69 "mcbits/transpose.c"
 $228 = $227; //@line 69 "mcbits/transpose.c"
 $229 = HEAP32[$228>>2]|0; //@line 69 "mcbits/transpose.c"
 $230 = (($227) + 4)|0; //@line 69 "mcbits/transpose.c"
 $231 = $230; //@line 69 "mcbits/transpose.c"
 $232 = HEAP32[$231>>2]|0; //@line 69 "mcbits/transpose.c"
 $233 = (14136); //@line 69 "mcbits/transpose.c"
 $234 = $233; //@line 69 "mcbits/transpose.c"
 $235 = HEAP32[$234>>2]|0; //@line 69 "mcbits/transpose.c"
 $236 = (($233) + 4)|0; //@line 69 "mcbits/transpose.c"
 $237 = $236; //@line 69 "mcbits/transpose.c"
 $238 = HEAP32[$237>>2]|0; //@line 69 "mcbits/transpose.c"
 $239 = $229 & $235; //@line 69 "mcbits/transpose.c"
 $240 = $232 & $238; //@line 69 "mcbits/transpose.c"
 $241 = (_bitshift64Shl(($239|0),($240|0),4)|0); //@line 69 "mcbits/transpose.c"
 $242 = tempRet0; //@line 69 "mcbits/transpose.c"
 $243 = $223 | $241; //@line 69 "mcbits/transpose.c"
 $244 = $224 | $242; //@line 69 "mcbits/transpose.c"
 $245 = $2; //@line 69 "mcbits/transpose.c"
 $246 = $245; //@line 69 "mcbits/transpose.c"
 HEAP32[$246>>2] = $243; //@line 69 "mcbits/transpose.c"
 $247 = (($245) + 4)|0; //@line 69 "mcbits/transpose.c"
 $248 = $247; //@line 69 "mcbits/transpose.c"
 HEAP32[$248>>2] = $244; //@line 69 "mcbits/transpose.c"
 $249 = $1; //@line 70 "mcbits/transpose.c"
 $250 = ((($249)) + 16|0); //@line 70 "mcbits/transpose.c"
 $251 = $250; //@line 70 "mcbits/transpose.c"
 $252 = $251; //@line 70 "mcbits/transpose.c"
 $253 = HEAP32[$252>>2]|0; //@line 70 "mcbits/transpose.c"
 $254 = (($251) + 4)|0; //@line 70 "mcbits/transpose.c"
 $255 = $254; //@line 70 "mcbits/transpose.c"
 $256 = HEAP32[$255>>2]|0; //@line 70 "mcbits/transpose.c"
 $257 = (14144); //@line 70 "mcbits/transpose.c"
 $258 = $257; //@line 70 "mcbits/transpose.c"
 $259 = HEAP32[$258>>2]|0; //@line 70 "mcbits/transpose.c"
 $260 = (($257) + 4)|0; //@line 70 "mcbits/transpose.c"
 $261 = $260; //@line 70 "mcbits/transpose.c"
 $262 = HEAP32[$261>>2]|0; //@line 70 "mcbits/transpose.c"
 $263 = $253 & $259; //@line 70 "mcbits/transpose.c"
 $264 = $256 & $262; //@line 70 "mcbits/transpose.c"
 $265 = (_bitshift64Lshr(($263|0),($264|0),4)|0); //@line 70 "mcbits/transpose.c"
 $266 = tempRet0; //@line 70 "mcbits/transpose.c"
 $267 = $1; //@line 70 "mcbits/transpose.c"
 $268 = ((($267)) + 48|0); //@line 70 "mcbits/transpose.c"
 $269 = $268; //@line 70 "mcbits/transpose.c"
 $270 = $269; //@line 70 "mcbits/transpose.c"
 $271 = HEAP32[$270>>2]|0; //@line 70 "mcbits/transpose.c"
 $272 = (($269) + 4)|0; //@line 70 "mcbits/transpose.c"
 $273 = $272; //@line 70 "mcbits/transpose.c"
 $274 = HEAP32[$273>>2]|0; //@line 70 "mcbits/transpose.c"
 $275 = (14144); //@line 70 "mcbits/transpose.c"
 $276 = $275; //@line 70 "mcbits/transpose.c"
 $277 = HEAP32[$276>>2]|0; //@line 70 "mcbits/transpose.c"
 $278 = (($275) + 4)|0; //@line 70 "mcbits/transpose.c"
 $279 = $278; //@line 70 "mcbits/transpose.c"
 $280 = HEAP32[$279>>2]|0; //@line 70 "mcbits/transpose.c"
 $281 = $271 & $277; //@line 70 "mcbits/transpose.c"
 $282 = $274 & $280; //@line 70 "mcbits/transpose.c"
 $283 = $265 | $281; //@line 70 "mcbits/transpose.c"
 $284 = $266 | $282; //@line 70 "mcbits/transpose.c"
 $285 = $3; //@line 70 "mcbits/transpose.c"
 $286 = $285; //@line 70 "mcbits/transpose.c"
 HEAP32[$286>>2] = $283; //@line 70 "mcbits/transpose.c"
 $287 = (($285) + 4)|0; //@line 70 "mcbits/transpose.c"
 $288 = $287; //@line 70 "mcbits/transpose.c"
 HEAP32[$288>>2] = $284; //@line 70 "mcbits/transpose.c"
 $289 = $2; //@line 72 "mcbits/transpose.c"
 $290 = $289; //@line 72 "mcbits/transpose.c"
 $291 = HEAP32[$290>>2]|0; //@line 72 "mcbits/transpose.c"
 $292 = (($289) + 4)|0; //@line 72 "mcbits/transpose.c"
 $293 = $292; //@line 72 "mcbits/transpose.c"
 $294 = HEAP32[$293>>2]|0; //@line 72 "mcbits/transpose.c"
 $295 = $1; //@line 72 "mcbits/transpose.c"
 $296 = ((($295)) + 16|0); //@line 72 "mcbits/transpose.c"
 $297 = $296; //@line 72 "mcbits/transpose.c"
 $298 = $297; //@line 72 "mcbits/transpose.c"
 HEAP32[$298>>2] = $291; //@line 72 "mcbits/transpose.c"
 $299 = (($297) + 4)|0; //@line 72 "mcbits/transpose.c"
 $300 = $299; //@line 72 "mcbits/transpose.c"
 HEAP32[$300>>2] = $294; //@line 72 "mcbits/transpose.c"
 $301 = $3; //@line 73 "mcbits/transpose.c"
 $302 = $301; //@line 73 "mcbits/transpose.c"
 $303 = HEAP32[$302>>2]|0; //@line 73 "mcbits/transpose.c"
 $304 = (($301) + 4)|0; //@line 73 "mcbits/transpose.c"
 $305 = $304; //@line 73 "mcbits/transpose.c"
 $306 = HEAP32[$305>>2]|0; //@line 73 "mcbits/transpose.c"
 $307 = $1; //@line 73 "mcbits/transpose.c"
 $308 = ((($307)) + 48|0); //@line 73 "mcbits/transpose.c"
 $309 = $308; //@line 73 "mcbits/transpose.c"
 $310 = $309; //@line 73 "mcbits/transpose.c"
 HEAP32[$310>>2] = $303; //@line 73 "mcbits/transpose.c"
 $311 = (($309) + 4)|0; //@line 73 "mcbits/transpose.c"
 $312 = $311; //@line 73 "mcbits/transpose.c"
 HEAP32[$312>>2] = $306; //@line 73 "mcbits/transpose.c"
 $313 = $1; //@line 75 "mcbits/transpose.c"
 $314 = ((($313)) + 24|0); //@line 75 "mcbits/transpose.c"
 $315 = $314; //@line 75 "mcbits/transpose.c"
 $316 = $315; //@line 75 "mcbits/transpose.c"
 $317 = HEAP32[$316>>2]|0; //@line 75 "mcbits/transpose.c"
 $318 = (($315) + 4)|0; //@line 75 "mcbits/transpose.c"
 $319 = $318; //@line 75 "mcbits/transpose.c"
 $320 = HEAP32[$319>>2]|0; //@line 75 "mcbits/transpose.c"
 $321 = (14136); //@line 75 "mcbits/transpose.c"
 $322 = $321; //@line 75 "mcbits/transpose.c"
 $323 = HEAP32[$322>>2]|0; //@line 75 "mcbits/transpose.c"
 $324 = (($321) + 4)|0; //@line 75 "mcbits/transpose.c"
 $325 = $324; //@line 75 "mcbits/transpose.c"
 $326 = HEAP32[$325>>2]|0; //@line 75 "mcbits/transpose.c"
 $327 = $317 & $323; //@line 75 "mcbits/transpose.c"
 $328 = $320 & $326; //@line 75 "mcbits/transpose.c"
 $329 = $1; //@line 75 "mcbits/transpose.c"
 $330 = ((($329)) + 56|0); //@line 75 "mcbits/transpose.c"
 $331 = $330; //@line 75 "mcbits/transpose.c"
 $332 = $331; //@line 75 "mcbits/transpose.c"
 $333 = HEAP32[$332>>2]|0; //@line 75 "mcbits/transpose.c"
 $334 = (($331) + 4)|0; //@line 75 "mcbits/transpose.c"
 $335 = $334; //@line 75 "mcbits/transpose.c"
 $336 = HEAP32[$335>>2]|0; //@line 75 "mcbits/transpose.c"
 $337 = (14136); //@line 75 "mcbits/transpose.c"
 $338 = $337; //@line 75 "mcbits/transpose.c"
 $339 = HEAP32[$338>>2]|0; //@line 75 "mcbits/transpose.c"
 $340 = (($337) + 4)|0; //@line 75 "mcbits/transpose.c"
 $341 = $340; //@line 75 "mcbits/transpose.c"
 $342 = HEAP32[$341>>2]|0; //@line 75 "mcbits/transpose.c"
 $343 = $333 & $339; //@line 75 "mcbits/transpose.c"
 $344 = $336 & $342; //@line 75 "mcbits/transpose.c"
 $345 = (_bitshift64Shl(($343|0),($344|0),4)|0); //@line 75 "mcbits/transpose.c"
 $346 = tempRet0; //@line 75 "mcbits/transpose.c"
 $347 = $327 | $345; //@line 75 "mcbits/transpose.c"
 $348 = $328 | $346; //@line 75 "mcbits/transpose.c"
 $349 = $2; //@line 75 "mcbits/transpose.c"
 $350 = $349; //@line 75 "mcbits/transpose.c"
 HEAP32[$350>>2] = $347; //@line 75 "mcbits/transpose.c"
 $351 = (($349) + 4)|0; //@line 75 "mcbits/transpose.c"
 $352 = $351; //@line 75 "mcbits/transpose.c"
 HEAP32[$352>>2] = $348; //@line 75 "mcbits/transpose.c"
 $353 = $1; //@line 76 "mcbits/transpose.c"
 $354 = ((($353)) + 24|0); //@line 76 "mcbits/transpose.c"
 $355 = $354; //@line 76 "mcbits/transpose.c"
 $356 = $355; //@line 76 "mcbits/transpose.c"
 $357 = HEAP32[$356>>2]|0; //@line 76 "mcbits/transpose.c"
 $358 = (($355) + 4)|0; //@line 76 "mcbits/transpose.c"
 $359 = $358; //@line 76 "mcbits/transpose.c"
 $360 = HEAP32[$359>>2]|0; //@line 76 "mcbits/transpose.c"
 $361 = (14144); //@line 76 "mcbits/transpose.c"
 $362 = $361; //@line 76 "mcbits/transpose.c"
 $363 = HEAP32[$362>>2]|0; //@line 76 "mcbits/transpose.c"
 $364 = (($361) + 4)|0; //@line 76 "mcbits/transpose.c"
 $365 = $364; //@line 76 "mcbits/transpose.c"
 $366 = HEAP32[$365>>2]|0; //@line 76 "mcbits/transpose.c"
 $367 = $357 & $363; //@line 76 "mcbits/transpose.c"
 $368 = $360 & $366; //@line 76 "mcbits/transpose.c"
 $369 = (_bitshift64Lshr(($367|0),($368|0),4)|0); //@line 76 "mcbits/transpose.c"
 $370 = tempRet0; //@line 76 "mcbits/transpose.c"
 $371 = $1; //@line 76 "mcbits/transpose.c"
 $372 = ((($371)) + 56|0); //@line 76 "mcbits/transpose.c"
 $373 = $372; //@line 76 "mcbits/transpose.c"
 $374 = $373; //@line 76 "mcbits/transpose.c"
 $375 = HEAP32[$374>>2]|0; //@line 76 "mcbits/transpose.c"
 $376 = (($373) + 4)|0; //@line 76 "mcbits/transpose.c"
 $377 = $376; //@line 76 "mcbits/transpose.c"
 $378 = HEAP32[$377>>2]|0; //@line 76 "mcbits/transpose.c"
 $379 = (14144); //@line 76 "mcbits/transpose.c"
 $380 = $379; //@line 76 "mcbits/transpose.c"
 $381 = HEAP32[$380>>2]|0; //@line 76 "mcbits/transpose.c"
 $382 = (($379) + 4)|0; //@line 76 "mcbits/transpose.c"
 $383 = $382; //@line 76 "mcbits/transpose.c"
 $384 = HEAP32[$383>>2]|0; //@line 76 "mcbits/transpose.c"
 $385 = $375 & $381; //@line 76 "mcbits/transpose.c"
 $386 = $378 & $384; //@line 76 "mcbits/transpose.c"
 $387 = $369 | $385; //@line 76 "mcbits/transpose.c"
 $388 = $370 | $386; //@line 76 "mcbits/transpose.c"
 $389 = $3; //@line 76 "mcbits/transpose.c"
 $390 = $389; //@line 76 "mcbits/transpose.c"
 HEAP32[$390>>2] = $387; //@line 76 "mcbits/transpose.c"
 $391 = (($389) + 4)|0; //@line 76 "mcbits/transpose.c"
 $392 = $391; //@line 76 "mcbits/transpose.c"
 HEAP32[$392>>2] = $388; //@line 76 "mcbits/transpose.c"
 $393 = $2; //@line 78 "mcbits/transpose.c"
 $394 = $393; //@line 78 "mcbits/transpose.c"
 $395 = HEAP32[$394>>2]|0; //@line 78 "mcbits/transpose.c"
 $396 = (($393) + 4)|0; //@line 78 "mcbits/transpose.c"
 $397 = $396; //@line 78 "mcbits/transpose.c"
 $398 = HEAP32[$397>>2]|0; //@line 78 "mcbits/transpose.c"
 $399 = $1; //@line 78 "mcbits/transpose.c"
 $400 = ((($399)) + 24|0); //@line 78 "mcbits/transpose.c"
 $401 = $400; //@line 78 "mcbits/transpose.c"
 $402 = $401; //@line 78 "mcbits/transpose.c"
 HEAP32[$402>>2] = $395; //@line 78 "mcbits/transpose.c"
 $403 = (($401) + 4)|0; //@line 78 "mcbits/transpose.c"
 $404 = $403; //@line 78 "mcbits/transpose.c"
 HEAP32[$404>>2] = $398; //@line 78 "mcbits/transpose.c"
 $405 = $3; //@line 79 "mcbits/transpose.c"
 $406 = $405; //@line 79 "mcbits/transpose.c"
 $407 = HEAP32[$406>>2]|0; //@line 79 "mcbits/transpose.c"
 $408 = (($405) + 4)|0; //@line 79 "mcbits/transpose.c"
 $409 = $408; //@line 79 "mcbits/transpose.c"
 $410 = HEAP32[$409>>2]|0; //@line 79 "mcbits/transpose.c"
 $411 = $1; //@line 79 "mcbits/transpose.c"
 $412 = ((($411)) + 56|0); //@line 79 "mcbits/transpose.c"
 $413 = $412; //@line 79 "mcbits/transpose.c"
 $414 = $413; //@line 79 "mcbits/transpose.c"
 HEAP32[$414>>2] = $407; //@line 79 "mcbits/transpose.c"
 $415 = (($413) + 4)|0; //@line 79 "mcbits/transpose.c"
 $416 = $415; //@line 79 "mcbits/transpose.c"
 HEAP32[$416>>2] = $410; //@line 79 "mcbits/transpose.c"
 $417 = $1; //@line 83 "mcbits/transpose.c"
 $418 = $417; //@line 83 "mcbits/transpose.c"
 $419 = $418; //@line 83 "mcbits/transpose.c"
 $420 = HEAP32[$419>>2]|0; //@line 83 "mcbits/transpose.c"
 $421 = (($418) + 4)|0; //@line 83 "mcbits/transpose.c"
 $422 = $421; //@line 83 "mcbits/transpose.c"
 $423 = HEAP32[$422>>2]|0; //@line 83 "mcbits/transpose.c"
 $424 = (14120); //@line 83 "mcbits/transpose.c"
 $425 = $424; //@line 83 "mcbits/transpose.c"
 $426 = HEAP32[$425>>2]|0; //@line 83 "mcbits/transpose.c"
 $427 = (($424) + 4)|0; //@line 83 "mcbits/transpose.c"
 $428 = $427; //@line 83 "mcbits/transpose.c"
 $429 = HEAP32[$428>>2]|0; //@line 83 "mcbits/transpose.c"
 $430 = $420 & $426; //@line 83 "mcbits/transpose.c"
 $431 = $423 & $429; //@line 83 "mcbits/transpose.c"
 $432 = $1; //@line 83 "mcbits/transpose.c"
 $433 = ((($432)) + 16|0); //@line 83 "mcbits/transpose.c"
 $434 = $433; //@line 83 "mcbits/transpose.c"
 $435 = $434; //@line 83 "mcbits/transpose.c"
 $436 = HEAP32[$435>>2]|0; //@line 83 "mcbits/transpose.c"
 $437 = (($434) + 4)|0; //@line 83 "mcbits/transpose.c"
 $438 = $437; //@line 83 "mcbits/transpose.c"
 $439 = HEAP32[$438>>2]|0; //@line 83 "mcbits/transpose.c"
 $440 = (14120); //@line 83 "mcbits/transpose.c"
 $441 = $440; //@line 83 "mcbits/transpose.c"
 $442 = HEAP32[$441>>2]|0; //@line 83 "mcbits/transpose.c"
 $443 = (($440) + 4)|0; //@line 83 "mcbits/transpose.c"
 $444 = $443; //@line 83 "mcbits/transpose.c"
 $445 = HEAP32[$444>>2]|0; //@line 83 "mcbits/transpose.c"
 $446 = $436 & $442; //@line 83 "mcbits/transpose.c"
 $447 = $439 & $445; //@line 83 "mcbits/transpose.c"
 $448 = (_bitshift64Shl(($446|0),($447|0),2)|0); //@line 83 "mcbits/transpose.c"
 $449 = tempRet0; //@line 83 "mcbits/transpose.c"
 $450 = $430 | $448; //@line 83 "mcbits/transpose.c"
 $451 = $431 | $449; //@line 83 "mcbits/transpose.c"
 $452 = $2; //@line 83 "mcbits/transpose.c"
 $453 = $452; //@line 83 "mcbits/transpose.c"
 HEAP32[$453>>2] = $450; //@line 83 "mcbits/transpose.c"
 $454 = (($452) + 4)|0; //@line 83 "mcbits/transpose.c"
 $455 = $454; //@line 83 "mcbits/transpose.c"
 HEAP32[$455>>2] = $451; //@line 83 "mcbits/transpose.c"
 $456 = $1; //@line 84 "mcbits/transpose.c"
 $457 = $456; //@line 84 "mcbits/transpose.c"
 $458 = $457; //@line 84 "mcbits/transpose.c"
 $459 = HEAP32[$458>>2]|0; //@line 84 "mcbits/transpose.c"
 $460 = (($457) + 4)|0; //@line 84 "mcbits/transpose.c"
 $461 = $460; //@line 84 "mcbits/transpose.c"
 $462 = HEAP32[$461>>2]|0; //@line 84 "mcbits/transpose.c"
 $463 = (14128); //@line 84 "mcbits/transpose.c"
 $464 = $463; //@line 84 "mcbits/transpose.c"
 $465 = HEAP32[$464>>2]|0; //@line 84 "mcbits/transpose.c"
 $466 = (($463) + 4)|0; //@line 84 "mcbits/transpose.c"
 $467 = $466; //@line 84 "mcbits/transpose.c"
 $468 = HEAP32[$467>>2]|0; //@line 84 "mcbits/transpose.c"
 $469 = $459 & $465; //@line 84 "mcbits/transpose.c"
 $470 = $462 & $468; //@line 84 "mcbits/transpose.c"
 $471 = (_bitshift64Lshr(($469|0),($470|0),2)|0); //@line 84 "mcbits/transpose.c"
 $472 = tempRet0; //@line 84 "mcbits/transpose.c"
 $473 = $1; //@line 84 "mcbits/transpose.c"
 $474 = ((($473)) + 16|0); //@line 84 "mcbits/transpose.c"
 $475 = $474; //@line 84 "mcbits/transpose.c"
 $476 = $475; //@line 84 "mcbits/transpose.c"
 $477 = HEAP32[$476>>2]|0; //@line 84 "mcbits/transpose.c"
 $478 = (($475) + 4)|0; //@line 84 "mcbits/transpose.c"
 $479 = $478; //@line 84 "mcbits/transpose.c"
 $480 = HEAP32[$479>>2]|0; //@line 84 "mcbits/transpose.c"
 $481 = (14128); //@line 84 "mcbits/transpose.c"
 $482 = $481; //@line 84 "mcbits/transpose.c"
 $483 = HEAP32[$482>>2]|0; //@line 84 "mcbits/transpose.c"
 $484 = (($481) + 4)|0; //@line 84 "mcbits/transpose.c"
 $485 = $484; //@line 84 "mcbits/transpose.c"
 $486 = HEAP32[$485>>2]|0; //@line 84 "mcbits/transpose.c"
 $487 = $477 & $483; //@line 84 "mcbits/transpose.c"
 $488 = $480 & $486; //@line 84 "mcbits/transpose.c"
 $489 = $471 | $487; //@line 84 "mcbits/transpose.c"
 $490 = $472 | $488; //@line 84 "mcbits/transpose.c"
 $491 = $3; //@line 84 "mcbits/transpose.c"
 $492 = $491; //@line 84 "mcbits/transpose.c"
 HEAP32[$492>>2] = $489; //@line 84 "mcbits/transpose.c"
 $493 = (($491) + 4)|0; //@line 84 "mcbits/transpose.c"
 $494 = $493; //@line 84 "mcbits/transpose.c"
 HEAP32[$494>>2] = $490; //@line 84 "mcbits/transpose.c"
 $495 = $2; //@line 86 "mcbits/transpose.c"
 $496 = $495; //@line 86 "mcbits/transpose.c"
 $497 = HEAP32[$496>>2]|0; //@line 86 "mcbits/transpose.c"
 $498 = (($495) + 4)|0; //@line 86 "mcbits/transpose.c"
 $499 = $498; //@line 86 "mcbits/transpose.c"
 $500 = HEAP32[$499>>2]|0; //@line 86 "mcbits/transpose.c"
 $501 = $1; //@line 86 "mcbits/transpose.c"
 $502 = $501; //@line 86 "mcbits/transpose.c"
 $503 = $502; //@line 86 "mcbits/transpose.c"
 HEAP32[$503>>2] = $497; //@line 86 "mcbits/transpose.c"
 $504 = (($502) + 4)|0; //@line 86 "mcbits/transpose.c"
 $505 = $504; //@line 86 "mcbits/transpose.c"
 HEAP32[$505>>2] = $500; //@line 86 "mcbits/transpose.c"
 $506 = $3; //@line 87 "mcbits/transpose.c"
 $507 = $506; //@line 87 "mcbits/transpose.c"
 $508 = HEAP32[$507>>2]|0; //@line 87 "mcbits/transpose.c"
 $509 = (($506) + 4)|0; //@line 87 "mcbits/transpose.c"
 $510 = $509; //@line 87 "mcbits/transpose.c"
 $511 = HEAP32[$510>>2]|0; //@line 87 "mcbits/transpose.c"
 $512 = $1; //@line 87 "mcbits/transpose.c"
 $513 = ((($512)) + 16|0); //@line 87 "mcbits/transpose.c"
 $514 = $513; //@line 87 "mcbits/transpose.c"
 $515 = $514; //@line 87 "mcbits/transpose.c"
 HEAP32[$515>>2] = $508; //@line 87 "mcbits/transpose.c"
 $516 = (($514) + 4)|0; //@line 87 "mcbits/transpose.c"
 $517 = $516; //@line 87 "mcbits/transpose.c"
 HEAP32[$517>>2] = $511; //@line 87 "mcbits/transpose.c"
 $518 = $1; //@line 89 "mcbits/transpose.c"
 $519 = ((($518)) + 8|0); //@line 89 "mcbits/transpose.c"
 $520 = $519; //@line 89 "mcbits/transpose.c"
 $521 = $520; //@line 89 "mcbits/transpose.c"
 $522 = HEAP32[$521>>2]|0; //@line 89 "mcbits/transpose.c"
 $523 = (($520) + 4)|0; //@line 89 "mcbits/transpose.c"
 $524 = $523; //@line 89 "mcbits/transpose.c"
 $525 = HEAP32[$524>>2]|0; //@line 89 "mcbits/transpose.c"
 $526 = (14120); //@line 89 "mcbits/transpose.c"
 $527 = $526; //@line 89 "mcbits/transpose.c"
 $528 = HEAP32[$527>>2]|0; //@line 89 "mcbits/transpose.c"
 $529 = (($526) + 4)|0; //@line 89 "mcbits/transpose.c"
 $530 = $529; //@line 89 "mcbits/transpose.c"
 $531 = HEAP32[$530>>2]|0; //@line 89 "mcbits/transpose.c"
 $532 = $522 & $528; //@line 89 "mcbits/transpose.c"
 $533 = $525 & $531; //@line 89 "mcbits/transpose.c"
 $534 = $1; //@line 89 "mcbits/transpose.c"
 $535 = ((($534)) + 24|0); //@line 89 "mcbits/transpose.c"
 $536 = $535; //@line 89 "mcbits/transpose.c"
 $537 = $536; //@line 89 "mcbits/transpose.c"
 $538 = HEAP32[$537>>2]|0; //@line 89 "mcbits/transpose.c"
 $539 = (($536) + 4)|0; //@line 89 "mcbits/transpose.c"
 $540 = $539; //@line 89 "mcbits/transpose.c"
 $541 = HEAP32[$540>>2]|0; //@line 89 "mcbits/transpose.c"
 $542 = (14120); //@line 89 "mcbits/transpose.c"
 $543 = $542; //@line 89 "mcbits/transpose.c"
 $544 = HEAP32[$543>>2]|0; //@line 89 "mcbits/transpose.c"
 $545 = (($542) + 4)|0; //@line 89 "mcbits/transpose.c"
 $546 = $545; //@line 89 "mcbits/transpose.c"
 $547 = HEAP32[$546>>2]|0; //@line 89 "mcbits/transpose.c"
 $548 = $538 & $544; //@line 89 "mcbits/transpose.c"
 $549 = $541 & $547; //@line 89 "mcbits/transpose.c"
 $550 = (_bitshift64Shl(($548|0),($549|0),2)|0); //@line 89 "mcbits/transpose.c"
 $551 = tempRet0; //@line 89 "mcbits/transpose.c"
 $552 = $532 | $550; //@line 89 "mcbits/transpose.c"
 $553 = $533 | $551; //@line 89 "mcbits/transpose.c"
 $554 = $2; //@line 89 "mcbits/transpose.c"
 $555 = $554; //@line 89 "mcbits/transpose.c"
 HEAP32[$555>>2] = $552; //@line 89 "mcbits/transpose.c"
 $556 = (($554) + 4)|0; //@line 89 "mcbits/transpose.c"
 $557 = $556; //@line 89 "mcbits/transpose.c"
 HEAP32[$557>>2] = $553; //@line 89 "mcbits/transpose.c"
 $558 = $1; //@line 90 "mcbits/transpose.c"
 $559 = ((($558)) + 8|0); //@line 90 "mcbits/transpose.c"
 $560 = $559; //@line 90 "mcbits/transpose.c"
 $561 = $560; //@line 90 "mcbits/transpose.c"
 $562 = HEAP32[$561>>2]|0; //@line 90 "mcbits/transpose.c"
 $563 = (($560) + 4)|0; //@line 90 "mcbits/transpose.c"
 $564 = $563; //@line 90 "mcbits/transpose.c"
 $565 = HEAP32[$564>>2]|0; //@line 90 "mcbits/transpose.c"
 $566 = (14128); //@line 90 "mcbits/transpose.c"
 $567 = $566; //@line 90 "mcbits/transpose.c"
 $568 = HEAP32[$567>>2]|0; //@line 90 "mcbits/transpose.c"
 $569 = (($566) + 4)|0; //@line 90 "mcbits/transpose.c"
 $570 = $569; //@line 90 "mcbits/transpose.c"
 $571 = HEAP32[$570>>2]|0; //@line 90 "mcbits/transpose.c"
 $572 = $562 & $568; //@line 90 "mcbits/transpose.c"
 $573 = $565 & $571; //@line 90 "mcbits/transpose.c"
 $574 = (_bitshift64Lshr(($572|0),($573|0),2)|0); //@line 90 "mcbits/transpose.c"
 $575 = tempRet0; //@line 90 "mcbits/transpose.c"
 $576 = $1; //@line 90 "mcbits/transpose.c"
 $577 = ((($576)) + 24|0); //@line 90 "mcbits/transpose.c"
 $578 = $577; //@line 90 "mcbits/transpose.c"
 $579 = $578; //@line 90 "mcbits/transpose.c"
 $580 = HEAP32[$579>>2]|0; //@line 90 "mcbits/transpose.c"
 $581 = (($578) + 4)|0; //@line 90 "mcbits/transpose.c"
 $582 = $581; //@line 90 "mcbits/transpose.c"
 $583 = HEAP32[$582>>2]|0; //@line 90 "mcbits/transpose.c"
 $584 = (14128); //@line 90 "mcbits/transpose.c"
 $585 = $584; //@line 90 "mcbits/transpose.c"
 $586 = HEAP32[$585>>2]|0; //@line 90 "mcbits/transpose.c"
 $587 = (($584) + 4)|0; //@line 90 "mcbits/transpose.c"
 $588 = $587; //@line 90 "mcbits/transpose.c"
 $589 = HEAP32[$588>>2]|0; //@line 90 "mcbits/transpose.c"
 $590 = $580 & $586; //@line 90 "mcbits/transpose.c"
 $591 = $583 & $589; //@line 90 "mcbits/transpose.c"
 $592 = $574 | $590; //@line 90 "mcbits/transpose.c"
 $593 = $575 | $591; //@line 90 "mcbits/transpose.c"
 $594 = $3; //@line 90 "mcbits/transpose.c"
 $595 = $594; //@line 90 "mcbits/transpose.c"
 HEAP32[$595>>2] = $592; //@line 90 "mcbits/transpose.c"
 $596 = (($594) + 4)|0; //@line 90 "mcbits/transpose.c"
 $597 = $596; //@line 90 "mcbits/transpose.c"
 HEAP32[$597>>2] = $593; //@line 90 "mcbits/transpose.c"
 $598 = $2; //@line 92 "mcbits/transpose.c"
 $599 = $598; //@line 92 "mcbits/transpose.c"
 $600 = HEAP32[$599>>2]|0; //@line 92 "mcbits/transpose.c"
 $601 = (($598) + 4)|0; //@line 92 "mcbits/transpose.c"
 $602 = $601; //@line 92 "mcbits/transpose.c"
 $603 = HEAP32[$602>>2]|0; //@line 92 "mcbits/transpose.c"
 $604 = $1; //@line 92 "mcbits/transpose.c"
 $605 = ((($604)) + 8|0); //@line 92 "mcbits/transpose.c"
 $606 = $605; //@line 92 "mcbits/transpose.c"
 $607 = $606; //@line 92 "mcbits/transpose.c"
 HEAP32[$607>>2] = $600; //@line 92 "mcbits/transpose.c"
 $608 = (($606) + 4)|0; //@line 92 "mcbits/transpose.c"
 $609 = $608; //@line 92 "mcbits/transpose.c"
 HEAP32[$609>>2] = $603; //@line 92 "mcbits/transpose.c"
 $610 = $3; //@line 93 "mcbits/transpose.c"
 $611 = $610; //@line 93 "mcbits/transpose.c"
 $612 = HEAP32[$611>>2]|0; //@line 93 "mcbits/transpose.c"
 $613 = (($610) + 4)|0; //@line 93 "mcbits/transpose.c"
 $614 = $613; //@line 93 "mcbits/transpose.c"
 $615 = HEAP32[$614>>2]|0; //@line 93 "mcbits/transpose.c"
 $616 = $1; //@line 93 "mcbits/transpose.c"
 $617 = ((($616)) + 24|0); //@line 93 "mcbits/transpose.c"
 $618 = $617; //@line 93 "mcbits/transpose.c"
 $619 = $618; //@line 93 "mcbits/transpose.c"
 HEAP32[$619>>2] = $612; //@line 93 "mcbits/transpose.c"
 $620 = (($618) + 4)|0; //@line 93 "mcbits/transpose.c"
 $621 = $620; //@line 93 "mcbits/transpose.c"
 HEAP32[$621>>2] = $615; //@line 93 "mcbits/transpose.c"
 $622 = $1; //@line 95 "mcbits/transpose.c"
 $623 = ((($622)) + 32|0); //@line 95 "mcbits/transpose.c"
 $624 = $623; //@line 95 "mcbits/transpose.c"
 $625 = $624; //@line 95 "mcbits/transpose.c"
 $626 = HEAP32[$625>>2]|0; //@line 95 "mcbits/transpose.c"
 $627 = (($624) + 4)|0; //@line 95 "mcbits/transpose.c"
 $628 = $627; //@line 95 "mcbits/transpose.c"
 $629 = HEAP32[$628>>2]|0; //@line 95 "mcbits/transpose.c"
 $630 = (14120); //@line 95 "mcbits/transpose.c"
 $631 = $630; //@line 95 "mcbits/transpose.c"
 $632 = HEAP32[$631>>2]|0; //@line 95 "mcbits/transpose.c"
 $633 = (($630) + 4)|0; //@line 95 "mcbits/transpose.c"
 $634 = $633; //@line 95 "mcbits/transpose.c"
 $635 = HEAP32[$634>>2]|0; //@line 95 "mcbits/transpose.c"
 $636 = $626 & $632; //@line 95 "mcbits/transpose.c"
 $637 = $629 & $635; //@line 95 "mcbits/transpose.c"
 $638 = $1; //@line 95 "mcbits/transpose.c"
 $639 = ((($638)) + 48|0); //@line 95 "mcbits/transpose.c"
 $640 = $639; //@line 95 "mcbits/transpose.c"
 $641 = $640; //@line 95 "mcbits/transpose.c"
 $642 = HEAP32[$641>>2]|0; //@line 95 "mcbits/transpose.c"
 $643 = (($640) + 4)|0; //@line 95 "mcbits/transpose.c"
 $644 = $643; //@line 95 "mcbits/transpose.c"
 $645 = HEAP32[$644>>2]|0; //@line 95 "mcbits/transpose.c"
 $646 = (14120); //@line 95 "mcbits/transpose.c"
 $647 = $646; //@line 95 "mcbits/transpose.c"
 $648 = HEAP32[$647>>2]|0; //@line 95 "mcbits/transpose.c"
 $649 = (($646) + 4)|0; //@line 95 "mcbits/transpose.c"
 $650 = $649; //@line 95 "mcbits/transpose.c"
 $651 = HEAP32[$650>>2]|0; //@line 95 "mcbits/transpose.c"
 $652 = $642 & $648; //@line 95 "mcbits/transpose.c"
 $653 = $645 & $651; //@line 95 "mcbits/transpose.c"
 $654 = (_bitshift64Shl(($652|0),($653|0),2)|0); //@line 95 "mcbits/transpose.c"
 $655 = tempRet0; //@line 95 "mcbits/transpose.c"
 $656 = $636 | $654; //@line 95 "mcbits/transpose.c"
 $657 = $637 | $655; //@line 95 "mcbits/transpose.c"
 $658 = $2; //@line 95 "mcbits/transpose.c"
 $659 = $658; //@line 95 "mcbits/transpose.c"
 HEAP32[$659>>2] = $656; //@line 95 "mcbits/transpose.c"
 $660 = (($658) + 4)|0; //@line 95 "mcbits/transpose.c"
 $661 = $660; //@line 95 "mcbits/transpose.c"
 HEAP32[$661>>2] = $657; //@line 95 "mcbits/transpose.c"
 $662 = $1; //@line 96 "mcbits/transpose.c"
 $663 = ((($662)) + 32|0); //@line 96 "mcbits/transpose.c"
 $664 = $663; //@line 96 "mcbits/transpose.c"
 $665 = $664; //@line 96 "mcbits/transpose.c"
 $666 = HEAP32[$665>>2]|0; //@line 96 "mcbits/transpose.c"
 $667 = (($664) + 4)|0; //@line 96 "mcbits/transpose.c"
 $668 = $667; //@line 96 "mcbits/transpose.c"
 $669 = HEAP32[$668>>2]|0; //@line 96 "mcbits/transpose.c"
 $670 = (14128); //@line 96 "mcbits/transpose.c"
 $671 = $670; //@line 96 "mcbits/transpose.c"
 $672 = HEAP32[$671>>2]|0; //@line 96 "mcbits/transpose.c"
 $673 = (($670) + 4)|0; //@line 96 "mcbits/transpose.c"
 $674 = $673; //@line 96 "mcbits/transpose.c"
 $675 = HEAP32[$674>>2]|0; //@line 96 "mcbits/transpose.c"
 $676 = $666 & $672; //@line 96 "mcbits/transpose.c"
 $677 = $669 & $675; //@line 96 "mcbits/transpose.c"
 $678 = (_bitshift64Lshr(($676|0),($677|0),2)|0); //@line 96 "mcbits/transpose.c"
 $679 = tempRet0; //@line 96 "mcbits/transpose.c"
 $680 = $1; //@line 96 "mcbits/transpose.c"
 $681 = ((($680)) + 48|0); //@line 96 "mcbits/transpose.c"
 $682 = $681; //@line 96 "mcbits/transpose.c"
 $683 = $682; //@line 96 "mcbits/transpose.c"
 $684 = HEAP32[$683>>2]|0; //@line 96 "mcbits/transpose.c"
 $685 = (($682) + 4)|0; //@line 96 "mcbits/transpose.c"
 $686 = $685; //@line 96 "mcbits/transpose.c"
 $687 = HEAP32[$686>>2]|0; //@line 96 "mcbits/transpose.c"
 $688 = (14128); //@line 96 "mcbits/transpose.c"
 $689 = $688; //@line 96 "mcbits/transpose.c"
 $690 = HEAP32[$689>>2]|0; //@line 96 "mcbits/transpose.c"
 $691 = (($688) + 4)|0; //@line 96 "mcbits/transpose.c"
 $692 = $691; //@line 96 "mcbits/transpose.c"
 $693 = HEAP32[$692>>2]|0; //@line 96 "mcbits/transpose.c"
 $694 = $684 & $690; //@line 96 "mcbits/transpose.c"
 $695 = $687 & $693; //@line 96 "mcbits/transpose.c"
 $696 = $678 | $694; //@line 96 "mcbits/transpose.c"
 $697 = $679 | $695; //@line 96 "mcbits/transpose.c"
 $698 = $3; //@line 96 "mcbits/transpose.c"
 $699 = $698; //@line 96 "mcbits/transpose.c"
 HEAP32[$699>>2] = $696; //@line 96 "mcbits/transpose.c"
 $700 = (($698) + 4)|0; //@line 96 "mcbits/transpose.c"
 $701 = $700; //@line 96 "mcbits/transpose.c"
 HEAP32[$701>>2] = $697; //@line 96 "mcbits/transpose.c"
 $702 = $2; //@line 98 "mcbits/transpose.c"
 $703 = $702; //@line 98 "mcbits/transpose.c"
 $704 = HEAP32[$703>>2]|0; //@line 98 "mcbits/transpose.c"
 $705 = (($702) + 4)|0; //@line 98 "mcbits/transpose.c"
 $706 = $705; //@line 98 "mcbits/transpose.c"
 $707 = HEAP32[$706>>2]|0; //@line 98 "mcbits/transpose.c"
 $708 = $1; //@line 98 "mcbits/transpose.c"
 $709 = ((($708)) + 32|0); //@line 98 "mcbits/transpose.c"
 $710 = $709; //@line 98 "mcbits/transpose.c"
 $711 = $710; //@line 98 "mcbits/transpose.c"
 HEAP32[$711>>2] = $704; //@line 98 "mcbits/transpose.c"
 $712 = (($710) + 4)|0; //@line 98 "mcbits/transpose.c"
 $713 = $712; //@line 98 "mcbits/transpose.c"
 HEAP32[$713>>2] = $707; //@line 98 "mcbits/transpose.c"
 $714 = $3; //@line 99 "mcbits/transpose.c"
 $715 = $714; //@line 99 "mcbits/transpose.c"
 $716 = HEAP32[$715>>2]|0; //@line 99 "mcbits/transpose.c"
 $717 = (($714) + 4)|0; //@line 99 "mcbits/transpose.c"
 $718 = $717; //@line 99 "mcbits/transpose.c"
 $719 = HEAP32[$718>>2]|0; //@line 99 "mcbits/transpose.c"
 $720 = $1; //@line 99 "mcbits/transpose.c"
 $721 = ((($720)) + 48|0); //@line 99 "mcbits/transpose.c"
 $722 = $721; //@line 99 "mcbits/transpose.c"
 $723 = $722; //@line 99 "mcbits/transpose.c"
 HEAP32[$723>>2] = $716; //@line 99 "mcbits/transpose.c"
 $724 = (($722) + 4)|0; //@line 99 "mcbits/transpose.c"
 $725 = $724; //@line 99 "mcbits/transpose.c"
 HEAP32[$725>>2] = $719; //@line 99 "mcbits/transpose.c"
 $726 = $1; //@line 101 "mcbits/transpose.c"
 $727 = ((($726)) + 40|0); //@line 101 "mcbits/transpose.c"
 $728 = $727; //@line 101 "mcbits/transpose.c"
 $729 = $728; //@line 101 "mcbits/transpose.c"
 $730 = HEAP32[$729>>2]|0; //@line 101 "mcbits/transpose.c"
 $731 = (($728) + 4)|0; //@line 101 "mcbits/transpose.c"
 $732 = $731; //@line 101 "mcbits/transpose.c"
 $733 = HEAP32[$732>>2]|0; //@line 101 "mcbits/transpose.c"
 $734 = (14120); //@line 101 "mcbits/transpose.c"
 $735 = $734; //@line 101 "mcbits/transpose.c"
 $736 = HEAP32[$735>>2]|0; //@line 101 "mcbits/transpose.c"
 $737 = (($734) + 4)|0; //@line 101 "mcbits/transpose.c"
 $738 = $737; //@line 101 "mcbits/transpose.c"
 $739 = HEAP32[$738>>2]|0; //@line 101 "mcbits/transpose.c"
 $740 = $730 & $736; //@line 101 "mcbits/transpose.c"
 $741 = $733 & $739; //@line 101 "mcbits/transpose.c"
 $742 = $1; //@line 101 "mcbits/transpose.c"
 $743 = ((($742)) + 56|0); //@line 101 "mcbits/transpose.c"
 $744 = $743; //@line 101 "mcbits/transpose.c"
 $745 = $744; //@line 101 "mcbits/transpose.c"
 $746 = HEAP32[$745>>2]|0; //@line 101 "mcbits/transpose.c"
 $747 = (($744) + 4)|0; //@line 101 "mcbits/transpose.c"
 $748 = $747; //@line 101 "mcbits/transpose.c"
 $749 = HEAP32[$748>>2]|0; //@line 101 "mcbits/transpose.c"
 $750 = (14120); //@line 101 "mcbits/transpose.c"
 $751 = $750; //@line 101 "mcbits/transpose.c"
 $752 = HEAP32[$751>>2]|0; //@line 101 "mcbits/transpose.c"
 $753 = (($750) + 4)|0; //@line 101 "mcbits/transpose.c"
 $754 = $753; //@line 101 "mcbits/transpose.c"
 $755 = HEAP32[$754>>2]|0; //@line 101 "mcbits/transpose.c"
 $756 = $746 & $752; //@line 101 "mcbits/transpose.c"
 $757 = $749 & $755; //@line 101 "mcbits/transpose.c"
 $758 = (_bitshift64Shl(($756|0),($757|0),2)|0); //@line 101 "mcbits/transpose.c"
 $759 = tempRet0; //@line 101 "mcbits/transpose.c"
 $760 = $740 | $758; //@line 101 "mcbits/transpose.c"
 $761 = $741 | $759; //@line 101 "mcbits/transpose.c"
 $762 = $2; //@line 101 "mcbits/transpose.c"
 $763 = $762; //@line 101 "mcbits/transpose.c"
 HEAP32[$763>>2] = $760; //@line 101 "mcbits/transpose.c"
 $764 = (($762) + 4)|0; //@line 101 "mcbits/transpose.c"
 $765 = $764; //@line 101 "mcbits/transpose.c"
 HEAP32[$765>>2] = $761; //@line 101 "mcbits/transpose.c"
 $766 = $1; //@line 102 "mcbits/transpose.c"
 $767 = ((($766)) + 40|0); //@line 102 "mcbits/transpose.c"
 $768 = $767; //@line 102 "mcbits/transpose.c"
 $769 = $768; //@line 102 "mcbits/transpose.c"
 $770 = HEAP32[$769>>2]|0; //@line 102 "mcbits/transpose.c"
 $771 = (($768) + 4)|0; //@line 102 "mcbits/transpose.c"
 $772 = $771; //@line 102 "mcbits/transpose.c"
 $773 = HEAP32[$772>>2]|0; //@line 102 "mcbits/transpose.c"
 $774 = (14128); //@line 102 "mcbits/transpose.c"
 $775 = $774; //@line 102 "mcbits/transpose.c"
 $776 = HEAP32[$775>>2]|0; //@line 102 "mcbits/transpose.c"
 $777 = (($774) + 4)|0; //@line 102 "mcbits/transpose.c"
 $778 = $777; //@line 102 "mcbits/transpose.c"
 $779 = HEAP32[$778>>2]|0; //@line 102 "mcbits/transpose.c"
 $780 = $770 & $776; //@line 102 "mcbits/transpose.c"
 $781 = $773 & $779; //@line 102 "mcbits/transpose.c"
 $782 = (_bitshift64Lshr(($780|0),($781|0),2)|0); //@line 102 "mcbits/transpose.c"
 $783 = tempRet0; //@line 102 "mcbits/transpose.c"
 $784 = $1; //@line 102 "mcbits/transpose.c"
 $785 = ((($784)) + 56|0); //@line 102 "mcbits/transpose.c"
 $786 = $785; //@line 102 "mcbits/transpose.c"
 $787 = $786; //@line 102 "mcbits/transpose.c"
 $788 = HEAP32[$787>>2]|0; //@line 102 "mcbits/transpose.c"
 $789 = (($786) + 4)|0; //@line 102 "mcbits/transpose.c"
 $790 = $789; //@line 102 "mcbits/transpose.c"
 $791 = HEAP32[$790>>2]|0; //@line 102 "mcbits/transpose.c"
 $792 = (14128); //@line 102 "mcbits/transpose.c"
 $793 = $792; //@line 102 "mcbits/transpose.c"
 $794 = HEAP32[$793>>2]|0; //@line 102 "mcbits/transpose.c"
 $795 = (($792) + 4)|0; //@line 102 "mcbits/transpose.c"
 $796 = $795; //@line 102 "mcbits/transpose.c"
 $797 = HEAP32[$796>>2]|0; //@line 102 "mcbits/transpose.c"
 $798 = $788 & $794; //@line 102 "mcbits/transpose.c"
 $799 = $791 & $797; //@line 102 "mcbits/transpose.c"
 $800 = $782 | $798; //@line 102 "mcbits/transpose.c"
 $801 = $783 | $799; //@line 102 "mcbits/transpose.c"
 $802 = $3; //@line 102 "mcbits/transpose.c"
 $803 = $802; //@line 102 "mcbits/transpose.c"
 HEAP32[$803>>2] = $800; //@line 102 "mcbits/transpose.c"
 $804 = (($802) + 4)|0; //@line 102 "mcbits/transpose.c"
 $805 = $804; //@line 102 "mcbits/transpose.c"
 HEAP32[$805>>2] = $801; //@line 102 "mcbits/transpose.c"
 $806 = $2; //@line 104 "mcbits/transpose.c"
 $807 = $806; //@line 104 "mcbits/transpose.c"
 $808 = HEAP32[$807>>2]|0; //@line 104 "mcbits/transpose.c"
 $809 = (($806) + 4)|0; //@line 104 "mcbits/transpose.c"
 $810 = $809; //@line 104 "mcbits/transpose.c"
 $811 = HEAP32[$810>>2]|0; //@line 104 "mcbits/transpose.c"
 $812 = $1; //@line 104 "mcbits/transpose.c"
 $813 = ((($812)) + 40|0); //@line 104 "mcbits/transpose.c"
 $814 = $813; //@line 104 "mcbits/transpose.c"
 $815 = $814; //@line 104 "mcbits/transpose.c"
 HEAP32[$815>>2] = $808; //@line 104 "mcbits/transpose.c"
 $816 = (($814) + 4)|0; //@line 104 "mcbits/transpose.c"
 $817 = $816; //@line 104 "mcbits/transpose.c"
 HEAP32[$817>>2] = $811; //@line 104 "mcbits/transpose.c"
 $818 = $3; //@line 105 "mcbits/transpose.c"
 $819 = $818; //@line 105 "mcbits/transpose.c"
 $820 = HEAP32[$819>>2]|0; //@line 105 "mcbits/transpose.c"
 $821 = (($818) + 4)|0; //@line 105 "mcbits/transpose.c"
 $822 = $821; //@line 105 "mcbits/transpose.c"
 $823 = HEAP32[$822>>2]|0; //@line 105 "mcbits/transpose.c"
 $824 = $1; //@line 105 "mcbits/transpose.c"
 $825 = ((($824)) + 56|0); //@line 105 "mcbits/transpose.c"
 $826 = $825; //@line 105 "mcbits/transpose.c"
 $827 = $826; //@line 105 "mcbits/transpose.c"
 HEAP32[$827>>2] = $820; //@line 105 "mcbits/transpose.c"
 $828 = (($826) + 4)|0; //@line 105 "mcbits/transpose.c"
 $829 = $828; //@line 105 "mcbits/transpose.c"
 HEAP32[$829>>2] = $823; //@line 105 "mcbits/transpose.c"
 $830 = $1; //@line 109 "mcbits/transpose.c"
 $831 = $830; //@line 109 "mcbits/transpose.c"
 $832 = $831; //@line 109 "mcbits/transpose.c"
 $833 = HEAP32[$832>>2]|0; //@line 109 "mcbits/transpose.c"
 $834 = (($831) + 4)|0; //@line 109 "mcbits/transpose.c"
 $835 = $834; //@line 109 "mcbits/transpose.c"
 $836 = HEAP32[$835>>2]|0; //@line 109 "mcbits/transpose.c"
 $837 = 14104; //@line 109 "mcbits/transpose.c"
 $838 = $837; //@line 109 "mcbits/transpose.c"
 $839 = HEAP32[$838>>2]|0; //@line 109 "mcbits/transpose.c"
 $840 = (($837) + 4)|0; //@line 109 "mcbits/transpose.c"
 $841 = $840; //@line 109 "mcbits/transpose.c"
 $842 = HEAP32[$841>>2]|0; //@line 109 "mcbits/transpose.c"
 $843 = $833 & $839; //@line 109 "mcbits/transpose.c"
 $844 = $836 & $842; //@line 109 "mcbits/transpose.c"
 $845 = $1; //@line 109 "mcbits/transpose.c"
 $846 = ((($845)) + 8|0); //@line 109 "mcbits/transpose.c"
 $847 = $846; //@line 109 "mcbits/transpose.c"
 $848 = $847; //@line 109 "mcbits/transpose.c"
 $849 = HEAP32[$848>>2]|0; //@line 109 "mcbits/transpose.c"
 $850 = (($847) + 4)|0; //@line 109 "mcbits/transpose.c"
 $851 = $850; //@line 109 "mcbits/transpose.c"
 $852 = HEAP32[$851>>2]|0; //@line 109 "mcbits/transpose.c"
 $853 = 14104; //@line 109 "mcbits/transpose.c"
 $854 = $853; //@line 109 "mcbits/transpose.c"
 $855 = HEAP32[$854>>2]|0; //@line 109 "mcbits/transpose.c"
 $856 = (($853) + 4)|0; //@line 109 "mcbits/transpose.c"
 $857 = $856; //@line 109 "mcbits/transpose.c"
 $858 = HEAP32[$857>>2]|0; //@line 109 "mcbits/transpose.c"
 $859 = $849 & $855; //@line 109 "mcbits/transpose.c"
 $860 = $852 & $858; //@line 109 "mcbits/transpose.c"
 $861 = (_bitshift64Shl(($859|0),($860|0),1)|0); //@line 109 "mcbits/transpose.c"
 $862 = tempRet0; //@line 109 "mcbits/transpose.c"
 $863 = $843 | $861; //@line 109 "mcbits/transpose.c"
 $864 = $844 | $862; //@line 109 "mcbits/transpose.c"
 $865 = $2; //@line 109 "mcbits/transpose.c"
 $866 = $865; //@line 109 "mcbits/transpose.c"
 HEAP32[$866>>2] = $863; //@line 109 "mcbits/transpose.c"
 $867 = (($865) + 4)|0; //@line 109 "mcbits/transpose.c"
 $868 = $867; //@line 109 "mcbits/transpose.c"
 HEAP32[$868>>2] = $864; //@line 109 "mcbits/transpose.c"
 $869 = $1; //@line 110 "mcbits/transpose.c"
 $870 = $869; //@line 110 "mcbits/transpose.c"
 $871 = $870; //@line 110 "mcbits/transpose.c"
 $872 = HEAP32[$871>>2]|0; //@line 110 "mcbits/transpose.c"
 $873 = (($870) + 4)|0; //@line 110 "mcbits/transpose.c"
 $874 = $873; //@line 110 "mcbits/transpose.c"
 $875 = HEAP32[$874>>2]|0; //@line 110 "mcbits/transpose.c"
 $876 = (14112); //@line 110 "mcbits/transpose.c"
 $877 = $876; //@line 110 "mcbits/transpose.c"
 $878 = HEAP32[$877>>2]|0; //@line 110 "mcbits/transpose.c"
 $879 = (($876) + 4)|0; //@line 110 "mcbits/transpose.c"
 $880 = $879; //@line 110 "mcbits/transpose.c"
 $881 = HEAP32[$880>>2]|0; //@line 110 "mcbits/transpose.c"
 $882 = $872 & $878; //@line 110 "mcbits/transpose.c"
 $883 = $875 & $881; //@line 110 "mcbits/transpose.c"
 $884 = (_bitshift64Lshr(($882|0),($883|0),1)|0); //@line 110 "mcbits/transpose.c"
 $885 = tempRet0; //@line 110 "mcbits/transpose.c"
 $886 = $1; //@line 110 "mcbits/transpose.c"
 $887 = ((($886)) + 8|0); //@line 110 "mcbits/transpose.c"
 $888 = $887; //@line 110 "mcbits/transpose.c"
 $889 = $888; //@line 110 "mcbits/transpose.c"
 $890 = HEAP32[$889>>2]|0; //@line 110 "mcbits/transpose.c"
 $891 = (($888) + 4)|0; //@line 110 "mcbits/transpose.c"
 $892 = $891; //@line 110 "mcbits/transpose.c"
 $893 = HEAP32[$892>>2]|0; //@line 110 "mcbits/transpose.c"
 $894 = (14112); //@line 110 "mcbits/transpose.c"
 $895 = $894; //@line 110 "mcbits/transpose.c"
 $896 = HEAP32[$895>>2]|0; //@line 110 "mcbits/transpose.c"
 $897 = (($894) + 4)|0; //@line 110 "mcbits/transpose.c"
 $898 = $897; //@line 110 "mcbits/transpose.c"
 $899 = HEAP32[$898>>2]|0; //@line 110 "mcbits/transpose.c"
 $900 = $890 & $896; //@line 110 "mcbits/transpose.c"
 $901 = $893 & $899; //@line 110 "mcbits/transpose.c"
 $902 = $884 | $900; //@line 110 "mcbits/transpose.c"
 $903 = $885 | $901; //@line 110 "mcbits/transpose.c"
 $904 = $3; //@line 110 "mcbits/transpose.c"
 $905 = $904; //@line 110 "mcbits/transpose.c"
 HEAP32[$905>>2] = $902; //@line 110 "mcbits/transpose.c"
 $906 = (($904) + 4)|0; //@line 110 "mcbits/transpose.c"
 $907 = $906; //@line 110 "mcbits/transpose.c"
 HEAP32[$907>>2] = $903; //@line 110 "mcbits/transpose.c"
 $908 = $2; //@line 112 "mcbits/transpose.c"
 $909 = $908; //@line 112 "mcbits/transpose.c"
 $910 = HEAP32[$909>>2]|0; //@line 112 "mcbits/transpose.c"
 $911 = (($908) + 4)|0; //@line 112 "mcbits/transpose.c"
 $912 = $911; //@line 112 "mcbits/transpose.c"
 $913 = HEAP32[$912>>2]|0; //@line 112 "mcbits/transpose.c"
 $914 = $1; //@line 112 "mcbits/transpose.c"
 $915 = $914; //@line 112 "mcbits/transpose.c"
 $916 = $915; //@line 112 "mcbits/transpose.c"
 HEAP32[$916>>2] = $910; //@line 112 "mcbits/transpose.c"
 $917 = (($915) + 4)|0; //@line 112 "mcbits/transpose.c"
 $918 = $917; //@line 112 "mcbits/transpose.c"
 HEAP32[$918>>2] = $913; //@line 112 "mcbits/transpose.c"
 $919 = $3; //@line 113 "mcbits/transpose.c"
 $920 = $919; //@line 113 "mcbits/transpose.c"
 $921 = HEAP32[$920>>2]|0; //@line 113 "mcbits/transpose.c"
 $922 = (($919) + 4)|0; //@line 113 "mcbits/transpose.c"
 $923 = $922; //@line 113 "mcbits/transpose.c"
 $924 = HEAP32[$923>>2]|0; //@line 113 "mcbits/transpose.c"
 $925 = $1; //@line 113 "mcbits/transpose.c"
 $926 = ((($925)) + 8|0); //@line 113 "mcbits/transpose.c"
 $927 = $926; //@line 113 "mcbits/transpose.c"
 $928 = $927; //@line 113 "mcbits/transpose.c"
 HEAP32[$928>>2] = $921; //@line 113 "mcbits/transpose.c"
 $929 = (($927) + 4)|0; //@line 113 "mcbits/transpose.c"
 $930 = $929; //@line 113 "mcbits/transpose.c"
 HEAP32[$930>>2] = $924; //@line 113 "mcbits/transpose.c"
 $931 = $1; //@line 115 "mcbits/transpose.c"
 $932 = ((($931)) + 16|0); //@line 115 "mcbits/transpose.c"
 $933 = $932; //@line 115 "mcbits/transpose.c"
 $934 = $933; //@line 115 "mcbits/transpose.c"
 $935 = HEAP32[$934>>2]|0; //@line 115 "mcbits/transpose.c"
 $936 = (($933) + 4)|0; //@line 115 "mcbits/transpose.c"
 $937 = $936; //@line 115 "mcbits/transpose.c"
 $938 = HEAP32[$937>>2]|0; //@line 115 "mcbits/transpose.c"
 $939 = 14104; //@line 115 "mcbits/transpose.c"
 $940 = $939; //@line 115 "mcbits/transpose.c"
 $941 = HEAP32[$940>>2]|0; //@line 115 "mcbits/transpose.c"
 $942 = (($939) + 4)|0; //@line 115 "mcbits/transpose.c"
 $943 = $942; //@line 115 "mcbits/transpose.c"
 $944 = HEAP32[$943>>2]|0; //@line 115 "mcbits/transpose.c"
 $945 = $935 & $941; //@line 115 "mcbits/transpose.c"
 $946 = $938 & $944; //@line 115 "mcbits/transpose.c"
 $947 = $1; //@line 115 "mcbits/transpose.c"
 $948 = ((($947)) + 24|0); //@line 115 "mcbits/transpose.c"
 $949 = $948; //@line 115 "mcbits/transpose.c"
 $950 = $949; //@line 115 "mcbits/transpose.c"
 $951 = HEAP32[$950>>2]|0; //@line 115 "mcbits/transpose.c"
 $952 = (($949) + 4)|0; //@line 115 "mcbits/transpose.c"
 $953 = $952; //@line 115 "mcbits/transpose.c"
 $954 = HEAP32[$953>>2]|0; //@line 115 "mcbits/transpose.c"
 $955 = 14104; //@line 115 "mcbits/transpose.c"
 $956 = $955; //@line 115 "mcbits/transpose.c"
 $957 = HEAP32[$956>>2]|0; //@line 115 "mcbits/transpose.c"
 $958 = (($955) + 4)|0; //@line 115 "mcbits/transpose.c"
 $959 = $958; //@line 115 "mcbits/transpose.c"
 $960 = HEAP32[$959>>2]|0; //@line 115 "mcbits/transpose.c"
 $961 = $951 & $957; //@line 115 "mcbits/transpose.c"
 $962 = $954 & $960; //@line 115 "mcbits/transpose.c"
 $963 = (_bitshift64Shl(($961|0),($962|0),1)|0); //@line 115 "mcbits/transpose.c"
 $964 = tempRet0; //@line 115 "mcbits/transpose.c"
 $965 = $945 | $963; //@line 115 "mcbits/transpose.c"
 $966 = $946 | $964; //@line 115 "mcbits/transpose.c"
 $967 = $2; //@line 115 "mcbits/transpose.c"
 $968 = $967; //@line 115 "mcbits/transpose.c"
 HEAP32[$968>>2] = $965; //@line 115 "mcbits/transpose.c"
 $969 = (($967) + 4)|0; //@line 115 "mcbits/transpose.c"
 $970 = $969; //@line 115 "mcbits/transpose.c"
 HEAP32[$970>>2] = $966; //@line 115 "mcbits/transpose.c"
 $971 = $1; //@line 116 "mcbits/transpose.c"
 $972 = ((($971)) + 16|0); //@line 116 "mcbits/transpose.c"
 $973 = $972; //@line 116 "mcbits/transpose.c"
 $974 = $973; //@line 116 "mcbits/transpose.c"
 $975 = HEAP32[$974>>2]|0; //@line 116 "mcbits/transpose.c"
 $976 = (($973) + 4)|0; //@line 116 "mcbits/transpose.c"
 $977 = $976; //@line 116 "mcbits/transpose.c"
 $978 = HEAP32[$977>>2]|0; //@line 116 "mcbits/transpose.c"
 $979 = (14112); //@line 116 "mcbits/transpose.c"
 $980 = $979; //@line 116 "mcbits/transpose.c"
 $981 = HEAP32[$980>>2]|0; //@line 116 "mcbits/transpose.c"
 $982 = (($979) + 4)|0; //@line 116 "mcbits/transpose.c"
 $983 = $982; //@line 116 "mcbits/transpose.c"
 $984 = HEAP32[$983>>2]|0; //@line 116 "mcbits/transpose.c"
 $985 = $975 & $981; //@line 116 "mcbits/transpose.c"
 $986 = $978 & $984; //@line 116 "mcbits/transpose.c"
 $987 = (_bitshift64Lshr(($985|0),($986|0),1)|0); //@line 116 "mcbits/transpose.c"
 $988 = tempRet0; //@line 116 "mcbits/transpose.c"
 $989 = $1; //@line 116 "mcbits/transpose.c"
 $990 = ((($989)) + 24|0); //@line 116 "mcbits/transpose.c"
 $991 = $990; //@line 116 "mcbits/transpose.c"
 $992 = $991; //@line 116 "mcbits/transpose.c"
 $993 = HEAP32[$992>>2]|0; //@line 116 "mcbits/transpose.c"
 $994 = (($991) + 4)|0; //@line 116 "mcbits/transpose.c"
 $995 = $994; //@line 116 "mcbits/transpose.c"
 $996 = HEAP32[$995>>2]|0; //@line 116 "mcbits/transpose.c"
 $997 = (14112); //@line 116 "mcbits/transpose.c"
 $998 = $997; //@line 116 "mcbits/transpose.c"
 $999 = HEAP32[$998>>2]|0; //@line 116 "mcbits/transpose.c"
 $1000 = (($997) + 4)|0; //@line 116 "mcbits/transpose.c"
 $1001 = $1000; //@line 116 "mcbits/transpose.c"
 $1002 = HEAP32[$1001>>2]|0; //@line 116 "mcbits/transpose.c"
 $1003 = $993 & $999; //@line 116 "mcbits/transpose.c"
 $1004 = $996 & $1002; //@line 116 "mcbits/transpose.c"
 $1005 = $987 | $1003; //@line 116 "mcbits/transpose.c"
 $1006 = $988 | $1004; //@line 116 "mcbits/transpose.c"
 $1007 = $3; //@line 116 "mcbits/transpose.c"
 $1008 = $1007; //@line 116 "mcbits/transpose.c"
 HEAP32[$1008>>2] = $1005; //@line 116 "mcbits/transpose.c"
 $1009 = (($1007) + 4)|0; //@line 116 "mcbits/transpose.c"
 $1010 = $1009; //@line 116 "mcbits/transpose.c"
 HEAP32[$1010>>2] = $1006; //@line 116 "mcbits/transpose.c"
 $1011 = $2; //@line 118 "mcbits/transpose.c"
 $1012 = $1011; //@line 118 "mcbits/transpose.c"
 $1013 = HEAP32[$1012>>2]|0; //@line 118 "mcbits/transpose.c"
 $1014 = (($1011) + 4)|0; //@line 118 "mcbits/transpose.c"
 $1015 = $1014; //@line 118 "mcbits/transpose.c"
 $1016 = HEAP32[$1015>>2]|0; //@line 118 "mcbits/transpose.c"
 $1017 = $1; //@line 118 "mcbits/transpose.c"
 $1018 = ((($1017)) + 16|0); //@line 118 "mcbits/transpose.c"
 $1019 = $1018; //@line 118 "mcbits/transpose.c"
 $1020 = $1019; //@line 118 "mcbits/transpose.c"
 HEAP32[$1020>>2] = $1013; //@line 118 "mcbits/transpose.c"
 $1021 = (($1019) + 4)|0; //@line 118 "mcbits/transpose.c"
 $1022 = $1021; //@line 118 "mcbits/transpose.c"
 HEAP32[$1022>>2] = $1016; //@line 118 "mcbits/transpose.c"
 $1023 = $3; //@line 119 "mcbits/transpose.c"
 $1024 = $1023; //@line 119 "mcbits/transpose.c"
 $1025 = HEAP32[$1024>>2]|0; //@line 119 "mcbits/transpose.c"
 $1026 = (($1023) + 4)|0; //@line 119 "mcbits/transpose.c"
 $1027 = $1026; //@line 119 "mcbits/transpose.c"
 $1028 = HEAP32[$1027>>2]|0; //@line 119 "mcbits/transpose.c"
 $1029 = $1; //@line 119 "mcbits/transpose.c"
 $1030 = ((($1029)) + 24|0); //@line 119 "mcbits/transpose.c"
 $1031 = $1030; //@line 119 "mcbits/transpose.c"
 $1032 = $1031; //@line 119 "mcbits/transpose.c"
 HEAP32[$1032>>2] = $1025; //@line 119 "mcbits/transpose.c"
 $1033 = (($1031) + 4)|0; //@line 119 "mcbits/transpose.c"
 $1034 = $1033; //@line 119 "mcbits/transpose.c"
 HEAP32[$1034>>2] = $1028; //@line 119 "mcbits/transpose.c"
 $1035 = $1; //@line 121 "mcbits/transpose.c"
 $1036 = ((($1035)) + 32|0); //@line 121 "mcbits/transpose.c"
 $1037 = $1036; //@line 121 "mcbits/transpose.c"
 $1038 = $1037; //@line 121 "mcbits/transpose.c"
 $1039 = HEAP32[$1038>>2]|0; //@line 121 "mcbits/transpose.c"
 $1040 = (($1037) + 4)|0; //@line 121 "mcbits/transpose.c"
 $1041 = $1040; //@line 121 "mcbits/transpose.c"
 $1042 = HEAP32[$1041>>2]|0; //@line 121 "mcbits/transpose.c"
 $1043 = 14104; //@line 121 "mcbits/transpose.c"
 $1044 = $1043; //@line 121 "mcbits/transpose.c"
 $1045 = HEAP32[$1044>>2]|0; //@line 121 "mcbits/transpose.c"
 $1046 = (($1043) + 4)|0; //@line 121 "mcbits/transpose.c"
 $1047 = $1046; //@line 121 "mcbits/transpose.c"
 $1048 = HEAP32[$1047>>2]|0; //@line 121 "mcbits/transpose.c"
 $1049 = $1039 & $1045; //@line 121 "mcbits/transpose.c"
 $1050 = $1042 & $1048; //@line 121 "mcbits/transpose.c"
 $1051 = $1; //@line 121 "mcbits/transpose.c"
 $1052 = ((($1051)) + 40|0); //@line 121 "mcbits/transpose.c"
 $1053 = $1052; //@line 121 "mcbits/transpose.c"
 $1054 = $1053; //@line 121 "mcbits/transpose.c"
 $1055 = HEAP32[$1054>>2]|0; //@line 121 "mcbits/transpose.c"
 $1056 = (($1053) + 4)|0; //@line 121 "mcbits/transpose.c"
 $1057 = $1056; //@line 121 "mcbits/transpose.c"
 $1058 = HEAP32[$1057>>2]|0; //@line 121 "mcbits/transpose.c"
 $1059 = 14104; //@line 121 "mcbits/transpose.c"
 $1060 = $1059; //@line 121 "mcbits/transpose.c"
 $1061 = HEAP32[$1060>>2]|0; //@line 121 "mcbits/transpose.c"
 $1062 = (($1059) + 4)|0; //@line 121 "mcbits/transpose.c"
 $1063 = $1062; //@line 121 "mcbits/transpose.c"
 $1064 = HEAP32[$1063>>2]|0; //@line 121 "mcbits/transpose.c"
 $1065 = $1055 & $1061; //@line 121 "mcbits/transpose.c"
 $1066 = $1058 & $1064; //@line 121 "mcbits/transpose.c"
 $1067 = (_bitshift64Shl(($1065|0),($1066|0),1)|0); //@line 121 "mcbits/transpose.c"
 $1068 = tempRet0; //@line 121 "mcbits/transpose.c"
 $1069 = $1049 | $1067; //@line 121 "mcbits/transpose.c"
 $1070 = $1050 | $1068; //@line 121 "mcbits/transpose.c"
 $1071 = $2; //@line 121 "mcbits/transpose.c"
 $1072 = $1071; //@line 121 "mcbits/transpose.c"
 HEAP32[$1072>>2] = $1069; //@line 121 "mcbits/transpose.c"
 $1073 = (($1071) + 4)|0; //@line 121 "mcbits/transpose.c"
 $1074 = $1073; //@line 121 "mcbits/transpose.c"
 HEAP32[$1074>>2] = $1070; //@line 121 "mcbits/transpose.c"
 $1075 = $1; //@line 122 "mcbits/transpose.c"
 $1076 = ((($1075)) + 32|0); //@line 122 "mcbits/transpose.c"
 $1077 = $1076; //@line 122 "mcbits/transpose.c"
 $1078 = $1077; //@line 122 "mcbits/transpose.c"
 $1079 = HEAP32[$1078>>2]|0; //@line 122 "mcbits/transpose.c"
 $1080 = (($1077) + 4)|0; //@line 122 "mcbits/transpose.c"
 $1081 = $1080; //@line 122 "mcbits/transpose.c"
 $1082 = HEAP32[$1081>>2]|0; //@line 122 "mcbits/transpose.c"
 $1083 = (14112); //@line 122 "mcbits/transpose.c"
 $1084 = $1083; //@line 122 "mcbits/transpose.c"
 $1085 = HEAP32[$1084>>2]|0; //@line 122 "mcbits/transpose.c"
 $1086 = (($1083) + 4)|0; //@line 122 "mcbits/transpose.c"
 $1087 = $1086; //@line 122 "mcbits/transpose.c"
 $1088 = HEAP32[$1087>>2]|0; //@line 122 "mcbits/transpose.c"
 $1089 = $1079 & $1085; //@line 122 "mcbits/transpose.c"
 $1090 = $1082 & $1088; //@line 122 "mcbits/transpose.c"
 $1091 = (_bitshift64Lshr(($1089|0),($1090|0),1)|0); //@line 122 "mcbits/transpose.c"
 $1092 = tempRet0; //@line 122 "mcbits/transpose.c"
 $1093 = $1; //@line 122 "mcbits/transpose.c"
 $1094 = ((($1093)) + 40|0); //@line 122 "mcbits/transpose.c"
 $1095 = $1094; //@line 122 "mcbits/transpose.c"
 $1096 = $1095; //@line 122 "mcbits/transpose.c"
 $1097 = HEAP32[$1096>>2]|0; //@line 122 "mcbits/transpose.c"
 $1098 = (($1095) + 4)|0; //@line 122 "mcbits/transpose.c"
 $1099 = $1098; //@line 122 "mcbits/transpose.c"
 $1100 = HEAP32[$1099>>2]|0; //@line 122 "mcbits/transpose.c"
 $1101 = (14112); //@line 122 "mcbits/transpose.c"
 $1102 = $1101; //@line 122 "mcbits/transpose.c"
 $1103 = HEAP32[$1102>>2]|0; //@line 122 "mcbits/transpose.c"
 $1104 = (($1101) + 4)|0; //@line 122 "mcbits/transpose.c"
 $1105 = $1104; //@line 122 "mcbits/transpose.c"
 $1106 = HEAP32[$1105>>2]|0; //@line 122 "mcbits/transpose.c"
 $1107 = $1097 & $1103; //@line 122 "mcbits/transpose.c"
 $1108 = $1100 & $1106; //@line 122 "mcbits/transpose.c"
 $1109 = $1091 | $1107; //@line 122 "mcbits/transpose.c"
 $1110 = $1092 | $1108; //@line 122 "mcbits/transpose.c"
 $1111 = $3; //@line 122 "mcbits/transpose.c"
 $1112 = $1111; //@line 122 "mcbits/transpose.c"
 HEAP32[$1112>>2] = $1109; //@line 122 "mcbits/transpose.c"
 $1113 = (($1111) + 4)|0; //@line 122 "mcbits/transpose.c"
 $1114 = $1113; //@line 122 "mcbits/transpose.c"
 HEAP32[$1114>>2] = $1110; //@line 122 "mcbits/transpose.c"
 $1115 = $2; //@line 124 "mcbits/transpose.c"
 $1116 = $1115; //@line 124 "mcbits/transpose.c"
 $1117 = HEAP32[$1116>>2]|0; //@line 124 "mcbits/transpose.c"
 $1118 = (($1115) + 4)|0; //@line 124 "mcbits/transpose.c"
 $1119 = $1118; //@line 124 "mcbits/transpose.c"
 $1120 = HEAP32[$1119>>2]|0; //@line 124 "mcbits/transpose.c"
 $1121 = $1; //@line 124 "mcbits/transpose.c"
 $1122 = ((($1121)) + 32|0); //@line 124 "mcbits/transpose.c"
 $1123 = $1122; //@line 124 "mcbits/transpose.c"
 $1124 = $1123; //@line 124 "mcbits/transpose.c"
 HEAP32[$1124>>2] = $1117; //@line 124 "mcbits/transpose.c"
 $1125 = (($1123) + 4)|0; //@line 124 "mcbits/transpose.c"
 $1126 = $1125; //@line 124 "mcbits/transpose.c"
 HEAP32[$1126>>2] = $1120; //@line 124 "mcbits/transpose.c"
 $1127 = $3; //@line 125 "mcbits/transpose.c"
 $1128 = $1127; //@line 125 "mcbits/transpose.c"
 $1129 = HEAP32[$1128>>2]|0; //@line 125 "mcbits/transpose.c"
 $1130 = (($1127) + 4)|0; //@line 125 "mcbits/transpose.c"
 $1131 = $1130; //@line 125 "mcbits/transpose.c"
 $1132 = HEAP32[$1131>>2]|0; //@line 125 "mcbits/transpose.c"
 $1133 = $1; //@line 125 "mcbits/transpose.c"
 $1134 = ((($1133)) + 40|0); //@line 125 "mcbits/transpose.c"
 $1135 = $1134; //@line 125 "mcbits/transpose.c"
 $1136 = $1135; //@line 125 "mcbits/transpose.c"
 HEAP32[$1136>>2] = $1129; //@line 125 "mcbits/transpose.c"
 $1137 = (($1135) + 4)|0; //@line 125 "mcbits/transpose.c"
 $1138 = $1137; //@line 125 "mcbits/transpose.c"
 HEAP32[$1138>>2] = $1132; //@line 125 "mcbits/transpose.c"
 $1139 = $1; //@line 127 "mcbits/transpose.c"
 $1140 = ((($1139)) + 48|0); //@line 127 "mcbits/transpose.c"
 $1141 = $1140; //@line 127 "mcbits/transpose.c"
 $1142 = $1141; //@line 127 "mcbits/transpose.c"
 $1143 = HEAP32[$1142>>2]|0; //@line 127 "mcbits/transpose.c"
 $1144 = (($1141) + 4)|0; //@line 127 "mcbits/transpose.c"
 $1145 = $1144; //@line 127 "mcbits/transpose.c"
 $1146 = HEAP32[$1145>>2]|0; //@line 127 "mcbits/transpose.c"
 $1147 = 14104; //@line 127 "mcbits/transpose.c"
 $1148 = $1147; //@line 127 "mcbits/transpose.c"
 $1149 = HEAP32[$1148>>2]|0; //@line 127 "mcbits/transpose.c"
 $1150 = (($1147) + 4)|0; //@line 127 "mcbits/transpose.c"
 $1151 = $1150; //@line 127 "mcbits/transpose.c"
 $1152 = HEAP32[$1151>>2]|0; //@line 127 "mcbits/transpose.c"
 $1153 = $1143 & $1149; //@line 127 "mcbits/transpose.c"
 $1154 = $1146 & $1152; //@line 127 "mcbits/transpose.c"
 $1155 = $1; //@line 127 "mcbits/transpose.c"
 $1156 = ((($1155)) + 56|0); //@line 127 "mcbits/transpose.c"
 $1157 = $1156; //@line 127 "mcbits/transpose.c"
 $1158 = $1157; //@line 127 "mcbits/transpose.c"
 $1159 = HEAP32[$1158>>2]|0; //@line 127 "mcbits/transpose.c"
 $1160 = (($1157) + 4)|0; //@line 127 "mcbits/transpose.c"
 $1161 = $1160; //@line 127 "mcbits/transpose.c"
 $1162 = HEAP32[$1161>>2]|0; //@line 127 "mcbits/transpose.c"
 $1163 = 14104; //@line 127 "mcbits/transpose.c"
 $1164 = $1163; //@line 127 "mcbits/transpose.c"
 $1165 = HEAP32[$1164>>2]|0; //@line 127 "mcbits/transpose.c"
 $1166 = (($1163) + 4)|0; //@line 127 "mcbits/transpose.c"
 $1167 = $1166; //@line 127 "mcbits/transpose.c"
 $1168 = HEAP32[$1167>>2]|0; //@line 127 "mcbits/transpose.c"
 $1169 = $1159 & $1165; //@line 127 "mcbits/transpose.c"
 $1170 = $1162 & $1168; //@line 127 "mcbits/transpose.c"
 $1171 = (_bitshift64Shl(($1169|0),($1170|0),1)|0); //@line 127 "mcbits/transpose.c"
 $1172 = tempRet0; //@line 127 "mcbits/transpose.c"
 $1173 = $1153 | $1171; //@line 127 "mcbits/transpose.c"
 $1174 = $1154 | $1172; //@line 127 "mcbits/transpose.c"
 $1175 = $2; //@line 127 "mcbits/transpose.c"
 $1176 = $1175; //@line 127 "mcbits/transpose.c"
 HEAP32[$1176>>2] = $1173; //@line 127 "mcbits/transpose.c"
 $1177 = (($1175) + 4)|0; //@line 127 "mcbits/transpose.c"
 $1178 = $1177; //@line 127 "mcbits/transpose.c"
 HEAP32[$1178>>2] = $1174; //@line 127 "mcbits/transpose.c"
 $1179 = $1; //@line 128 "mcbits/transpose.c"
 $1180 = ((($1179)) + 48|0); //@line 128 "mcbits/transpose.c"
 $1181 = $1180; //@line 128 "mcbits/transpose.c"
 $1182 = $1181; //@line 128 "mcbits/transpose.c"
 $1183 = HEAP32[$1182>>2]|0; //@line 128 "mcbits/transpose.c"
 $1184 = (($1181) + 4)|0; //@line 128 "mcbits/transpose.c"
 $1185 = $1184; //@line 128 "mcbits/transpose.c"
 $1186 = HEAP32[$1185>>2]|0; //@line 128 "mcbits/transpose.c"
 $1187 = (14112); //@line 128 "mcbits/transpose.c"
 $1188 = $1187; //@line 128 "mcbits/transpose.c"
 $1189 = HEAP32[$1188>>2]|0; //@line 128 "mcbits/transpose.c"
 $1190 = (($1187) + 4)|0; //@line 128 "mcbits/transpose.c"
 $1191 = $1190; //@line 128 "mcbits/transpose.c"
 $1192 = HEAP32[$1191>>2]|0; //@line 128 "mcbits/transpose.c"
 $1193 = $1183 & $1189; //@line 128 "mcbits/transpose.c"
 $1194 = $1186 & $1192; //@line 128 "mcbits/transpose.c"
 $1195 = (_bitshift64Lshr(($1193|0),($1194|0),1)|0); //@line 128 "mcbits/transpose.c"
 $1196 = tempRet0; //@line 128 "mcbits/transpose.c"
 $1197 = $1; //@line 128 "mcbits/transpose.c"
 $1198 = ((($1197)) + 56|0); //@line 128 "mcbits/transpose.c"
 $1199 = $1198; //@line 128 "mcbits/transpose.c"
 $1200 = $1199; //@line 128 "mcbits/transpose.c"
 $1201 = HEAP32[$1200>>2]|0; //@line 128 "mcbits/transpose.c"
 $1202 = (($1199) + 4)|0; //@line 128 "mcbits/transpose.c"
 $1203 = $1202; //@line 128 "mcbits/transpose.c"
 $1204 = HEAP32[$1203>>2]|0; //@line 128 "mcbits/transpose.c"
 $1205 = (14112); //@line 128 "mcbits/transpose.c"
 $1206 = $1205; //@line 128 "mcbits/transpose.c"
 $1207 = HEAP32[$1206>>2]|0; //@line 128 "mcbits/transpose.c"
 $1208 = (($1205) + 4)|0; //@line 128 "mcbits/transpose.c"
 $1209 = $1208; //@line 128 "mcbits/transpose.c"
 $1210 = HEAP32[$1209>>2]|0; //@line 128 "mcbits/transpose.c"
 $1211 = $1201 & $1207; //@line 128 "mcbits/transpose.c"
 $1212 = $1204 & $1210; //@line 128 "mcbits/transpose.c"
 $1213 = $1195 | $1211; //@line 128 "mcbits/transpose.c"
 $1214 = $1196 | $1212; //@line 128 "mcbits/transpose.c"
 $1215 = $3; //@line 128 "mcbits/transpose.c"
 $1216 = $1215; //@line 128 "mcbits/transpose.c"
 HEAP32[$1216>>2] = $1213; //@line 128 "mcbits/transpose.c"
 $1217 = (($1215) + 4)|0; //@line 128 "mcbits/transpose.c"
 $1218 = $1217; //@line 128 "mcbits/transpose.c"
 HEAP32[$1218>>2] = $1214; //@line 128 "mcbits/transpose.c"
 $1219 = $2; //@line 130 "mcbits/transpose.c"
 $1220 = $1219; //@line 130 "mcbits/transpose.c"
 $1221 = HEAP32[$1220>>2]|0; //@line 130 "mcbits/transpose.c"
 $1222 = (($1219) + 4)|0; //@line 130 "mcbits/transpose.c"
 $1223 = $1222; //@line 130 "mcbits/transpose.c"
 $1224 = HEAP32[$1223>>2]|0; //@line 130 "mcbits/transpose.c"
 $1225 = $1; //@line 130 "mcbits/transpose.c"
 $1226 = ((($1225)) + 48|0); //@line 130 "mcbits/transpose.c"
 $1227 = $1226; //@line 130 "mcbits/transpose.c"
 $1228 = $1227; //@line 130 "mcbits/transpose.c"
 HEAP32[$1228>>2] = $1221; //@line 130 "mcbits/transpose.c"
 $1229 = (($1227) + 4)|0; //@line 130 "mcbits/transpose.c"
 $1230 = $1229; //@line 130 "mcbits/transpose.c"
 HEAP32[$1230>>2] = $1224; //@line 130 "mcbits/transpose.c"
 $1231 = $3; //@line 131 "mcbits/transpose.c"
 $1232 = $1231; //@line 131 "mcbits/transpose.c"
 $1233 = HEAP32[$1232>>2]|0; //@line 131 "mcbits/transpose.c"
 $1234 = (($1231) + 4)|0; //@line 131 "mcbits/transpose.c"
 $1235 = $1234; //@line 131 "mcbits/transpose.c"
 $1236 = HEAP32[$1235>>2]|0; //@line 131 "mcbits/transpose.c"
 $1237 = $1; //@line 131 "mcbits/transpose.c"
 $1238 = ((($1237)) + 56|0); //@line 131 "mcbits/transpose.c"
 $1239 = $1238; //@line 131 "mcbits/transpose.c"
 $1240 = $1239; //@line 131 "mcbits/transpose.c"
 HEAP32[$1240>>2] = $1233; //@line 131 "mcbits/transpose.c"
 $1241 = (($1239) + 4)|0; //@line 131 "mcbits/transpose.c"
 $1242 = $1241; //@line 131 "mcbits/transpose.c"
 HEAP32[$1242>>2] = $1236; //@line 131 "mcbits/transpose.c"
 STACKTOP = sp;return; //@line 132 "mcbits/transpose.c"
}
function _store8($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $101 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0;
 var sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $4 = sp_a;
 $3 = $0;
 $5 = $4;
 $6 = $5;
 HEAP32[$6>>2] = $1;
 $7 = (($5) + 4)|0;
 $8 = $7;
 HEAP32[$8>>2] = $2;
 $9 = $4; //@line 7 "mcbits/util.c"
 $10 = $9; //@line 7 "mcbits/util.c"
 $11 = HEAP32[$10>>2]|0; //@line 7 "mcbits/util.c"
 $12 = (($9) + 4)|0; //@line 7 "mcbits/util.c"
 $13 = $12; //@line 7 "mcbits/util.c"
 $14 = HEAP32[$13>>2]|0; //@line 7 "mcbits/util.c"
 $15 = (_bitshift64Lshr(($11|0),($14|0),0)|0); //@line 7 "mcbits/util.c"
 $16 = tempRet0; //@line 7 "mcbits/util.c"
 $17 = $15 & 255; //@line 7 "mcbits/util.c"
 $18 = $17&255; //@line 7 "mcbits/util.c"
 $19 = $3; //@line 7 "mcbits/util.c"
 HEAP8[$19>>0] = $18; //@line 7 "mcbits/util.c"
 $20 = $4; //@line 8 "mcbits/util.c"
 $21 = $20; //@line 8 "mcbits/util.c"
 $22 = HEAP32[$21>>2]|0; //@line 8 "mcbits/util.c"
 $23 = (($20) + 4)|0; //@line 8 "mcbits/util.c"
 $24 = $23; //@line 8 "mcbits/util.c"
 $25 = HEAP32[$24>>2]|0; //@line 8 "mcbits/util.c"
 $26 = (_bitshift64Lshr(($22|0),($25|0),8)|0); //@line 8 "mcbits/util.c"
 $27 = tempRet0; //@line 8 "mcbits/util.c"
 $28 = $26 & 255; //@line 8 "mcbits/util.c"
 $29 = $28&255; //@line 8 "mcbits/util.c"
 $30 = $3; //@line 8 "mcbits/util.c"
 $31 = ((($30)) + 1|0); //@line 8 "mcbits/util.c"
 HEAP8[$31>>0] = $29; //@line 8 "mcbits/util.c"
 $32 = $4; //@line 9 "mcbits/util.c"
 $33 = $32; //@line 9 "mcbits/util.c"
 $34 = HEAP32[$33>>2]|0; //@line 9 "mcbits/util.c"
 $35 = (($32) + 4)|0; //@line 9 "mcbits/util.c"
 $36 = $35; //@line 9 "mcbits/util.c"
 $37 = HEAP32[$36>>2]|0; //@line 9 "mcbits/util.c"
 $38 = (_bitshift64Lshr(($34|0),($37|0),16)|0); //@line 9 "mcbits/util.c"
 $39 = tempRet0; //@line 9 "mcbits/util.c"
 $40 = $38 & 255; //@line 9 "mcbits/util.c"
 $41 = $40&255; //@line 9 "mcbits/util.c"
 $42 = $3; //@line 9 "mcbits/util.c"
 $43 = ((($42)) + 2|0); //@line 9 "mcbits/util.c"
 HEAP8[$43>>0] = $41; //@line 9 "mcbits/util.c"
 $44 = $4; //@line 10 "mcbits/util.c"
 $45 = $44; //@line 10 "mcbits/util.c"
 $46 = HEAP32[$45>>2]|0; //@line 10 "mcbits/util.c"
 $47 = (($44) + 4)|0; //@line 10 "mcbits/util.c"
 $48 = $47; //@line 10 "mcbits/util.c"
 $49 = HEAP32[$48>>2]|0; //@line 10 "mcbits/util.c"
 $50 = (_bitshift64Lshr(($46|0),($49|0),24)|0); //@line 10 "mcbits/util.c"
 $51 = tempRet0; //@line 10 "mcbits/util.c"
 $52 = $50 & 255; //@line 10 "mcbits/util.c"
 $53 = $52&255; //@line 10 "mcbits/util.c"
 $54 = $3; //@line 10 "mcbits/util.c"
 $55 = ((($54)) + 3|0); //@line 10 "mcbits/util.c"
 HEAP8[$55>>0] = $53; //@line 10 "mcbits/util.c"
 $56 = $4; //@line 11 "mcbits/util.c"
 $57 = $56; //@line 11 "mcbits/util.c"
 $58 = HEAP32[$57>>2]|0; //@line 11 "mcbits/util.c"
 $59 = (($56) + 4)|0; //@line 11 "mcbits/util.c"
 $60 = $59; //@line 11 "mcbits/util.c"
 $61 = HEAP32[$60>>2]|0; //@line 11 "mcbits/util.c"
 $62 = $61 & 255; //@line 11 "mcbits/util.c"
 $63 = $62&255; //@line 11 "mcbits/util.c"
 $64 = $3; //@line 11 "mcbits/util.c"
 $65 = ((($64)) + 4|0); //@line 11 "mcbits/util.c"
 HEAP8[$65>>0] = $63; //@line 11 "mcbits/util.c"
 $66 = $4; //@line 12 "mcbits/util.c"
 $67 = $66; //@line 12 "mcbits/util.c"
 $68 = HEAP32[$67>>2]|0; //@line 12 "mcbits/util.c"
 $69 = (($66) + 4)|0; //@line 12 "mcbits/util.c"
 $70 = $69; //@line 12 "mcbits/util.c"
 $71 = HEAP32[$70>>2]|0; //@line 12 "mcbits/util.c"
 $72 = (_bitshift64Lshr(($68|0),($71|0),40)|0); //@line 12 "mcbits/util.c"
 $73 = tempRet0; //@line 12 "mcbits/util.c"
 $74 = $72 & 255; //@line 12 "mcbits/util.c"
 $75 = $74&255; //@line 12 "mcbits/util.c"
 $76 = $3; //@line 12 "mcbits/util.c"
 $77 = ((($76)) + 5|0); //@line 12 "mcbits/util.c"
 HEAP8[$77>>0] = $75; //@line 12 "mcbits/util.c"
 $78 = $4; //@line 13 "mcbits/util.c"
 $79 = $78; //@line 13 "mcbits/util.c"
 $80 = HEAP32[$79>>2]|0; //@line 13 "mcbits/util.c"
 $81 = (($78) + 4)|0; //@line 13 "mcbits/util.c"
 $82 = $81; //@line 13 "mcbits/util.c"
 $83 = HEAP32[$82>>2]|0; //@line 13 "mcbits/util.c"
 $84 = (_bitshift64Lshr(($80|0),($83|0),48)|0); //@line 13 "mcbits/util.c"
 $85 = tempRet0; //@line 13 "mcbits/util.c"
 $86 = $84 & 255; //@line 13 "mcbits/util.c"
 $87 = $86&255; //@line 13 "mcbits/util.c"
 $88 = $3; //@line 13 "mcbits/util.c"
 $89 = ((($88)) + 6|0); //@line 13 "mcbits/util.c"
 HEAP8[$89>>0] = $87; //@line 13 "mcbits/util.c"
 $90 = $4; //@line 14 "mcbits/util.c"
 $91 = $90; //@line 14 "mcbits/util.c"
 $92 = HEAP32[$91>>2]|0; //@line 14 "mcbits/util.c"
 $93 = (($90) + 4)|0; //@line 14 "mcbits/util.c"
 $94 = $93; //@line 14 "mcbits/util.c"
 $95 = HEAP32[$94>>2]|0; //@line 14 "mcbits/util.c"
 $96 = (_bitshift64Lshr(($92|0),($95|0),56)|0); //@line 14 "mcbits/util.c"
 $97 = tempRet0; //@line 14 "mcbits/util.c"
 $98 = $96 & 255; //@line 14 "mcbits/util.c"
 $99 = $98&255; //@line 14 "mcbits/util.c"
 $100 = $3; //@line 14 "mcbits/util.c"
 $101 = ((($100)) + 7|0); //@line 14 "mcbits/util.c"
 HEAP8[$101>>0] = $99; //@line 14 "mcbits/util.c"
 STACKTOP = sp;return; //@line 15 "mcbits/util.c"
}
function _load8($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp_a;
 $1 = $0;
 $4 = $1; //@line 20 "mcbits/util.c"
 $5 = ((($4)) + 7|0); //@line 20 "mcbits/util.c"
 $6 = HEAP8[$5>>0]|0; //@line 20 "mcbits/util.c"
 $7 = $6&255; //@line 20 "mcbits/util.c"
 $8 = $3; //@line 20 "mcbits/util.c"
 $9 = $8; //@line 20 "mcbits/util.c"
 HEAP32[$9>>2] = $7; //@line 20 "mcbits/util.c"
 $10 = (($8) + 4)|0; //@line 20 "mcbits/util.c"
 $11 = $10; //@line 20 "mcbits/util.c"
 HEAP32[$11>>2] = 0; //@line 20 "mcbits/util.c"
 $2 = 6; //@line 22 "mcbits/util.c"
 while(1) {
  $12 = $2; //@line 22 "mcbits/util.c"
  $13 = ($12|0)>=(0); //@line 22 "mcbits/util.c"
  $14 = $3;
  $15 = $14;
  $16 = HEAP32[$15>>2]|0;
  $17 = (($14) + 4)|0;
  $18 = $17;
  $19 = HEAP32[$18>>2]|0;
  if (!($13)) {
   break;
  }
  $20 = (_bitshift64Shl(($16|0),($19|0),8)|0); //@line 24 "mcbits/util.c"
  $21 = tempRet0; //@line 24 "mcbits/util.c"
  $22 = $3; //@line 24 "mcbits/util.c"
  $23 = $22; //@line 24 "mcbits/util.c"
  HEAP32[$23>>2] = $20; //@line 24 "mcbits/util.c"
  $24 = (($22) + 4)|0; //@line 24 "mcbits/util.c"
  $25 = $24; //@line 24 "mcbits/util.c"
  HEAP32[$25>>2] = $21; //@line 24 "mcbits/util.c"
  $26 = $1; //@line 25 "mcbits/util.c"
  $27 = $2; //@line 25 "mcbits/util.c"
  $28 = (($26) + ($27)|0); //@line 25 "mcbits/util.c"
  $29 = HEAP8[$28>>0]|0; //@line 25 "mcbits/util.c"
  $30 = $29&255; //@line 25 "mcbits/util.c"
  $31 = $3; //@line 25 "mcbits/util.c"
  $32 = $31; //@line 25 "mcbits/util.c"
  $33 = HEAP32[$32>>2]|0; //@line 25 "mcbits/util.c"
  $34 = (($31) + 4)|0; //@line 25 "mcbits/util.c"
  $35 = $34; //@line 25 "mcbits/util.c"
  $36 = HEAP32[$35>>2]|0; //@line 25 "mcbits/util.c"
  $37 = $33 | $30; //@line 25 "mcbits/util.c"
  $38 = $3; //@line 25 "mcbits/util.c"
  $39 = $38; //@line 25 "mcbits/util.c"
  HEAP32[$39>>2] = $37; //@line 25 "mcbits/util.c"
  $40 = (($38) + 4)|0; //@line 25 "mcbits/util.c"
  $41 = $40; //@line 25 "mcbits/util.c"
  HEAP32[$41>>2] = $36; //@line 25 "mcbits/util.c"
  $42 = $2; //@line 22 "mcbits/util.c"
  $43 = (($42) + -1)|0; //@line 22 "mcbits/util.c"
  $2 = $43; //@line 22 "mcbits/util.c"
 }
 tempRet0 = ($19); //@line 28 "mcbits/util.c"
 STACKTOP = sp;return ($16|0); //@line 28 "mcbits/util.c"
}
function _vec_mul($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0;
 var $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0;
 var $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0;
 var $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0;
 var $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0;
 var $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0;
 var $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0;
 var $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0;
 var $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0;
 var $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0;
 var $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0;
 var $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0;
 var $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0;
 var $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0;
 var $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0;
 var $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0;
 var $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0;
 var $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0;
 var $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0;
 var $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0;
 var $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0;
 var $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0;
 var $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0;
 var $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0;
 var $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0;
 var $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0;
 var $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0;
 var $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0;
 var $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0;
 var $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0;
 var $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0;
 var $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0;
 var $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0;
 var $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0;
 var $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0;
 var $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0;
 var $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0;
 var $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0;
 var $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0;
 var $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0;
 var $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0;
 var $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0;
 var $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0;
 var $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0;
 var $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0;
 var $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0;
 var $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0;
 var $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0;
 var $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0;
 var $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0;
 var $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0;
 var $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0;
 var $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0;
 var $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0;
 var $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0;
 var $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0;
 var $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0;
 var $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0;
 var $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0;
 var $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0;
 var $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0;
 var $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0;
 var $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0;
 var $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0;
 var $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0;
 var $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0;
 var $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0;
 var $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0;
 var $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0;
 var $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0;
 var $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0;
 var $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0;
 var $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0, $2313 = 0;
 var $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0, $233 = 0, $2330 = 0, $2331 = 0;
 var $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0, $2348 = 0, $2349 = 0, $235 = 0;
 var $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0, $2365 = 0, $2366 = 0, $2367 = 0, $2368 = 0;
 var $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0, $2380 = 0, $2381 = 0, $2382 = 0, $2383 = 0, $2384 = 0, $2385 = 0, $2386 = 0;
 var $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0, $2390 = 0, $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0, $2400 = 0, $2401 = 0, $2402 = 0, $2403 = 0;
 var $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0, $2419 = 0, $242 = 0, $2420 = 0, $2421 = 0;
 var $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0, $2437 = 0, $2438 = 0, $2439 = 0, $244 = 0;
 var $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0, $2455 = 0, $2456 = 0, $2457 = 0, $2458 = 0;
 var $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2472 = 0, $2473 = 0, $2474 = 0, $2475 = 0, $2476 = 0;
 var $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0, $2491 = 0, $2492 = 0, $2493 = 0, $2494 = 0;
 var $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0, $2509 = 0, $251 = 0, $2510 = 0, $2511 = 0;
 var $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0, $2527 = 0, $2528 = 0, $2529 = 0, $253 = 0;
 var $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0, $2545 = 0, $2546 = 0, $2547 = 0, $2548 = 0;
 var $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2562 = 0, $2563 = 0, $2564 = 0, $2565 = 0, $2566 = 0;
 var $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0, $2581 = 0, $2582 = 0, $2583 = 0, $2584 = 0;
 var $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0, $26 = 0, $260 = 0, $2600 = 0, $2601 = 0;
 var $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0, $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2616 = 0, $2617 = 0, $2618 = 0, $2619 = 0, $262 = 0;
 var $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0;
 var $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0, $2653 = 0, $2654 = 0, $2655 = 0, $2656 = 0;
 var $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0, $2671 = 0, $2672 = 0, $2673 = 0, $2674 = 0;
 var $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0, $2689 = 0, $269 = 0, $2690 = 0, $2691 = 0, $2692 = 0;
 var $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0, $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0, $2707 = 0, $2708 = 0, $2709 = 0, $271 = 0;
 var $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0, $2723 = 0, $2724 = 0, $2725 = 0, $2726 = 0, $2727 = 0, $2728 = 0;
 var $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0, $2743 = 0, $2744 = 0, $2745 = 0, $2746 = 0;
 var $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0, $2761 = 0, $2762 = 0, $2763 = 0, $2764 = 0;
 var $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0, $278 = 0, $2780 = 0, $2781 = 0, $2782 = 0;
 var $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0, $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0, $2797 = 0, $2798 = 0, $2799 = 0, $28 = 0, $280 = 0;
 var $2800 = 0, $2801 = 0, $2802 = 0, $2803 = 0, $2804 = 0, $2805 = 0, $2806 = 0, $2807 = 0, $2808 = 0, $2809 = 0, $281 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2813 = 0, $2814 = 0, $2815 = 0, $2816 = 0, $2817 = 0, $2818 = 0;
 var $2819 = 0, $282 = 0, $2820 = 0, $2821 = 0, $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0, $2826 = 0, $2827 = 0, $2828 = 0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0, $2832 = 0, $2833 = 0, $2834 = 0, $2835 = 0, $2836 = 0;
 var $2837 = 0, $2838 = 0, $2839 = 0, $284 = 0, $2840 = 0, $2841 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0, $2850 = 0, $2851 = 0, $2852 = 0, $2853 = 0, $2854 = 0;
 var $2855 = 0, $2856 = 0, $2857 = 0, $2858 = 0, $2859 = 0, $286 = 0, $2860 = 0, $2861 = 0, $2862 = 0, $2863 = 0, $2864 = 0, $2865 = 0, $2866 = 0, $2867 = 0, $2868 = 0, $2869 = 0, $287 = 0, $2870 = 0, $2871 = 0, $2872 = 0;
 var $2873 = 0, $2874 = 0, $2875 = 0, $2876 = 0, $2877 = 0, $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $2885 = 0, $2886 = 0, $2887 = 0, $2888 = 0, $2889 = 0, $289 = 0, $2890 = 0;
 var $2891 = 0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0, $2896 = 0, $2897 = 0, $2898 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $2902 = 0, $2903 = 0, $2904 = 0, $2905 = 0, $2906 = 0, $2907 = 0, $2908 = 0;
 var $2909 = 0, $291 = 0, $2910 = 0, $2911 = 0, $2912 = 0, $2913 = 0, $2914 = 0, $2915 = 0, $2916 = 0, $2917 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2921 = 0, $2922 = 0, $2923 = 0, $2924 = 0, $2925 = 0, $2926 = 0;
 var $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2934 = 0, $2935 = 0, $2936 = 0, $2937 = 0, $2938 = 0, $2939 = 0, $294 = 0, $2940 = 0, $2941 = 0, $2942 = 0, $2943 = 0, $2944 = 0;
 var $2945 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $2949 = 0, $295 = 0, $2950 = 0, $2951 = 0, $2952 = 0, $2953 = 0, $2954 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $2959 = 0, $296 = 0, $2960 = 0, $2961 = 0, $2962 = 0;
 var $2963 = 0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0, $2968 = 0, $2969 = 0, $297 = 0, $2970 = 0, $2971 = 0, $2972 = 0, $2973 = 0, $2974 = 0, $2975 = 0, $2976 = 0, $2977 = 0, $2978 = 0, $2979 = 0, $298 = 0, $2980 = 0;
 var $2981 = 0, $2982 = 0, $2983 = 0, $2984 = 0, $2985 = 0, $2986 = 0, $2987 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2991 = 0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0, $2996 = 0, $2997 = 0, $2998 = 0, $2999 = 0;
 var $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $3001 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0, $3013 = 0, $3014 = 0, $3015 = 0;
 var $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0, $3023 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0, $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0, $3031 = 0, $3032 = 0, $3033 = 0;
 var $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0, $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0, $3049 = 0, $305 = 0, $3050 = 0, $3051 = 0;
 var $3052 = 0, $3053 = 0, $3054 = 0, $3055 = 0, $3056 = 0, $3057 = 0, $3058 = 0, $3059 = 0, $306 = 0, $3060 = 0, $3061 = 0, $3062 = 0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0, $3067 = 0, $3068 = 0, $3069 = 0, $307 = 0;
 var $3070 = 0, $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3080 = 0, $3081 = 0, $3082 = 0, $3083 = 0, $3084 = 0, $3085 = 0, $3086 = 0, $3087 = 0, $3088 = 0;
 var $3089 = 0, $309 = 0, $3090 = 0, $3091 = 0, $3092 = 0, $3093 = 0, $3094 = 0, $3095 = 0, $3096 = 0, $3097 = 0, $3098 = 0, $3099 = 0, $31 = 0, $310 = 0, $3100 = 0, $3101 = 0, $3102 = 0, $3103 = 0, $3104 = 0, $3105 = 0;
 var $3106 = 0, $3107 = 0, $3108 = 0, $3109 = 0, $311 = 0, $3110 = 0, $3111 = 0, $3112 = 0, $3113 = 0, $3114 = 0, $3115 = 0, $3116 = 0, $3117 = 0, $3118 = 0, $3119 = 0, $312 = 0, $3120 = 0, $3121 = 0, $3122 = 0, $3123 = 0;
 var $3124 = 0, $3125 = 0, $3126 = 0, $3127 = 0, $3128 = 0, $3129 = 0, $313 = 0, $3130 = 0, $3131 = 0, $3132 = 0, $3133 = 0, $3134 = 0, $3135 = 0, $3136 = 0, $3137 = 0, $3138 = 0, $3139 = 0, $314 = 0, $3140 = 0, $3141 = 0;
 var $3142 = 0, $3143 = 0, $3144 = 0, $3145 = 0, $3146 = 0, $3147 = 0, $3148 = 0, $3149 = 0, $315 = 0, $3150 = 0, $3151 = 0, $3152 = 0, $3153 = 0, $3154 = 0, $3155 = 0, $3156 = 0, $3157 = 0, $3158 = 0, $3159 = 0, $316 = 0;
 var $3160 = 0, $3161 = 0, $3162 = 0, $3163 = 0, $3164 = 0, $3165 = 0, $3166 = 0, $3167 = 0, $3168 = 0, $3169 = 0, $317 = 0, $3170 = 0, $3171 = 0, $3172 = 0, $3173 = 0, $3174 = 0, $3175 = 0, $3176 = 0, $3177 = 0, $3178 = 0;
 var $3179 = 0, $318 = 0, $3180 = 0, $3181 = 0, $3182 = 0, $3183 = 0, $3184 = 0, $3185 = 0, $3186 = 0, $3187 = 0, $3188 = 0, $3189 = 0, $319 = 0, $3190 = 0, $3191 = 0, $3192 = 0, $3193 = 0, $3194 = 0, $3195 = 0, $3196 = 0;
 var $3197 = 0, $3198 = 0, $3199 = 0, $32 = 0, $320 = 0, $3200 = 0, $3201 = 0, $3202 = 0, $3203 = 0, $3204 = 0, $3205 = 0, $3206 = 0, $3207 = 0, $3208 = 0, $3209 = 0, $321 = 0, $3210 = 0, $3211 = 0, $3212 = 0, $3213 = 0;
 var $3214 = 0, $3215 = 0, $3216 = 0, $3217 = 0, $3218 = 0, $3219 = 0, $322 = 0, $3220 = 0, $3221 = 0, $3222 = 0, $3223 = 0, $3224 = 0, $3225 = 0, $3226 = 0, $3227 = 0, $3228 = 0, $3229 = 0, $323 = 0, $3230 = 0, $3231 = 0;
 var $3232 = 0, $3233 = 0, $3234 = 0, $3235 = 0, $3236 = 0, $3237 = 0, $3238 = 0, $3239 = 0, $324 = 0, $3240 = 0, $3241 = 0, $3242 = 0, $3243 = 0, $3244 = 0, $3245 = 0, $3246 = 0, $3247 = 0, $3248 = 0, $3249 = 0, $325 = 0;
 var $3250 = 0, $3251 = 0, $3252 = 0, $3253 = 0, $3254 = 0, $3255 = 0, $3256 = 0, $3257 = 0, $3258 = 0, $3259 = 0, $326 = 0, $3260 = 0, $3261 = 0, $3262 = 0, $3263 = 0, $3264 = 0, $3265 = 0, $3266 = 0, $3267 = 0, $3268 = 0;
 var $3269 = 0, $327 = 0, $3270 = 0, $3271 = 0, $3272 = 0, $3273 = 0, $3274 = 0, $3275 = 0, $3276 = 0, $3277 = 0, $3278 = 0, $3279 = 0, $328 = 0, $3280 = 0, $3281 = 0, $3282 = 0, $3283 = 0, $3284 = 0, $3285 = 0, $3286 = 0;
 var $3287 = 0, $3288 = 0, $3289 = 0, $329 = 0, $3290 = 0, $3291 = 0, $3292 = 0, $3293 = 0, $3294 = 0, $3295 = 0, $3296 = 0, $3297 = 0, $3298 = 0, $3299 = 0, $33 = 0, $330 = 0, $3300 = 0, $3301 = 0, $3302 = 0, $3303 = 0;
 var $3304 = 0, $3305 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $3309 = 0, $331 = 0, $3310 = 0, $3311 = 0, $3312 = 0, $3313 = 0, $3314 = 0, $3315 = 0, $3316 = 0, $3317 = 0, $3318 = 0, $3319 = 0, $332 = 0, $3320 = 0, $3321 = 0;
 var $3322 = 0, $3323 = 0, $3324 = 0, $3325 = 0, $3326 = 0, $3327 = 0, $3328 = 0, $3329 = 0, $333 = 0, $3330 = 0, $3331 = 0, $3332 = 0, $3333 = 0, $3334 = 0, $3335 = 0, $3336 = 0, $3337 = 0, $3338 = 0, $3339 = 0, $334 = 0;
 var $3340 = 0, $3341 = 0, $3342 = 0, $3343 = 0, $3344 = 0, $3345 = 0, $3346 = 0, $3347 = 0, $3348 = 0, $3349 = 0, $335 = 0, $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $3354 = 0, $3355 = 0, $3356 = 0, $3357 = 0, $3358 = 0;
 var $3359 = 0, $336 = 0, $3360 = 0, $3361 = 0, $3362 = 0, $3363 = 0, $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0, $3368 = 0, $3369 = 0, $337 = 0, $3370 = 0, $3371 = 0, $3372 = 0, $3373 = 0, $3374 = 0, $3375 = 0, $3376 = 0;
 var $3377 = 0, $3378 = 0, $3379 = 0, $338 = 0, $3380 = 0, $3381 = 0, $3382 = 0, $3383 = 0, $3384 = 0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0, $3389 = 0, $339 = 0, $3390 = 0, $3391 = 0, $3392 = 0, $3393 = 0, $3394 = 0;
 var $3395 = 0, $3396 = 0, $3397 = 0, $3398 = 0, $3399 = 0, $34 = 0, $340 = 0, $3400 = 0, $3401 = 0, $3402 = 0, $3403 = 0, $3404 = 0, $3405 = 0, $3406 = 0, $3407 = 0, $3408 = 0, $3409 = 0, $341 = 0, $3410 = 0, $3411 = 0;
 var $3412 = 0, $3413 = 0, $3414 = 0, $3415 = 0, $3416 = 0, $3417 = 0, $3418 = 0, $3419 = 0, $342 = 0, $3420 = 0, $3421 = 0, $3422 = 0, $3423 = 0, $3424 = 0, $3425 = 0, $3426 = 0, $3427 = 0, $3428 = 0, $3429 = 0, $343 = 0;
 var $3430 = 0, $3431 = 0, $3432 = 0, $3433 = 0, $3434 = 0, $3435 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $3439 = 0, $344 = 0, $3440 = 0, $3441 = 0, $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0, $3446 = 0, $3447 = 0, $3448 = 0;
 var $3449 = 0, $345 = 0, $3450 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $3456 = 0, $3457 = 0, $3458 = 0, $3459 = 0, $346 = 0, $3460 = 0, $3461 = 0, $3462 = 0, $3463 = 0, $3464 = 0, $3465 = 0, $3466 = 0;
 var $3467 = 0, $3468 = 0, $3469 = 0, $347 = 0, $3470 = 0, $3471 = 0, $3472 = 0, $3473 = 0, $3474 = 0, $3475 = 0, $3476 = 0, $3477 = 0, $3478 = 0, $3479 = 0, $348 = 0, $3480 = 0, $3481 = 0, $3482 = 0, $3483 = 0, $3484 = 0;
 var $3485 = 0, $3486 = 0, $3487 = 0, $3488 = 0, $3489 = 0, $349 = 0, $3490 = 0, $3491 = 0, $3492 = 0, $3493 = 0, $3494 = 0, $3495 = 0, $3496 = 0, $3497 = 0, $3498 = 0, $3499 = 0, $35 = 0, $350 = 0, $3500 = 0, $3501 = 0;
 var $3502 = 0, $3503 = 0, $3504 = 0, $3505 = 0, $3506 = 0, $3507 = 0, $3508 = 0, $3509 = 0, $351 = 0, $3510 = 0, $3511 = 0, $3512 = 0, $3513 = 0, $3514 = 0, $3515 = 0, $3516 = 0, $3517 = 0, $3518 = 0, $3519 = 0, $352 = 0;
 var $3520 = 0, $3521 = 0, $3522 = 0, $3523 = 0, $3524 = 0, $3525 = 0, $3526 = 0, $3527 = 0, $3528 = 0, $3529 = 0, $353 = 0, $3530 = 0, $3531 = 0, $3532 = 0, $3533 = 0, $3534 = 0, $3535 = 0, $3536 = 0, $3537 = 0, $3538 = 0;
 var $3539 = 0, $354 = 0, $3540 = 0, $3541 = 0, $3542 = 0, $3543 = 0, $3544 = 0, $3545 = 0, $3546 = 0, $3547 = 0, $3548 = 0, $3549 = 0, $355 = 0, $3550 = 0, $3551 = 0, $3552 = 0, $3553 = 0, $3554 = 0, $3555 = 0, $3556 = 0;
 var $3557 = 0, $3558 = 0, $3559 = 0, $356 = 0, $3560 = 0, $3561 = 0, $3562 = 0, $3563 = 0, $3564 = 0, $3565 = 0, $3566 = 0, $3567 = 0, $3568 = 0, $3569 = 0, $357 = 0, $3570 = 0, $3571 = 0, $3572 = 0, $3573 = 0, $3574 = 0;
 var $3575 = 0, $3576 = 0, $3577 = 0, $3578 = 0, $3579 = 0, $358 = 0, $3580 = 0, $3581 = 0, $3582 = 0, $3583 = 0, $3584 = 0, $3585 = 0, $3586 = 0, $3587 = 0, $3588 = 0, $3589 = 0, $359 = 0, $3590 = 0, $3591 = 0, $3592 = 0;
 var $3593 = 0, $3594 = 0, $3595 = 0, $3596 = 0, $3597 = 0, $3598 = 0, $3599 = 0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0, $3602 = 0, $3603 = 0, $3604 = 0, $3605 = 0, $3606 = 0, $3607 = 0, $3608 = 0, $3609 = 0, $361 = 0;
 var $3610 = 0, $3611 = 0, $3612 = 0, $3613 = 0, $3614 = 0, $3615 = 0, $3616 = 0, $3617 = 0, $3618 = 0, $3619 = 0, $362 = 0, $3620 = 0, $3621 = 0, $3622 = 0, $3623 = 0, $3624 = 0, $3625 = 0, $3626 = 0, $3627 = 0, $3628 = 0;
 var $3629 = 0, $363 = 0, $3630 = 0, $3631 = 0, $3632 = 0, $3633 = 0, $3634 = 0, $3635 = 0, $3636 = 0, $3637 = 0, $3638 = 0, $3639 = 0, $364 = 0, $3640 = 0, $3641 = 0, $3642 = 0, $3643 = 0, $3644 = 0, $3645 = 0, $3646 = 0;
 var $3647 = 0, $3648 = 0, $3649 = 0, $365 = 0, $3650 = 0, $3651 = 0, $3652 = 0, $3653 = 0, $3654 = 0, $3655 = 0, $3656 = 0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0, $3662 = 0, $3663 = 0, $3664 = 0;
 var $3665 = 0, $3666 = 0, $3667 = 0, $3668 = 0, $3669 = 0, $367 = 0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0, $3676 = 0, $3677 = 0, $3678 = 0, $3679 = 0, $368 = 0, $3680 = 0, $3681 = 0, $3682 = 0;
 var $3683 = 0, $3684 = 0, $3685 = 0, $3686 = 0, $3687 = 0, $3688 = 0, $3689 = 0, $369 = 0, $3690 = 0, $3691 = 0, $3692 = 0, $3693 = 0, $3694 = 0, $3695 = 0, $3696 = 0, $3697 = 0, $3698 = 0, $3699 = 0, $37 = 0, $370 = 0;
 var $3700 = 0, $3701 = 0, $3702 = 0, $3703 = 0, $3704 = 0, $3705 = 0, $3706 = 0, $3707 = 0, $3708 = 0, $3709 = 0, $371 = 0, $3710 = 0, $3711 = 0, $3712 = 0, $3713 = 0, $3714 = 0, $3715 = 0, $3716 = 0, $3717 = 0, $3718 = 0;
 var $3719 = 0, $372 = 0, $3720 = 0, $3721 = 0, $3722 = 0, $3723 = 0, $3724 = 0, $3725 = 0, $3726 = 0, $3727 = 0, $3728 = 0, $3729 = 0, $373 = 0, $3730 = 0, $3731 = 0, $3732 = 0, $3733 = 0, $3734 = 0, $3735 = 0, $3736 = 0;
 var $3737 = 0, $3738 = 0, $3739 = 0, $374 = 0, $3740 = 0, $3741 = 0, $3742 = 0, $3743 = 0, $3744 = 0, $3745 = 0, $3746 = 0, $3747 = 0, $3748 = 0, $3749 = 0, $375 = 0, $3750 = 0, $3751 = 0, $3752 = 0, $3753 = 0, $3754 = 0;
 var $3755 = 0, $3756 = 0, $3757 = 0, $3758 = 0, $3759 = 0, $376 = 0, $3760 = 0, $3761 = 0, $3762 = 0, $3763 = 0, $3764 = 0, $3765 = 0, $3766 = 0, $3767 = 0, $3768 = 0, $3769 = 0, $377 = 0, $3770 = 0, $3771 = 0, $3772 = 0;
 var $3773 = 0, $3774 = 0, $3775 = 0, $3776 = 0, $3777 = 0, $3778 = 0, $3779 = 0, $378 = 0, $3780 = 0, $3781 = 0, $3782 = 0, $3783 = 0, $3784 = 0, $3785 = 0, $3786 = 0, $3787 = 0, $3788 = 0, $3789 = 0, $379 = 0, $3790 = 0;
 var $3791 = 0, $3792 = 0, $3793 = 0, $3794 = 0, $3795 = 0, $3796 = 0, $3797 = 0, $3798 = 0, $3799 = 0, $38 = 0, $380 = 0, $3800 = 0, $3801 = 0, $3802 = 0, $3803 = 0, $3804 = 0, $3805 = 0, $3806 = 0, $3807 = 0, $3808 = 0;
 var $3809 = 0, $381 = 0, $3810 = 0, $3811 = 0, $3812 = 0, $3813 = 0, $3814 = 0, $3815 = 0, $3816 = 0, $3817 = 0, $3818 = 0, $3819 = 0, $382 = 0, $3820 = 0, $3821 = 0, $3822 = 0, $3823 = 0, $3824 = 0, $3825 = 0, $3826 = 0;
 var $3827 = 0, $3828 = 0, $3829 = 0, $383 = 0, $3830 = 0, $3831 = 0, $3832 = 0, $3833 = 0, $3834 = 0, $3835 = 0, $3836 = 0, $3837 = 0, $3838 = 0, $3839 = 0, $384 = 0, $3840 = 0, $3841 = 0, $3842 = 0, $3843 = 0, $3844 = 0;
 var $3845 = 0, $3846 = 0, $3847 = 0, $3848 = 0, $3849 = 0, $385 = 0, $3850 = 0, $3851 = 0, $3852 = 0, $3853 = 0, $3854 = 0, $3855 = 0, $3856 = 0, $3857 = 0, $3858 = 0, $3859 = 0, $386 = 0, $3860 = 0, $3861 = 0, $3862 = 0;
 var $3863 = 0, $3864 = 0, $3865 = 0, $3866 = 0, $3867 = 0, $3868 = 0, $3869 = 0, $387 = 0, $3870 = 0, $3871 = 0, $3872 = 0, $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0, $3878 = 0, $3879 = 0, $388 = 0, $3880 = 0;
 var $3881 = 0, $3882 = 0, $3883 = 0, $3884 = 0, $3885 = 0, $3886 = 0, $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0, $3890 = 0, $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0, $3895 = 0, $3896 = 0, $3897 = 0, $3898 = 0, $3899 = 0;
 var $39 = 0, $390 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0, $3909 = 0, $391 = 0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0, $3914 = 0, $3915 = 0, $3916 = 0;
 var $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0, $3920 = 0, $3921 = 0, $3922 = 0, $3923 = 0, $3924 = 0, $3925 = 0, $3926 = 0, $3927 = 0, $3928 = 0, $3929 = 0, $393 = 0, $3930 = 0, $3931 = 0, $3932 = 0, $3933 = 0, $3934 = 0;
 var $3935 = 0, $3936 = 0, $3937 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3940 = 0, $3941 = 0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3946 = 0, $3947 = 0, $3948 = 0, $3949 = 0, $395 = 0, $3950 = 0, $3951 = 0, $3952 = 0;
 var $3953 = 0, $3954 = 0, $3955 = 0, $3956 = 0, $3957 = 0, $3958 = 0, $3959 = 0, $396 = 0, $3960 = 0, $3961 = 0, $3962 = 0, $3963 = 0, $3964 = 0, $3965 = 0, $3966 = 0, $3967 = 0, $3968 = 0, $3969 = 0, $397 = 0, $3970 = 0;
 var $3971 = 0, $3972 = 0, $3973 = 0, $3974 = 0, $3975 = 0, $3976 = 0, $3977 = 0, $3978 = 0, $3979 = 0, $398 = 0, $3980 = 0, $3981 = 0, $3982 = 0, $3983 = 0, $3984 = 0, $3985 = 0, $3986 = 0, $3987 = 0, $3988 = 0, $3989 = 0;
 var $399 = 0, $3990 = 0, $3991 = 0, $3992 = 0, $3993 = 0, $3994 = 0, $3995 = 0, $3996 = 0, $3997 = 0, $3998 = 0, $3999 = 0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0, $4001 = 0, $4002 = 0, $4003 = 0, $4004 = 0, $4005 = 0;
 var $4006 = 0, $4007 = 0, $4008 = 0, $4009 = 0, $401 = 0, $4010 = 0, $4011 = 0, $4012 = 0, $4013 = 0, $4014 = 0, $4015 = 0, $4016 = 0, $4017 = 0, $4018 = 0, $4019 = 0, $402 = 0, $4020 = 0, $4021 = 0, $4022 = 0, $4023 = 0;
 var $4024 = 0, $4025 = 0, $4026 = 0, $4027 = 0, $4028 = 0, $4029 = 0, $403 = 0, $4030 = 0, $4031 = 0, $4032 = 0, $4033 = 0, $4034 = 0, $4035 = 0, $4036 = 0, $4037 = 0, $4038 = 0, $4039 = 0, $404 = 0, $4040 = 0, $4041 = 0;
 var $4042 = 0, $4043 = 0, $4044 = 0, $4045 = 0, $4046 = 0, $4047 = 0, $4048 = 0, $4049 = 0, $405 = 0, $4050 = 0, $4051 = 0, $4052 = 0, $4053 = 0, $4054 = 0, $4055 = 0, $4056 = 0, $4057 = 0, $4058 = 0, $4059 = 0, $406 = 0;
 var $4060 = 0, $4061 = 0, $4062 = 0, $4063 = 0, $4064 = 0, $4065 = 0, $4066 = 0, $4067 = 0, $4068 = 0, $4069 = 0, $407 = 0, $4070 = 0, $4071 = 0, $4072 = 0, $4073 = 0, $4074 = 0, $4075 = 0, $4076 = 0, $4077 = 0, $4078 = 0;
 var $4079 = 0, $408 = 0, $4080 = 0, $4081 = 0, $4082 = 0, $4083 = 0, $4084 = 0, $4085 = 0, $4086 = 0, $4087 = 0, $4088 = 0, $4089 = 0, $409 = 0, $4090 = 0, $4091 = 0, $4092 = 0, $4093 = 0, $4094 = 0, $4095 = 0, $4096 = 0;
 var $4097 = 0, $4098 = 0, $4099 = 0, $41 = 0, $410 = 0, $4100 = 0, $4101 = 0, $4102 = 0, $4103 = 0, $4104 = 0, $4105 = 0, $4106 = 0, $4107 = 0, $4108 = 0, $4109 = 0, $411 = 0, $4110 = 0, $4111 = 0, $4112 = 0, $4113 = 0;
 var $4114 = 0, $4115 = 0, $4116 = 0, $4117 = 0, $4118 = 0, $4119 = 0, $412 = 0, $4120 = 0, $4121 = 0, $4122 = 0, $4123 = 0, $4124 = 0, $4125 = 0, $4126 = 0, $4127 = 0, $4128 = 0, $4129 = 0, $413 = 0, $4130 = 0, $4131 = 0;
 var $4132 = 0, $4133 = 0, $4134 = 0, $4135 = 0, $4136 = 0, $4137 = 0, $4138 = 0, $4139 = 0, $414 = 0, $4140 = 0, $4141 = 0, $4142 = 0, $4143 = 0, $4144 = 0, $4145 = 0, $4146 = 0, $4147 = 0, $4148 = 0, $4149 = 0, $415 = 0;
 var $4150 = 0, $4151 = 0, $4152 = 0, $4153 = 0, $4154 = 0, $4155 = 0, $4156 = 0, $4157 = 0, $4158 = 0, $4159 = 0, $416 = 0, $4160 = 0, $4161 = 0, $4162 = 0, $4163 = 0, $4164 = 0, $4165 = 0, $4166 = 0, $4167 = 0, $4168 = 0;
 var $4169 = 0, $417 = 0, $4170 = 0, $4171 = 0, $4172 = 0, $4173 = 0, $4174 = 0, $4175 = 0, $4176 = 0, $4177 = 0, $4178 = 0, $4179 = 0, $418 = 0, $4180 = 0, $4181 = 0, $4182 = 0, $4183 = 0, $4184 = 0, $4185 = 0, $4186 = 0;
 var $4187 = 0, $4188 = 0, $4189 = 0, $419 = 0, $4190 = 0, $4191 = 0, $4192 = 0, $4193 = 0, $4194 = 0, $4195 = 0, $4196 = 0, $4197 = 0, $4198 = 0, $4199 = 0, $42 = 0, $420 = 0, $4200 = 0, $4201 = 0, $4202 = 0, $4203 = 0;
 var $4204 = 0, $4205 = 0, $4206 = 0, $4207 = 0, $4208 = 0, $4209 = 0, $421 = 0, $4210 = 0, $4211 = 0, $4212 = 0, $4213 = 0, $4214 = 0, $4215 = 0, $4216 = 0, $4217 = 0, $4218 = 0, $4219 = 0, $422 = 0, $4220 = 0, $4221 = 0;
 var $4222 = 0, $4223 = 0, $4224 = 0, $4225 = 0, $4226 = 0, $4227 = 0, $4228 = 0, $4229 = 0, $423 = 0, $4230 = 0, $4231 = 0, $4232 = 0, $4233 = 0, $4234 = 0, $4235 = 0, $4236 = 0, $4237 = 0, $4238 = 0, $4239 = 0, $424 = 0;
 var $4240 = 0, $4241 = 0, $4242 = 0, $4243 = 0, $4244 = 0, $4245 = 0, $4246 = 0, $4247 = 0, $4248 = 0, $4249 = 0, $425 = 0, $4250 = 0, $4251 = 0, $4252 = 0, $4253 = 0, $4254 = 0, $4255 = 0, $4256 = 0, $4257 = 0, $4258 = 0;
 var $4259 = 0, $426 = 0, $4260 = 0, $4261 = 0, $4262 = 0, $4263 = 0, $4264 = 0, $4265 = 0, $4266 = 0, $4267 = 0, $4268 = 0, $4269 = 0, $427 = 0, $4270 = 0, $4271 = 0, $4272 = 0, $4273 = 0, $4274 = 0, $4275 = 0, $4276 = 0;
 var $4277 = 0, $4278 = 0, $4279 = 0, $428 = 0, $4280 = 0, $4281 = 0, $4282 = 0, $4283 = 0, $4284 = 0, $4285 = 0, $4286 = 0, $4287 = 0, $4288 = 0, $4289 = 0, $429 = 0, $4290 = 0, $4291 = 0, $4292 = 0, $4293 = 0, $4294 = 0;
 var $4295 = 0, $4296 = 0, $4297 = 0, $4298 = 0, $4299 = 0, $43 = 0, $430 = 0, $4300 = 0, $4301 = 0, $4302 = 0, $4303 = 0, $4304 = 0, $4305 = 0, $4306 = 0, $4307 = 0, $4308 = 0, $4309 = 0, $431 = 0, $4310 = 0, $4311 = 0;
 var $4312 = 0, $4313 = 0, $4314 = 0, $4315 = 0, $4316 = 0, $4317 = 0, $4318 = 0, $4319 = 0, $432 = 0, $4320 = 0, $4321 = 0, $4322 = 0, $4323 = 0, $4324 = 0, $4325 = 0, $4326 = 0, $4327 = 0, $4328 = 0, $4329 = 0, $433 = 0;
 var $4330 = 0, $4331 = 0, $4332 = 0, $4333 = 0, $4334 = 0, $4335 = 0, $4336 = 0, $4337 = 0, $4338 = 0, $4339 = 0, $434 = 0, $4340 = 0, $4341 = 0, $4342 = 0, $4343 = 0, $4344 = 0, $4345 = 0, $4346 = 0, $4347 = 0, $4348 = 0;
 var $4349 = 0, $435 = 0, $4350 = 0, $4351 = 0, $4352 = 0, $4353 = 0, $4354 = 0, $4355 = 0, $4356 = 0, $4357 = 0, $4358 = 0, $4359 = 0, $436 = 0, $4360 = 0, $4361 = 0, $4362 = 0, $4363 = 0, $4364 = 0, $4365 = 0, $4366 = 0;
 var $4367 = 0, $4368 = 0, $4369 = 0, $437 = 0, $4370 = 0, $4371 = 0, $4372 = 0, $4373 = 0, $4374 = 0, $4375 = 0, $4376 = 0, $4377 = 0, $4378 = 0, $4379 = 0, $438 = 0, $4380 = 0, $4381 = 0, $4382 = 0, $4383 = 0, $4384 = 0;
 var $4385 = 0, $4386 = 0, $4387 = 0, $4388 = 0, $4389 = 0, $439 = 0, $4390 = 0, $4391 = 0, $4392 = 0, $4393 = 0, $4394 = 0, $4395 = 0, $4396 = 0, $4397 = 0, $4398 = 0, $4399 = 0, $44 = 0, $440 = 0, $4400 = 0, $4401 = 0;
 var $4402 = 0, $4403 = 0, $4404 = 0, $4405 = 0, $4406 = 0, $4407 = 0, $4408 = 0, $4409 = 0, $441 = 0, $4410 = 0, $4411 = 0, $4412 = 0, $4413 = 0, $4414 = 0, $4415 = 0, $4416 = 0, $4417 = 0, $4418 = 0, $4419 = 0, $442 = 0;
 var $4420 = 0, $4421 = 0, $4422 = 0, $4423 = 0, $4424 = 0, $4425 = 0, $4426 = 0, $4427 = 0, $4428 = 0, $4429 = 0, $443 = 0, $4430 = 0, $4431 = 0, $4432 = 0, $4433 = 0, $4434 = 0, $4435 = 0, $4436 = 0, $4437 = 0, $4438 = 0;
 var $4439 = 0, $444 = 0, $4440 = 0, $4441 = 0, $4442 = 0, $4443 = 0, $4444 = 0, $4445 = 0, $4446 = 0, $4447 = 0, $4448 = 0, $4449 = 0, $445 = 0, $4450 = 0, $4451 = 0, $4452 = 0, $4453 = 0, $4454 = 0, $4455 = 0, $4456 = 0;
 var $4457 = 0, $4458 = 0, $4459 = 0, $446 = 0, $4460 = 0, $4461 = 0, $4462 = 0, $4463 = 0, $4464 = 0, $4465 = 0, $4466 = 0, $4467 = 0, $4468 = 0, $4469 = 0, $447 = 0, $4470 = 0, $4471 = 0, $4472 = 0, $4473 = 0, $4474 = 0;
 var $4475 = 0, $4476 = 0, $4477 = 0, $4478 = 0, $4479 = 0, $448 = 0, $4480 = 0, $4481 = 0, $4482 = 0, $4483 = 0, $4484 = 0, $4485 = 0, $4486 = 0, $4487 = 0, $4488 = 0, $4489 = 0, $449 = 0, $4490 = 0, $4491 = 0, $4492 = 0;
 var $4493 = 0, $4494 = 0, $4495 = 0, $4496 = 0, $4497 = 0, $4498 = 0, $4499 = 0, $45 = 0, $450 = 0, $4500 = 0, $4501 = 0, $4502 = 0, $4503 = 0, $4504 = 0, $4505 = 0, $4506 = 0, $4507 = 0, $4508 = 0, $4509 = 0, $451 = 0;
 var $4510 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0;
 var $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0;
 var $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0;
 var $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0;
 var $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0;
 var $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0;
 var $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0;
 var $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0;
 var $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0;
 var $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0;
 var $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0;
 var $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0;
 var $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0;
 var $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0;
 var $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0;
 var $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0;
 var $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0;
 var $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0;
 var $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0;
 var $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0;
 var $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0;
 var $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0;
 var $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0;
 var $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0;
 var $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0;
 var $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0;
 var $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0;
 var $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0;
 var $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0;
 var $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0;
 var $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 1872|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(1872|0);
 $7 = sp_a + 1664|0;
 $8 = sp_a + 1656|0;
 $9 = sp_a + 1648|0;
 $10 = sp_a + 1640|0;
 $11 = sp_a + 1632|0;
 $12 = sp_a + 1624|0;
 $13 = sp_a + 1616|0;
 $14 = sp_a + 1608|0;
 $15 = sp_a + 1600|0;
 $16 = sp_a + 1592|0;
 $17 = sp_a + 1584|0;
 $18 = sp_a + 1576|0;
 $19 = sp_a + 1568|0;
 $20 = sp_a + 1560|0;
 $21 = sp_a + 1552|0;
 $22 = sp_a + 1544|0;
 $23 = sp_a + 1536|0;
 $24 = sp_a + 1528|0;
 $25 = sp_a + 1520|0;
 $26 = sp_a + 1512|0;
 $27 = sp_a + 1504|0;
 $28 = sp_a + 1496|0;
 $29 = sp_a + 1488|0;
 $30 = sp_a + 1480|0;
 $31 = sp_a + 1472|0;
 $32 = sp_a + 1464|0;
 $33 = sp_a + 1456|0;
 $34 = sp_a + 1448|0;
 $35 = sp_a + 1440|0;
 $36 = sp_a + 1432|0;
 $37 = sp_a + 1424|0;
 $38 = sp_a + 1416|0;
 $39 = sp_a + 1408|0;
 $40 = sp_a + 1400|0;
 $41 = sp_a + 1392|0;
 $42 = sp_a + 1384|0;
 $43 = sp_a + 1376|0;
 $44 = sp_a + 1368|0;
 $45 = sp_a + 1360|0;
 $46 = sp_a + 1352|0;
 $47 = sp_a + 1344|0;
 $48 = sp_a + 1336|0;
 $49 = sp_a + 1328|0;
 $50 = sp_a + 1320|0;
 $51 = sp_a + 1312|0;
 $52 = sp_a + 1304|0;
 $53 = sp_a + 1296|0;
 $54 = sp_a + 1288|0;
 $55 = sp_a + 1280|0;
 $56 = sp_a + 1272|0;
 $57 = sp_a + 1264|0;
 $58 = sp_a + 1256|0;
 $59 = sp_a + 1248|0;
 $60 = sp_a + 1240|0;
 $61 = sp_a + 1232|0;
 $62 = sp_a + 1224|0;
 $63 = sp_a + 1216|0;
 $64 = sp_a + 1208|0;
 $65 = sp_a + 1200|0;
 $66 = sp_a + 1192|0;
 $67 = sp_a + 1184|0;
 $68 = sp_a + 1176|0;
 $69 = sp_a + 1168|0;
 $70 = sp_a + 1160|0;
 $71 = sp_a + 1152|0;
 $72 = sp_a + 1144|0;
 $73 = sp_a + 1136|0;
 $74 = sp_a + 1128|0;
 $75 = sp_a + 1120|0;
 $76 = sp_a + 1112|0;
 $77 = sp_a + 1104|0;
 $78 = sp_a + 1096|0;
 $79 = sp_a + 1088|0;
 $80 = sp_a + 1080|0;
 $81 = sp_a + 1072|0;
 $82 = sp_a + 1064|0;
 $83 = sp_a + 1056|0;
 $84 = sp_a + 1048|0;
 $85 = sp_a + 1040|0;
 $86 = sp_a + 1032|0;
 $87 = sp_a + 1024|0;
 $88 = sp_a + 1016|0;
 $89 = sp_a + 1008|0;
 $90 = sp_a + 1000|0;
 $91 = sp_a + 992|0;
 $92 = sp_a + 984|0;
 $93 = sp_a + 976|0;
 $94 = sp_a + 968|0;
 $95 = sp_a + 960|0;
 $96 = sp_a + 952|0;
 $97 = sp_a + 944|0;
 $98 = sp_a + 936|0;
 $99 = sp_a + 928|0;
 $100 = sp_a + 920|0;
 $101 = sp_a + 912|0;
 $102 = sp_a + 904|0;
 $103 = sp_a + 896|0;
 $104 = sp_a + 888|0;
 $105 = sp_a + 880|0;
 $106 = sp_a + 872|0;
 $107 = sp_a + 864|0;
 $108 = sp_a + 856|0;
 $109 = sp_a + 848|0;
 $110 = sp_a + 840|0;
 $111 = sp_a + 832|0;
 $112 = sp_a + 824|0;
 $113 = sp_a + 816|0;
 $114 = sp_a + 808|0;
 $115 = sp_a + 800|0;
 $116 = sp_a + 792|0;
 $117 = sp_a + 784|0;
 $118 = sp_a + 776|0;
 $119 = sp_a + 768|0;
 $120 = sp_a + 760|0;
 $121 = sp_a + 752|0;
 $122 = sp_a + 744|0;
 $123 = sp_a + 736|0;
 $124 = sp_a + 728|0;
 $125 = sp_a + 720|0;
 $126 = sp_a + 712|0;
 $127 = sp_a + 704|0;
 $128 = sp_a + 696|0;
 $129 = sp_a + 688|0;
 $130 = sp_a + 680|0;
 $131 = sp_a + 672|0;
 $132 = sp_a + 664|0;
 $133 = sp_a + 656|0;
 $134 = sp_a + 648|0;
 $135 = sp_a + 640|0;
 $136 = sp_a + 632|0;
 $137 = sp_a + 624|0;
 $138 = sp_a + 616|0;
 $139 = sp_a + 608|0;
 $140 = sp_a + 600|0;
 $141 = sp_a + 592|0;
 $142 = sp_a + 584|0;
 $143 = sp_a + 576|0;
 $144 = sp_a + 568|0;
 $145 = sp_a + 560|0;
 $146 = sp_a + 552|0;
 $147 = sp_a + 544|0;
 $148 = sp_a + 536|0;
 $149 = sp_a + 528|0;
 $150 = sp_a + 520|0;
 $151 = sp_a + 512|0;
 $152 = sp_a + 504|0;
 $153 = sp_a + 496|0;
 $154 = sp_a + 488|0;
 $155 = sp_a + 480|0;
 $156 = sp_a + 472|0;
 $157 = sp_a + 464|0;
 $158 = sp_a + 456|0;
 $159 = sp_a + 448|0;
 $160 = sp_a + 440|0;
 $161 = sp_a + 432|0;
 $162 = sp_a + 424|0;
 $163 = sp_a + 416|0;
 $164 = sp_a + 408|0;
 $165 = sp_a + 400|0;
 $166 = sp_a + 392|0;
 $167 = sp_a + 384|0;
 $168 = sp_a + 376|0;
 $169 = sp_a + 368|0;
 $170 = sp_a + 360|0;
 $171 = sp_a + 352|0;
 $172 = sp_a + 344|0;
 $173 = sp_a + 336|0;
 $174 = sp_a + 328|0;
 $175 = sp_a + 320|0;
 $176 = sp_a + 312|0;
 $177 = sp_a + 304|0;
 $178 = sp_a + 296|0;
 $179 = sp_a + 288|0;
 $180 = sp_a + 280|0;
 $181 = sp_a + 272|0;
 $182 = sp_a + 264|0;
 $183 = sp_a + 256|0;
 $184 = sp_a + 248|0;
 $185 = sp_a + 240|0;
 $186 = sp_a + 232|0;
 $187 = sp_a + 224|0;
 $188 = sp_a + 216|0;
 $189 = sp_a + 208|0;
 $190 = sp_a + 200|0;
 $191 = sp_a + 192|0;
 $192 = sp_a + 184|0;
 $193 = sp_a + 176|0;
 $194 = sp_a + 168|0;
 $195 = sp_a + 160|0;
 $196 = sp_a + 152|0;
 $197 = sp_a + 144|0;
 $198 = sp_a + 136|0;
 $199 = sp_a + 128|0;
 $200 = sp_a + 120|0;
 $201 = sp_a + 112|0;
 $202 = sp_a + 104|0;
 $203 = sp_a + 96|0;
 $204 = sp_a + 88|0;
 $205 = sp_a + 80|0;
 $206 = sp_a + 72|0;
 $207 = sp_a + 64|0;
 $208 = sp_a + 56|0;
 $209 = sp_a + 48|0;
 $210 = sp_a + 40|0;
 $211 = sp_a + 32|0;
 $212 = sp_a + 24|0;
 $213 = sp_a + 16|0;
 $214 = sp_a + 8|0;
 $215 = sp_a;
 $3 = $0;
 $4 = $1;
 $5 = $2;
 $216 = $4; //@line 13 "mcbits/vec.c"
 $217 = ((($216)) + 88|0); //@line 13 "mcbits/vec.c"
 $218 = $217; //@line 13 "mcbits/vec.c"
 $219 = $218; //@line 13 "mcbits/vec.c"
 $220 = HEAP32[$219>>2]|0; //@line 13 "mcbits/vec.c"
 $221 = (($218) + 4)|0; //@line 13 "mcbits/vec.c"
 $222 = $221; //@line 13 "mcbits/vec.c"
 $223 = HEAP32[$222>>2]|0; //@line 13 "mcbits/vec.c"
 $224 = $5; //@line 13 "mcbits/vec.c"
 $225 = ((($224)) + 88|0); //@line 13 "mcbits/vec.c"
 $226 = $225; //@line 13 "mcbits/vec.c"
 $227 = $226; //@line 13 "mcbits/vec.c"
 $228 = HEAP32[$227>>2]|0; //@line 13 "mcbits/vec.c"
 $229 = (($226) + 4)|0; //@line 13 "mcbits/vec.c"
 $230 = $229; //@line 13 "mcbits/vec.c"
 $231 = HEAP32[$230>>2]|0; //@line 13 "mcbits/vec.c"
 $232 = $220 & $228; //@line 13 "mcbits/vec.c"
 $233 = $223 & $231; //@line 13 "mcbits/vec.c"
 $234 = $8; //@line 13 "mcbits/vec.c"
 $235 = $234; //@line 13 "mcbits/vec.c"
 HEAP32[$235>>2] = $232; //@line 13 "mcbits/vec.c"
 $236 = (($234) + 4)|0; //@line 13 "mcbits/vec.c"
 $237 = $236; //@line 13 "mcbits/vec.c"
 HEAP32[$237>>2] = $233; //@line 13 "mcbits/vec.c"
 $238 = $4; //@line 14 "mcbits/vec.c"
 $239 = ((($238)) + 88|0); //@line 14 "mcbits/vec.c"
 $240 = $239; //@line 14 "mcbits/vec.c"
 $241 = $240; //@line 14 "mcbits/vec.c"
 $242 = HEAP32[$241>>2]|0; //@line 14 "mcbits/vec.c"
 $243 = (($240) + 4)|0; //@line 14 "mcbits/vec.c"
 $244 = $243; //@line 14 "mcbits/vec.c"
 $245 = HEAP32[$244>>2]|0; //@line 14 "mcbits/vec.c"
 $246 = $5; //@line 14 "mcbits/vec.c"
 $247 = ((($246)) + 72|0); //@line 14 "mcbits/vec.c"
 $248 = $247; //@line 14 "mcbits/vec.c"
 $249 = $248; //@line 14 "mcbits/vec.c"
 $250 = HEAP32[$249>>2]|0; //@line 14 "mcbits/vec.c"
 $251 = (($248) + 4)|0; //@line 14 "mcbits/vec.c"
 $252 = $251; //@line 14 "mcbits/vec.c"
 $253 = HEAP32[$252>>2]|0; //@line 14 "mcbits/vec.c"
 $254 = $242 & $250; //@line 14 "mcbits/vec.c"
 $255 = $245 & $253; //@line 14 "mcbits/vec.c"
 $256 = $9; //@line 14 "mcbits/vec.c"
 $257 = $256; //@line 14 "mcbits/vec.c"
 HEAP32[$257>>2] = $254; //@line 14 "mcbits/vec.c"
 $258 = (($256) + 4)|0; //@line 14 "mcbits/vec.c"
 $259 = $258; //@line 14 "mcbits/vec.c"
 HEAP32[$259>>2] = $255; //@line 14 "mcbits/vec.c"
 $260 = $4; //@line 15 "mcbits/vec.c"
 $261 = ((($260)) + 88|0); //@line 15 "mcbits/vec.c"
 $262 = $261; //@line 15 "mcbits/vec.c"
 $263 = $262; //@line 15 "mcbits/vec.c"
 $264 = HEAP32[$263>>2]|0; //@line 15 "mcbits/vec.c"
 $265 = (($262) + 4)|0; //@line 15 "mcbits/vec.c"
 $266 = $265; //@line 15 "mcbits/vec.c"
 $267 = HEAP32[$266>>2]|0; //@line 15 "mcbits/vec.c"
 $268 = $5; //@line 15 "mcbits/vec.c"
 $269 = ((($268)) + 80|0); //@line 15 "mcbits/vec.c"
 $270 = $269; //@line 15 "mcbits/vec.c"
 $271 = $270; //@line 15 "mcbits/vec.c"
 $272 = HEAP32[$271>>2]|0; //@line 15 "mcbits/vec.c"
 $273 = (($270) + 4)|0; //@line 15 "mcbits/vec.c"
 $274 = $273; //@line 15 "mcbits/vec.c"
 $275 = HEAP32[$274>>2]|0; //@line 15 "mcbits/vec.c"
 $276 = $264 & $272; //@line 15 "mcbits/vec.c"
 $277 = $267 & $275; //@line 15 "mcbits/vec.c"
 $278 = $10; //@line 15 "mcbits/vec.c"
 $279 = $278; //@line 15 "mcbits/vec.c"
 HEAP32[$279>>2] = $276; //@line 15 "mcbits/vec.c"
 $280 = (($278) + 4)|0; //@line 15 "mcbits/vec.c"
 $281 = $280; //@line 15 "mcbits/vec.c"
 HEAP32[$281>>2] = $277; //@line 15 "mcbits/vec.c"
 $282 = $4; //@line 16 "mcbits/vec.c"
 $283 = ((($282)) + 72|0); //@line 16 "mcbits/vec.c"
 $284 = $283; //@line 16 "mcbits/vec.c"
 $285 = $284; //@line 16 "mcbits/vec.c"
 $286 = HEAP32[$285>>2]|0; //@line 16 "mcbits/vec.c"
 $287 = (($284) + 4)|0; //@line 16 "mcbits/vec.c"
 $288 = $287; //@line 16 "mcbits/vec.c"
 $289 = HEAP32[$288>>2]|0; //@line 16 "mcbits/vec.c"
 $290 = $5; //@line 16 "mcbits/vec.c"
 $291 = ((($290)) + 88|0); //@line 16 "mcbits/vec.c"
 $292 = $291; //@line 16 "mcbits/vec.c"
 $293 = $292; //@line 16 "mcbits/vec.c"
 $294 = HEAP32[$293>>2]|0; //@line 16 "mcbits/vec.c"
 $295 = (($292) + 4)|0; //@line 16 "mcbits/vec.c"
 $296 = $295; //@line 16 "mcbits/vec.c"
 $297 = HEAP32[$296>>2]|0; //@line 16 "mcbits/vec.c"
 $298 = $286 & $294; //@line 16 "mcbits/vec.c"
 $299 = $289 & $297; //@line 16 "mcbits/vec.c"
 $300 = $11; //@line 16 "mcbits/vec.c"
 $301 = $300; //@line 16 "mcbits/vec.c"
 HEAP32[$301>>2] = $298; //@line 16 "mcbits/vec.c"
 $302 = (($300) + 4)|0; //@line 16 "mcbits/vec.c"
 $303 = $302; //@line 16 "mcbits/vec.c"
 HEAP32[$303>>2] = $299; //@line 16 "mcbits/vec.c"
 $304 = $4; //@line 17 "mcbits/vec.c"
 $305 = ((($304)) + 80|0); //@line 17 "mcbits/vec.c"
 $306 = $305; //@line 17 "mcbits/vec.c"
 $307 = $306; //@line 17 "mcbits/vec.c"
 $308 = HEAP32[$307>>2]|0; //@line 17 "mcbits/vec.c"
 $309 = (($306) + 4)|0; //@line 17 "mcbits/vec.c"
 $310 = $309; //@line 17 "mcbits/vec.c"
 $311 = HEAP32[$310>>2]|0; //@line 17 "mcbits/vec.c"
 $312 = $5; //@line 17 "mcbits/vec.c"
 $313 = ((($312)) + 88|0); //@line 17 "mcbits/vec.c"
 $314 = $313; //@line 17 "mcbits/vec.c"
 $315 = $314; //@line 17 "mcbits/vec.c"
 $316 = HEAP32[$315>>2]|0; //@line 17 "mcbits/vec.c"
 $317 = (($314) + 4)|0; //@line 17 "mcbits/vec.c"
 $318 = $317; //@line 17 "mcbits/vec.c"
 $319 = HEAP32[$318>>2]|0; //@line 17 "mcbits/vec.c"
 $320 = $308 & $316; //@line 17 "mcbits/vec.c"
 $321 = $311 & $319; //@line 17 "mcbits/vec.c"
 $322 = $12; //@line 17 "mcbits/vec.c"
 $323 = $322; //@line 17 "mcbits/vec.c"
 HEAP32[$323>>2] = $320; //@line 17 "mcbits/vec.c"
 $324 = (($322) + 4)|0; //@line 17 "mcbits/vec.c"
 $325 = $324; //@line 17 "mcbits/vec.c"
 HEAP32[$325>>2] = $321; //@line 17 "mcbits/vec.c"
 $326 = $4; //@line 18 "mcbits/vec.c"
 $327 = ((($326)) + 80|0); //@line 18 "mcbits/vec.c"
 $328 = $327; //@line 18 "mcbits/vec.c"
 $329 = $328; //@line 18 "mcbits/vec.c"
 $330 = HEAP32[$329>>2]|0; //@line 18 "mcbits/vec.c"
 $331 = (($328) + 4)|0; //@line 18 "mcbits/vec.c"
 $332 = $331; //@line 18 "mcbits/vec.c"
 $333 = HEAP32[$332>>2]|0; //@line 18 "mcbits/vec.c"
 $334 = $5; //@line 18 "mcbits/vec.c"
 $335 = ((($334)) + 80|0); //@line 18 "mcbits/vec.c"
 $336 = $335; //@line 18 "mcbits/vec.c"
 $337 = $336; //@line 18 "mcbits/vec.c"
 $338 = HEAP32[$337>>2]|0; //@line 18 "mcbits/vec.c"
 $339 = (($336) + 4)|0; //@line 18 "mcbits/vec.c"
 $340 = $339; //@line 18 "mcbits/vec.c"
 $341 = HEAP32[$340>>2]|0; //@line 18 "mcbits/vec.c"
 $342 = $330 & $338; //@line 18 "mcbits/vec.c"
 $343 = $333 & $341; //@line 18 "mcbits/vec.c"
 $344 = $13; //@line 18 "mcbits/vec.c"
 $345 = $344; //@line 18 "mcbits/vec.c"
 HEAP32[$345>>2] = $342; //@line 18 "mcbits/vec.c"
 $346 = (($344) + 4)|0; //@line 18 "mcbits/vec.c"
 $347 = $346; //@line 18 "mcbits/vec.c"
 HEAP32[$347>>2] = $343; //@line 18 "mcbits/vec.c"
 $348 = $4; //@line 19 "mcbits/vec.c"
 $349 = ((($348)) + 80|0); //@line 19 "mcbits/vec.c"
 $350 = $349; //@line 19 "mcbits/vec.c"
 $351 = $350; //@line 19 "mcbits/vec.c"
 $352 = HEAP32[$351>>2]|0; //@line 19 "mcbits/vec.c"
 $353 = (($350) + 4)|0; //@line 19 "mcbits/vec.c"
 $354 = $353; //@line 19 "mcbits/vec.c"
 $355 = HEAP32[$354>>2]|0; //@line 19 "mcbits/vec.c"
 $356 = $5; //@line 19 "mcbits/vec.c"
 $357 = ((($356)) + 72|0); //@line 19 "mcbits/vec.c"
 $358 = $357; //@line 19 "mcbits/vec.c"
 $359 = $358; //@line 19 "mcbits/vec.c"
 $360 = HEAP32[$359>>2]|0; //@line 19 "mcbits/vec.c"
 $361 = (($358) + 4)|0; //@line 19 "mcbits/vec.c"
 $362 = $361; //@line 19 "mcbits/vec.c"
 $363 = HEAP32[$362>>2]|0; //@line 19 "mcbits/vec.c"
 $364 = $352 & $360; //@line 19 "mcbits/vec.c"
 $365 = $355 & $363; //@line 19 "mcbits/vec.c"
 $366 = $14; //@line 19 "mcbits/vec.c"
 $367 = $366; //@line 19 "mcbits/vec.c"
 HEAP32[$367>>2] = $364; //@line 19 "mcbits/vec.c"
 $368 = (($366) + 4)|0; //@line 19 "mcbits/vec.c"
 $369 = $368; //@line 19 "mcbits/vec.c"
 HEAP32[$369>>2] = $365; //@line 19 "mcbits/vec.c"
 $370 = $4; //@line 20 "mcbits/vec.c"
 $371 = ((($370)) + 72|0); //@line 20 "mcbits/vec.c"
 $372 = $371; //@line 20 "mcbits/vec.c"
 $373 = $372; //@line 20 "mcbits/vec.c"
 $374 = HEAP32[$373>>2]|0; //@line 20 "mcbits/vec.c"
 $375 = (($372) + 4)|0; //@line 20 "mcbits/vec.c"
 $376 = $375; //@line 20 "mcbits/vec.c"
 $377 = HEAP32[$376>>2]|0; //@line 20 "mcbits/vec.c"
 $378 = $5; //@line 20 "mcbits/vec.c"
 $379 = ((($378)) + 80|0); //@line 20 "mcbits/vec.c"
 $380 = $379; //@line 20 "mcbits/vec.c"
 $381 = $380; //@line 20 "mcbits/vec.c"
 $382 = HEAP32[$381>>2]|0; //@line 20 "mcbits/vec.c"
 $383 = (($380) + 4)|0; //@line 20 "mcbits/vec.c"
 $384 = $383; //@line 20 "mcbits/vec.c"
 $385 = HEAP32[$384>>2]|0; //@line 20 "mcbits/vec.c"
 $386 = $374 & $382; //@line 20 "mcbits/vec.c"
 $387 = $377 & $385; //@line 20 "mcbits/vec.c"
 $388 = $15; //@line 20 "mcbits/vec.c"
 $389 = $388; //@line 20 "mcbits/vec.c"
 HEAP32[$389>>2] = $386; //@line 20 "mcbits/vec.c"
 $390 = (($388) + 4)|0; //@line 20 "mcbits/vec.c"
 $391 = $390; //@line 20 "mcbits/vec.c"
 HEAP32[$391>>2] = $387; //@line 20 "mcbits/vec.c"
 $392 = $4; //@line 21 "mcbits/vec.c"
 $393 = ((($392)) + 72|0); //@line 21 "mcbits/vec.c"
 $394 = $393; //@line 21 "mcbits/vec.c"
 $395 = $394; //@line 21 "mcbits/vec.c"
 $396 = HEAP32[$395>>2]|0; //@line 21 "mcbits/vec.c"
 $397 = (($394) + 4)|0; //@line 21 "mcbits/vec.c"
 $398 = $397; //@line 21 "mcbits/vec.c"
 $399 = HEAP32[$398>>2]|0; //@line 21 "mcbits/vec.c"
 $400 = $5; //@line 21 "mcbits/vec.c"
 $401 = ((($400)) + 72|0); //@line 21 "mcbits/vec.c"
 $402 = $401; //@line 21 "mcbits/vec.c"
 $403 = $402; //@line 21 "mcbits/vec.c"
 $404 = HEAP32[$403>>2]|0; //@line 21 "mcbits/vec.c"
 $405 = (($402) + 4)|0; //@line 21 "mcbits/vec.c"
 $406 = $405; //@line 21 "mcbits/vec.c"
 $407 = HEAP32[$406>>2]|0; //@line 21 "mcbits/vec.c"
 $408 = $396 & $404; //@line 21 "mcbits/vec.c"
 $409 = $399 & $407; //@line 21 "mcbits/vec.c"
 $410 = $16; //@line 21 "mcbits/vec.c"
 $411 = $410; //@line 21 "mcbits/vec.c"
 HEAP32[$411>>2] = $408; //@line 21 "mcbits/vec.c"
 $412 = (($410) + 4)|0; //@line 21 "mcbits/vec.c"
 $413 = $412; //@line 21 "mcbits/vec.c"
 HEAP32[$413>>2] = $409; //@line 21 "mcbits/vec.c"
 $414 = $15; //@line 22 "mcbits/vec.c"
 $415 = $414; //@line 22 "mcbits/vec.c"
 $416 = HEAP32[$415>>2]|0; //@line 22 "mcbits/vec.c"
 $417 = (($414) + 4)|0; //@line 22 "mcbits/vec.c"
 $418 = $417; //@line 22 "mcbits/vec.c"
 $419 = HEAP32[$418>>2]|0; //@line 22 "mcbits/vec.c"
 $420 = $14; //@line 22 "mcbits/vec.c"
 $421 = $420; //@line 22 "mcbits/vec.c"
 $422 = HEAP32[$421>>2]|0; //@line 22 "mcbits/vec.c"
 $423 = (($420) + 4)|0; //@line 22 "mcbits/vec.c"
 $424 = $423; //@line 22 "mcbits/vec.c"
 $425 = HEAP32[$424>>2]|0; //@line 22 "mcbits/vec.c"
 $426 = $416 ^ $422; //@line 22 "mcbits/vec.c"
 $427 = $419 ^ $425; //@line 22 "mcbits/vec.c"
 $428 = $17; //@line 22 "mcbits/vec.c"
 $429 = $428; //@line 22 "mcbits/vec.c"
 HEAP32[$429>>2] = $426; //@line 22 "mcbits/vec.c"
 $430 = (($428) + 4)|0; //@line 22 "mcbits/vec.c"
 $431 = $430; //@line 22 "mcbits/vec.c"
 HEAP32[$431>>2] = $427; //@line 22 "mcbits/vec.c"
 $432 = $13; //@line 23 "mcbits/vec.c"
 $433 = $432; //@line 23 "mcbits/vec.c"
 $434 = HEAP32[$433>>2]|0; //@line 23 "mcbits/vec.c"
 $435 = (($432) + 4)|0; //@line 23 "mcbits/vec.c"
 $436 = $435; //@line 23 "mcbits/vec.c"
 $437 = HEAP32[$436>>2]|0; //@line 23 "mcbits/vec.c"
 $438 = $11; //@line 23 "mcbits/vec.c"
 $439 = $438; //@line 23 "mcbits/vec.c"
 $440 = HEAP32[$439>>2]|0; //@line 23 "mcbits/vec.c"
 $441 = (($438) + 4)|0; //@line 23 "mcbits/vec.c"
 $442 = $441; //@line 23 "mcbits/vec.c"
 $443 = HEAP32[$442>>2]|0; //@line 23 "mcbits/vec.c"
 $444 = $434 ^ $440; //@line 23 "mcbits/vec.c"
 $445 = $437 ^ $443; //@line 23 "mcbits/vec.c"
 $446 = $18; //@line 23 "mcbits/vec.c"
 $447 = $446; //@line 23 "mcbits/vec.c"
 HEAP32[$447>>2] = $444; //@line 23 "mcbits/vec.c"
 $448 = (($446) + 4)|0; //@line 23 "mcbits/vec.c"
 $449 = $448; //@line 23 "mcbits/vec.c"
 HEAP32[$449>>2] = $445; //@line 23 "mcbits/vec.c"
 $450 = $18; //@line 24 "mcbits/vec.c"
 $451 = $450; //@line 24 "mcbits/vec.c"
 $452 = HEAP32[$451>>2]|0; //@line 24 "mcbits/vec.c"
 $453 = (($450) + 4)|0; //@line 24 "mcbits/vec.c"
 $454 = $453; //@line 24 "mcbits/vec.c"
 $455 = HEAP32[$454>>2]|0; //@line 24 "mcbits/vec.c"
 $456 = $9; //@line 24 "mcbits/vec.c"
 $457 = $456; //@line 24 "mcbits/vec.c"
 $458 = HEAP32[$457>>2]|0; //@line 24 "mcbits/vec.c"
 $459 = (($456) + 4)|0; //@line 24 "mcbits/vec.c"
 $460 = $459; //@line 24 "mcbits/vec.c"
 $461 = HEAP32[$460>>2]|0; //@line 24 "mcbits/vec.c"
 $462 = $452 ^ $458; //@line 24 "mcbits/vec.c"
 $463 = $455 ^ $461; //@line 24 "mcbits/vec.c"
 $464 = $19; //@line 24 "mcbits/vec.c"
 $465 = $464; //@line 24 "mcbits/vec.c"
 HEAP32[$465>>2] = $462; //@line 24 "mcbits/vec.c"
 $466 = (($464) + 4)|0; //@line 24 "mcbits/vec.c"
 $467 = $466; //@line 24 "mcbits/vec.c"
 HEAP32[$467>>2] = $463; //@line 24 "mcbits/vec.c"
 $468 = $12; //@line 25 "mcbits/vec.c"
 $469 = $468; //@line 25 "mcbits/vec.c"
 $470 = HEAP32[$469>>2]|0; //@line 25 "mcbits/vec.c"
 $471 = (($468) + 4)|0; //@line 25 "mcbits/vec.c"
 $472 = $471; //@line 25 "mcbits/vec.c"
 $473 = HEAP32[$472>>2]|0; //@line 25 "mcbits/vec.c"
 $474 = $10; //@line 25 "mcbits/vec.c"
 $475 = $474; //@line 25 "mcbits/vec.c"
 $476 = HEAP32[$475>>2]|0; //@line 25 "mcbits/vec.c"
 $477 = (($474) + 4)|0; //@line 25 "mcbits/vec.c"
 $478 = $477; //@line 25 "mcbits/vec.c"
 $479 = HEAP32[$478>>2]|0; //@line 25 "mcbits/vec.c"
 $480 = $470 ^ $476; //@line 25 "mcbits/vec.c"
 $481 = $473 ^ $479; //@line 25 "mcbits/vec.c"
 $482 = $20; //@line 25 "mcbits/vec.c"
 $483 = $482; //@line 25 "mcbits/vec.c"
 HEAP32[$483>>2] = $480; //@line 25 "mcbits/vec.c"
 $484 = (($482) + 4)|0; //@line 25 "mcbits/vec.c"
 $485 = $484; //@line 25 "mcbits/vec.c"
 HEAP32[$485>>2] = $481; //@line 25 "mcbits/vec.c"
 $486 = $4; //@line 26 "mcbits/vec.c"
 $487 = ((($486)) + 64|0); //@line 26 "mcbits/vec.c"
 $488 = $487; //@line 26 "mcbits/vec.c"
 $489 = $488; //@line 26 "mcbits/vec.c"
 $490 = HEAP32[$489>>2]|0; //@line 26 "mcbits/vec.c"
 $491 = (($488) + 4)|0; //@line 26 "mcbits/vec.c"
 $492 = $491; //@line 26 "mcbits/vec.c"
 $493 = HEAP32[$492>>2]|0; //@line 26 "mcbits/vec.c"
 $494 = $5; //@line 26 "mcbits/vec.c"
 $495 = ((($494)) + 64|0); //@line 26 "mcbits/vec.c"
 $496 = $495; //@line 26 "mcbits/vec.c"
 $497 = $496; //@line 26 "mcbits/vec.c"
 $498 = HEAP32[$497>>2]|0; //@line 26 "mcbits/vec.c"
 $499 = (($496) + 4)|0; //@line 26 "mcbits/vec.c"
 $500 = $499; //@line 26 "mcbits/vec.c"
 $501 = HEAP32[$500>>2]|0; //@line 26 "mcbits/vec.c"
 $502 = $490 & $498; //@line 26 "mcbits/vec.c"
 $503 = $493 & $501; //@line 26 "mcbits/vec.c"
 $504 = $21; //@line 26 "mcbits/vec.c"
 $505 = $504; //@line 26 "mcbits/vec.c"
 HEAP32[$505>>2] = $502; //@line 26 "mcbits/vec.c"
 $506 = (($504) + 4)|0; //@line 26 "mcbits/vec.c"
 $507 = $506; //@line 26 "mcbits/vec.c"
 HEAP32[$507>>2] = $503; //@line 26 "mcbits/vec.c"
 $508 = $4; //@line 27 "mcbits/vec.c"
 $509 = ((($508)) + 64|0); //@line 27 "mcbits/vec.c"
 $510 = $509; //@line 27 "mcbits/vec.c"
 $511 = $510; //@line 27 "mcbits/vec.c"
 $512 = HEAP32[$511>>2]|0; //@line 27 "mcbits/vec.c"
 $513 = (($510) + 4)|0; //@line 27 "mcbits/vec.c"
 $514 = $513; //@line 27 "mcbits/vec.c"
 $515 = HEAP32[$514>>2]|0; //@line 27 "mcbits/vec.c"
 $516 = $5; //@line 27 "mcbits/vec.c"
 $517 = ((($516)) + 48|0); //@line 27 "mcbits/vec.c"
 $518 = $517; //@line 27 "mcbits/vec.c"
 $519 = $518; //@line 27 "mcbits/vec.c"
 $520 = HEAP32[$519>>2]|0; //@line 27 "mcbits/vec.c"
 $521 = (($518) + 4)|0; //@line 27 "mcbits/vec.c"
 $522 = $521; //@line 27 "mcbits/vec.c"
 $523 = HEAP32[$522>>2]|0; //@line 27 "mcbits/vec.c"
 $524 = $512 & $520; //@line 27 "mcbits/vec.c"
 $525 = $515 & $523; //@line 27 "mcbits/vec.c"
 $526 = $22; //@line 27 "mcbits/vec.c"
 $527 = $526; //@line 27 "mcbits/vec.c"
 HEAP32[$527>>2] = $524; //@line 27 "mcbits/vec.c"
 $528 = (($526) + 4)|0; //@line 27 "mcbits/vec.c"
 $529 = $528; //@line 27 "mcbits/vec.c"
 HEAP32[$529>>2] = $525; //@line 27 "mcbits/vec.c"
 $530 = $4; //@line 28 "mcbits/vec.c"
 $531 = ((($530)) + 64|0); //@line 28 "mcbits/vec.c"
 $532 = $531; //@line 28 "mcbits/vec.c"
 $533 = $532; //@line 28 "mcbits/vec.c"
 $534 = HEAP32[$533>>2]|0; //@line 28 "mcbits/vec.c"
 $535 = (($532) + 4)|0; //@line 28 "mcbits/vec.c"
 $536 = $535; //@line 28 "mcbits/vec.c"
 $537 = HEAP32[$536>>2]|0; //@line 28 "mcbits/vec.c"
 $538 = $5; //@line 28 "mcbits/vec.c"
 $539 = ((($538)) + 56|0); //@line 28 "mcbits/vec.c"
 $540 = $539; //@line 28 "mcbits/vec.c"
 $541 = $540; //@line 28 "mcbits/vec.c"
 $542 = HEAP32[$541>>2]|0; //@line 28 "mcbits/vec.c"
 $543 = (($540) + 4)|0; //@line 28 "mcbits/vec.c"
 $544 = $543; //@line 28 "mcbits/vec.c"
 $545 = HEAP32[$544>>2]|0; //@line 28 "mcbits/vec.c"
 $546 = $534 & $542; //@line 28 "mcbits/vec.c"
 $547 = $537 & $545; //@line 28 "mcbits/vec.c"
 $548 = $23; //@line 28 "mcbits/vec.c"
 $549 = $548; //@line 28 "mcbits/vec.c"
 HEAP32[$549>>2] = $546; //@line 28 "mcbits/vec.c"
 $550 = (($548) + 4)|0; //@line 28 "mcbits/vec.c"
 $551 = $550; //@line 28 "mcbits/vec.c"
 HEAP32[$551>>2] = $547; //@line 28 "mcbits/vec.c"
 $552 = $4; //@line 29 "mcbits/vec.c"
 $553 = ((($552)) + 48|0); //@line 29 "mcbits/vec.c"
 $554 = $553; //@line 29 "mcbits/vec.c"
 $555 = $554; //@line 29 "mcbits/vec.c"
 $556 = HEAP32[$555>>2]|0; //@line 29 "mcbits/vec.c"
 $557 = (($554) + 4)|0; //@line 29 "mcbits/vec.c"
 $558 = $557; //@line 29 "mcbits/vec.c"
 $559 = HEAP32[$558>>2]|0; //@line 29 "mcbits/vec.c"
 $560 = $5; //@line 29 "mcbits/vec.c"
 $561 = ((($560)) + 64|0); //@line 29 "mcbits/vec.c"
 $562 = $561; //@line 29 "mcbits/vec.c"
 $563 = $562; //@line 29 "mcbits/vec.c"
 $564 = HEAP32[$563>>2]|0; //@line 29 "mcbits/vec.c"
 $565 = (($562) + 4)|0; //@line 29 "mcbits/vec.c"
 $566 = $565; //@line 29 "mcbits/vec.c"
 $567 = HEAP32[$566>>2]|0; //@line 29 "mcbits/vec.c"
 $568 = $556 & $564; //@line 29 "mcbits/vec.c"
 $569 = $559 & $567; //@line 29 "mcbits/vec.c"
 $570 = $24; //@line 29 "mcbits/vec.c"
 $571 = $570; //@line 29 "mcbits/vec.c"
 HEAP32[$571>>2] = $568; //@line 29 "mcbits/vec.c"
 $572 = (($570) + 4)|0; //@line 29 "mcbits/vec.c"
 $573 = $572; //@line 29 "mcbits/vec.c"
 HEAP32[$573>>2] = $569; //@line 29 "mcbits/vec.c"
 $574 = $4; //@line 30 "mcbits/vec.c"
 $575 = ((($574)) + 56|0); //@line 30 "mcbits/vec.c"
 $576 = $575; //@line 30 "mcbits/vec.c"
 $577 = $576; //@line 30 "mcbits/vec.c"
 $578 = HEAP32[$577>>2]|0; //@line 30 "mcbits/vec.c"
 $579 = (($576) + 4)|0; //@line 30 "mcbits/vec.c"
 $580 = $579; //@line 30 "mcbits/vec.c"
 $581 = HEAP32[$580>>2]|0; //@line 30 "mcbits/vec.c"
 $582 = $5; //@line 30 "mcbits/vec.c"
 $583 = ((($582)) + 64|0); //@line 30 "mcbits/vec.c"
 $584 = $583; //@line 30 "mcbits/vec.c"
 $585 = $584; //@line 30 "mcbits/vec.c"
 $586 = HEAP32[$585>>2]|0; //@line 30 "mcbits/vec.c"
 $587 = (($584) + 4)|0; //@line 30 "mcbits/vec.c"
 $588 = $587; //@line 30 "mcbits/vec.c"
 $589 = HEAP32[$588>>2]|0; //@line 30 "mcbits/vec.c"
 $590 = $578 & $586; //@line 30 "mcbits/vec.c"
 $591 = $581 & $589; //@line 30 "mcbits/vec.c"
 $592 = $25; //@line 30 "mcbits/vec.c"
 $593 = $592; //@line 30 "mcbits/vec.c"
 HEAP32[$593>>2] = $590; //@line 30 "mcbits/vec.c"
 $594 = (($592) + 4)|0; //@line 30 "mcbits/vec.c"
 $595 = $594; //@line 30 "mcbits/vec.c"
 HEAP32[$595>>2] = $591; //@line 30 "mcbits/vec.c"
 $596 = $4; //@line 31 "mcbits/vec.c"
 $597 = ((($596)) + 56|0); //@line 31 "mcbits/vec.c"
 $598 = $597; //@line 31 "mcbits/vec.c"
 $599 = $598; //@line 31 "mcbits/vec.c"
 $600 = HEAP32[$599>>2]|0; //@line 31 "mcbits/vec.c"
 $601 = (($598) + 4)|0; //@line 31 "mcbits/vec.c"
 $602 = $601; //@line 31 "mcbits/vec.c"
 $603 = HEAP32[$602>>2]|0; //@line 31 "mcbits/vec.c"
 $604 = $5; //@line 31 "mcbits/vec.c"
 $605 = ((($604)) + 56|0); //@line 31 "mcbits/vec.c"
 $606 = $605; //@line 31 "mcbits/vec.c"
 $607 = $606; //@line 31 "mcbits/vec.c"
 $608 = HEAP32[$607>>2]|0; //@line 31 "mcbits/vec.c"
 $609 = (($606) + 4)|0; //@line 31 "mcbits/vec.c"
 $610 = $609; //@line 31 "mcbits/vec.c"
 $611 = HEAP32[$610>>2]|0; //@line 31 "mcbits/vec.c"
 $612 = $600 & $608; //@line 31 "mcbits/vec.c"
 $613 = $603 & $611; //@line 31 "mcbits/vec.c"
 $614 = $26; //@line 31 "mcbits/vec.c"
 $615 = $614; //@line 31 "mcbits/vec.c"
 HEAP32[$615>>2] = $612; //@line 31 "mcbits/vec.c"
 $616 = (($614) + 4)|0; //@line 31 "mcbits/vec.c"
 $617 = $616; //@line 31 "mcbits/vec.c"
 HEAP32[$617>>2] = $613; //@line 31 "mcbits/vec.c"
 $618 = $4; //@line 32 "mcbits/vec.c"
 $619 = ((($618)) + 56|0); //@line 32 "mcbits/vec.c"
 $620 = $619; //@line 32 "mcbits/vec.c"
 $621 = $620; //@line 32 "mcbits/vec.c"
 $622 = HEAP32[$621>>2]|0; //@line 32 "mcbits/vec.c"
 $623 = (($620) + 4)|0; //@line 32 "mcbits/vec.c"
 $624 = $623; //@line 32 "mcbits/vec.c"
 $625 = HEAP32[$624>>2]|0; //@line 32 "mcbits/vec.c"
 $626 = $5; //@line 32 "mcbits/vec.c"
 $627 = ((($626)) + 48|0); //@line 32 "mcbits/vec.c"
 $628 = $627; //@line 32 "mcbits/vec.c"
 $629 = $628; //@line 32 "mcbits/vec.c"
 $630 = HEAP32[$629>>2]|0; //@line 32 "mcbits/vec.c"
 $631 = (($628) + 4)|0; //@line 32 "mcbits/vec.c"
 $632 = $631; //@line 32 "mcbits/vec.c"
 $633 = HEAP32[$632>>2]|0; //@line 32 "mcbits/vec.c"
 $634 = $622 & $630; //@line 32 "mcbits/vec.c"
 $635 = $625 & $633; //@line 32 "mcbits/vec.c"
 $636 = $27; //@line 32 "mcbits/vec.c"
 $637 = $636; //@line 32 "mcbits/vec.c"
 HEAP32[$637>>2] = $634; //@line 32 "mcbits/vec.c"
 $638 = (($636) + 4)|0; //@line 32 "mcbits/vec.c"
 $639 = $638; //@line 32 "mcbits/vec.c"
 HEAP32[$639>>2] = $635; //@line 32 "mcbits/vec.c"
 $640 = $4; //@line 33 "mcbits/vec.c"
 $641 = ((($640)) + 48|0); //@line 33 "mcbits/vec.c"
 $642 = $641; //@line 33 "mcbits/vec.c"
 $643 = $642; //@line 33 "mcbits/vec.c"
 $644 = HEAP32[$643>>2]|0; //@line 33 "mcbits/vec.c"
 $645 = (($642) + 4)|0; //@line 33 "mcbits/vec.c"
 $646 = $645; //@line 33 "mcbits/vec.c"
 $647 = HEAP32[$646>>2]|0; //@line 33 "mcbits/vec.c"
 $648 = $5; //@line 33 "mcbits/vec.c"
 $649 = ((($648)) + 56|0); //@line 33 "mcbits/vec.c"
 $650 = $649; //@line 33 "mcbits/vec.c"
 $651 = $650; //@line 33 "mcbits/vec.c"
 $652 = HEAP32[$651>>2]|0; //@line 33 "mcbits/vec.c"
 $653 = (($650) + 4)|0; //@line 33 "mcbits/vec.c"
 $654 = $653; //@line 33 "mcbits/vec.c"
 $655 = HEAP32[$654>>2]|0; //@line 33 "mcbits/vec.c"
 $656 = $644 & $652; //@line 33 "mcbits/vec.c"
 $657 = $647 & $655; //@line 33 "mcbits/vec.c"
 $658 = $28; //@line 33 "mcbits/vec.c"
 $659 = $658; //@line 33 "mcbits/vec.c"
 HEAP32[$659>>2] = $656; //@line 33 "mcbits/vec.c"
 $660 = (($658) + 4)|0; //@line 33 "mcbits/vec.c"
 $661 = $660; //@line 33 "mcbits/vec.c"
 HEAP32[$661>>2] = $657; //@line 33 "mcbits/vec.c"
 $662 = $4; //@line 34 "mcbits/vec.c"
 $663 = ((($662)) + 48|0); //@line 34 "mcbits/vec.c"
 $664 = $663; //@line 34 "mcbits/vec.c"
 $665 = $664; //@line 34 "mcbits/vec.c"
 $666 = HEAP32[$665>>2]|0; //@line 34 "mcbits/vec.c"
 $667 = (($664) + 4)|0; //@line 34 "mcbits/vec.c"
 $668 = $667; //@line 34 "mcbits/vec.c"
 $669 = HEAP32[$668>>2]|0; //@line 34 "mcbits/vec.c"
 $670 = $5; //@line 34 "mcbits/vec.c"
 $671 = ((($670)) + 48|0); //@line 34 "mcbits/vec.c"
 $672 = $671; //@line 34 "mcbits/vec.c"
 $673 = $672; //@line 34 "mcbits/vec.c"
 $674 = HEAP32[$673>>2]|0; //@line 34 "mcbits/vec.c"
 $675 = (($672) + 4)|0; //@line 34 "mcbits/vec.c"
 $676 = $675; //@line 34 "mcbits/vec.c"
 $677 = HEAP32[$676>>2]|0; //@line 34 "mcbits/vec.c"
 $678 = $666 & $674; //@line 34 "mcbits/vec.c"
 $679 = $669 & $677; //@line 34 "mcbits/vec.c"
 $680 = $29; //@line 34 "mcbits/vec.c"
 $681 = $680; //@line 34 "mcbits/vec.c"
 HEAP32[$681>>2] = $678; //@line 34 "mcbits/vec.c"
 $682 = (($680) + 4)|0; //@line 34 "mcbits/vec.c"
 $683 = $682; //@line 34 "mcbits/vec.c"
 HEAP32[$683>>2] = $679; //@line 34 "mcbits/vec.c"
 $684 = $28; //@line 35 "mcbits/vec.c"
 $685 = $684; //@line 35 "mcbits/vec.c"
 $686 = HEAP32[$685>>2]|0; //@line 35 "mcbits/vec.c"
 $687 = (($684) + 4)|0; //@line 35 "mcbits/vec.c"
 $688 = $687; //@line 35 "mcbits/vec.c"
 $689 = HEAP32[$688>>2]|0; //@line 35 "mcbits/vec.c"
 $690 = $27; //@line 35 "mcbits/vec.c"
 $691 = $690; //@line 35 "mcbits/vec.c"
 $692 = HEAP32[$691>>2]|0; //@line 35 "mcbits/vec.c"
 $693 = (($690) + 4)|0; //@line 35 "mcbits/vec.c"
 $694 = $693; //@line 35 "mcbits/vec.c"
 $695 = HEAP32[$694>>2]|0; //@line 35 "mcbits/vec.c"
 $696 = $686 ^ $692; //@line 35 "mcbits/vec.c"
 $697 = $689 ^ $695; //@line 35 "mcbits/vec.c"
 $698 = $30; //@line 35 "mcbits/vec.c"
 $699 = $698; //@line 35 "mcbits/vec.c"
 HEAP32[$699>>2] = $696; //@line 35 "mcbits/vec.c"
 $700 = (($698) + 4)|0; //@line 35 "mcbits/vec.c"
 $701 = $700; //@line 35 "mcbits/vec.c"
 HEAP32[$701>>2] = $697; //@line 35 "mcbits/vec.c"
 $702 = $26; //@line 36 "mcbits/vec.c"
 $703 = $702; //@line 36 "mcbits/vec.c"
 $704 = HEAP32[$703>>2]|0; //@line 36 "mcbits/vec.c"
 $705 = (($702) + 4)|0; //@line 36 "mcbits/vec.c"
 $706 = $705; //@line 36 "mcbits/vec.c"
 $707 = HEAP32[$706>>2]|0; //@line 36 "mcbits/vec.c"
 $708 = $24; //@line 36 "mcbits/vec.c"
 $709 = $708; //@line 36 "mcbits/vec.c"
 $710 = HEAP32[$709>>2]|0; //@line 36 "mcbits/vec.c"
 $711 = (($708) + 4)|0; //@line 36 "mcbits/vec.c"
 $712 = $711; //@line 36 "mcbits/vec.c"
 $713 = HEAP32[$712>>2]|0; //@line 36 "mcbits/vec.c"
 $714 = $704 ^ $710; //@line 36 "mcbits/vec.c"
 $715 = $707 ^ $713; //@line 36 "mcbits/vec.c"
 $716 = $31; //@line 36 "mcbits/vec.c"
 $717 = $716; //@line 36 "mcbits/vec.c"
 HEAP32[$717>>2] = $714; //@line 36 "mcbits/vec.c"
 $718 = (($716) + 4)|0; //@line 36 "mcbits/vec.c"
 $719 = $718; //@line 36 "mcbits/vec.c"
 HEAP32[$719>>2] = $715; //@line 36 "mcbits/vec.c"
 $720 = $31; //@line 37 "mcbits/vec.c"
 $721 = $720; //@line 37 "mcbits/vec.c"
 $722 = HEAP32[$721>>2]|0; //@line 37 "mcbits/vec.c"
 $723 = (($720) + 4)|0; //@line 37 "mcbits/vec.c"
 $724 = $723; //@line 37 "mcbits/vec.c"
 $725 = HEAP32[$724>>2]|0; //@line 37 "mcbits/vec.c"
 $726 = $22; //@line 37 "mcbits/vec.c"
 $727 = $726; //@line 37 "mcbits/vec.c"
 $728 = HEAP32[$727>>2]|0; //@line 37 "mcbits/vec.c"
 $729 = (($726) + 4)|0; //@line 37 "mcbits/vec.c"
 $730 = $729; //@line 37 "mcbits/vec.c"
 $731 = HEAP32[$730>>2]|0; //@line 37 "mcbits/vec.c"
 $732 = $722 ^ $728; //@line 37 "mcbits/vec.c"
 $733 = $725 ^ $731; //@line 37 "mcbits/vec.c"
 $734 = $32; //@line 37 "mcbits/vec.c"
 $735 = $734; //@line 37 "mcbits/vec.c"
 HEAP32[$735>>2] = $732; //@line 37 "mcbits/vec.c"
 $736 = (($734) + 4)|0; //@line 37 "mcbits/vec.c"
 $737 = $736; //@line 37 "mcbits/vec.c"
 HEAP32[$737>>2] = $733; //@line 37 "mcbits/vec.c"
 $738 = $25; //@line 38 "mcbits/vec.c"
 $739 = $738; //@line 38 "mcbits/vec.c"
 $740 = HEAP32[$739>>2]|0; //@line 38 "mcbits/vec.c"
 $741 = (($738) + 4)|0; //@line 38 "mcbits/vec.c"
 $742 = $741; //@line 38 "mcbits/vec.c"
 $743 = HEAP32[$742>>2]|0; //@line 38 "mcbits/vec.c"
 $744 = $23; //@line 38 "mcbits/vec.c"
 $745 = $744; //@line 38 "mcbits/vec.c"
 $746 = HEAP32[$745>>2]|0; //@line 38 "mcbits/vec.c"
 $747 = (($744) + 4)|0; //@line 38 "mcbits/vec.c"
 $748 = $747; //@line 38 "mcbits/vec.c"
 $749 = HEAP32[$748>>2]|0; //@line 38 "mcbits/vec.c"
 $750 = $740 ^ $746; //@line 38 "mcbits/vec.c"
 $751 = $743 ^ $749; //@line 38 "mcbits/vec.c"
 $752 = $33; //@line 38 "mcbits/vec.c"
 $753 = $752; //@line 38 "mcbits/vec.c"
 HEAP32[$753>>2] = $750; //@line 38 "mcbits/vec.c"
 $754 = (($752) + 4)|0; //@line 38 "mcbits/vec.c"
 $755 = $754; //@line 38 "mcbits/vec.c"
 HEAP32[$755>>2] = $751; //@line 38 "mcbits/vec.c"
 $756 = $4; //@line 39 "mcbits/vec.c"
 $757 = ((($756)) + 40|0); //@line 39 "mcbits/vec.c"
 $758 = $757; //@line 39 "mcbits/vec.c"
 $759 = $758; //@line 39 "mcbits/vec.c"
 $760 = HEAP32[$759>>2]|0; //@line 39 "mcbits/vec.c"
 $761 = (($758) + 4)|0; //@line 39 "mcbits/vec.c"
 $762 = $761; //@line 39 "mcbits/vec.c"
 $763 = HEAP32[$762>>2]|0; //@line 39 "mcbits/vec.c"
 $764 = $5; //@line 39 "mcbits/vec.c"
 $765 = ((($764)) + 40|0); //@line 39 "mcbits/vec.c"
 $766 = $765; //@line 39 "mcbits/vec.c"
 $767 = $766; //@line 39 "mcbits/vec.c"
 $768 = HEAP32[$767>>2]|0; //@line 39 "mcbits/vec.c"
 $769 = (($766) + 4)|0; //@line 39 "mcbits/vec.c"
 $770 = $769; //@line 39 "mcbits/vec.c"
 $771 = HEAP32[$770>>2]|0; //@line 39 "mcbits/vec.c"
 $772 = $760 & $768; //@line 39 "mcbits/vec.c"
 $773 = $763 & $771; //@line 39 "mcbits/vec.c"
 $774 = $34; //@line 39 "mcbits/vec.c"
 $775 = $774; //@line 39 "mcbits/vec.c"
 HEAP32[$775>>2] = $772; //@line 39 "mcbits/vec.c"
 $776 = (($774) + 4)|0; //@line 39 "mcbits/vec.c"
 $777 = $776; //@line 39 "mcbits/vec.c"
 HEAP32[$777>>2] = $773; //@line 39 "mcbits/vec.c"
 $778 = $4; //@line 40 "mcbits/vec.c"
 $779 = ((($778)) + 40|0); //@line 40 "mcbits/vec.c"
 $780 = $779; //@line 40 "mcbits/vec.c"
 $781 = $780; //@line 40 "mcbits/vec.c"
 $782 = HEAP32[$781>>2]|0; //@line 40 "mcbits/vec.c"
 $783 = (($780) + 4)|0; //@line 40 "mcbits/vec.c"
 $784 = $783; //@line 40 "mcbits/vec.c"
 $785 = HEAP32[$784>>2]|0; //@line 40 "mcbits/vec.c"
 $786 = $5; //@line 40 "mcbits/vec.c"
 $787 = ((($786)) + 24|0); //@line 40 "mcbits/vec.c"
 $788 = $787; //@line 40 "mcbits/vec.c"
 $789 = $788; //@line 40 "mcbits/vec.c"
 $790 = HEAP32[$789>>2]|0; //@line 40 "mcbits/vec.c"
 $791 = (($788) + 4)|0; //@line 40 "mcbits/vec.c"
 $792 = $791; //@line 40 "mcbits/vec.c"
 $793 = HEAP32[$792>>2]|0; //@line 40 "mcbits/vec.c"
 $794 = $782 & $790; //@line 40 "mcbits/vec.c"
 $795 = $785 & $793; //@line 40 "mcbits/vec.c"
 $796 = $35; //@line 40 "mcbits/vec.c"
 $797 = $796; //@line 40 "mcbits/vec.c"
 HEAP32[$797>>2] = $794; //@line 40 "mcbits/vec.c"
 $798 = (($796) + 4)|0; //@line 40 "mcbits/vec.c"
 $799 = $798; //@line 40 "mcbits/vec.c"
 HEAP32[$799>>2] = $795; //@line 40 "mcbits/vec.c"
 $800 = $4; //@line 41 "mcbits/vec.c"
 $801 = ((($800)) + 40|0); //@line 41 "mcbits/vec.c"
 $802 = $801; //@line 41 "mcbits/vec.c"
 $803 = $802; //@line 41 "mcbits/vec.c"
 $804 = HEAP32[$803>>2]|0; //@line 41 "mcbits/vec.c"
 $805 = (($802) + 4)|0; //@line 41 "mcbits/vec.c"
 $806 = $805; //@line 41 "mcbits/vec.c"
 $807 = HEAP32[$806>>2]|0; //@line 41 "mcbits/vec.c"
 $808 = $5; //@line 41 "mcbits/vec.c"
 $809 = ((($808)) + 32|0); //@line 41 "mcbits/vec.c"
 $810 = $809; //@line 41 "mcbits/vec.c"
 $811 = $810; //@line 41 "mcbits/vec.c"
 $812 = HEAP32[$811>>2]|0; //@line 41 "mcbits/vec.c"
 $813 = (($810) + 4)|0; //@line 41 "mcbits/vec.c"
 $814 = $813; //@line 41 "mcbits/vec.c"
 $815 = HEAP32[$814>>2]|0; //@line 41 "mcbits/vec.c"
 $816 = $804 & $812; //@line 41 "mcbits/vec.c"
 $817 = $807 & $815; //@line 41 "mcbits/vec.c"
 $818 = $36; //@line 41 "mcbits/vec.c"
 $819 = $818; //@line 41 "mcbits/vec.c"
 HEAP32[$819>>2] = $816; //@line 41 "mcbits/vec.c"
 $820 = (($818) + 4)|0; //@line 41 "mcbits/vec.c"
 $821 = $820; //@line 41 "mcbits/vec.c"
 HEAP32[$821>>2] = $817; //@line 41 "mcbits/vec.c"
 $822 = $4; //@line 42 "mcbits/vec.c"
 $823 = ((($822)) + 24|0); //@line 42 "mcbits/vec.c"
 $824 = $823; //@line 42 "mcbits/vec.c"
 $825 = $824; //@line 42 "mcbits/vec.c"
 $826 = HEAP32[$825>>2]|0; //@line 42 "mcbits/vec.c"
 $827 = (($824) + 4)|0; //@line 42 "mcbits/vec.c"
 $828 = $827; //@line 42 "mcbits/vec.c"
 $829 = HEAP32[$828>>2]|0; //@line 42 "mcbits/vec.c"
 $830 = $5; //@line 42 "mcbits/vec.c"
 $831 = ((($830)) + 40|0); //@line 42 "mcbits/vec.c"
 $832 = $831; //@line 42 "mcbits/vec.c"
 $833 = $832; //@line 42 "mcbits/vec.c"
 $834 = HEAP32[$833>>2]|0; //@line 42 "mcbits/vec.c"
 $835 = (($832) + 4)|0; //@line 42 "mcbits/vec.c"
 $836 = $835; //@line 42 "mcbits/vec.c"
 $837 = HEAP32[$836>>2]|0; //@line 42 "mcbits/vec.c"
 $838 = $826 & $834; //@line 42 "mcbits/vec.c"
 $839 = $829 & $837; //@line 42 "mcbits/vec.c"
 $840 = $37; //@line 42 "mcbits/vec.c"
 $841 = $840; //@line 42 "mcbits/vec.c"
 HEAP32[$841>>2] = $838; //@line 42 "mcbits/vec.c"
 $842 = (($840) + 4)|0; //@line 42 "mcbits/vec.c"
 $843 = $842; //@line 42 "mcbits/vec.c"
 HEAP32[$843>>2] = $839; //@line 42 "mcbits/vec.c"
 $844 = $4; //@line 43 "mcbits/vec.c"
 $845 = ((($844)) + 32|0); //@line 43 "mcbits/vec.c"
 $846 = $845; //@line 43 "mcbits/vec.c"
 $847 = $846; //@line 43 "mcbits/vec.c"
 $848 = HEAP32[$847>>2]|0; //@line 43 "mcbits/vec.c"
 $849 = (($846) + 4)|0; //@line 43 "mcbits/vec.c"
 $850 = $849; //@line 43 "mcbits/vec.c"
 $851 = HEAP32[$850>>2]|0; //@line 43 "mcbits/vec.c"
 $852 = $5; //@line 43 "mcbits/vec.c"
 $853 = ((($852)) + 40|0); //@line 43 "mcbits/vec.c"
 $854 = $853; //@line 43 "mcbits/vec.c"
 $855 = $854; //@line 43 "mcbits/vec.c"
 $856 = HEAP32[$855>>2]|0; //@line 43 "mcbits/vec.c"
 $857 = (($854) + 4)|0; //@line 43 "mcbits/vec.c"
 $858 = $857; //@line 43 "mcbits/vec.c"
 $859 = HEAP32[$858>>2]|0; //@line 43 "mcbits/vec.c"
 $860 = $848 & $856; //@line 43 "mcbits/vec.c"
 $861 = $851 & $859; //@line 43 "mcbits/vec.c"
 $862 = $38; //@line 43 "mcbits/vec.c"
 $863 = $862; //@line 43 "mcbits/vec.c"
 HEAP32[$863>>2] = $860; //@line 43 "mcbits/vec.c"
 $864 = (($862) + 4)|0; //@line 43 "mcbits/vec.c"
 $865 = $864; //@line 43 "mcbits/vec.c"
 HEAP32[$865>>2] = $861; //@line 43 "mcbits/vec.c"
 $866 = $4; //@line 44 "mcbits/vec.c"
 $867 = ((($866)) + 32|0); //@line 44 "mcbits/vec.c"
 $868 = $867; //@line 44 "mcbits/vec.c"
 $869 = $868; //@line 44 "mcbits/vec.c"
 $870 = HEAP32[$869>>2]|0; //@line 44 "mcbits/vec.c"
 $871 = (($868) + 4)|0; //@line 44 "mcbits/vec.c"
 $872 = $871; //@line 44 "mcbits/vec.c"
 $873 = HEAP32[$872>>2]|0; //@line 44 "mcbits/vec.c"
 $874 = $5; //@line 44 "mcbits/vec.c"
 $875 = ((($874)) + 32|0); //@line 44 "mcbits/vec.c"
 $876 = $875; //@line 44 "mcbits/vec.c"
 $877 = $876; //@line 44 "mcbits/vec.c"
 $878 = HEAP32[$877>>2]|0; //@line 44 "mcbits/vec.c"
 $879 = (($876) + 4)|0; //@line 44 "mcbits/vec.c"
 $880 = $879; //@line 44 "mcbits/vec.c"
 $881 = HEAP32[$880>>2]|0; //@line 44 "mcbits/vec.c"
 $882 = $870 & $878; //@line 44 "mcbits/vec.c"
 $883 = $873 & $881; //@line 44 "mcbits/vec.c"
 $884 = $39; //@line 44 "mcbits/vec.c"
 $885 = $884; //@line 44 "mcbits/vec.c"
 HEAP32[$885>>2] = $882; //@line 44 "mcbits/vec.c"
 $886 = (($884) + 4)|0; //@line 44 "mcbits/vec.c"
 $887 = $886; //@line 44 "mcbits/vec.c"
 HEAP32[$887>>2] = $883; //@line 44 "mcbits/vec.c"
 $888 = $4; //@line 45 "mcbits/vec.c"
 $889 = ((($888)) + 32|0); //@line 45 "mcbits/vec.c"
 $890 = $889; //@line 45 "mcbits/vec.c"
 $891 = $890; //@line 45 "mcbits/vec.c"
 $892 = HEAP32[$891>>2]|0; //@line 45 "mcbits/vec.c"
 $893 = (($890) + 4)|0; //@line 45 "mcbits/vec.c"
 $894 = $893; //@line 45 "mcbits/vec.c"
 $895 = HEAP32[$894>>2]|0; //@line 45 "mcbits/vec.c"
 $896 = $5; //@line 45 "mcbits/vec.c"
 $897 = ((($896)) + 24|0); //@line 45 "mcbits/vec.c"
 $898 = $897; //@line 45 "mcbits/vec.c"
 $899 = $898; //@line 45 "mcbits/vec.c"
 $900 = HEAP32[$899>>2]|0; //@line 45 "mcbits/vec.c"
 $901 = (($898) + 4)|0; //@line 45 "mcbits/vec.c"
 $902 = $901; //@line 45 "mcbits/vec.c"
 $903 = HEAP32[$902>>2]|0; //@line 45 "mcbits/vec.c"
 $904 = $892 & $900; //@line 45 "mcbits/vec.c"
 $905 = $895 & $903; //@line 45 "mcbits/vec.c"
 $906 = $40; //@line 45 "mcbits/vec.c"
 $907 = $906; //@line 45 "mcbits/vec.c"
 HEAP32[$907>>2] = $904; //@line 45 "mcbits/vec.c"
 $908 = (($906) + 4)|0; //@line 45 "mcbits/vec.c"
 $909 = $908; //@line 45 "mcbits/vec.c"
 HEAP32[$909>>2] = $905; //@line 45 "mcbits/vec.c"
 $910 = $4; //@line 46 "mcbits/vec.c"
 $911 = ((($910)) + 24|0); //@line 46 "mcbits/vec.c"
 $912 = $911; //@line 46 "mcbits/vec.c"
 $913 = $912; //@line 46 "mcbits/vec.c"
 $914 = HEAP32[$913>>2]|0; //@line 46 "mcbits/vec.c"
 $915 = (($912) + 4)|0; //@line 46 "mcbits/vec.c"
 $916 = $915; //@line 46 "mcbits/vec.c"
 $917 = HEAP32[$916>>2]|0; //@line 46 "mcbits/vec.c"
 $918 = $5; //@line 46 "mcbits/vec.c"
 $919 = ((($918)) + 32|0); //@line 46 "mcbits/vec.c"
 $920 = $919; //@line 46 "mcbits/vec.c"
 $921 = $920; //@line 46 "mcbits/vec.c"
 $922 = HEAP32[$921>>2]|0; //@line 46 "mcbits/vec.c"
 $923 = (($920) + 4)|0; //@line 46 "mcbits/vec.c"
 $924 = $923; //@line 46 "mcbits/vec.c"
 $925 = HEAP32[$924>>2]|0; //@line 46 "mcbits/vec.c"
 $926 = $914 & $922; //@line 46 "mcbits/vec.c"
 $927 = $917 & $925; //@line 46 "mcbits/vec.c"
 $928 = $41; //@line 46 "mcbits/vec.c"
 $929 = $928; //@line 46 "mcbits/vec.c"
 HEAP32[$929>>2] = $926; //@line 46 "mcbits/vec.c"
 $930 = (($928) + 4)|0; //@line 46 "mcbits/vec.c"
 $931 = $930; //@line 46 "mcbits/vec.c"
 HEAP32[$931>>2] = $927; //@line 46 "mcbits/vec.c"
 $932 = $4; //@line 47 "mcbits/vec.c"
 $933 = ((($932)) + 24|0); //@line 47 "mcbits/vec.c"
 $934 = $933; //@line 47 "mcbits/vec.c"
 $935 = $934; //@line 47 "mcbits/vec.c"
 $936 = HEAP32[$935>>2]|0; //@line 47 "mcbits/vec.c"
 $937 = (($934) + 4)|0; //@line 47 "mcbits/vec.c"
 $938 = $937; //@line 47 "mcbits/vec.c"
 $939 = HEAP32[$938>>2]|0; //@line 47 "mcbits/vec.c"
 $940 = $5; //@line 47 "mcbits/vec.c"
 $941 = ((($940)) + 24|0); //@line 47 "mcbits/vec.c"
 $942 = $941; //@line 47 "mcbits/vec.c"
 $943 = $942; //@line 47 "mcbits/vec.c"
 $944 = HEAP32[$943>>2]|0; //@line 47 "mcbits/vec.c"
 $945 = (($942) + 4)|0; //@line 47 "mcbits/vec.c"
 $946 = $945; //@line 47 "mcbits/vec.c"
 $947 = HEAP32[$946>>2]|0; //@line 47 "mcbits/vec.c"
 $948 = $936 & $944; //@line 47 "mcbits/vec.c"
 $949 = $939 & $947; //@line 47 "mcbits/vec.c"
 $950 = $42; //@line 47 "mcbits/vec.c"
 $951 = $950; //@line 47 "mcbits/vec.c"
 HEAP32[$951>>2] = $948; //@line 47 "mcbits/vec.c"
 $952 = (($950) + 4)|0; //@line 47 "mcbits/vec.c"
 $953 = $952; //@line 47 "mcbits/vec.c"
 HEAP32[$953>>2] = $949; //@line 47 "mcbits/vec.c"
 $954 = $41; //@line 48 "mcbits/vec.c"
 $955 = $954; //@line 48 "mcbits/vec.c"
 $956 = HEAP32[$955>>2]|0; //@line 48 "mcbits/vec.c"
 $957 = (($954) + 4)|0; //@line 48 "mcbits/vec.c"
 $958 = $957; //@line 48 "mcbits/vec.c"
 $959 = HEAP32[$958>>2]|0; //@line 48 "mcbits/vec.c"
 $960 = $40; //@line 48 "mcbits/vec.c"
 $961 = $960; //@line 48 "mcbits/vec.c"
 $962 = HEAP32[$961>>2]|0; //@line 48 "mcbits/vec.c"
 $963 = (($960) + 4)|0; //@line 48 "mcbits/vec.c"
 $964 = $963; //@line 48 "mcbits/vec.c"
 $965 = HEAP32[$964>>2]|0; //@line 48 "mcbits/vec.c"
 $966 = $956 ^ $962; //@line 48 "mcbits/vec.c"
 $967 = $959 ^ $965; //@line 48 "mcbits/vec.c"
 $968 = $43; //@line 48 "mcbits/vec.c"
 $969 = $968; //@line 48 "mcbits/vec.c"
 HEAP32[$969>>2] = $966; //@line 48 "mcbits/vec.c"
 $970 = (($968) + 4)|0; //@line 48 "mcbits/vec.c"
 $971 = $970; //@line 48 "mcbits/vec.c"
 HEAP32[$971>>2] = $967; //@line 48 "mcbits/vec.c"
 $972 = $39; //@line 49 "mcbits/vec.c"
 $973 = $972; //@line 49 "mcbits/vec.c"
 $974 = HEAP32[$973>>2]|0; //@line 49 "mcbits/vec.c"
 $975 = (($972) + 4)|0; //@line 49 "mcbits/vec.c"
 $976 = $975; //@line 49 "mcbits/vec.c"
 $977 = HEAP32[$976>>2]|0; //@line 49 "mcbits/vec.c"
 $978 = $37; //@line 49 "mcbits/vec.c"
 $979 = $978; //@line 49 "mcbits/vec.c"
 $980 = HEAP32[$979>>2]|0; //@line 49 "mcbits/vec.c"
 $981 = (($978) + 4)|0; //@line 49 "mcbits/vec.c"
 $982 = $981; //@line 49 "mcbits/vec.c"
 $983 = HEAP32[$982>>2]|0; //@line 49 "mcbits/vec.c"
 $984 = $974 ^ $980; //@line 49 "mcbits/vec.c"
 $985 = $977 ^ $983; //@line 49 "mcbits/vec.c"
 $986 = $44; //@line 49 "mcbits/vec.c"
 $987 = $986; //@line 49 "mcbits/vec.c"
 HEAP32[$987>>2] = $984; //@line 49 "mcbits/vec.c"
 $988 = (($986) + 4)|0; //@line 49 "mcbits/vec.c"
 $989 = $988; //@line 49 "mcbits/vec.c"
 HEAP32[$989>>2] = $985; //@line 49 "mcbits/vec.c"
 $990 = $44; //@line 50 "mcbits/vec.c"
 $991 = $990; //@line 50 "mcbits/vec.c"
 $992 = HEAP32[$991>>2]|0; //@line 50 "mcbits/vec.c"
 $993 = (($990) + 4)|0; //@line 50 "mcbits/vec.c"
 $994 = $993; //@line 50 "mcbits/vec.c"
 $995 = HEAP32[$994>>2]|0; //@line 50 "mcbits/vec.c"
 $996 = $35; //@line 50 "mcbits/vec.c"
 $997 = $996; //@line 50 "mcbits/vec.c"
 $998 = HEAP32[$997>>2]|0; //@line 50 "mcbits/vec.c"
 $999 = (($996) + 4)|0; //@line 50 "mcbits/vec.c"
 $1000 = $999; //@line 50 "mcbits/vec.c"
 $1001 = HEAP32[$1000>>2]|0; //@line 50 "mcbits/vec.c"
 $1002 = $992 ^ $998; //@line 50 "mcbits/vec.c"
 $1003 = $995 ^ $1001; //@line 50 "mcbits/vec.c"
 $1004 = $45; //@line 50 "mcbits/vec.c"
 $1005 = $1004; //@line 50 "mcbits/vec.c"
 HEAP32[$1005>>2] = $1002; //@line 50 "mcbits/vec.c"
 $1006 = (($1004) + 4)|0; //@line 50 "mcbits/vec.c"
 $1007 = $1006; //@line 50 "mcbits/vec.c"
 HEAP32[$1007>>2] = $1003; //@line 50 "mcbits/vec.c"
 $1008 = $38; //@line 51 "mcbits/vec.c"
 $1009 = $1008; //@line 51 "mcbits/vec.c"
 $1010 = HEAP32[$1009>>2]|0; //@line 51 "mcbits/vec.c"
 $1011 = (($1008) + 4)|0; //@line 51 "mcbits/vec.c"
 $1012 = $1011; //@line 51 "mcbits/vec.c"
 $1013 = HEAP32[$1012>>2]|0; //@line 51 "mcbits/vec.c"
 $1014 = $36; //@line 51 "mcbits/vec.c"
 $1015 = $1014; //@line 51 "mcbits/vec.c"
 $1016 = HEAP32[$1015>>2]|0; //@line 51 "mcbits/vec.c"
 $1017 = (($1014) + 4)|0; //@line 51 "mcbits/vec.c"
 $1018 = $1017; //@line 51 "mcbits/vec.c"
 $1019 = HEAP32[$1018>>2]|0; //@line 51 "mcbits/vec.c"
 $1020 = $1010 ^ $1016; //@line 51 "mcbits/vec.c"
 $1021 = $1013 ^ $1019; //@line 51 "mcbits/vec.c"
 $1022 = $46; //@line 51 "mcbits/vec.c"
 $1023 = $1022; //@line 51 "mcbits/vec.c"
 HEAP32[$1023>>2] = $1020; //@line 51 "mcbits/vec.c"
 $1024 = (($1022) + 4)|0; //@line 51 "mcbits/vec.c"
 $1025 = $1024; //@line 51 "mcbits/vec.c"
 HEAP32[$1025>>2] = $1021; //@line 51 "mcbits/vec.c"
 $1026 = $4; //@line 52 "mcbits/vec.c"
 $1027 = ((($1026)) + 16|0); //@line 52 "mcbits/vec.c"
 $1028 = $1027; //@line 52 "mcbits/vec.c"
 $1029 = $1028; //@line 52 "mcbits/vec.c"
 $1030 = HEAP32[$1029>>2]|0; //@line 52 "mcbits/vec.c"
 $1031 = (($1028) + 4)|0; //@line 52 "mcbits/vec.c"
 $1032 = $1031; //@line 52 "mcbits/vec.c"
 $1033 = HEAP32[$1032>>2]|0; //@line 52 "mcbits/vec.c"
 $1034 = $5; //@line 52 "mcbits/vec.c"
 $1035 = ((($1034)) + 16|0); //@line 52 "mcbits/vec.c"
 $1036 = $1035; //@line 52 "mcbits/vec.c"
 $1037 = $1036; //@line 52 "mcbits/vec.c"
 $1038 = HEAP32[$1037>>2]|0; //@line 52 "mcbits/vec.c"
 $1039 = (($1036) + 4)|0; //@line 52 "mcbits/vec.c"
 $1040 = $1039; //@line 52 "mcbits/vec.c"
 $1041 = HEAP32[$1040>>2]|0; //@line 52 "mcbits/vec.c"
 $1042 = $1030 & $1038; //@line 52 "mcbits/vec.c"
 $1043 = $1033 & $1041; //@line 52 "mcbits/vec.c"
 $1044 = $47; //@line 52 "mcbits/vec.c"
 $1045 = $1044; //@line 52 "mcbits/vec.c"
 HEAP32[$1045>>2] = $1042; //@line 52 "mcbits/vec.c"
 $1046 = (($1044) + 4)|0; //@line 52 "mcbits/vec.c"
 $1047 = $1046; //@line 52 "mcbits/vec.c"
 HEAP32[$1047>>2] = $1043; //@line 52 "mcbits/vec.c"
 $1048 = $4; //@line 53 "mcbits/vec.c"
 $1049 = ((($1048)) + 16|0); //@line 53 "mcbits/vec.c"
 $1050 = $1049; //@line 53 "mcbits/vec.c"
 $1051 = $1050; //@line 53 "mcbits/vec.c"
 $1052 = HEAP32[$1051>>2]|0; //@line 53 "mcbits/vec.c"
 $1053 = (($1050) + 4)|0; //@line 53 "mcbits/vec.c"
 $1054 = $1053; //@line 53 "mcbits/vec.c"
 $1055 = HEAP32[$1054>>2]|0; //@line 53 "mcbits/vec.c"
 $1056 = $5; //@line 53 "mcbits/vec.c"
 $1057 = $1056; //@line 53 "mcbits/vec.c"
 $1058 = $1057; //@line 53 "mcbits/vec.c"
 $1059 = HEAP32[$1058>>2]|0; //@line 53 "mcbits/vec.c"
 $1060 = (($1057) + 4)|0; //@line 53 "mcbits/vec.c"
 $1061 = $1060; //@line 53 "mcbits/vec.c"
 $1062 = HEAP32[$1061>>2]|0; //@line 53 "mcbits/vec.c"
 $1063 = $1052 & $1059; //@line 53 "mcbits/vec.c"
 $1064 = $1055 & $1062; //@line 53 "mcbits/vec.c"
 $1065 = $48; //@line 53 "mcbits/vec.c"
 $1066 = $1065; //@line 53 "mcbits/vec.c"
 HEAP32[$1066>>2] = $1063; //@line 53 "mcbits/vec.c"
 $1067 = (($1065) + 4)|0; //@line 53 "mcbits/vec.c"
 $1068 = $1067; //@line 53 "mcbits/vec.c"
 HEAP32[$1068>>2] = $1064; //@line 53 "mcbits/vec.c"
 $1069 = $4; //@line 54 "mcbits/vec.c"
 $1070 = ((($1069)) + 16|0); //@line 54 "mcbits/vec.c"
 $1071 = $1070; //@line 54 "mcbits/vec.c"
 $1072 = $1071; //@line 54 "mcbits/vec.c"
 $1073 = HEAP32[$1072>>2]|0; //@line 54 "mcbits/vec.c"
 $1074 = (($1071) + 4)|0; //@line 54 "mcbits/vec.c"
 $1075 = $1074; //@line 54 "mcbits/vec.c"
 $1076 = HEAP32[$1075>>2]|0; //@line 54 "mcbits/vec.c"
 $1077 = $5; //@line 54 "mcbits/vec.c"
 $1078 = ((($1077)) + 8|0); //@line 54 "mcbits/vec.c"
 $1079 = $1078; //@line 54 "mcbits/vec.c"
 $1080 = $1079; //@line 54 "mcbits/vec.c"
 $1081 = HEAP32[$1080>>2]|0; //@line 54 "mcbits/vec.c"
 $1082 = (($1079) + 4)|0; //@line 54 "mcbits/vec.c"
 $1083 = $1082; //@line 54 "mcbits/vec.c"
 $1084 = HEAP32[$1083>>2]|0; //@line 54 "mcbits/vec.c"
 $1085 = $1073 & $1081; //@line 54 "mcbits/vec.c"
 $1086 = $1076 & $1084; //@line 54 "mcbits/vec.c"
 $1087 = $49; //@line 54 "mcbits/vec.c"
 $1088 = $1087; //@line 54 "mcbits/vec.c"
 HEAP32[$1088>>2] = $1085; //@line 54 "mcbits/vec.c"
 $1089 = (($1087) + 4)|0; //@line 54 "mcbits/vec.c"
 $1090 = $1089; //@line 54 "mcbits/vec.c"
 HEAP32[$1090>>2] = $1086; //@line 54 "mcbits/vec.c"
 $1091 = $4; //@line 55 "mcbits/vec.c"
 $1092 = $1091; //@line 55 "mcbits/vec.c"
 $1093 = $1092; //@line 55 "mcbits/vec.c"
 $1094 = HEAP32[$1093>>2]|0; //@line 55 "mcbits/vec.c"
 $1095 = (($1092) + 4)|0; //@line 55 "mcbits/vec.c"
 $1096 = $1095; //@line 55 "mcbits/vec.c"
 $1097 = HEAP32[$1096>>2]|0; //@line 55 "mcbits/vec.c"
 $1098 = $5; //@line 55 "mcbits/vec.c"
 $1099 = ((($1098)) + 16|0); //@line 55 "mcbits/vec.c"
 $1100 = $1099; //@line 55 "mcbits/vec.c"
 $1101 = $1100; //@line 55 "mcbits/vec.c"
 $1102 = HEAP32[$1101>>2]|0; //@line 55 "mcbits/vec.c"
 $1103 = (($1100) + 4)|0; //@line 55 "mcbits/vec.c"
 $1104 = $1103; //@line 55 "mcbits/vec.c"
 $1105 = HEAP32[$1104>>2]|0; //@line 55 "mcbits/vec.c"
 $1106 = $1094 & $1102; //@line 55 "mcbits/vec.c"
 $1107 = $1097 & $1105; //@line 55 "mcbits/vec.c"
 $1108 = $50; //@line 55 "mcbits/vec.c"
 $1109 = $1108; //@line 55 "mcbits/vec.c"
 HEAP32[$1109>>2] = $1106; //@line 55 "mcbits/vec.c"
 $1110 = (($1108) + 4)|0; //@line 55 "mcbits/vec.c"
 $1111 = $1110; //@line 55 "mcbits/vec.c"
 HEAP32[$1111>>2] = $1107; //@line 55 "mcbits/vec.c"
 $1112 = $4; //@line 56 "mcbits/vec.c"
 $1113 = ((($1112)) + 8|0); //@line 56 "mcbits/vec.c"
 $1114 = $1113; //@line 56 "mcbits/vec.c"
 $1115 = $1114; //@line 56 "mcbits/vec.c"
 $1116 = HEAP32[$1115>>2]|0; //@line 56 "mcbits/vec.c"
 $1117 = (($1114) + 4)|0; //@line 56 "mcbits/vec.c"
 $1118 = $1117; //@line 56 "mcbits/vec.c"
 $1119 = HEAP32[$1118>>2]|0; //@line 56 "mcbits/vec.c"
 $1120 = $5; //@line 56 "mcbits/vec.c"
 $1121 = ((($1120)) + 16|0); //@line 56 "mcbits/vec.c"
 $1122 = $1121; //@line 56 "mcbits/vec.c"
 $1123 = $1122; //@line 56 "mcbits/vec.c"
 $1124 = HEAP32[$1123>>2]|0; //@line 56 "mcbits/vec.c"
 $1125 = (($1122) + 4)|0; //@line 56 "mcbits/vec.c"
 $1126 = $1125; //@line 56 "mcbits/vec.c"
 $1127 = HEAP32[$1126>>2]|0; //@line 56 "mcbits/vec.c"
 $1128 = $1116 & $1124; //@line 56 "mcbits/vec.c"
 $1129 = $1119 & $1127; //@line 56 "mcbits/vec.c"
 $1130 = $51; //@line 56 "mcbits/vec.c"
 $1131 = $1130; //@line 56 "mcbits/vec.c"
 HEAP32[$1131>>2] = $1128; //@line 56 "mcbits/vec.c"
 $1132 = (($1130) + 4)|0; //@line 56 "mcbits/vec.c"
 $1133 = $1132; //@line 56 "mcbits/vec.c"
 HEAP32[$1133>>2] = $1129; //@line 56 "mcbits/vec.c"
 $1134 = $4; //@line 57 "mcbits/vec.c"
 $1135 = ((($1134)) + 8|0); //@line 57 "mcbits/vec.c"
 $1136 = $1135; //@line 57 "mcbits/vec.c"
 $1137 = $1136; //@line 57 "mcbits/vec.c"
 $1138 = HEAP32[$1137>>2]|0; //@line 57 "mcbits/vec.c"
 $1139 = (($1136) + 4)|0; //@line 57 "mcbits/vec.c"
 $1140 = $1139; //@line 57 "mcbits/vec.c"
 $1141 = HEAP32[$1140>>2]|0; //@line 57 "mcbits/vec.c"
 $1142 = $5; //@line 57 "mcbits/vec.c"
 $1143 = ((($1142)) + 8|0); //@line 57 "mcbits/vec.c"
 $1144 = $1143; //@line 57 "mcbits/vec.c"
 $1145 = $1144; //@line 57 "mcbits/vec.c"
 $1146 = HEAP32[$1145>>2]|0; //@line 57 "mcbits/vec.c"
 $1147 = (($1144) + 4)|0; //@line 57 "mcbits/vec.c"
 $1148 = $1147; //@line 57 "mcbits/vec.c"
 $1149 = HEAP32[$1148>>2]|0; //@line 57 "mcbits/vec.c"
 $1150 = $1138 & $1146; //@line 57 "mcbits/vec.c"
 $1151 = $1141 & $1149; //@line 57 "mcbits/vec.c"
 $1152 = $52; //@line 57 "mcbits/vec.c"
 $1153 = $1152; //@line 57 "mcbits/vec.c"
 HEAP32[$1153>>2] = $1150; //@line 57 "mcbits/vec.c"
 $1154 = (($1152) + 4)|0; //@line 57 "mcbits/vec.c"
 $1155 = $1154; //@line 57 "mcbits/vec.c"
 HEAP32[$1155>>2] = $1151; //@line 57 "mcbits/vec.c"
 $1156 = $4; //@line 58 "mcbits/vec.c"
 $1157 = ((($1156)) + 8|0); //@line 58 "mcbits/vec.c"
 $1158 = $1157; //@line 58 "mcbits/vec.c"
 $1159 = $1158; //@line 58 "mcbits/vec.c"
 $1160 = HEAP32[$1159>>2]|0; //@line 58 "mcbits/vec.c"
 $1161 = (($1158) + 4)|0; //@line 58 "mcbits/vec.c"
 $1162 = $1161; //@line 58 "mcbits/vec.c"
 $1163 = HEAP32[$1162>>2]|0; //@line 58 "mcbits/vec.c"
 $1164 = $5; //@line 58 "mcbits/vec.c"
 $1165 = $1164; //@line 58 "mcbits/vec.c"
 $1166 = $1165; //@line 58 "mcbits/vec.c"
 $1167 = HEAP32[$1166>>2]|0; //@line 58 "mcbits/vec.c"
 $1168 = (($1165) + 4)|0; //@line 58 "mcbits/vec.c"
 $1169 = $1168; //@line 58 "mcbits/vec.c"
 $1170 = HEAP32[$1169>>2]|0; //@line 58 "mcbits/vec.c"
 $1171 = $1160 & $1167; //@line 58 "mcbits/vec.c"
 $1172 = $1163 & $1170; //@line 58 "mcbits/vec.c"
 $1173 = $53; //@line 58 "mcbits/vec.c"
 $1174 = $1173; //@line 58 "mcbits/vec.c"
 HEAP32[$1174>>2] = $1171; //@line 58 "mcbits/vec.c"
 $1175 = (($1173) + 4)|0; //@line 58 "mcbits/vec.c"
 $1176 = $1175; //@line 58 "mcbits/vec.c"
 HEAP32[$1176>>2] = $1172; //@line 58 "mcbits/vec.c"
 $1177 = $4; //@line 59 "mcbits/vec.c"
 $1178 = $1177; //@line 59 "mcbits/vec.c"
 $1179 = $1178; //@line 59 "mcbits/vec.c"
 $1180 = HEAP32[$1179>>2]|0; //@line 59 "mcbits/vec.c"
 $1181 = (($1178) + 4)|0; //@line 59 "mcbits/vec.c"
 $1182 = $1181; //@line 59 "mcbits/vec.c"
 $1183 = HEAP32[$1182>>2]|0; //@line 59 "mcbits/vec.c"
 $1184 = $5; //@line 59 "mcbits/vec.c"
 $1185 = ((($1184)) + 8|0); //@line 59 "mcbits/vec.c"
 $1186 = $1185; //@line 59 "mcbits/vec.c"
 $1187 = $1186; //@line 59 "mcbits/vec.c"
 $1188 = HEAP32[$1187>>2]|0; //@line 59 "mcbits/vec.c"
 $1189 = (($1186) + 4)|0; //@line 59 "mcbits/vec.c"
 $1190 = $1189; //@line 59 "mcbits/vec.c"
 $1191 = HEAP32[$1190>>2]|0; //@line 59 "mcbits/vec.c"
 $1192 = $1180 & $1188; //@line 59 "mcbits/vec.c"
 $1193 = $1183 & $1191; //@line 59 "mcbits/vec.c"
 $1194 = $54; //@line 59 "mcbits/vec.c"
 $1195 = $1194; //@line 59 "mcbits/vec.c"
 HEAP32[$1195>>2] = $1192; //@line 59 "mcbits/vec.c"
 $1196 = (($1194) + 4)|0; //@line 59 "mcbits/vec.c"
 $1197 = $1196; //@line 59 "mcbits/vec.c"
 HEAP32[$1197>>2] = $1193; //@line 59 "mcbits/vec.c"
 $1198 = $4; //@line 60 "mcbits/vec.c"
 $1199 = $1198; //@line 60 "mcbits/vec.c"
 $1200 = $1199; //@line 60 "mcbits/vec.c"
 $1201 = HEAP32[$1200>>2]|0; //@line 60 "mcbits/vec.c"
 $1202 = (($1199) + 4)|0; //@line 60 "mcbits/vec.c"
 $1203 = $1202; //@line 60 "mcbits/vec.c"
 $1204 = HEAP32[$1203>>2]|0; //@line 60 "mcbits/vec.c"
 $1205 = $5; //@line 60 "mcbits/vec.c"
 $1206 = $1205; //@line 60 "mcbits/vec.c"
 $1207 = $1206; //@line 60 "mcbits/vec.c"
 $1208 = HEAP32[$1207>>2]|0; //@line 60 "mcbits/vec.c"
 $1209 = (($1206) + 4)|0; //@line 60 "mcbits/vec.c"
 $1210 = $1209; //@line 60 "mcbits/vec.c"
 $1211 = HEAP32[$1210>>2]|0; //@line 60 "mcbits/vec.c"
 $1212 = $1201 & $1208; //@line 60 "mcbits/vec.c"
 $1213 = $1204 & $1211; //@line 60 "mcbits/vec.c"
 $1214 = $55; //@line 60 "mcbits/vec.c"
 $1215 = $1214; //@line 60 "mcbits/vec.c"
 HEAP32[$1215>>2] = $1212; //@line 60 "mcbits/vec.c"
 $1216 = (($1214) + 4)|0; //@line 60 "mcbits/vec.c"
 $1217 = $1216; //@line 60 "mcbits/vec.c"
 HEAP32[$1217>>2] = $1213; //@line 60 "mcbits/vec.c"
 $1218 = $54; //@line 61 "mcbits/vec.c"
 $1219 = $1218; //@line 61 "mcbits/vec.c"
 $1220 = HEAP32[$1219>>2]|0; //@line 61 "mcbits/vec.c"
 $1221 = (($1218) + 4)|0; //@line 61 "mcbits/vec.c"
 $1222 = $1221; //@line 61 "mcbits/vec.c"
 $1223 = HEAP32[$1222>>2]|0; //@line 61 "mcbits/vec.c"
 $1224 = $53; //@line 61 "mcbits/vec.c"
 $1225 = $1224; //@line 61 "mcbits/vec.c"
 $1226 = HEAP32[$1225>>2]|0; //@line 61 "mcbits/vec.c"
 $1227 = (($1224) + 4)|0; //@line 61 "mcbits/vec.c"
 $1228 = $1227; //@line 61 "mcbits/vec.c"
 $1229 = HEAP32[$1228>>2]|0; //@line 61 "mcbits/vec.c"
 $1230 = $1220 ^ $1226; //@line 61 "mcbits/vec.c"
 $1231 = $1223 ^ $1229; //@line 61 "mcbits/vec.c"
 $1232 = $56; //@line 61 "mcbits/vec.c"
 $1233 = $1232; //@line 61 "mcbits/vec.c"
 HEAP32[$1233>>2] = $1230; //@line 61 "mcbits/vec.c"
 $1234 = (($1232) + 4)|0; //@line 61 "mcbits/vec.c"
 $1235 = $1234; //@line 61 "mcbits/vec.c"
 HEAP32[$1235>>2] = $1231; //@line 61 "mcbits/vec.c"
 $1236 = $52; //@line 62 "mcbits/vec.c"
 $1237 = $1236; //@line 62 "mcbits/vec.c"
 $1238 = HEAP32[$1237>>2]|0; //@line 62 "mcbits/vec.c"
 $1239 = (($1236) + 4)|0; //@line 62 "mcbits/vec.c"
 $1240 = $1239; //@line 62 "mcbits/vec.c"
 $1241 = HEAP32[$1240>>2]|0; //@line 62 "mcbits/vec.c"
 $1242 = $50; //@line 62 "mcbits/vec.c"
 $1243 = $1242; //@line 62 "mcbits/vec.c"
 $1244 = HEAP32[$1243>>2]|0; //@line 62 "mcbits/vec.c"
 $1245 = (($1242) + 4)|0; //@line 62 "mcbits/vec.c"
 $1246 = $1245; //@line 62 "mcbits/vec.c"
 $1247 = HEAP32[$1246>>2]|0; //@line 62 "mcbits/vec.c"
 $1248 = $1238 ^ $1244; //@line 62 "mcbits/vec.c"
 $1249 = $1241 ^ $1247; //@line 62 "mcbits/vec.c"
 $1250 = $57; //@line 62 "mcbits/vec.c"
 $1251 = $1250; //@line 62 "mcbits/vec.c"
 HEAP32[$1251>>2] = $1248; //@line 62 "mcbits/vec.c"
 $1252 = (($1250) + 4)|0; //@line 62 "mcbits/vec.c"
 $1253 = $1252; //@line 62 "mcbits/vec.c"
 HEAP32[$1253>>2] = $1249; //@line 62 "mcbits/vec.c"
 $1254 = $57; //@line 63 "mcbits/vec.c"
 $1255 = $1254; //@line 63 "mcbits/vec.c"
 $1256 = HEAP32[$1255>>2]|0; //@line 63 "mcbits/vec.c"
 $1257 = (($1254) + 4)|0; //@line 63 "mcbits/vec.c"
 $1258 = $1257; //@line 63 "mcbits/vec.c"
 $1259 = HEAP32[$1258>>2]|0; //@line 63 "mcbits/vec.c"
 $1260 = $48; //@line 63 "mcbits/vec.c"
 $1261 = $1260; //@line 63 "mcbits/vec.c"
 $1262 = HEAP32[$1261>>2]|0; //@line 63 "mcbits/vec.c"
 $1263 = (($1260) + 4)|0; //@line 63 "mcbits/vec.c"
 $1264 = $1263; //@line 63 "mcbits/vec.c"
 $1265 = HEAP32[$1264>>2]|0; //@line 63 "mcbits/vec.c"
 $1266 = $1256 ^ $1262; //@line 63 "mcbits/vec.c"
 $1267 = $1259 ^ $1265; //@line 63 "mcbits/vec.c"
 $1268 = $58; //@line 63 "mcbits/vec.c"
 $1269 = $1268; //@line 63 "mcbits/vec.c"
 HEAP32[$1269>>2] = $1266; //@line 63 "mcbits/vec.c"
 $1270 = (($1268) + 4)|0; //@line 63 "mcbits/vec.c"
 $1271 = $1270; //@line 63 "mcbits/vec.c"
 HEAP32[$1271>>2] = $1267; //@line 63 "mcbits/vec.c"
 $1272 = $51; //@line 64 "mcbits/vec.c"
 $1273 = $1272; //@line 64 "mcbits/vec.c"
 $1274 = HEAP32[$1273>>2]|0; //@line 64 "mcbits/vec.c"
 $1275 = (($1272) + 4)|0; //@line 64 "mcbits/vec.c"
 $1276 = $1275; //@line 64 "mcbits/vec.c"
 $1277 = HEAP32[$1276>>2]|0; //@line 64 "mcbits/vec.c"
 $1278 = $49; //@line 64 "mcbits/vec.c"
 $1279 = $1278; //@line 64 "mcbits/vec.c"
 $1280 = HEAP32[$1279>>2]|0; //@line 64 "mcbits/vec.c"
 $1281 = (($1278) + 4)|0; //@line 64 "mcbits/vec.c"
 $1282 = $1281; //@line 64 "mcbits/vec.c"
 $1283 = HEAP32[$1282>>2]|0; //@line 64 "mcbits/vec.c"
 $1284 = $1274 ^ $1280; //@line 64 "mcbits/vec.c"
 $1285 = $1277 ^ $1283; //@line 64 "mcbits/vec.c"
 $1286 = $59; //@line 64 "mcbits/vec.c"
 $1287 = $1286; //@line 64 "mcbits/vec.c"
 HEAP32[$1287>>2] = $1284; //@line 64 "mcbits/vec.c"
 $1288 = (($1286) + 4)|0; //@line 64 "mcbits/vec.c"
 $1289 = $1288; //@line 64 "mcbits/vec.c"
 HEAP32[$1289>>2] = $1285; //@line 64 "mcbits/vec.c"
 $1290 = $59; //@line 65 "mcbits/vec.c"
 $1291 = $1290; //@line 65 "mcbits/vec.c"
 $1292 = HEAP32[$1291>>2]|0; //@line 65 "mcbits/vec.c"
 $1293 = (($1290) + 4)|0; //@line 65 "mcbits/vec.c"
 $1294 = $1293; //@line 65 "mcbits/vec.c"
 $1295 = HEAP32[$1294>>2]|0; //@line 65 "mcbits/vec.c"
 $1296 = $42; //@line 65 "mcbits/vec.c"
 $1297 = $1296; //@line 65 "mcbits/vec.c"
 $1298 = HEAP32[$1297>>2]|0; //@line 65 "mcbits/vec.c"
 $1299 = (($1296) + 4)|0; //@line 65 "mcbits/vec.c"
 $1300 = $1299; //@line 65 "mcbits/vec.c"
 $1301 = HEAP32[$1300>>2]|0; //@line 65 "mcbits/vec.c"
 $1302 = $1292 ^ $1298; //@line 65 "mcbits/vec.c"
 $1303 = $1295 ^ $1301; //@line 65 "mcbits/vec.c"
 $1304 = $60; //@line 65 "mcbits/vec.c"
 $1305 = $1304; //@line 65 "mcbits/vec.c"
 HEAP32[$1305>>2] = $1302; //@line 65 "mcbits/vec.c"
 $1306 = (($1304) + 4)|0; //@line 65 "mcbits/vec.c"
 $1307 = $1306; //@line 65 "mcbits/vec.c"
 HEAP32[$1307>>2] = $1303; //@line 65 "mcbits/vec.c"
 $1308 = $47; //@line 66 "mcbits/vec.c"
 $1309 = $1308; //@line 66 "mcbits/vec.c"
 $1310 = HEAP32[$1309>>2]|0; //@line 66 "mcbits/vec.c"
 $1311 = (($1308) + 4)|0; //@line 66 "mcbits/vec.c"
 $1312 = $1311; //@line 66 "mcbits/vec.c"
 $1313 = HEAP32[$1312>>2]|0; //@line 66 "mcbits/vec.c"
 $1314 = $43; //@line 66 "mcbits/vec.c"
 $1315 = $1314; //@line 66 "mcbits/vec.c"
 $1316 = HEAP32[$1315>>2]|0; //@line 66 "mcbits/vec.c"
 $1317 = (($1314) + 4)|0; //@line 66 "mcbits/vec.c"
 $1318 = $1317; //@line 66 "mcbits/vec.c"
 $1319 = HEAP32[$1318>>2]|0; //@line 66 "mcbits/vec.c"
 $1320 = $1310 ^ $1316; //@line 66 "mcbits/vec.c"
 $1321 = $1313 ^ $1319; //@line 66 "mcbits/vec.c"
 $1322 = $61; //@line 66 "mcbits/vec.c"
 $1323 = $1322; //@line 66 "mcbits/vec.c"
 HEAP32[$1323>>2] = $1320; //@line 66 "mcbits/vec.c"
 $1324 = (($1322) + 4)|0; //@line 66 "mcbits/vec.c"
 $1325 = $1324; //@line 66 "mcbits/vec.c"
 HEAP32[$1325>>2] = $1321; //@line 66 "mcbits/vec.c"
 $1326 = $46; //@line 67 "mcbits/vec.c"
 $1327 = $1326; //@line 67 "mcbits/vec.c"
 $1328 = HEAP32[$1327>>2]|0; //@line 67 "mcbits/vec.c"
 $1329 = (($1326) + 4)|0; //@line 67 "mcbits/vec.c"
 $1330 = $1329; //@line 67 "mcbits/vec.c"
 $1331 = HEAP32[$1330>>2]|0; //@line 67 "mcbits/vec.c"
 $1332 = $29; //@line 67 "mcbits/vec.c"
 $1333 = $1332; //@line 67 "mcbits/vec.c"
 $1334 = HEAP32[$1333>>2]|0; //@line 67 "mcbits/vec.c"
 $1335 = (($1332) + 4)|0; //@line 67 "mcbits/vec.c"
 $1336 = $1335; //@line 67 "mcbits/vec.c"
 $1337 = HEAP32[$1336>>2]|0; //@line 67 "mcbits/vec.c"
 $1338 = $1328 ^ $1334; //@line 67 "mcbits/vec.c"
 $1339 = $1331 ^ $1337; //@line 67 "mcbits/vec.c"
 $1340 = $62; //@line 67 "mcbits/vec.c"
 $1341 = $1340; //@line 67 "mcbits/vec.c"
 HEAP32[$1341>>2] = $1338; //@line 67 "mcbits/vec.c"
 $1342 = (($1340) + 4)|0; //@line 67 "mcbits/vec.c"
 $1343 = $1342; //@line 67 "mcbits/vec.c"
 HEAP32[$1343>>2] = $1339; //@line 67 "mcbits/vec.c"
 $1344 = $34; //@line 68 "mcbits/vec.c"
 $1345 = $1344; //@line 68 "mcbits/vec.c"
 $1346 = HEAP32[$1345>>2]|0; //@line 68 "mcbits/vec.c"
 $1347 = (($1344) + 4)|0; //@line 68 "mcbits/vec.c"
 $1348 = $1347; //@line 68 "mcbits/vec.c"
 $1349 = HEAP32[$1348>>2]|0; //@line 68 "mcbits/vec.c"
 $1350 = $30; //@line 68 "mcbits/vec.c"
 $1351 = $1350; //@line 68 "mcbits/vec.c"
 $1352 = HEAP32[$1351>>2]|0; //@line 68 "mcbits/vec.c"
 $1353 = (($1350) + 4)|0; //@line 68 "mcbits/vec.c"
 $1354 = $1353; //@line 68 "mcbits/vec.c"
 $1355 = HEAP32[$1354>>2]|0; //@line 68 "mcbits/vec.c"
 $1356 = $1346 ^ $1352; //@line 68 "mcbits/vec.c"
 $1357 = $1349 ^ $1355; //@line 68 "mcbits/vec.c"
 $1358 = $63; //@line 68 "mcbits/vec.c"
 $1359 = $1358; //@line 68 "mcbits/vec.c"
 HEAP32[$1359>>2] = $1356; //@line 68 "mcbits/vec.c"
 $1360 = (($1358) + 4)|0; //@line 68 "mcbits/vec.c"
 $1361 = $1360; //@line 68 "mcbits/vec.c"
 HEAP32[$1361>>2] = $1357; //@line 68 "mcbits/vec.c"
 $1362 = $33; //@line 69 "mcbits/vec.c"
 $1363 = $1362; //@line 69 "mcbits/vec.c"
 $1364 = HEAP32[$1363>>2]|0; //@line 69 "mcbits/vec.c"
 $1365 = (($1362) + 4)|0; //@line 69 "mcbits/vec.c"
 $1366 = $1365; //@line 69 "mcbits/vec.c"
 $1367 = HEAP32[$1366>>2]|0; //@line 69 "mcbits/vec.c"
 $1368 = $16; //@line 69 "mcbits/vec.c"
 $1369 = $1368; //@line 69 "mcbits/vec.c"
 $1370 = HEAP32[$1369>>2]|0; //@line 69 "mcbits/vec.c"
 $1371 = (($1368) + 4)|0; //@line 69 "mcbits/vec.c"
 $1372 = $1371; //@line 69 "mcbits/vec.c"
 $1373 = HEAP32[$1372>>2]|0; //@line 69 "mcbits/vec.c"
 $1374 = $1364 ^ $1370; //@line 69 "mcbits/vec.c"
 $1375 = $1367 ^ $1373; //@line 69 "mcbits/vec.c"
 $1376 = $64; //@line 69 "mcbits/vec.c"
 $1377 = $1376; //@line 69 "mcbits/vec.c"
 HEAP32[$1377>>2] = $1374; //@line 69 "mcbits/vec.c"
 $1378 = (($1376) + 4)|0; //@line 69 "mcbits/vec.c"
 $1379 = $1378; //@line 69 "mcbits/vec.c"
 HEAP32[$1379>>2] = $1375; //@line 69 "mcbits/vec.c"
 $1380 = $21; //@line 70 "mcbits/vec.c"
 $1381 = $1380; //@line 70 "mcbits/vec.c"
 $1382 = HEAP32[$1381>>2]|0; //@line 70 "mcbits/vec.c"
 $1383 = (($1380) + 4)|0; //@line 70 "mcbits/vec.c"
 $1384 = $1383; //@line 70 "mcbits/vec.c"
 $1385 = HEAP32[$1384>>2]|0; //@line 70 "mcbits/vec.c"
 $1386 = $17; //@line 70 "mcbits/vec.c"
 $1387 = $1386; //@line 70 "mcbits/vec.c"
 $1388 = HEAP32[$1387>>2]|0; //@line 70 "mcbits/vec.c"
 $1389 = (($1386) + 4)|0; //@line 70 "mcbits/vec.c"
 $1390 = $1389; //@line 70 "mcbits/vec.c"
 $1391 = HEAP32[$1390>>2]|0; //@line 70 "mcbits/vec.c"
 $1392 = $1382 ^ $1388; //@line 70 "mcbits/vec.c"
 $1393 = $1385 ^ $1391; //@line 70 "mcbits/vec.c"
 $1394 = $65; //@line 70 "mcbits/vec.c"
 $1395 = $1394; //@line 70 "mcbits/vec.c"
 HEAP32[$1395>>2] = $1392; //@line 70 "mcbits/vec.c"
 $1396 = (($1394) + 4)|0; //@line 70 "mcbits/vec.c"
 $1397 = $1396; //@line 70 "mcbits/vec.c"
 HEAP32[$1397>>2] = $1393; //@line 70 "mcbits/vec.c"
 $1398 = $5; //@line 71 "mcbits/vec.c"
 $1399 = ((($1398)) + 48|0); //@line 71 "mcbits/vec.c"
 $1400 = $1399; //@line 71 "mcbits/vec.c"
 $1401 = $1400; //@line 71 "mcbits/vec.c"
 $1402 = HEAP32[$1401>>2]|0; //@line 71 "mcbits/vec.c"
 $1403 = (($1400) + 4)|0; //@line 71 "mcbits/vec.c"
 $1404 = $1403; //@line 71 "mcbits/vec.c"
 $1405 = HEAP32[$1404>>2]|0; //@line 71 "mcbits/vec.c"
 $1406 = $5; //@line 71 "mcbits/vec.c"
 $1407 = ((($1406)) + 72|0); //@line 71 "mcbits/vec.c"
 $1408 = $1407; //@line 71 "mcbits/vec.c"
 $1409 = $1408; //@line 71 "mcbits/vec.c"
 $1410 = HEAP32[$1409>>2]|0; //@line 71 "mcbits/vec.c"
 $1411 = (($1408) + 4)|0; //@line 71 "mcbits/vec.c"
 $1412 = $1411; //@line 71 "mcbits/vec.c"
 $1413 = HEAP32[$1412>>2]|0; //@line 71 "mcbits/vec.c"
 $1414 = $1402 ^ $1410; //@line 71 "mcbits/vec.c"
 $1415 = $1405 ^ $1413; //@line 71 "mcbits/vec.c"
 $1416 = $66; //@line 71 "mcbits/vec.c"
 $1417 = $1416; //@line 71 "mcbits/vec.c"
 HEAP32[$1417>>2] = $1414; //@line 71 "mcbits/vec.c"
 $1418 = (($1416) + 4)|0; //@line 71 "mcbits/vec.c"
 $1419 = $1418; //@line 71 "mcbits/vec.c"
 HEAP32[$1419>>2] = $1415; //@line 71 "mcbits/vec.c"
 $1420 = $5; //@line 72 "mcbits/vec.c"
 $1421 = ((($1420)) + 56|0); //@line 72 "mcbits/vec.c"
 $1422 = $1421; //@line 72 "mcbits/vec.c"
 $1423 = $1422; //@line 72 "mcbits/vec.c"
 $1424 = HEAP32[$1423>>2]|0; //@line 72 "mcbits/vec.c"
 $1425 = (($1422) + 4)|0; //@line 72 "mcbits/vec.c"
 $1426 = $1425; //@line 72 "mcbits/vec.c"
 $1427 = HEAP32[$1426>>2]|0; //@line 72 "mcbits/vec.c"
 $1428 = $5; //@line 72 "mcbits/vec.c"
 $1429 = ((($1428)) + 80|0); //@line 72 "mcbits/vec.c"
 $1430 = $1429; //@line 72 "mcbits/vec.c"
 $1431 = $1430; //@line 72 "mcbits/vec.c"
 $1432 = HEAP32[$1431>>2]|0; //@line 72 "mcbits/vec.c"
 $1433 = (($1430) + 4)|0; //@line 72 "mcbits/vec.c"
 $1434 = $1433; //@line 72 "mcbits/vec.c"
 $1435 = HEAP32[$1434>>2]|0; //@line 72 "mcbits/vec.c"
 $1436 = $1424 ^ $1432; //@line 72 "mcbits/vec.c"
 $1437 = $1427 ^ $1435; //@line 72 "mcbits/vec.c"
 $1438 = $67; //@line 72 "mcbits/vec.c"
 $1439 = $1438; //@line 72 "mcbits/vec.c"
 HEAP32[$1439>>2] = $1436; //@line 72 "mcbits/vec.c"
 $1440 = (($1438) + 4)|0; //@line 72 "mcbits/vec.c"
 $1441 = $1440; //@line 72 "mcbits/vec.c"
 HEAP32[$1441>>2] = $1437; //@line 72 "mcbits/vec.c"
 $1442 = $5; //@line 73 "mcbits/vec.c"
 $1443 = ((($1442)) + 64|0); //@line 73 "mcbits/vec.c"
 $1444 = $1443; //@line 73 "mcbits/vec.c"
 $1445 = $1444; //@line 73 "mcbits/vec.c"
 $1446 = HEAP32[$1445>>2]|0; //@line 73 "mcbits/vec.c"
 $1447 = (($1444) + 4)|0; //@line 73 "mcbits/vec.c"
 $1448 = $1447; //@line 73 "mcbits/vec.c"
 $1449 = HEAP32[$1448>>2]|0; //@line 73 "mcbits/vec.c"
 $1450 = $5; //@line 73 "mcbits/vec.c"
 $1451 = ((($1450)) + 88|0); //@line 73 "mcbits/vec.c"
 $1452 = $1451; //@line 73 "mcbits/vec.c"
 $1453 = $1452; //@line 73 "mcbits/vec.c"
 $1454 = HEAP32[$1453>>2]|0; //@line 73 "mcbits/vec.c"
 $1455 = (($1452) + 4)|0; //@line 73 "mcbits/vec.c"
 $1456 = $1455; //@line 73 "mcbits/vec.c"
 $1457 = HEAP32[$1456>>2]|0; //@line 73 "mcbits/vec.c"
 $1458 = $1446 ^ $1454; //@line 73 "mcbits/vec.c"
 $1459 = $1449 ^ $1457; //@line 73 "mcbits/vec.c"
 $1460 = $68; //@line 73 "mcbits/vec.c"
 $1461 = $1460; //@line 73 "mcbits/vec.c"
 HEAP32[$1461>>2] = $1458; //@line 73 "mcbits/vec.c"
 $1462 = (($1460) + 4)|0; //@line 73 "mcbits/vec.c"
 $1463 = $1462; //@line 73 "mcbits/vec.c"
 HEAP32[$1463>>2] = $1459; //@line 73 "mcbits/vec.c"
 $1464 = $4; //@line 74 "mcbits/vec.c"
 $1465 = ((($1464)) + 48|0); //@line 74 "mcbits/vec.c"
 $1466 = $1465; //@line 74 "mcbits/vec.c"
 $1467 = $1466; //@line 74 "mcbits/vec.c"
 $1468 = HEAP32[$1467>>2]|0; //@line 74 "mcbits/vec.c"
 $1469 = (($1466) + 4)|0; //@line 74 "mcbits/vec.c"
 $1470 = $1469; //@line 74 "mcbits/vec.c"
 $1471 = HEAP32[$1470>>2]|0; //@line 74 "mcbits/vec.c"
 $1472 = $4; //@line 74 "mcbits/vec.c"
 $1473 = ((($1472)) + 72|0); //@line 74 "mcbits/vec.c"
 $1474 = $1473; //@line 74 "mcbits/vec.c"
 $1475 = $1474; //@line 74 "mcbits/vec.c"
 $1476 = HEAP32[$1475>>2]|0; //@line 74 "mcbits/vec.c"
 $1477 = (($1474) + 4)|0; //@line 74 "mcbits/vec.c"
 $1478 = $1477; //@line 74 "mcbits/vec.c"
 $1479 = HEAP32[$1478>>2]|0; //@line 74 "mcbits/vec.c"
 $1480 = $1468 ^ $1476; //@line 74 "mcbits/vec.c"
 $1481 = $1471 ^ $1479; //@line 74 "mcbits/vec.c"
 $1482 = $69; //@line 74 "mcbits/vec.c"
 $1483 = $1482; //@line 74 "mcbits/vec.c"
 HEAP32[$1483>>2] = $1480; //@line 74 "mcbits/vec.c"
 $1484 = (($1482) + 4)|0; //@line 74 "mcbits/vec.c"
 $1485 = $1484; //@line 74 "mcbits/vec.c"
 HEAP32[$1485>>2] = $1481; //@line 74 "mcbits/vec.c"
 $1486 = $4; //@line 75 "mcbits/vec.c"
 $1487 = ((($1486)) + 56|0); //@line 75 "mcbits/vec.c"
 $1488 = $1487; //@line 75 "mcbits/vec.c"
 $1489 = $1488; //@line 75 "mcbits/vec.c"
 $1490 = HEAP32[$1489>>2]|0; //@line 75 "mcbits/vec.c"
 $1491 = (($1488) + 4)|0; //@line 75 "mcbits/vec.c"
 $1492 = $1491; //@line 75 "mcbits/vec.c"
 $1493 = HEAP32[$1492>>2]|0; //@line 75 "mcbits/vec.c"
 $1494 = $4; //@line 75 "mcbits/vec.c"
 $1495 = ((($1494)) + 80|0); //@line 75 "mcbits/vec.c"
 $1496 = $1495; //@line 75 "mcbits/vec.c"
 $1497 = $1496; //@line 75 "mcbits/vec.c"
 $1498 = HEAP32[$1497>>2]|0; //@line 75 "mcbits/vec.c"
 $1499 = (($1496) + 4)|0; //@line 75 "mcbits/vec.c"
 $1500 = $1499; //@line 75 "mcbits/vec.c"
 $1501 = HEAP32[$1500>>2]|0; //@line 75 "mcbits/vec.c"
 $1502 = $1490 ^ $1498; //@line 75 "mcbits/vec.c"
 $1503 = $1493 ^ $1501; //@line 75 "mcbits/vec.c"
 $1504 = $70; //@line 75 "mcbits/vec.c"
 $1505 = $1504; //@line 75 "mcbits/vec.c"
 HEAP32[$1505>>2] = $1502; //@line 75 "mcbits/vec.c"
 $1506 = (($1504) + 4)|0; //@line 75 "mcbits/vec.c"
 $1507 = $1506; //@line 75 "mcbits/vec.c"
 HEAP32[$1507>>2] = $1503; //@line 75 "mcbits/vec.c"
 $1508 = $4; //@line 76 "mcbits/vec.c"
 $1509 = ((($1508)) + 64|0); //@line 76 "mcbits/vec.c"
 $1510 = $1509; //@line 76 "mcbits/vec.c"
 $1511 = $1510; //@line 76 "mcbits/vec.c"
 $1512 = HEAP32[$1511>>2]|0; //@line 76 "mcbits/vec.c"
 $1513 = (($1510) + 4)|0; //@line 76 "mcbits/vec.c"
 $1514 = $1513; //@line 76 "mcbits/vec.c"
 $1515 = HEAP32[$1514>>2]|0; //@line 76 "mcbits/vec.c"
 $1516 = $4; //@line 76 "mcbits/vec.c"
 $1517 = ((($1516)) + 88|0); //@line 76 "mcbits/vec.c"
 $1518 = $1517; //@line 76 "mcbits/vec.c"
 $1519 = $1518; //@line 76 "mcbits/vec.c"
 $1520 = HEAP32[$1519>>2]|0; //@line 76 "mcbits/vec.c"
 $1521 = (($1518) + 4)|0; //@line 76 "mcbits/vec.c"
 $1522 = $1521; //@line 76 "mcbits/vec.c"
 $1523 = HEAP32[$1522>>2]|0; //@line 76 "mcbits/vec.c"
 $1524 = $1512 ^ $1520; //@line 76 "mcbits/vec.c"
 $1525 = $1515 ^ $1523; //@line 76 "mcbits/vec.c"
 $1526 = $71; //@line 76 "mcbits/vec.c"
 $1527 = $1526; //@line 76 "mcbits/vec.c"
 HEAP32[$1527>>2] = $1524; //@line 76 "mcbits/vec.c"
 $1528 = (($1526) + 4)|0; //@line 76 "mcbits/vec.c"
 $1529 = $1528; //@line 76 "mcbits/vec.c"
 HEAP32[$1529>>2] = $1525; //@line 76 "mcbits/vec.c"
 $1530 = $71; //@line 77 "mcbits/vec.c"
 $1531 = $1530; //@line 77 "mcbits/vec.c"
 $1532 = HEAP32[$1531>>2]|0; //@line 77 "mcbits/vec.c"
 $1533 = (($1530) + 4)|0; //@line 77 "mcbits/vec.c"
 $1534 = $1533; //@line 77 "mcbits/vec.c"
 $1535 = HEAP32[$1534>>2]|0; //@line 77 "mcbits/vec.c"
 $1536 = $68; //@line 77 "mcbits/vec.c"
 $1537 = $1536; //@line 77 "mcbits/vec.c"
 $1538 = HEAP32[$1537>>2]|0; //@line 77 "mcbits/vec.c"
 $1539 = (($1536) + 4)|0; //@line 77 "mcbits/vec.c"
 $1540 = $1539; //@line 77 "mcbits/vec.c"
 $1541 = HEAP32[$1540>>2]|0; //@line 77 "mcbits/vec.c"
 $1542 = $1532 & $1538; //@line 77 "mcbits/vec.c"
 $1543 = $1535 & $1541; //@line 77 "mcbits/vec.c"
 $1544 = $72; //@line 77 "mcbits/vec.c"
 $1545 = $1544; //@line 77 "mcbits/vec.c"
 HEAP32[$1545>>2] = $1542; //@line 77 "mcbits/vec.c"
 $1546 = (($1544) + 4)|0; //@line 77 "mcbits/vec.c"
 $1547 = $1546; //@line 77 "mcbits/vec.c"
 HEAP32[$1547>>2] = $1543; //@line 77 "mcbits/vec.c"
 $1548 = $71; //@line 78 "mcbits/vec.c"
 $1549 = $1548; //@line 78 "mcbits/vec.c"
 $1550 = HEAP32[$1549>>2]|0; //@line 78 "mcbits/vec.c"
 $1551 = (($1548) + 4)|0; //@line 78 "mcbits/vec.c"
 $1552 = $1551; //@line 78 "mcbits/vec.c"
 $1553 = HEAP32[$1552>>2]|0; //@line 78 "mcbits/vec.c"
 $1554 = $66; //@line 78 "mcbits/vec.c"
 $1555 = $1554; //@line 78 "mcbits/vec.c"
 $1556 = HEAP32[$1555>>2]|0; //@line 78 "mcbits/vec.c"
 $1557 = (($1554) + 4)|0; //@line 78 "mcbits/vec.c"
 $1558 = $1557; //@line 78 "mcbits/vec.c"
 $1559 = HEAP32[$1558>>2]|0; //@line 78 "mcbits/vec.c"
 $1560 = $1550 & $1556; //@line 78 "mcbits/vec.c"
 $1561 = $1553 & $1559; //@line 78 "mcbits/vec.c"
 $1562 = $73; //@line 78 "mcbits/vec.c"
 $1563 = $1562; //@line 78 "mcbits/vec.c"
 HEAP32[$1563>>2] = $1560; //@line 78 "mcbits/vec.c"
 $1564 = (($1562) + 4)|0; //@line 78 "mcbits/vec.c"
 $1565 = $1564; //@line 78 "mcbits/vec.c"
 HEAP32[$1565>>2] = $1561; //@line 78 "mcbits/vec.c"
 $1566 = $71; //@line 79 "mcbits/vec.c"
 $1567 = $1566; //@line 79 "mcbits/vec.c"
 $1568 = HEAP32[$1567>>2]|0; //@line 79 "mcbits/vec.c"
 $1569 = (($1566) + 4)|0; //@line 79 "mcbits/vec.c"
 $1570 = $1569; //@line 79 "mcbits/vec.c"
 $1571 = HEAP32[$1570>>2]|0; //@line 79 "mcbits/vec.c"
 $1572 = $67; //@line 79 "mcbits/vec.c"
 $1573 = $1572; //@line 79 "mcbits/vec.c"
 $1574 = HEAP32[$1573>>2]|0; //@line 79 "mcbits/vec.c"
 $1575 = (($1572) + 4)|0; //@line 79 "mcbits/vec.c"
 $1576 = $1575; //@line 79 "mcbits/vec.c"
 $1577 = HEAP32[$1576>>2]|0; //@line 79 "mcbits/vec.c"
 $1578 = $1568 & $1574; //@line 79 "mcbits/vec.c"
 $1579 = $1571 & $1577; //@line 79 "mcbits/vec.c"
 $1580 = $74; //@line 79 "mcbits/vec.c"
 $1581 = $1580; //@line 79 "mcbits/vec.c"
 HEAP32[$1581>>2] = $1578; //@line 79 "mcbits/vec.c"
 $1582 = (($1580) + 4)|0; //@line 79 "mcbits/vec.c"
 $1583 = $1582; //@line 79 "mcbits/vec.c"
 HEAP32[$1583>>2] = $1579; //@line 79 "mcbits/vec.c"
 $1584 = $69; //@line 80 "mcbits/vec.c"
 $1585 = $1584; //@line 80 "mcbits/vec.c"
 $1586 = HEAP32[$1585>>2]|0; //@line 80 "mcbits/vec.c"
 $1587 = (($1584) + 4)|0; //@line 80 "mcbits/vec.c"
 $1588 = $1587; //@line 80 "mcbits/vec.c"
 $1589 = HEAP32[$1588>>2]|0; //@line 80 "mcbits/vec.c"
 $1590 = $68; //@line 80 "mcbits/vec.c"
 $1591 = $1590; //@line 80 "mcbits/vec.c"
 $1592 = HEAP32[$1591>>2]|0; //@line 80 "mcbits/vec.c"
 $1593 = (($1590) + 4)|0; //@line 80 "mcbits/vec.c"
 $1594 = $1593; //@line 80 "mcbits/vec.c"
 $1595 = HEAP32[$1594>>2]|0; //@line 80 "mcbits/vec.c"
 $1596 = $1586 & $1592; //@line 80 "mcbits/vec.c"
 $1597 = $1589 & $1595; //@line 80 "mcbits/vec.c"
 $1598 = $75; //@line 80 "mcbits/vec.c"
 $1599 = $1598; //@line 80 "mcbits/vec.c"
 HEAP32[$1599>>2] = $1596; //@line 80 "mcbits/vec.c"
 $1600 = (($1598) + 4)|0; //@line 80 "mcbits/vec.c"
 $1601 = $1600; //@line 80 "mcbits/vec.c"
 HEAP32[$1601>>2] = $1597; //@line 80 "mcbits/vec.c"
 $1602 = $70; //@line 81 "mcbits/vec.c"
 $1603 = $1602; //@line 81 "mcbits/vec.c"
 $1604 = HEAP32[$1603>>2]|0; //@line 81 "mcbits/vec.c"
 $1605 = (($1602) + 4)|0; //@line 81 "mcbits/vec.c"
 $1606 = $1605; //@line 81 "mcbits/vec.c"
 $1607 = HEAP32[$1606>>2]|0; //@line 81 "mcbits/vec.c"
 $1608 = $68; //@line 81 "mcbits/vec.c"
 $1609 = $1608; //@line 81 "mcbits/vec.c"
 $1610 = HEAP32[$1609>>2]|0; //@line 81 "mcbits/vec.c"
 $1611 = (($1608) + 4)|0; //@line 81 "mcbits/vec.c"
 $1612 = $1611; //@line 81 "mcbits/vec.c"
 $1613 = HEAP32[$1612>>2]|0; //@line 81 "mcbits/vec.c"
 $1614 = $1604 & $1610; //@line 81 "mcbits/vec.c"
 $1615 = $1607 & $1613; //@line 81 "mcbits/vec.c"
 $1616 = $76; //@line 81 "mcbits/vec.c"
 $1617 = $1616; //@line 81 "mcbits/vec.c"
 HEAP32[$1617>>2] = $1614; //@line 81 "mcbits/vec.c"
 $1618 = (($1616) + 4)|0; //@line 81 "mcbits/vec.c"
 $1619 = $1618; //@line 81 "mcbits/vec.c"
 HEAP32[$1619>>2] = $1615; //@line 81 "mcbits/vec.c"
 $1620 = $70; //@line 82 "mcbits/vec.c"
 $1621 = $1620; //@line 82 "mcbits/vec.c"
 $1622 = HEAP32[$1621>>2]|0; //@line 82 "mcbits/vec.c"
 $1623 = (($1620) + 4)|0; //@line 82 "mcbits/vec.c"
 $1624 = $1623; //@line 82 "mcbits/vec.c"
 $1625 = HEAP32[$1624>>2]|0; //@line 82 "mcbits/vec.c"
 $1626 = $67; //@line 82 "mcbits/vec.c"
 $1627 = $1626; //@line 82 "mcbits/vec.c"
 $1628 = HEAP32[$1627>>2]|0; //@line 82 "mcbits/vec.c"
 $1629 = (($1626) + 4)|0; //@line 82 "mcbits/vec.c"
 $1630 = $1629; //@line 82 "mcbits/vec.c"
 $1631 = HEAP32[$1630>>2]|0; //@line 82 "mcbits/vec.c"
 $1632 = $1622 & $1628; //@line 82 "mcbits/vec.c"
 $1633 = $1625 & $1631; //@line 82 "mcbits/vec.c"
 $1634 = $77; //@line 82 "mcbits/vec.c"
 $1635 = $1634; //@line 82 "mcbits/vec.c"
 HEAP32[$1635>>2] = $1632; //@line 82 "mcbits/vec.c"
 $1636 = (($1634) + 4)|0; //@line 82 "mcbits/vec.c"
 $1637 = $1636; //@line 82 "mcbits/vec.c"
 HEAP32[$1637>>2] = $1633; //@line 82 "mcbits/vec.c"
 $1638 = $70; //@line 83 "mcbits/vec.c"
 $1639 = $1638; //@line 83 "mcbits/vec.c"
 $1640 = HEAP32[$1639>>2]|0; //@line 83 "mcbits/vec.c"
 $1641 = (($1638) + 4)|0; //@line 83 "mcbits/vec.c"
 $1642 = $1641; //@line 83 "mcbits/vec.c"
 $1643 = HEAP32[$1642>>2]|0; //@line 83 "mcbits/vec.c"
 $1644 = $66; //@line 83 "mcbits/vec.c"
 $1645 = $1644; //@line 83 "mcbits/vec.c"
 $1646 = HEAP32[$1645>>2]|0; //@line 83 "mcbits/vec.c"
 $1647 = (($1644) + 4)|0; //@line 83 "mcbits/vec.c"
 $1648 = $1647; //@line 83 "mcbits/vec.c"
 $1649 = HEAP32[$1648>>2]|0; //@line 83 "mcbits/vec.c"
 $1650 = $1640 & $1646; //@line 83 "mcbits/vec.c"
 $1651 = $1643 & $1649; //@line 83 "mcbits/vec.c"
 $1652 = $78; //@line 83 "mcbits/vec.c"
 $1653 = $1652; //@line 83 "mcbits/vec.c"
 HEAP32[$1653>>2] = $1650; //@line 83 "mcbits/vec.c"
 $1654 = (($1652) + 4)|0; //@line 83 "mcbits/vec.c"
 $1655 = $1654; //@line 83 "mcbits/vec.c"
 HEAP32[$1655>>2] = $1651; //@line 83 "mcbits/vec.c"
 $1656 = $69; //@line 84 "mcbits/vec.c"
 $1657 = $1656; //@line 84 "mcbits/vec.c"
 $1658 = HEAP32[$1657>>2]|0; //@line 84 "mcbits/vec.c"
 $1659 = (($1656) + 4)|0; //@line 84 "mcbits/vec.c"
 $1660 = $1659; //@line 84 "mcbits/vec.c"
 $1661 = HEAP32[$1660>>2]|0; //@line 84 "mcbits/vec.c"
 $1662 = $67; //@line 84 "mcbits/vec.c"
 $1663 = $1662; //@line 84 "mcbits/vec.c"
 $1664 = HEAP32[$1663>>2]|0; //@line 84 "mcbits/vec.c"
 $1665 = (($1662) + 4)|0; //@line 84 "mcbits/vec.c"
 $1666 = $1665; //@line 84 "mcbits/vec.c"
 $1667 = HEAP32[$1666>>2]|0; //@line 84 "mcbits/vec.c"
 $1668 = $1658 & $1664; //@line 84 "mcbits/vec.c"
 $1669 = $1661 & $1667; //@line 84 "mcbits/vec.c"
 $1670 = $79; //@line 84 "mcbits/vec.c"
 $1671 = $1670; //@line 84 "mcbits/vec.c"
 HEAP32[$1671>>2] = $1668; //@line 84 "mcbits/vec.c"
 $1672 = (($1670) + 4)|0; //@line 84 "mcbits/vec.c"
 $1673 = $1672; //@line 84 "mcbits/vec.c"
 HEAP32[$1673>>2] = $1669; //@line 84 "mcbits/vec.c"
 $1674 = $69; //@line 85 "mcbits/vec.c"
 $1675 = $1674; //@line 85 "mcbits/vec.c"
 $1676 = HEAP32[$1675>>2]|0; //@line 85 "mcbits/vec.c"
 $1677 = (($1674) + 4)|0; //@line 85 "mcbits/vec.c"
 $1678 = $1677; //@line 85 "mcbits/vec.c"
 $1679 = HEAP32[$1678>>2]|0; //@line 85 "mcbits/vec.c"
 $1680 = $66; //@line 85 "mcbits/vec.c"
 $1681 = $1680; //@line 85 "mcbits/vec.c"
 $1682 = HEAP32[$1681>>2]|0; //@line 85 "mcbits/vec.c"
 $1683 = (($1680) + 4)|0; //@line 85 "mcbits/vec.c"
 $1684 = $1683; //@line 85 "mcbits/vec.c"
 $1685 = HEAP32[$1684>>2]|0; //@line 85 "mcbits/vec.c"
 $1686 = $1676 & $1682; //@line 85 "mcbits/vec.c"
 $1687 = $1679 & $1685; //@line 85 "mcbits/vec.c"
 $1688 = $80; //@line 85 "mcbits/vec.c"
 $1689 = $1688; //@line 85 "mcbits/vec.c"
 HEAP32[$1689>>2] = $1686; //@line 85 "mcbits/vec.c"
 $1690 = (($1688) + 4)|0; //@line 85 "mcbits/vec.c"
 $1691 = $1690; //@line 85 "mcbits/vec.c"
 HEAP32[$1691>>2] = $1687; //@line 85 "mcbits/vec.c"
 $1692 = $79; //@line 86 "mcbits/vec.c"
 $1693 = $1692; //@line 86 "mcbits/vec.c"
 $1694 = HEAP32[$1693>>2]|0; //@line 86 "mcbits/vec.c"
 $1695 = (($1692) + 4)|0; //@line 86 "mcbits/vec.c"
 $1696 = $1695; //@line 86 "mcbits/vec.c"
 $1697 = HEAP32[$1696>>2]|0; //@line 86 "mcbits/vec.c"
 $1698 = $78; //@line 86 "mcbits/vec.c"
 $1699 = $1698; //@line 86 "mcbits/vec.c"
 $1700 = HEAP32[$1699>>2]|0; //@line 86 "mcbits/vec.c"
 $1701 = (($1698) + 4)|0; //@line 86 "mcbits/vec.c"
 $1702 = $1701; //@line 86 "mcbits/vec.c"
 $1703 = HEAP32[$1702>>2]|0; //@line 86 "mcbits/vec.c"
 $1704 = $1694 ^ $1700; //@line 86 "mcbits/vec.c"
 $1705 = $1697 ^ $1703; //@line 86 "mcbits/vec.c"
 $1706 = $81; //@line 86 "mcbits/vec.c"
 $1707 = $1706; //@line 86 "mcbits/vec.c"
 HEAP32[$1707>>2] = $1704; //@line 86 "mcbits/vec.c"
 $1708 = (($1706) + 4)|0; //@line 86 "mcbits/vec.c"
 $1709 = $1708; //@line 86 "mcbits/vec.c"
 HEAP32[$1709>>2] = $1705; //@line 86 "mcbits/vec.c"
 $1710 = $77; //@line 87 "mcbits/vec.c"
 $1711 = $1710; //@line 87 "mcbits/vec.c"
 $1712 = HEAP32[$1711>>2]|0; //@line 87 "mcbits/vec.c"
 $1713 = (($1710) + 4)|0; //@line 87 "mcbits/vec.c"
 $1714 = $1713; //@line 87 "mcbits/vec.c"
 $1715 = HEAP32[$1714>>2]|0; //@line 87 "mcbits/vec.c"
 $1716 = $75; //@line 87 "mcbits/vec.c"
 $1717 = $1716; //@line 87 "mcbits/vec.c"
 $1718 = HEAP32[$1717>>2]|0; //@line 87 "mcbits/vec.c"
 $1719 = (($1716) + 4)|0; //@line 87 "mcbits/vec.c"
 $1720 = $1719; //@line 87 "mcbits/vec.c"
 $1721 = HEAP32[$1720>>2]|0; //@line 87 "mcbits/vec.c"
 $1722 = $1712 ^ $1718; //@line 87 "mcbits/vec.c"
 $1723 = $1715 ^ $1721; //@line 87 "mcbits/vec.c"
 $1724 = $82; //@line 87 "mcbits/vec.c"
 $1725 = $1724; //@line 87 "mcbits/vec.c"
 HEAP32[$1725>>2] = $1722; //@line 87 "mcbits/vec.c"
 $1726 = (($1724) + 4)|0; //@line 87 "mcbits/vec.c"
 $1727 = $1726; //@line 87 "mcbits/vec.c"
 HEAP32[$1727>>2] = $1723; //@line 87 "mcbits/vec.c"
 $1728 = $82; //@line 88 "mcbits/vec.c"
 $1729 = $1728; //@line 88 "mcbits/vec.c"
 $1730 = HEAP32[$1729>>2]|0; //@line 88 "mcbits/vec.c"
 $1731 = (($1728) + 4)|0; //@line 88 "mcbits/vec.c"
 $1732 = $1731; //@line 88 "mcbits/vec.c"
 $1733 = HEAP32[$1732>>2]|0; //@line 88 "mcbits/vec.c"
 $1734 = $73; //@line 88 "mcbits/vec.c"
 $1735 = $1734; //@line 88 "mcbits/vec.c"
 $1736 = HEAP32[$1735>>2]|0; //@line 88 "mcbits/vec.c"
 $1737 = (($1734) + 4)|0; //@line 88 "mcbits/vec.c"
 $1738 = $1737; //@line 88 "mcbits/vec.c"
 $1739 = HEAP32[$1738>>2]|0; //@line 88 "mcbits/vec.c"
 $1740 = $1730 ^ $1736; //@line 88 "mcbits/vec.c"
 $1741 = $1733 ^ $1739; //@line 88 "mcbits/vec.c"
 $1742 = $83; //@line 88 "mcbits/vec.c"
 $1743 = $1742; //@line 88 "mcbits/vec.c"
 HEAP32[$1743>>2] = $1740; //@line 88 "mcbits/vec.c"
 $1744 = (($1742) + 4)|0; //@line 88 "mcbits/vec.c"
 $1745 = $1744; //@line 88 "mcbits/vec.c"
 HEAP32[$1745>>2] = $1741; //@line 88 "mcbits/vec.c"
 $1746 = $76; //@line 89 "mcbits/vec.c"
 $1747 = $1746; //@line 89 "mcbits/vec.c"
 $1748 = HEAP32[$1747>>2]|0; //@line 89 "mcbits/vec.c"
 $1749 = (($1746) + 4)|0; //@line 89 "mcbits/vec.c"
 $1750 = $1749; //@line 89 "mcbits/vec.c"
 $1751 = HEAP32[$1750>>2]|0; //@line 89 "mcbits/vec.c"
 $1752 = $74; //@line 89 "mcbits/vec.c"
 $1753 = $1752; //@line 89 "mcbits/vec.c"
 $1754 = HEAP32[$1753>>2]|0; //@line 89 "mcbits/vec.c"
 $1755 = (($1752) + 4)|0; //@line 89 "mcbits/vec.c"
 $1756 = $1755; //@line 89 "mcbits/vec.c"
 $1757 = HEAP32[$1756>>2]|0; //@line 89 "mcbits/vec.c"
 $1758 = $1748 ^ $1754; //@line 89 "mcbits/vec.c"
 $1759 = $1751 ^ $1757; //@line 89 "mcbits/vec.c"
 $1760 = $84; //@line 89 "mcbits/vec.c"
 $1761 = $1760; //@line 89 "mcbits/vec.c"
 HEAP32[$1761>>2] = $1758; //@line 89 "mcbits/vec.c"
 $1762 = (($1760) + 4)|0; //@line 89 "mcbits/vec.c"
 $1763 = $1762; //@line 89 "mcbits/vec.c"
 HEAP32[$1763>>2] = $1759; //@line 89 "mcbits/vec.c"
 $1764 = $5; //@line 90 "mcbits/vec.c"
 $1765 = $1764; //@line 90 "mcbits/vec.c"
 $1766 = $1765; //@line 90 "mcbits/vec.c"
 $1767 = HEAP32[$1766>>2]|0; //@line 90 "mcbits/vec.c"
 $1768 = (($1765) + 4)|0; //@line 90 "mcbits/vec.c"
 $1769 = $1768; //@line 90 "mcbits/vec.c"
 $1770 = HEAP32[$1769>>2]|0; //@line 90 "mcbits/vec.c"
 $1771 = $5; //@line 90 "mcbits/vec.c"
 $1772 = ((($1771)) + 24|0); //@line 90 "mcbits/vec.c"
 $1773 = $1772; //@line 90 "mcbits/vec.c"
 $1774 = $1773; //@line 90 "mcbits/vec.c"
 $1775 = HEAP32[$1774>>2]|0; //@line 90 "mcbits/vec.c"
 $1776 = (($1773) + 4)|0; //@line 90 "mcbits/vec.c"
 $1777 = $1776; //@line 90 "mcbits/vec.c"
 $1778 = HEAP32[$1777>>2]|0; //@line 90 "mcbits/vec.c"
 $1779 = $1767 ^ $1775; //@line 90 "mcbits/vec.c"
 $1780 = $1770 ^ $1778; //@line 90 "mcbits/vec.c"
 $1781 = $85; //@line 90 "mcbits/vec.c"
 $1782 = $1781; //@line 90 "mcbits/vec.c"
 HEAP32[$1782>>2] = $1779; //@line 90 "mcbits/vec.c"
 $1783 = (($1781) + 4)|0; //@line 90 "mcbits/vec.c"
 $1784 = $1783; //@line 90 "mcbits/vec.c"
 HEAP32[$1784>>2] = $1780; //@line 90 "mcbits/vec.c"
 $1785 = $5; //@line 91 "mcbits/vec.c"
 $1786 = ((($1785)) + 8|0); //@line 91 "mcbits/vec.c"
 $1787 = $1786; //@line 91 "mcbits/vec.c"
 $1788 = $1787; //@line 91 "mcbits/vec.c"
 $1789 = HEAP32[$1788>>2]|0; //@line 91 "mcbits/vec.c"
 $1790 = (($1787) + 4)|0; //@line 91 "mcbits/vec.c"
 $1791 = $1790; //@line 91 "mcbits/vec.c"
 $1792 = HEAP32[$1791>>2]|0; //@line 91 "mcbits/vec.c"
 $1793 = $5; //@line 91 "mcbits/vec.c"
 $1794 = ((($1793)) + 32|0); //@line 91 "mcbits/vec.c"
 $1795 = $1794; //@line 91 "mcbits/vec.c"
 $1796 = $1795; //@line 91 "mcbits/vec.c"
 $1797 = HEAP32[$1796>>2]|0; //@line 91 "mcbits/vec.c"
 $1798 = (($1795) + 4)|0; //@line 91 "mcbits/vec.c"
 $1799 = $1798; //@line 91 "mcbits/vec.c"
 $1800 = HEAP32[$1799>>2]|0; //@line 91 "mcbits/vec.c"
 $1801 = $1789 ^ $1797; //@line 91 "mcbits/vec.c"
 $1802 = $1792 ^ $1800; //@line 91 "mcbits/vec.c"
 $1803 = $86; //@line 91 "mcbits/vec.c"
 $1804 = $1803; //@line 91 "mcbits/vec.c"
 HEAP32[$1804>>2] = $1801; //@line 91 "mcbits/vec.c"
 $1805 = (($1803) + 4)|0; //@line 91 "mcbits/vec.c"
 $1806 = $1805; //@line 91 "mcbits/vec.c"
 HEAP32[$1806>>2] = $1802; //@line 91 "mcbits/vec.c"
 $1807 = $5; //@line 92 "mcbits/vec.c"
 $1808 = ((($1807)) + 16|0); //@line 92 "mcbits/vec.c"
 $1809 = $1808; //@line 92 "mcbits/vec.c"
 $1810 = $1809; //@line 92 "mcbits/vec.c"
 $1811 = HEAP32[$1810>>2]|0; //@line 92 "mcbits/vec.c"
 $1812 = (($1809) + 4)|0; //@line 92 "mcbits/vec.c"
 $1813 = $1812; //@line 92 "mcbits/vec.c"
 $1814 = HEAP32[$1813>>2]|0; //@line 92 "mcbits/vec.c"
 $1815 = $5; //@line 92 "mcbits/vec.c"
 $1816 = ((($1815)) + 40|0); //@line 92 "mcbits/vec.c"
 $1817 = $1816; //@line 92 "mcbits/vec.c"
 $1818 = $1817; //@line 92 "mcbits/vec.c"
 $1819 = HEAP32[$1818>>2]|0; //@line 92 "mcbits/vec.c"
 $1820 = (($1817) + 4)|0; //@line 92 "mcbits/vec.c"
 $1821 = $1820; //@line 92 "mcbits/vec.c"
 $1822 = HEAP32[$1821>>2]|0; //@line 92 "mcbits/vec.c"
 $1823 = $1811 ^ $1819; //@line 92 "mcbits/vec.c"
 $1824 = $1814 ^ $1822; //@line 92 "mcbits/vec.c"
 $1825 = $87; //@line 92 "mcbits/vec.c"
 $1826 = $1825; //@line 92 "mcbits/vec.c"
 HEAP32[$1826>>2] = $1823; //@line 92 "mcbits/vec.c"
 $1827 = (($1825) + 4)|0; //@line 92 "mcbits/vec.c"
 $1828 = $1827; //@line 92 "mcbits/vec.c"
 HEAP32[$1828>>2] = $1824; //@line 92 "mcbits/vec.c"
 $1829 = $4; //@line 93 "mcbits/vec.c"
 $1830 = $1829; //@line 93 "mcbits/vec.c"
 $1831 = $1830; //@line 93 "mcbits/vec.c"
 $1832 = HEAP32[$1831>>2]|0; //@line 93 "mcbits/vec.c"
 $1833 = (($1830) + 4)|0; //@line 93 "mcbits/vec.c"
 $1834 = $1833; //@line 93 "mcbits/vec.c"
 $1835 = HEAP32[$1834>>2]|0; //@line 93 "mcbits/vec.c"
 $1836 = $4; //@line 93 "mcbits/vec.c"
 $1837 = ((($1836)) + 24|0); //@line 93 "mcbits/vec.c"
 $1838 = $1837; //@line 93 "mcbits/vec.c"
 $1839 = $1838; //@line 93 "mcbits/vec.c"
 $1840 = HEAP32[$1839>>2]|0; //@line 93 "mcbits/vec.c"
 $1841 = (($1838) + 4)|0; //@line 93 "mcbits/vec.c"
 $1842 = $1841; //@line 93 "mcbits/vec.c"
 $1843 = HEAP32[$1842>>2]|0; //@line 93 "mcbits/vec.c"
 $1844 = $1832 ^ $1840; //@line 93 "mcbits/vec.c"
 $1845 = $1835 ^ $1843; //@line 93 "mcbits/vec.c"
 $1846 = $88; //@line 93 "mcbits/vec.c"
 $1847 = $1846; //@line 93 "mcbits/vec.c"
 HEAP32[$1847>>2] = $1844; //@line 93 "mcbits/vec.c"
 $1848 = (($1846) + 4)|0; //@line 93 "mcbits/vec.c"
 $1849 = $1848; //@line 93 "mcbits/vec.c"
 HEAP32[$1849>>2] = $1845; //@line 93 "mcbits/vec.c"
 $1850 = $4; //@line 94 "mcbits/vec.c"
 $1851 = ((($1850)) + 8|0); //@line 94 "mcbits/vec.c"
 $1852 = $1851; //@line 94 "mcbits/vec.c"
 $1853 = $1852; //@line 94 "mcbits/vec.c"
 $1854 = HEAP32[$1853>>2]|0; //@line 94 "mcbits/vec.c"
 $1855 = (($1852) + 4)|0; //@line 94 "mcbits/vec.c"
 $1856 = $1855; //@line 94 "mcbits/vec.c"
 $1857 = HEAP32[$1856>>2]|0; //@line 94 "mcbits/vec.c"
 $1858 = $4; //@line 94 "mcbits/vec.c"
 $1859 = ((($1858)) + 32|0); //@line 94 "mcbits/vec.c"
 $1860 = $1859; //@line 94 "mcbits/vec.c"
 $1861 = $1860; //@line 94 "mcbits/vec.c"
 $1862 = HEAP32[$1861>>2]|0; //@line 94 "mcbits/vec.c"
 $1863 = (($1860) + 4)|0; //@line 94 "mcbits/vec.c"
 $1864 = $1863; //@line 94 "mcbits/vec.c"
 $1865 = HEAP32[$1864>>2]|0; //@line 94 "mcbits/vec.c"
 $1866 = $1854 ^ $1862; //@line 94 "mcbits/vec.c"
 $1867 = $1857 ^ $1865; //@line 94 "mcbits/vec.c"
 $1868 = $89; //@line 94 "mcbits/vec.c"
 $1869 = $1868; //@line 94 "mcbits/vec.c"
 HEAP32[$1869>>2] = $1866; //@line 94 "mcbits/vec.c"
 $1870 = (($1868) + 4)|0; //@line 94 "mcbits/vec.c"
 $1871 = $1870; //@line 94 "mcbits/vec.c"
 HEAP32[$1871>>2] = $1867; //@line 94 "mcbits/vec.c"
 $1872 = $4; //@line 95 "mcbits/vec.c"
 $1873 = ((($1872)) + 16|0); //@line 95 "mcbits/vec.c"
 $1874 = $1873; //@line 95 "mcbits/vec.c"
 $1875 = $1874; //@line 95 "mcbits/vec.c"
 $1876 = HEAP32[$1875>>2]|0; //@line 95 "mcbits/vec.c"
 $1877 = (($1874) + 4)|0; //@line 95 "mcbits/vec.c"
 $1878 = $1877; //@line 95 "mcbits/vec.c"
 $1879 = HEAP32[$1878>>2]|0; //@line 95 "mcbits/vec.c"
 $1880 = $4; //@line 95 "mcbits/vec.c"
 $1881 = ((($1880)) + 40|0); //@line 95 "mcbits/vec.c"
 $1882 = $1881; //@line 95 "mcbits/vec.c"
 $1883 = $1882; //@line 95 "mcbits/vec.c"
 $1884 = HEAP32[$1883>>2]|0; //@line 95 "mcbits/vec.c"
 $1885 = (($1882) + 4)|0; //@line 95 "mcbits/vec.c"
 $1886 = $1885; //@line 95 "mcbits/vec.c"
 $1887 = HEAP32[$1886>>2]|0; //@line 95 "mcbits/vec.c"
 $1888 = $1876 ^ $1884; //@line 95 "mcbits/vec.c"
 $1889 = $1879 ^ $1887; //@line 95 "mcbits/vec.c"
 $1890 = $90; //@line 95 "mcbits/vec.c"
 $1891 = $1890; //@line 95 "mcbits/vec.c"
 HEAP32[$1891>>2] = $1888; //@line 95 "mcbits/vec.c"
 $1892 = (($1890) + 4)|0; //@line 95 "mcbits/vec.c"
 $1893 = $1892; //@line 95 "mcbits/vec.c"
 HEAP32[$1893>>2] = $1889; //@line 95 "mcbits/vec.c"
 $1894 = $90; //@line 96 "mcbits/vec.c"
 $1895 = $1894; //@line 96 "mcbits/vec.c"
 $1896 = HEAP32[$1895>>2]|0; //@line 96 "mcbits/vec.c"
 $1897 = (($1894) + 4)|0; //@line 96 "mcbits/vec.c"
 $1898 = $1897; //@line 96 "mcbits/vec.c"
 $1899 = HEAP32[$1898>>2]|0; //@line 96 "mcbits/vec.c"
 $1900 = $87; //@line 96 "mcbits/vec.c"
 $1901 = $1900; //@line 96 "mcbits/vec.c"
 $1902 = HEAP32[$1901>>2]|0; //@line 96 "mcbits/vec.c"
 $1903 = (($1900) + 4)|0; //@line 96 "mcbits/vec.c"
 $1904 = $1903; //@line 96 "mcbits/vec.c"
 $1905 = HEAP32[$1904>>2]|0; //@line 96 "mcbits/vec.c"
 $1906 = $1896 & $1902; //@line 96 "mcbits/vec.c"
 $1907 = $1899 & $1905; //@line 96 "mcbits/vec.c"
 $1908 = $91; //@line 96 "mcbits/vec.c"
 $1909 = $1908; //@line 96 "mcbits/vec.c"
 HEAP32[$1909>>2] = $1906; //@line 96 "mcbits/vec.c"
 $1910 = (($1908) + 4)|0; //@line 96 "mcbits/vec.c"
 $1911 = $1910; //@line 96 "mcbits/vec.c"
 HEAP32[$1911>>2] = $1907; //@line 96 "mcbits/vec.c"
 $1912 = $90; //@line 97 "mcbits/vec.c"
 $1913 = $1912; //@line 97 "mcbits/vec.c"
 $1914 = HEAP32[$1913>>2]|0; //@line 97 "mcbits/vec.c"
 $1915 = (($1912) + 4)|0; //@line 97 "mcbits/vec.c"
 $1916 = $1915; //@line 97 "mcbits/vec.c"
 $1917 = HEAP32[$1916>>2]|0; //@line 97 "mcbits/vec.c"
 $1918 = $85; //@line 97 "mcbits/vec.c"
 $1919 = $1918; //@line 97 "mcbits/vec.c"
 $1920 = HEAP32[$1919>>2]|0; //@line 97 "mcbits/vec.c"
 $1921 = (($1918) + 4)|0; //@line 97 "mcbits/vec.c"
 $1922 = $1921; //@line 97 "mcbits/vec.c"
 $1923 = HEAP32[$1922>>2]|0; //@line 97 "mcbits/vec.c"
 $1924 = $1914 & $1920; //@line 97 "mcbits/vec.c"
 $1925 = $1917 & $1923; //@line 97 "mcbits/vec.c"
 $1926 = $92; //@line 97 "mcbits/vec.c"
 $1927 = $1926; //@line 97 "mcbits/vec.c"
 HEAP32[$1927>>2] = $1924; //@line 97 "mcbits/vec.c"
 $1928 = (($1926) + 4)|0; //@line 97 "mcbits/vec.c"
 $1929 = $1928; //@line 97 "mcbits/vec.c"
 HEAP32[$1929>>2] = $1925; //@line 97 "mcbits/vec.c"
 $1930 = $90; //@line 98 "mcbits/vec.c"
 $1931 = $1930; //@line 98 "mcbits/vec.c"
 $1932 = HEAP32[$1931>>2]|0; //@line 98 "mcbits/vec.c"
 $1933 = (($1930) + 4)|0; //@line 98 "mcbits/vec.c"
 $1934 = $1933; //@line 98 "mcbits/vec.c"
 $1935 = HEAP32[$1934>>2]|0; //@line 98 "mcbits/vec.c"
 $1936 = $86; //@line 98 "mcbits/vec.c"
 $1937 = $1936; //@line 98 "mcbits/vec.c"
 $1938 = HEAP32[$1937>>2]|0; //@line 98 "mcbits/vec.c"
 $1939 = (($1936) + 4)|0; //@line 98 "mcbits/vec.c"
 $1940 = $1939; //@line 98 "mcbits/vec.c"
 $1941 = HEAP32[$1940>>2]|0; //@line 98 "mcbits/vec.c"
 $1942 = $1932 & $1938; //@line 98 "mcbits/vec.c"
 $1943 = $1935 & $1941; //@line 98 "mcbits/vec.c"
 $1944 = $93; //@line 98 "mcbits/vec.c"
 $1945 = $1944; //@line 98 "mcbits/vec.c"
 HEAP32[$1945>>2] = $1942; //@line 98 "mcbits/vec.c"
 $1946 = (($1944) + 4)|0; //@line 98 "mcbits/vec.c"
 $1947 = $1946; //@line 98 "mcbits/vec.c"
 HEAP32[$1947>>2] = $1943; //@line 98 "mcbits/vec.c"
 $1948 = $88; //@line 99 "mcbits/vec.c"
 $1949 = $1948; //@line 99 "mcbits/vec.c"
 $1950 = HEAP32[$1949>>2]|0; //@line 99 "mcbits/vec.c"
 $1951 = (($1948) + 4)|0; //@line 99 "mcbits/vec.c"
 $1952 = $1951; //@line 99 "mcbits/vec.c"
 $1953 = HEAP32[$1952>>2]|0; //@line 99 "mcbits/vec.c"
 $1954 = $87; //@line 99 "mcbits/vec.c"
 $1955 = $1954; //@line 99 "mcbits/vec.c"
 $1956 = HEAP32[$1955>>2]|0; //@line 99 "mcbits/vec.c"
 $1957 = (($1954) + 4)|0; //@line 99 "mcbits/vec.c"
 $1958 = $1957; //@line 99 "mcbits/vec.c"
 $1959 = HEAP32[$1958>>2]|0; //@line 99 "mcbits/vec.c"
 $1960 = $1950 & $1956; //@line 99 "mcbits/vec.c"
 $1961 = $1953 & $1959; //@line 99 "mcbits/vec.c"
 $1962 = $94; //@line 99 "mcbits/vec.c"
 $1963 = $1962; //@line 99 "mcbits/vec.c"
 HEAP32[$1963>>2] = $1960; //@line 99 "mcbits/vec.c"
 $1964 = (($1962) + 4)|0; //@line 99 "mcbits/vec.c"
 $1965 = $1964; //@line 99 "mcbits/vec.c"
 HEAP32[$1965>>2] = $1961; //@line 99 "mcbits/vec.c"
 $1966 = $89; //@line 100 "mcbits/vec.c"
 $1967 = $1966; //@line 100 "mcbits/vec.c"
 $1968 = HEAP32[$1967>>2]|0; //@line 100 "mcbits/vec.c"
 $1969 = (($1966) + 4)|0; //@line 100 "mcbits/vec.c"
 $1970 = $1969; //@line 100 "mcbits/vec.c"
 $1971 = HEAP32[$1970>>2]|0; //@line 100 "mcbits/vec.c"
 $1972 = $87; //@line 100 "mcbits/vec.c"
 $1973 = $1972; //@line 100 "mcbits/vec.c"
 $1974 = HEAP32[$1973>>2]|0; //@line 100 "mcbits/vec.c"
 $1975 = (($1972) + 4)|0; //@line 100 "mcbits/vec.c"
 $1976 = $1975; //@line 100 "mcbits/vec.c"
 $1977 = HEAP32[$1976>>2]|0; //@line 100 "mcbits/vec.c"
 $1978 = $1968 & $1974; //@line 100 "mcbits/vec.c"
 $1979 = $1971 & $1977; //@line 100 "mcbits/vec.c"
 $1980 = $95; //@line 100 "mcbits/vec.c"
 $1981 = $1980; //@line 100 "mcbits/vec.c"
 HEAP32[$1981>>2] = $1978; //@line 100 "mcbits/vec.c"
 $1982 = (($1980) + 4)|0; //@line 100 "mcbits/vec.c"
 $1983 = $1982; //@line 100 "mcbits/vec.c"
 HEAP32[$1983>>2] = $1979; //@line 100 "mcbits/vec.c"
 $1984 = $89; //@line 101 "mcbits/vec.c"
 $1985 = $1984; //@line 101 "mcbits/vec.c"
 $1986 = HEAP32[$1985>>2]|0; //@line 101 "mcbits/vec.c"
 $1987 = (($1984) + 4)|0; //@line 101 "mcbits/vec.c"
 $1988 = $1987; //@line 101 "mcbits/vec.c"
 $1989 = HEAP32[$1988>>2]|0; //@line 101 "mcbits/vec.c"
 $1990 = $86; //@line 101 "mcbits/vec.c"
 $1991 = $1990; //@line 101 "mcbits/vec.c"
 $1992 = HEAP32[$1991>>2]|0; //@line 101 "mcbits/vec.c"
 $1993 = (($1990) + 4)|0; //@line 101 "mcbits/vec.c"
 $1994 = $1993; //@line 101 "mcbits/vec.c"
 $1995 = HEAP32[$1994>>2]|0; //@line 101 "mcbits/vec.c"
 $1996 = $1986 & $1992; //@line 101 "mcbits/vec.c"
 $1997 = $1989 & $1995; //@line 101 "mcbits/vec.c"
 $1998 = $96; //@line 101 "mcbits/vec.c"
 $1999 = $1998; //@line 101 "mcbits/vec.c"
 HEAP32[$1999>>2] = $1996; //@line 101 "mcbits/vec.c"
 $2000 = (($1998) + 4)|0; //@line 101 "mcbits/vec.c"
 $2001 = $2000; //@line 101 "mcbits/vec.c"
 HEAP32[$2001>>2] = $1997; //@line 101 "mcbits/vec.c"
 $2002 = $89; //@line 102 "mcbits/vec.c"
 $2003 = $2002; //@line 102 "mcbits/vec.c"
 $2004 = HEAP32[$2003>>2]|0; //@line 102 "mcbits/vec.c"
 $2005 = (($2002) + 4)|0; //@line 102 "mcbits/vec.c"
 $2006 = $2005; //@line 102 "mcbits/vec.c"
 $2007 = HEAP32[$2006>>2]|0; //@line 102 "mcbits/vec.c"
 $2008 = $85; //@line 102 "mcbits/vec.c"
 $2009 = $2008; //@line 102 "mcbits/vec.c"
 $2010 = HEAP32[$2009>>2]|0; //@line 102 "mcbits/vec.c"
 $2011 = (($2008) + 4)|0; //@line 102 "mcbits/vec.c"
 $2012 = $2011; //@line 102 "mcbits/vec.c"
 $2013 = HEAP32[$2012>>2]|0; //@line 102 "mcbits/vec.c"
 $2014 = $2004 & $2010; //@line 102 "mcbits/vec.c"
 $2015 = $2007 & $2013; //@line 102 "mcbits/vec.c"
 $2016 = $97; //@line 102 "mcbits/vec.c"
 $2017 = $2016; //@line 102 "mcbits/vec.c"
 HEAP32[$2017>>2] = $2014; //@line 102 "mcbits/vec.c"
 $2018 = (($2016) + 4)|0; //@line 102 "mcbits/vec.c"
 $2019 = $2018; //@line 102 "mcbits/vec.c"
 HEAP32[$2019>>2] = $2015; //@line 102 "mcbits/vec.c"
 $2020 = $88; //@line 103 "mcbits/vec.c"
 $2021 = $2020; //@line 103 "mcbits/vec.c"
 $2022 = HEAP32[$2021>>2]|0; //@line 103 "mcbits/vec.c"
 $2023 = (($2020) + 4)|0; //@line 103 "mcbits/vec.c"
 $2024 = $2023; //@line 103 "mcbits/vec.c"
 $2025 = HEAP32[$2024>>2]|0; //@line 103 "mcbits/vec.c"
 $2026 = $86; //@line 103 "mcbits/vec.c"
 $2027 = $2026; //@line 103 "mcbits/vec.c"
 $2028 = HEAP32[$2027>>2]|0; //@line 103 "mcbits/vec.c"
 $2029 = (($2026) + 4)|0; //@line 103 "mcbits/vec.c"
 $2030 = $2029; //@line 103 "mcbits/vec.c"
 $2031 = HEAP32[$2030>>2]|0; //@line 103 "mcbits/vec.c"
 $2032 = $2022 & $2028; //@line 103 "mcbits/vec.c"
 $2033 = $2025 & $2031; //@line 103 "mcbits/vec.c"
 $2034 = $98; //@line 103 "mcbits/vec.c"
 $2035 = $2034; //@line 103 "mcbits/vec.c"
 HEAP32[$2035>>2] = $2032; //@line 103 "mcbits/vec.c"
 $2036 = (($2034) + 4)|0; //@line 103 "mcbits/vec.c"
 $2037 = $2036; //@line 103 "mcbits/vec.c"
 HEAP32[$2037>>2] = $2033; //@line 103 "mcbits/vec.c"
 $2038 = $88; //@line 104 "mcbits/vec.c"
 $2039 = $2038; //@line 104 "mcbits/vec.c"
 $2040 = HEAP32[$2039>>2]|0; //@line 104 "mcbits/vec.c"
 $2041 = (($2038) + 4)|0; //@line 104 "mcbits/vec.c"
 $2042 = $2041; //@line 104 "mcbits/vec.c"
 $2043 = HEAP32[$2042>>2]|0; //@line 104 "mcbits/vec.c"
 $2044 = $85; //@line 104 "mcbits/vec.c"
 $2045 = $2044; //@line 104 "mcbits/vec.c"
 $2046 = HEAP32[$2045>>2]|0; //@line 104 "mcbits/vec.c"
 $2047 = (($2044) + 4)|0; //@line 104 "mcbits/vec.c"
 $2048 = $2047; //@line 104 "mcbits/vec.c"
 $2049 = HEAP32[$2048>>2]|0; //@line 104 "mcbits/vec.c"
 $2050 = $2040 & $2046; //@line 104 "mcbits/vec.c"
 $2051 = $2043 & $2049; //@line 104 "mcbits/vec.c"
 $2052 = $99; //@line 104 "mcbits/vec.c"
 $2053 = $2052; //@line 104 "mcbits/vec.c"
 HEAP32[$2053>>2] = $2050; //@line 104 "mcbits/vec.c"
 $2054 = (($2052) + 4)|0; //@line 104 "mcbits/vec.c"
 $2055 = $2054; //@line 104 "mcbits/vec.c"
 HEAP32[$2055>>2] = $2051; //@line 104 "mcbits/vec.c"
 $2056 = $98; //@line 105 "mcbits/vec.c"
 $2057 = $2056; //@line 105 "mcbits/vec.c"
 $2058 = HEAP32[$2057>>2]|0; //@line 105 "mcbits/vec.c"
 $2059 = (($2056) + 4)|0; //@line 105 "mcbits/vec.c"
 $2060 = $2059; //@line 105 "mcbits/vec.c"
 $2061 = HEAP32[$2060>>2]|0; //@line 105 "mcbits/vec.c"
 $2062 = $97; //@line 105 "mcbits/vec.c"
 $2063 = $2062; //@line 105 "mcbits/vec.c"
 $2064 = HEAP32[$2063>>2]|0; //@line 105 "mcbits/vec.c"
 $2065 = (($2062) + 4)|0; //@line 105 "mcbits/vec.c"
 $2066 = $2065; //@line 105 "mcbits/vec.c"
 $2067 = HEAP32[$2066>>2]|0; //@line 105 "mcbits/vec.c"
 $2068 = $2058 ^ $2064; //@line 105 "mcbits/vec.c"
 $2069 = $2061 ^ $2067; //@line 105 "mcbits/vec.c"
 $2070 = $100; //@line 105 "mcbits/vec.c"
 $2071 = $2070; //@line 105 "mcbits/vec.c"
 HEAP32[$2071>>2] = $2068; //@line 105 "mcbits/vec.c"
 $2072 = (($2070) + 4)|0; //@line 105 "mcbits/vec.c"
 $2073 = $2072; //@line 105 "mcbits/vec.c"
 HEAP32[$2073>>2] = $2069; //@line 105 "mcbits/vec.c"
 $2074 = $96; //@line 106 "mcbits/vec.c"
 $2075 = $2074; //@line 106 "mcbits/vec.c"
 $2076 = HEAP32[$2075>>2]|0; //@line 106 "mcbits/vec.c"
 $2077 = (($2074) + 4)|0; //@line 106 "mcbits/vec.c"
 $2078 = $2077; //@line 106 "mcbits/vec.c"
 $2079 = HEAP32[$2078>>2]|0; //@line 106 "mcbits/vec.c"
 $2080 = $94; //@line 106 "mcbits/vec.c"
 $2081 = $2080; //@line 106 "mcbits/vec.c"
 $2082 = HEAP32[$2081>>2]|0; //@line 106 "mcbits/vec.c"
 $2083 = (($2080) + 4)|0; //@line 106 "mcbits/vec.c"
 $2084 = $2083; //@line 106 "mcbits/vec.c"
 $2085 = HEAP32[$2084>>2]|0; //@line 106 "mcbits/vec.c"
 $2086 = $2076 ^ $2082; //@line 106 "mcbits/vec.c"
 $2087 = $2079 ^ $2085; //@line 106 "mcbits/vec.c"
 $2088 = $101; //@line 106 "mcbits/vec.c"
 $2089 = $2088; //@line 106 "mcbits/vec.c"
 HEAP32[$2089>>2] = $2086; //@line 106 "mcbits/vec.c"
 $2090 = (($2088) + 4)|0; //@line 106 "mcbits/vec.c"
 $2091 = $2090; //@line 106 "mcbits/vec.c"
 HEAP32[$2091>>2] = $2087; //@line 106 "mcbits/vec.c"
 $2092 = $101; //@line 107 "mcbits/vec.c"
 $2093 = $2092; //@line 107 "mcbits/vec.c"
 $2094 = HEAP32[$2093>>2]|0; //@line 107 "mcbits/vec.c"
 $2095 = (($2092) + 4)|0; //@line 107 "mcbits/vec.c"
 $2096 = $2095; //@line 107 "mcbits/vec.c"
 $2097 = HEAP32[$2096>>2]|0; //@line 107 "mcbits/vec.c"
 $2098 = $92; //@line 107 "mcbits/vec.c"
 $2099 = $2098; //@line 107 "mcbits/vec.c"
 $2100 = HEAP32[$2099>>2]|0; //@line 107 "mcbits/vec.c"
 $2101 = (($2098) + 4)|0; //@line 107 "mcbits/vec.c"
 $2102 = $2101; //@line 107 "mcbits/vec.c"
 $2103 = HEAP32[$2102>>2]|0; //@line 107 "mcbits/vec.c"
 $2104 = $2094 ^ $2100; //@line 107 "mcbits/vec.c"
 $2105 = $2097 ^ $2103; //@line 107 "mcbits/vec.c"
 $2106 = $102; //@line 107 "mcbits/vec.c"
 $2107 = $2106; //@line 107 "mcbits/vec.c"
 HEAP32[$2107>>2] = $2104; //@line 107 "mcbits/vec.c"
 $2108 = (($2106) + 4)|0; //@line 107 "mcbits/vec.c"
 $2109 = $2108; //@line 107 "mcbits/vec.c"
 HEAP32[$2109>>2] = $2105; //@line 107 "mcbits/vec.c"
 $2110 = $95; //@line 108 "mcbits/vec.c"
 $2111 = $2110; //@line 108 "mcbits/vec.c"
 $2112 = HEAP32[$2111>>2]|0; //@line 108 "mcbits/vec.c"
 $2113 = (($2110) + 4)|0; //@line 108 "mcbits/vec.c"
 $2114 = $2113; //@line 108 "mcbits/vec.c"
 $2115 = HEAP32[$2114>>2]|0; //@line 108 "mcbits/vec.c"
 $2116 = $93; //@line 108 "mcbits/vec.c"
 $2117 = $2116; //@line 108 "mcbits/vec.c"
 $2118 = HEAP32[$2117>>2]|0; //@line 108 "mcbits/vec.c"
 $2119 = (($2116) + 4)|0; //@line 108 "mcbits/vec.c"
 $2120 = $2119; //@line 108 "mcbits/vec.c"
 $2121 = HEAP32[$2120>>2]|0; //@line 108 "mcbits/vec.c"
 $2122 = $2112 ^ $2118; //@line 108 "mcbits/vec.c"
 $2123 = $2115 ^ $2121; //@line 108 "mcbits/vec.c"
 $2124 = $103; //@line 108 "mcbits/vec.c"
 $2125 = $2124; //@line 108 "mcbits/vec.c"
 HEAP32[$2125>>2] = $2122; //@line 108 "mcbits/vec.c"
 $2126 = (($2124) + 4)|0; //@line 108 "mcbits/vec.c"
 $2127 = $2126; //@line 108 "mcbits/vec.c"
 HEAP32[$2127>>2] = $2123; //@line 108 "mcbits/vec.c"
 $2128 = $60; //@line 109 "mcbits/vec.c"
 $2129 = $2128; //@line 109 "mcbits/vec.c"
 $2130 = HEAP32[$2129>>2]|0; //@line 109 "mcbits/vec.c"
 $2131 = (($2128) + 4)|0; //@line 109 "mcbits/vec.c"
 $2132 = $2131; //@line 109 "mcbits/vec.c"
 $2133 = HEAP32[$2132>>2]|0; //@line 109 "mcbits/vec.c"
 $2134 = $55; //@line 109 "mcbits/vec.c"
 $2135 = $2134; //@line 109 "mcbits/vec.c"
 $2136 = HEAP32[$2135>>2]|0; //@line 109 "mcbits/vec.c"
 $2137 = (($2134) + 4)|0; //@line 109 "mcbits/vec.c"
 $2138 = $2137; //@line 109 "mcbits/vec.c"
 $2139 = HEAP32[$2138>>2]|0; //@line 109 "mcbits/vec.c"
 $2140 = $2130 ^ $2136; //@line 109 "mcbits/vec.c"
 $2141 = $2133 ^ $2139; //@line 109 "mcbits/vec.c"
 $2142 = $104; //@line 109 "mcbits/vec.c"
 $2143 = $2142; //@line 109 "mcbits/vec.c"
 HEAP32[$2143>>2] = $2140; //@line 109 "mcbits/vec.c"
 $2144 = (($2142) + 4)|0; //@line 109 "mcbits/vec.c"
 $2145 = $2144; //@line 109 "mcbits/vec.c"
 HEAP32[$2145>>2] = $2141; //@line 109 "mcbits/vec.c"
 $2146 = $61; //@line 110 "mcbits/vec.c"
 $2147 = $2146; //@line 110 "mcbits/vec.c"
 $2148 = HEAP32[$2147>>2]|0; //@line 110 "mcbits/vec.c"
 $2149 = (($2146) + 4)|0; //@line 110 "mcbits/vec.c"
 $2150 = $2149; //@line 110 "mcbits/vec.c"
 $2151 = HEAP32[$2150>>2]|0; //@line 110 "mcbits/vec.c"
 $2152 = $56; //@line 110 "mcbits/vec.c"
 $2153 = $2152; //@line 110 "mcbits/vec.c"
 $2154 = HEAP32[$2153>>2]|0; //@line 110 "mcbits/vec.c"
 $2155 = (($2152) + 4)|0; //@line 110 "mcbits/vec.c"
 $2156 = $2155; //@line 110 "mcbits/vec.c"
 $2157 = HEAP32[$2156>>2]|0; //@line 110 "mcbits/vec.c"
 $2158 = $2148 ^ $2154; //@line 110 "mcbits/vec.c"
 $2159 = $2151 ^ $2157; //@line 110 "mcbits/vec.c"
 $2160 = $105; //@line 110 "mcbits/vec.c"
 $2161 = $2160; //@line 110 "mcbits/vec.c"
 HEAP32[$2161>>2] = $2158; //@line 110 "mcbits/vec.c"
 $2162 = (($2160) + 4)|0; //@line 110 "mcbits/vec.c"
 $2163 = $2162; //@line 110 "mcbits/vec.c"
 HEAP32[$2163>>2] = $2159; //@line 110 "mcbits/vec.c"
 $2164 = $45; //@line 111 "mcbits/vec.c"
 $2165 = $2164; //@line 111 "mcbits/vec.c"
 $2166 = HEAP32[$2165>>2]|0; //@line 111 "mcbits/vec.c"
 $2167 = (($2164) + 4)|0; //@line 111 "mcbits/vec.c"
 $2168 = $2167; //@line 111 "mcbits/vec.c"
 $2169 = HEAP32[$2168>>2]|0; //@line 111 "mcbits/vec.c"
 $2170 = $58; //@line 111 "mcbits/vec.c"
 $2171 = $2170; //@line 111 "mcbits/vec.c"
 $2172 = HEAP32[$2171>>2]|0; //@line 111 "mcbits/vec.c"
 $2173 = (($2170) + 4)|0; //@line 111 "mcbits/vec.c"
 $2174 = $2173; //@line 111 "mcbits/vec.c"
 $2175 = HEAP32[$2174>>2]|0; //@line 111 "mcbits/vec.c"
 $2176 = $2166 ^ $2172; //@line 111 "mcbits/vec.c"
 $2177 = $2169 ^ $2175; //@line 111 "mcbits/vec.c"
 $2178 = $106; //@line 111 "mcbits/vec.c"
 $2179 = $2178; //@line 111 "mcbits/vec.c"
 HEAP32[$2179>>2] = $2176; //@line 111 "mcbits/vec.c"
 $2180 = (($2178) + 4)|0; //@line 111 "mcbits/vec.c"
 $2181 = $2180; //@line 111 "mcbits/vec.c"
 HEAP32[$2181>>2] = $2177; //@line 111 "mcbits/vec.c"
 $2182 = $62; //@line 112 "mcbits/vec.c"
 $2183 = $2182; //@line 112 "mcbits/vec.c"
 $2184 = HEAP32[$2183>>2]|0; //@line 112 "mcbits/vec.c"
 $2185 = (($2182) + 4)|0; //@line 112 "mcbits/vec.c"
 $2186 = $2185; //@line 112 "mcbits/vec.c"
 $2187 = HEAP32[$2186>>2]|0; //@line 112 "mcbits/vec.c"
 $2188 = $60; //@line 112 "mcbits/vec.c"
 $2189 = $2188; //@line 112 "mcbits/vec.c"
 $2190 = HEAP32[$2189>>2]|0; //@line 112 "mcbits/vec.c"
 $2191 = (($2188) + 4)|0; //@line 112 "mcbits/vec.c"
 $2192 = $2191; //@line 112 "mcbits/vec.c"
 $2193 = HEAP32[$2192>>2]|0; //@line 112 "mcbits/vec.c"
 $2194 = $2184 ^ $2190; //@line 112 "mcbits/vec.c"
 $2195 = $2187 ^ $2193; //@line 112 "mcbits/vec.c"
 $2196 = $107; //@line 112 "mcbits/vec.c"
 $2197 = $2196; //@line 112 "mcbits/vec.c"
 HEAP32[$2197>>2] = $2194; //@line 112 "mcbits/vec.c"
 $2198 = (($2196) + 4)|0; //@line 112 "mcbits/vec.c"
 $2199 = $2198; //@line 112 "mcbits/vec.c"
 HEAP32[$2199>>2] = $2195; //@line 112 "mcbits/vec.c"
 $2200 = $63; //@line 113 "mcbits/vec.c"
 $2201 = $2200; //@line 113 "mcbits/vec.c"
 $2202 = HEAP32[$2201>>2]|0; //@line 113 "mcbits/vec.c"
 $2203 = (($2200) + 4)|0; //@line 113 "mcbits/vec.c"
 $2204 = $2203; //@line 113 "mcbits/vec.c"
 $2205 = HEAP32[$2204>>2]|0; //@line 113 "mcbits/vec.c"
 $2206 = $61; //@line 113 "mcbits/vec.c"
 $2207 = $2206; //@line 113 "mcbits/vec.c"
 $2208 = HEAP32[$2207>>2]|0; //@line 113 "mcbits/vec.c"
 $2209 = (($2206) + 4)|0; //@line 113 "mcbits/vec.c"
 $2210 = $2209; //@line 113 "mcbits/vec.c"
 $2211 = HEAP32[$2210>>2]|0; //@line 113 "mcbits/vec.c"
 $2212 = $2202 ^ $2208; //@line 113 "mcbits/vec.c"
 $2213 = $2205 ^ $2211; //@line 113 "mcbits/vec.c"
 $2214 = $108; //@line 113 "mcbits/vec.c"
 $2215 = $2214; //@line 113 "mcbits/vec.c"
 HEAP32[$2215>>2] = $2212; //@line 113 "mcbits/vec.c"
 $2216 = (($2214) + 4)|0; //@line 113 "mcbits/vec.c"
 $2217 = $2216; //@line 113 "mcbits/vec.c"
 HEAP32[$2217>>2] = $2213; //@line 113 "mcbits/vec.c"
 $2218 = $32; //@line 114 "mcbits/vec.c"
 $2219 = $2218; //@line 114 "mcbits/vec.c"
 $2220 = HEAP32[$2219>>2]|0; //@line 114 "mcbits/vec.c"
 $2221 = (($2218) + 4)|0; //@line 114 "mcbits/vec.c"
 $2222 = $2221; //@line 114 "mcbits/vec.c"
 $2223 = HEAP32[$2222>>2]|0; //@line 114 "mcbits/vec.c"
 $2224 = $45; //@line 114 "mcbits/vec.c"
 $2225 = $2224; //@line 114 "mcbits/vec.c"
 $2226 = HEAP32[$2225>>2]|0; //@line 114 "mcbits/vec.c"
 $2227 = (($2224) + 4)|0; //@line 114 "mcbits/vec.c"
 $2228 = $2227; //@line 114 "mcbits/vec.c"
 $2229 = HEAP32[$2228>>2]|0; //@line 114 "mcbits/vec.c"
 $2230 = $2220 ^ $2226; //@line 114 "mcbits/vec.c"
 $2231 = $2223 ^ $2229; //@line 114 "mcbits/vec.c"
 $2232 = $109; //@line 114 "mcbits/vec.c"
 $2233 = $2232; //@line 114 "mcbits/vec.c"
 HEAP32[$2233>>2] = $2230; //@line 114 "mcbits/vec.c"
 $2234 = (($2232) + 4)|0; //@line 114 "mcbits/vec.c"
 $2235 = $2234; //@line 114 "mcbits/vec.c"
 HEAP32[$2235>>2] = $2231; //@line 114 "mcbits/vec.c"
 $2236 = $64; //@line 115 "mcbits/vec.c"
 $2237 = $2236; //@line 115 "mcbits/vec.c"
 $2238 = HEAP32[$2237>>2]|0; //@line 115 "mcbits/vec.c"
 $2239 = (($2236) + 4)|0; //@line 115 "mcbits/vec.c"
 $2240 = $2239; //@line 115 "mcbits/vec.c"
 $2241 = HEAP32[$2240>>2]|0; //@line 115 "mcbits/vec.c"
 $2242 = $62; //@line 115 "mcbits/vec.c"
 $2243 = $2242; //@line 115 "mcbits/vec.c"
 $2244 = HEAP32[$2243>>2]|0; //@line 115 "mcbits/vec.c"
 $2245 = (($2242) + 4)|0; //@line 115 "mcbits/vec.c"
 $2246 = $2245; //@line 115 "mcbits/vec.c"
 $2247 = HEAP32[$2246>>2]|0; //@line 115 "mcbits/vec.c"
 $2248 = $2238 ^ $2244; //@line 115 "mcbits/vec.c"
 $2249 = $2241 ^ $2247; //@line 115 "mcbits/vec.c"
 $2250 = $110; //@line 115 "mcbits/vec.c"
 $2251 = $2250; //@line 115 "mcbits/vec.c"
 HEAP32[$2251>>2] = $2248; //@line 115 "mcbits/vec.c"
 $2252 = (($2250) + 4)|0; //@line 115 "mcbits/vec.c"
 $2253 = $2252; //@line 115 "mcbits/vec.c"
 HEAP32[$2253>>2] = $2249; //@line 115 "mcbits/vec.c"
 $2254 = $65; //@line 116 "mcbits/vec.c"
 $2255 = $2254; //@line 116 "mcbits/vec.c"
 $2256 = HEAP32[$2255>>2]|0; //@line 116 "mcbits/vec.c"
 $2257 = (($2254) + 4)|0; //@line 116 "mcbits/vec.c"
 $2258 = $2257; //@line 116 "mcbits/vec.c"
 $2259 = HEAP32[$2258>>2]|0; //@line 116 "mcbits/vec.c"
 $2260 = $63; //@line 116 "mcbits/vec.c"
 $2261 = $2260; //@line 116 "mcbits/vec.c"
 $2262 = HEAP32[$2261>>2]|0; //@line 116 "mcbits/vec.c"
 $2263 = (($2260) + 4)|0; //@line 116 "mcbits/vec.c"
 $2264 = $2263; //@line 116 "mcbits/vec.c"
 $2265 = HEAP32[$2264>>2]|0; //@line 116 "mcbits/vec.c"
 $2266 = $2256 ^ $2262; //@line 116 "mcbits/vec.c"
 $2267 = $2259 ^ $2265; //@line 116 "mcbits/vec.c"
 $2268 = $111; //@line 116 "mcbits/vec.c"
 $2269 = $2268; //@line 116 "mcbits/vec.c"
 HEAP32[$2269>>2] = $2266; //@line 116 "mcbits/vec.c"
 $2270 = (($2268) + 4)|0; //@line 116 "mcbits/vec.c"
 $2271 = $2270; //@line 116 "mcbits/vec.c"
 HEAP32[$2271>>2] = $2267; //@line 116 "mcbits/vec.c"
 $2272 = $19; //@line 117 "mcbits/vec.c"
 $2273 = $2272; //@line 117 "mcbits/vec.c"
 $2274 = HEAP32[$2273>>2]|0; //@line 117 "mcbits/vec.c"
 $2275 = (($2272) + 4)|0; //@line 117 "mcbits/vec.c"
 $2276 = $2275; //@line 117 "mcbits/vec.c"
 $2277 = HEAP32[$2276>>2]|0; //@line 117 "mcbits/vec.c"
 $2278 = $32; //@line 117 "mcbits/vec.c"
 $2279 = $2278; //@line 117 "mcbits/vec.c"
 $2280 = HEAP32[$2279>>2]|0; //@line 117 "mcbits/vec.c"
 $2281 = (($2278) + 4)|0; //@line 117 "mcbits/vec.c"
 $2282 = $2281; //@line 117 "mcbits/vec.c"
 $2283 = HEAP32[$2282>>2]|0; //@line 117 "mcbits/vec.c"
 $2284 = $2274 ^ $2280; //@line 117 "mcbits/vec.c"
 $2285 = $2277 ^ $2283; //@line 117 "mcbits/vec.c"
 $2286 = $112; //@line 117 "mcbits/vec.c"
 $2287 = $2286; //@line 117 "mcbits/vec.c"
 HEAP32[$2287>>2] = $2284; //@line 117 "mcbits/vec.c"
 $2288 = (($2286) + 4)|0; //@line 117 "mcbits/vec.c"
 $2289 = $2288; //@line 117 "mcbits/vec.c"
 HEAP32[$2289>>2] = $2285; //@line 117 "mcbits/vec.c"
 $2290 = $20; //@line 118 "mcbits/vec.c"
 $2291 = $2290; //@line 118 "mcbits/vec.c"
 $2292 = HEAP32[$2291>>2]|0; //@line 118 "mcbits/vec.c"
 $2293 = (($2290) + 4)|0; //@line 118 "mcbits/vec.c"
 $2294 = $2293; //@line 118 "mcbits/vec.c"
 $2295 = HEAP32[$2294>>2]|0; //@line 118 "mcbits/vec.c"
 $2296 = $64; //@line 118 "mcbits/vec.c"
 $2297 = $2296; //@line 118 "mcbits/vec.c"
 $2298 = HEAP32[$2297>>2]|0; //@line 118 "mcbits/vec.c"
 $2299 = (($2296) + 4)|0; //@line 118 "mcbits/vec.c"
 $2300 = $2299; //@line 118 "mcbits/vec.c"
 $2301 = HEAP32[$2300>>2]|0; //@line 118 "mcbits/vec.c"
 $2302 = $2292 ^ $2298; //@line 118 "mcbits/vec.c"
 $2303 = $2295 ^ $2301; //@line 118 "mcbits/vec.c"
 $2304 = $113; //@line 118 "mcbits/vec.c"
 $2305 = $2304; //@line 118 "mcbits/vec.c"
 HEAP32[$2305>>2] = $2302; //@line 118 "mcbits/vec.c"
 $2306 = (($2304) + 4)|0; //@line 118 "mcbits/vec.c"
 $2307 = $2306; //@line 118 "mcbits/vec.c"
 HEAP32[$2307>>2] = $2303; //@line 118 "mcbits/vec.c"
 $2308 = $8; //@line 119 "mcbits/vec.c"
 $2309 = $2308; //@line 119 "mcbits/vec.c"
 $2310 = HEAP32[$2309>>2]|0; //@line 119 "mcbits/vec.c"
 $2311 = (($2308) + 4)|0; //@line 119 "mcbits/vec.c"
 $2312 = $2311; //@line 119 "mcbits/vec.c"
 $2313 = HEAP32[$2312>>2]|0; //@line 119 "mcbits/vec.c"
 $2314 = $65; //@line 119 "mcbits/vec.c"
 $2315 = $2314; //@line 119 "mcbits/vec.c"
 $2316 = HEAP32[$2315>>2]|0; //@line 119 "mcbits/vec.c"
 $2317 = (($2314) + 4)|0; //@line 119 "mcbits/vec.c"
 $2318 = $2317; //@line 119 "mcbits/vec.c"
 $2319 = HEAP32[$2318>>2]|0; //@line 119 "mcbits/vec.c"
 $2320 = $2310 ^ $2316; //@line 119 "mcbits/vec.c"
 $2321 = $2313 ^ $2319; //@line 119 "mcbits/vec.c"
 $2322 = $114; //@line 119 "mcbits/vec.c"
 $2323 = $2322; //@line 119 "mcbits/vec.c"
 HEAP32[$2323>>2] = $2320; //@line 119 "mcbits/vec.c"
 $2324 = (($2322) + 4)|0; //@line 119 "mcbits/vec.c"
 $2325 = $2324; //@line 119 "mcbits/vec.c"
 HEAP32[$2325>>2] = $2321; //@line 119 "mcbits/vec.c"
 $2326 = $104; //@line 120 "mcbits/vec.c"
 $2327 = $2326; //@line 120 "mcbits/vec.c"
 $2328 = HEAP32[$2327>>2]|0; //@line 120 "mcbits/vec.c"
 $2329 = (($2326) + 4)|0; //@line 120 "mcbits/vec.c"
 $2330 = $2329; //@line 120 "mcbits/vec.c"
 $2331 = HEAP32[$2330>>2]|0; //@line 120 "mcbits/vec.c"
 $2332 = $99; //@line 120 "mcbits/vec.c"
 $2333 = $2332; //@line 120 "mcbits/vec.c"
 $2334 = HEAP32[$2333>>2]|0; //@line 120 "mcbits/vec.c"
 $2335 = (($2332) + 4)|0; //@line 120 "mcbits/vec.c"
 $2336 = $2335; //@line 120 "mcbits/vec.c"
 $2337 = HEAP32[$2336>>2]|0; //@line 120 "mcbits/vec.c"
 $2338 = $2328 ^ $2334; //@line 120 "mcbits/vec.c"
 $2339 = $2331 ^ $2337; //@line 120 "mcbits/vec.c"
 $2340 = $115; //@line 120 "mcbits/vec.c"
 $2341 = $2340; //@line 120 "mcbits/vec.c"
 HEAP32[$2341>>2] = $2338; //@line 120 "mcbits/vec.c"
 $2342 = (($2340) + 4)|0; //@line 120 "mcbits/vec.c"
 $2343 = $2342; //@line 120 "mcbits/vec.c"
 HEAP32[$2343>>2] = $2339; //@line 120 "mcbits/vec.c"
 $2344 = $105; //@line 121 "mcbits/vec.c"
 $2345 = $2344; //@line 121 "mcbits/vec.c"
 $2346 = HEAP32[$2345>>2]|0; //@line 121 "mcbits/vec.c"
 $2347 = (($2344) + 4)|0; //@line 121 "mcbits/vec.c"
 $2348 = $2347; //@line 121 "mcbits/vec.c"
 $2349 = HEAP32[$2348>>2]|0; //@line 121 "mcbits/vec.c"
 $2350 = $100; //@line 121 "mcbits/vec.c"
 $2351 = $2350; //@line 121 "mcbits/vec.c"
 $2352 = HEAP32[$2351>>2]|0; //@line 121 "mcbits/vec.c"
 $2353 = (($2350) + 4)|0; //@line 121 "mcbits/vec.c"
 $2354 = $2353; //@line 121 "mcbits/vec.c"
 $2355 = HEAP32[$2354>>2]|0; //@line 121 "mcbits/vec.c"
 $2356 = $2346 ^ $2352; //@line 121 "mcbits/vec.c"
 $2357 = $2349 ^ $2355; //@line 121 "mcbits/vec.c"
 $2358 = $116; //@line 121 "mcbits/vec.c"
 $2359 = $2358; //@line 121 "mcbits/vec.c"
 HEAP32[$2359>>2] = $2356; //@line 121 "mcbits/vec.c"
 $2360 = (($2358) + 4)|0; //@line 121 "mcbits/vec.c"
 $2361 = $2360; //@line 121 "mcbits/vec.c"
 HEAP32[$2361>>2] = $2357; //@line 121 "mcbits/vec.c"
 $2362 = $106; //@line 122 "mcbits/vec.c"
 $2363 = $2362; //@line 122 "mcbits/vec.c"
 $2364 = HEAP32[$2363>>2]|0; //@line 122 "mcbits/vec.c"
 $2365 = (($2362) + 4)|0; //@line 122 "mcbits/vec.c"
 $2366 = $2365; //@line 122 "mcbits/vec.c"
 $2367 = HEAP32[$2366>>2]|0; //@line 122 "mcbits/vec.c"
 $2368 = $102; //@line 122 "mcbits/vec.c"
 $2369 = $2368; //@line 122 "mcbits/vec.c"
 $2370 = HEAP32[$2369>>2]|0; //@line 122 "mcbits/vec.c"
 $2371 = (($2368) + 4)|0; //@line 122 "mcbits/vec.c"
 $2372 = $2371; //@line 122 "mcbits/vec.c"
 $2373 = HEAP32[$2372>>2]|0; //@line 122 "mcbits/vec.c"
 $2374 = $2364 ^ $2370; //@line 122 "mcbits/vec.c"
 $2375 = $2367 ^ $2373; //@line 122 "mcbits/vec.c"
 $2376 = $117; //@line 122 "mcbits/vec.c"
 $2377 = $2376; //@line 122 "mcbits/vec.c"
 HEAP32[$2377>>2] = $2374; //@line 122 "mcbits/vec.c"
 $2378 = (($2376) + 4)|0; //@line 122 "mcbits/vec.c"
 $2379 = $2378; //@line 122 "mcbits/vec.c"
 HEAP32[$2379>>2] = $2375; //@line 122 "mcbits/vec.c"
 $2380 = $107; //@line 123 "mcbits/vec.c"
 $2381 = $2380; //@line 123 "mcbits/vec.c"
 $2382 = HEAP32[$2381>>2]|0; //@line 123 "mcbits/vec.c"
 $2383 = (($2380) + 4)|0; //@line 123 "mcbits/vec.c"
 $2384 = $2383; //@line 123 "mcbits/vec.c"
 $2385 = HEAP32[$2384>>2]|0; //@line 123 "mcbits/vec.c"
 $2386 = $103; //@line 123 "mcbits/vec.c"
 $2387 = $2386; //@line 123 "mcbits/vec.c"
 $2388 = HEAP32[$2387>>2]|0; //@line 123 "mcbits/vec.c"
 $2389 = (($2386) + 4)|0; //@line 123 "mcbits/vec.c"
 $2390 = $2389; //@line 123 "mcbits/vec.c"
 $2391 = HEAP32[$2390>>2]|0; //@line 123 "mcbits/vec.c"
 $2392 = $2382 ^ $2388; //@line 123 "mcbits/vec.c"
 $2393 = $2385 ^ $2391; //@line 123 "mcbits/vec.c"
 $2394 = $118; //@line 123 "mcbits/vec.c"
 $2395 = $2394; //@line 123 "mcbits/vec.c"
 HEAP32[$2395>>2] = $2392; //@line 123 "mcbits/vec.c"
 $2396 = (($2394) + 4)|0; //@line 123 "mcbits/vec.c"
 $2397 = $2396; //@line 123 "mcbits/vec.c"
 HEAP32[$2397>>2] = $2393; //@line 123 "mcbits/vec.c"
 $2398 = $108; //@line 124 "mcbits/vec.c"
 $2399 = $2398; //@line 124 "mcbits/vec.c"
 $2400 = HEAP32[$2399>>2]|0; //@line 124 "mcbits/vec.c"
 $2401 = (($2398) + 4)|0; //@line 124 "mcbits/vec.c"
 $2402 = $2401; //@line 124 "mcbits/vec.c"
 $2403 = HEAP32[$2402>>2]|0; //@line 124 "mcbits/vec.c"
 $2404 = $91; //@line 124 "mcbits/vec.c"
 $2405 = $2404; //@line 124 "mcbits/vec.c"
 $2406 = HEAP32[$2405>>2]|0; //@line 124 "mcbits/vec.c"
 $2407 = (($2404) + 4)|0; //@line 124 "mcbits/vec.c"
 $2408 = $2407; //@line 124 "mcbits/vec.c"
 $2409 = HEAP32[$2408>>2]|0; //@line 124 "mcbits/vec.c"
 $2410 = $2400 ^ $2406; //@line 124 "mcbits/vec.c"
 $2411 = $2403 ^ $2409; //@line 124 "mcbits/vec.c"
 $2412 = $119; //@line 124 "mcbits/vec.c"
 $2413 = $2412; //@line 124 "mcbits/vec.c"
 HEAP32[$2413>>2] = $2410; //@line 124 "mcbits/vec.c"
 $2414 = (($2412) + 4)|0; //@line 124 "mcbits/vec.c"
 $2415 = $2414; //@line 124 "mcbits/vec.c"
 HEAP32[$2415>>2] = $2411; //@line 124 "mcbits/vec.c"
 $2416 = $110; //@line 125 "mcbits/vec.c"
 $2417 = $2416; //@line 125 "mcbits/vec.c"
 $2418 = HEAP32[$2417>>2]|0; //@line 125 "mcbits/vec.c"
 $2419 = (($2416) + 4)|0; //@line 125 "mcbits/vec.c"
 $2420 = $2419; //@line 125 "mcbits/vec.c"
 $2421 = HEAP32[$2420>>2]|0; //@line 125 "mcbits/vec.c"
 $2422 = $80; //@line 125 "mcbits/vec.c"
 $2423 = $2422; //@line 125 "mcbits/vec.c"
 $2424 = HEAP32[$2423>>2]|0; //@line 125 "mcbits/vec.c"
 $2425 = (($2422) + 4)|0; //@line 125 "mcbits/vec.c"
 $2426 = $2425; //@line 125 "mcbits/vec.c"
 $2427 = HEAP32[$2426>>2]|0; //@line 125 "mcbits/vec.c"
 $2428 = $2418 ^ $2424; //@line 125 "mcbits/vec.c"
 $2429 = $2421 ^ $2427; //@line 125 "mcbits/vec.c"
 $2430 = $120; //@line 125 "mcbits/vec.c"
 $2431 = $2430; //@line 125 "mcbits/vec.c"
 HEAP32[$2431>>2] = $2428; //@line 125 "mcbits/vec.c"
 $2432 = (($2430) + 4)|0; //@line 125 "mcbits/vec.c"
 $2433 = $2432; //@line 125 "mcbits/vec.c"
 HEAP32[$2433>>2] = $2429; //@line 125 "mcbits/vec.c"
 $2434 = $111; //@line 126 "mcbits/vec.c"
 $2435 = $2434; //@line 126 "mcbits/vec.c"
 $2436 = HEAP32[$2435>>2]|0; //@line 126 "mcbits/vec.c"
 $2437 = (($2434) + 4)|0; //@line 126 "mcbits/vec.c"
 $2438 = $2437; //@line 126 "mcbits/vec.c"
 $2439 = HEAP32[$2438>>2]|0; //@line 126 "mcbits/vec.c"
 $2440 = $81; //@line 126 "mcbits/vec.c"
 $2441 = $2440; //@line 126 "mcbits/vec.c"
 $2442 = HEAP32[$2441>>2]|0; //@line 126 "mcbits/vec.c"
 $2443 = (($2440) + 4)|0; //@line 126 "mcbits/vec.c"
 $2444 = $2443; //@line 126 "mcbits/vec.c"
 $2445 = HEAP32[$2444>>2]|0; //@line 126 "mcbits/vec.c"
 $2446 = $2436 ^ $2442; //@line 126 "mcbits/vec.c"
 $2447 = $2439 ^ $2445; //@line 126 "mcbits/vec.c"
 $2448 = $121; //@line 126 "mcbits/vec.c"
 $2449 = $2448; //@line 126 "mcbits/vec.c"
 HEAP32[$2449>>2] = $2446; //@line 126 "mcbits/vec.c"
 $2450 = (($2448) + 4)|0; //@line 126 "mcbits/vec.c"
 $2451 = $2450; //@line 126 "mcbits/vec.c"
 HEAP32[$2451>>2] = $2447; //@line 126 "mcbits/vec.c"
 $2452 = $112; //@line 127 "mcbits/vec.c"
 $2453 = $2452; //@line 127 "mcbits/vec.c"
 $2454 = HEAP32[$2453>>2]|0; //@line 127 "mcbits/vec.c"
 $2455 = (($2452) + 4)|0; //@line 127 "mcbits/vec.c"
 $2456 = $2455; //@line 127 "mcbits/vec.c"
 $2457 = HEAP32[$2456>>2]|0; //@line 127 "mcbits/vec.c"
 $2458 = $83; //@line 127 "mcbits/vec.c"
 $2459 = $2458; //@line 127 "mcbits/vec.c"
 $2460 = HEAP32[$2459>>2]|0; //@line 127 "mcbits/vec.c"
 $2461 = (($2458) + 4)|0; //@line 127 "mcbits/vec.c"
 $2462 = $2461; //@line 127 "mcbits/vec.c"
 $2463 = HEAP32[$2462>>2]|0; //@line 127 "mcbits/vec.c"
 $2464 = $2454 ^ $2460; //@line 127 "mcbits/vec.c"
 $2465 = $2457 ^ $2463; //@line 127 "mcbits/vec.c"
 $2466 = $122; //@line 127 "mcbits/vec.c"
 $2467 = $2466; //@line 127 "mcbits/vec.c"
 HEAP32[$2467>>2] = $2464; //@line 127 "mcbits/vec.c"
 $2468 = (($2466) + 4)|0; //@line 127 "mcbits/vec.c"
 $2469 = $2468; //@line 127 "mcbits/vec.c"
 HEAP32[$2469>>2] = $2465; //@line 127 "mcbits/vec.c"
 $2470 = $113; //@line 128 "mcbits/vec.c"
 $2471 = $2470; //@line 128 "mcbits/vec.c"
 $2472 = HEAP32[$2471>>2]|0; //@line 128 "mcbits/vec.c"
 $2473 = (($2470) + 4)|0; //@line 128 "mcbits/vec.c"
 $2474 = $2473; //@line 128 "mcbits/vec.c"
 $2475 = HEAP32[$2474>>2]|0; //@line 128 "mcbits/vec.c"
 $2476 = $84; //@line 128 "mcbits/vec.c"
 $2477 = $2476; //@line 128 "mcbits/vec.c"
 $2478 = HEAP32[$2477>>2]|0; //@line 128 "mcbits/vec.c"
 $2479 = (($2476) + 4)|0; //@line 128 "mcbits/vec.c"
 $2480 = $2479; //@line 128 "mcbits/vec.c"
 $2481 = HEAP32[$2480>>2]|0; //@line 128 "mcbits/vec.c"
 $2482 = $2472 ^ $2478; //@line 128 "mcbits/vec.c"
 $2483 = $2475 ^ $2481; //@line 128 "mcbits/vec.c"
 $2484 = $123; //@line 128 "mcbits/vec.c"
 $2485 = $2484; //@line 128 "mcbits/vec.c"
 HEAP32[$2485>>2] = $2482; //@line 128 "mcbits/vec.c"
 $2486 = (($2484) + 4)|0; //@line 128 "mcbits/vec.c"
 $2487 = $2486; //@line 128 "mcbits/vec.c"
 HEAP32[$2487>>2] = $2483; //@line 128 "mcbits/vec.c"
 $2488 = $114; //@line 129 "mcbits/vec.c"
 $2489 = $2488; //@line 129 "mcbits/vec.c"
 $2490 = HEAP32[$2489>>2]|0; //@line 129 "mcbits/vec.c"
 $2491 = (($2488) + 4)|0; //@line 129 "mcbits/vec.c"
 $2492 = $2491; //@line 129 "mcbits/vec.c"
 $2493 = HEAP32[$2492>>2]|0; //@line 129 "mcbits/vec.c"
 $2494 = $72; //@line 129 "mcbits/vec.c"
 $2495 = $2494; //@line 129 "mcbits/vec.c"
 $2496 = HEAP32[$2495>>2]|0; //@line 129 "mcbits/vec.c"
 $2497 = (($2494) + 4)|0; //@line 129 "mcbits/vec.c"
 $2498 = $2497; //@line 129 "mcbits/vec.c"
 $2499 = HEAP32[$2498>>2]|0; //@line 129 "mcbits/vec.c"
 $2500 = $2490 ^ $2496; //@line 129 "mcbits/vec.c"
 $2501 = $2493 ^ $2499; //@line 129 "mcbits/vec.c"
 $2502 = $124; //@line 129 "mcbits/vec.c"
 $2503 = $2502; //@line 129 "mcbits/vec.c"
 HEAP32[$2503>>2] = $2500; //@line 129 "mcbits/vec.c"
 $2504 = (($2502) + 4)|0; //@line 129 "mcbits/vec.c"
 $2505 = $2504; //@line 129 "mcbits/vec.c"
 HEAP32[$2505>>2] = $2501; //@line 129 "mcbits/vec.c"
 $2506 = $5; //@line 130 "mcbits/vec.c"
 $2507 = ((($2506)) + 24|0); //@line 130 "mcbits/vec.c"
 $2508 = $2507; //@line 130 "mcbits/vec.c"
 $2509 = $2508; //@line 130 "mcbits/vec.c"
 $2510 = HEAP32[$2509>>2]|0; //@line 130 "mcbits/vec.c"
 $2511 = (($2508) + 4)|0; //@line 130 "mcbits/vec.c"
 $2512 = $2511; //@line 130 "mcbits/vec.c"
 $2513 = HEAP32[$2512>>2]|0; //@line 130 "mcbits/vec.c"
 $2514 = $5; //@line 130 "mcbits/vec.c"
 $2515 = ((($2514)) + 72|0); //@line 130 "mcbits/vec.c"
 $2516 = $2515; //@line 130 "mcbits/vec.c"
 $2517 = $2516; //@line 130 "mcbits/vec.c"
 $2518 = HEAP32[$2517>>2]|0; //@line 130 "mcbits/vec.c"
 $2519 = (($2516) + 4)|0; //@line 130 "mcbits/vec.c"
 $2520 = $2519; //@line 130 "mcbits/vec.c"
 $2521 = HEAP32[$2520>>2]|0; //@line 130 "mcbits/vec.c"
 $2522 = $2510 ^ $2518; //@line 130 "mcbits/vec.c"
 $2523 = $2513 ^ $2521; //@line 130 "mcbits/vec.c"
 $2524 = $125; //@line 130 "mcbits/vec.c"
 $2525 = $2524; //@line 130 "mcbits/vec.c"
 HEAP32[$2525>>2] = $2522; //@line 130 "mcbits/vec.c"
 $2526 = (($2524) + 4)|0; //@line 130 "mcbits/vec.c"
 $2527 = $2526; //@line 130 "mcbits/vec.c"
 HEAP32[$2527>>2] = $2523; //@line 130 "mcbits/vec.c"
 $2528 = $5; //@line 131 "mcbits/vec.c"
 $2529 = ((($2528)) + 32|0); //@line 131 "mcbits/vec.c"
 $2530 = $2529; //@line 131 "mcbits/vec.c"
 $2531 = $2530; //@line 131 "mcbits/vec.c"
 $2532 = HEAP32[$2531>>2]|0; //@line 131 "mcbits/vec.c"
 $2533 = (($2530) + 4)|0; //@line 131 "mcbits/vec.c"
 $2534 = $2533; //@line 131 "mcbits/vec.c"
 $2535 = HEAP32[$2534>>2]|0; //@line 131 "mcbits/vec.c"
 $2536 = $5; //@line 131 "mcbits/vec.c"
 $2537 = ((($2536)) + 80|0); //@line 131 "mcbits/vec.c"
 $2538 = $2537; //@line 131 "mcbits/vec.c"
 $2539 = $2538; //@line 131 "mcbits/vec.c"
 $2540 = HEAP32[$2539>>2]|0; //@line 131 "mcbits/vec.c"
 $2541 = (($2538) + 4)|0; //@line 131 "mcbits/vec.c"
 $2542 = $2541; //@line 131 "mcbits/vec.c"
 $2543 = HEAP32[$2542>>2]|0; //@line 131 "mcbits/vec.c"
 $2544 = $2532 ^ $2540; //@line 131 "mcbits/vec.c"
 $2545 = $2535 ^ $2543; //@line 131 "mcbits/vec.c"
 $2546 = $126; //@line 131 "mcbits/vec.c"
 $2547 = $2546; //@line 131 "mcbits/vec.c"
 HEAP32[$2547>>2] = $2544; //@line 131 "mcbits/vec.c"
 $2548 = (($2546) + 4)|0; //@line 131 "mcbits/vec.c"
 $2549 = $2548; //@line 131 "mcbits/vec.c"
 HEAP32[$2549>>2] = $2545; //@line 131 "mcbits/vec.c"
 $2550 = $5; //@line 132 "mcbits/vec.c"
 $2551 = ((($2550)) + 40|0); //@line 132 "mcbits/vec.c"
 $2552 = $2551; //@line 132 "mcbits/vec.c"
 $2553 = $2552; //@line 132 "mcbits/vec.c"
 $2554 = HEAP32[$2553>>2]|0; //@line 132 "mcbits/vec.c"
 $2555 = (($2552) + 4)|0; //@line 132 "mcbits/vec.c"
 $2556 = $2555; //@line 132 "mcbits/vec.c"
 $2557 = HEAP32[$2556>>2]|0; //@line 132 "mcbits/vec.c"
 $2558 = $5; //@line 132 "mcbits/vec.c"
 $2559 = ((($2558)) + 88|0); //@line 132 "mcbits/vec.c"
 $2560 = $2559; //@line 132 "mcbits/vec.c"
 $2561 = $2560; //@line 132 "mcbits/vec.c"
 $2562 = HEAP32[$2561>>2]|0; //@line 132 "mcbits/vec.c"
 $2563 = (($2560) + 4)|0; //@line 132 "mcbits/vec.c"
 $2564 = $2563; //@line 132 "mcbits/vec.c"
 $2565 = HEAP32[$2564>>2]|0; //@line 132 "mcbits/vec.c"
 $2566 = $2554 ^ $2562; //@line 132 "mcbits/vec.c"
 $2567 = $2557 ^ $2565; //@line 132 "mcbits/vec.c"
 $2568 = $127; //@line 132 "mcbits/vec.c"
 $2569 = $2568; //@line 132 "mcbits/vec.c"
 HEAP32[$2569>>2] = $2566; //@line 132 "mcbits/vec.c"
 $2570 = (($2568) + 4)|0; //@line 132 "mcbits/vec.c"
 $2571 = $2570; //@line 132 "mcbits/vec.c"
 HEAP32[$2571>>2] = $2567; //@line 132 "mcbits/vec.c"
 $2572 = $5; //@line 133 "mcbits/vec.c"
 $2573 = $2572; //@line 133 "mcbits/vec.c"
 $2574 = $2573; //@line 133 "mcbits/vec.c"
 $2575 = HEAP32[$2574>>2]|0; //@line 133 "mcbits/vec.c"
 $2576 = (($2573) + 4)|0; //@line 133 "mcbits/vec.c"
 $2577 = $2576; //@line 133 "mcbits/vec.c"
 $2578 = HEAP32[$2577>>2]|0; //@line 133 "mcbits/vec.c"
 $2579 = $5; //@line 133 "mcbits/vec.c"
 $2580 = ((($2579)) + 48|0); //@line 133 "mcbits/vec.c"
 $2581 = $2580; //@line 133 "mcbits/vec.c"
 $2582 = $2581; //@line 133 "mcbits/vec.c"
 $2583 = HEAP32[$2582>>2]|0; //@line 133 "mcbits/vec.c"
 $2584 = (($2581) + 4)|0; //@line 133 "mcbits/vec.c"
 $2585 = $2584; //@line 133 "mcbits/vec.c"
 $2586 = HEAP32[$2585>>2]|0; //@line 133 "mcbits/vec.c"
 $2587 = $2575 ^ $2583; //@line 133 "mcbits/vec.c"
 $2588 = $2578 ^ $2586; //@line 133 "mcbits/vec.c"
 $2589 = $128; //@line 133 "mcbits/vec.c"
 $2590 = $2589; //@line 133 "mcbits/vec.c"
 HEAP32[$2590>>2] = $2587; //@line 133 "mcbits/vec.c"
 $2591 = (($2589) + 4)|0; //@line 133 "mcbits/vec.c"
 $2592 = $2591; //@line 133 "mcbits/vec.c"
 HEAP32[$2592>>2] = $2588; //@line 133 "mcbits/vec.c"
 $2593 = $5; //@line 134 "mcbits/vec.c"
 $2594 = ((($2593)) + 8|0); //@line 134 "mcbits/vec.c"
 $2595 = $2594; //@line 134 "mcbits/vec.c"
 $2596 = $2595; //@line 134 "mcbits/vec.c"
 $2597 = HEAP32[$2596>>2]|0; //@line 134 "mcbits/vec.c"
 $2598 = (($2595) + 4)|0; //@line 134 "mcbits/vec.c"
 $2599 = $2598; //@line 134 "mcbits/vec.c"
 $2600 = HEAP32[$2599>>2]|0; //@line 134 "mcbits/vec.c"
 $2601 = $5; //@line 134 "mcbits/vec.c"
 $2602 = ((($2601)) + 56|0); //@line 134 "mcbits/vec.c"
 $2603 = $2602; //@line 134 "mcbits/vec.c"
 $2604 = $2603; //@line 134 "mcbits/vec.c"
 $2605 = HEAP32[$2604>>2]|0; //@line 134 "mcbits/vec.c"
 $2606 = (($2603) + 4)|0; //@line 134 "mcbits/vec.c"
 $2607 = $2606; //@line 134 "mcbits/vec.c"
 $2608 = HEAP32[$2607>>2]|0; //@line 134 "mcbits/vec.c"
 $2609 = $2597 ^ $2605; //@line 134 "mcbits/vec.c"
 $2610 = $2600 ^ $2608; //@line 134 "mcbits/vec.c"
 $2611 = $129; //@line 134 "mcbits/vec.c"
 $2612 = $2611; //@line 134 "mcbits/vec.c"
 HEAP32[$2612>>2] = $2609; //@line 134 "mcbits/vec.c"
 $2613 = (($2611) + 4)|0; //@line 134 "mcbits/vec.c"
 $2614 = $2613; //@line 134 "mcbits/vec.c"
 HEAP32[$2614>>2] = $2610; //@line 134 "mcbits/vec.c"
 $2615 = $5; //@line 135 "mcbits/vec.c"
 $2616 = ((($2615)) + 16|0); //@line 135 "mcbits/vec.c"
 $2617 = $2616; //@line 135 "mcbits/vec.c"
 $2618 = $2617; //@line 135 "mcbits/vec.c"
 $2619 = HEAP32[$2618>>2]|0; //@line 135 "mcbits/vec.c"
 $2620 = (($2617) + 4)|0; //@line 135 "mcbits/vec.c"
 $2621 = $2620; //@line 135 "mcbits/vec.c"
 $2622 = HEAP32[$2621>>2]|0; //@line 135 "mcbits/vec.c"
 $2623 = $5; //@line 135 "mcbits/vec.c"
 $2624 = ((($2623)) + 64|0); //@line 135 "mcbits/vec.c"
 $2625 = $2624; //@line 135 "mcbits/vec.c"
 $2626 = $2625; //@line 135 "mcbits/vec.c"
 $2627 = HEAP32[$2626>>2]|0; //@line 135 "mcbits/vec.c"
 $2628 = (($2625) + 4)|0; //@line 135 "mcbits/vec.c"
 $2629 = $2628; //@line 135 "mcbits/vec.c"
 $2630 = HEAP32[$2629>>2]|0; //@line 135 "mcbits/vec.c"
 $2631 = $2619 ^ $2627; //@line 135 "mcbits/vec.c"
 $2632 = $2622 ^ $2630; //@line 135 "mcbits/vec.c"
 $2633 = $130; //@line 135 "mcbits/vec.c"
 $2634 = $2633; //@line 135 "mcbits/vec.c"
 HEAP32[$2634>>2] = $2631; //@line 135 "mcbits/vec.c"
 $2635 = (($2633) + 4)|0; //@line 135 "mcbits/vec.c"
 $2636 = $2635; //@line 135 "mcbits/vec.c"
 HEAP32[$2636>>2] = $2632; //@line 135 "mcbits/vec.c"
 $2637 = $4; //@line 136 "mcbits/vec.c"
 $2638 = ((($2637)) + 24|0); //@line 136 "mcbits/vec.c"
 $2639 = $2638; //@line 136 "mcbits/vec.c"
 $2640 = $2639; //@line 136 "mcbits/vec.c"
 $2641 = HEAP32[$2640>>2]|0; //@line 136 "mcbits/vec.c"
 $2642 = (($2639) + 4)|0; //@line 136 "mcbits/vec.c"
 $2643 = $2642; //@line 136 "mcbits/vec.c"
 $2644 = HEAP32[$2643>>2]|0; //@line 136 "mcbits/vec.c"
 $2645 = $4; //@line 136 "mcbits/vec.c"
 $2646 = ((($2645)) + 72|0); //@line 136 "mcbits/vec.c"
 $2647 = $2646; //@line 136 "mcbits/vec.c"
 $2648 = $2647; //@line 136 "mcbits/vec.c"
 $2649 = HEAP32[$2648>>2]|0; //@line 136 "mcbits/vec.c"
 $2650 = (($2647) + 4)|0; //@line 136 "mcbits/vec.c"
 $2651 = $2650; //@line 136 "mcbits/vec.c"
 $2652 = HEAP32[$2651>>2]|0; //@line 136 "mcbits/vec.c"
 $2653 = $2641 ^ $2649; //@line 136 "mcbits/vec.c"
 $2654 = $2644 ^ $2652; //@line 136 "mcbits/vec.c"
 $2655 = $131; //@line 136 "mcbits/vec.c"
 $2656 = $2655; //@line 136 "mcbits/vec.c"
 HEAP32[$2656>>2] = $2653; //@line 136 "mcbits/vec.c"
 $2657 = (($2655) + 4)|0; //@line 136 "mcbits/vec.c"
 $2658 = $2657; //@line 136 "mcbits/vec.c"
 HEAP32[$2658>>2] = $2654; //@line 136 "mcbits/vec.c"
 $2659 = $4; //@line 137 "mcbits/vec.c"
 $2660 = ((($2659)) + 32|0); //@line 137 "mcbits/vec.c"
 $2661 = $2660; //@line 137 "mcbits/vec.c"
 $2662 = $2661; //@line 137 "mcbits/vec.c"
 $2663 = HEAP32[$2662>>2]|0; //@line 137 "mcbits/vec.c"
 $2664 = (($2661) + 4)|0; //@line 137 "mcbits/vec.c"
 $2665 = $2664; //@line 137 "mcbits/vec.c"
 $2666 = HEAP32[$2665>>2]|0; //@line 137 "mcbits/vec.c"
 $2667 = $4; //@line 137 "mcbits/vec.c"
 $2668 = ((($2667)) + 80|0); //@line 137 "mcbits/vec.c"
 $2669 = $2668; //@line 137 "mcbits/vec.c"
 $2670 = $2669; //@line 137 "mcbits/vec.c"
 $2671 = HEAP32[$2670>>2]|0; //@line 137 "mcbits/vec.c"
 $2672 = (($2669) + 4)|0; //@line 137 "mcbits/vec.c"
 $2673 = $2672; //@line 137 "mcbits/vec.c"
 $2674 = HEAP32[$2673>>2]|0; //@line 137 "mcbits/vec.c"
 $2675 = $2663 ^ $2671; //@line 137 "mcbits/vec.c"
 $2676 = $2666 ^ $2674; //@line 137 "mcbits/vec.c"
 $2677 = $132; //@line 137 "mcbits/vec.c"
 $2678 = $2677; //@line 137 "mcbits/vec.c"
 HEAP32[$2678>>2] = $2675; //@line 137 "mcbits/vec.c"
 $2679 = (($2677) + 4)|0; //@line 137 "mcbits/vec.c"
 $2680 = $2679; //@line 137 "mcbits/vec.c"
 HEAP32[$2680>>2] = $2676; //@line 137 "mcbits/vec.c"
 $2681 = $4; //@line 138 "mcbits/vec.c"
 $2682 = ((($2681)) + 40|0); //@line 138 "mcbits/vec.c"
 $2683 = $2682; //@line 138 "mcbits/vec.c"
 $2684 = $2683; //@line 138 "mcbits/vec.c"
 $2685 = HEAP32[$2684>>2]|0; //@line 138 "mcbits/vec.c"
 $2686 = (($2683) + 4)|0; //@line 138 "mcbits/vec.c"
 $2687 = $2686; //@line 138 "mcbits/vec.c"
 $2688 = HEAP32[$2687>>2]|0; //@line 138 "mcbits/vec.c"
 $2689 = $4; //@line 138 "mcbits/vec.c"
 $2690 = ((($2689)) + 88|0); //@line 138 "mcbits/vec.c"
 $2691 = $2690; //@line 138 "mcbits/vec.c"
 $2692 = $2691; //@line 138 "mcbits/vec.c"
 $2693 = HEAP32[$2692>>2]|0; //@line 138 "mcbits/vec.c"
 $2694 = (($2691) + 4)|0; //@line 138 "mcbits/vec.c"
 $2695 = $2694; //@line 138 "mcbits/vec.c"
 $2696 = HEAP32[$2695>>2]|0; //@line 138 "mcbits/vec.c"
 $2697 = $2685 ^ $2693; //@line 138 "mcbits/vec.c"
 $2698 = $2688 ^ $2696; //@line 138 "mcbits/vec.c"
 $2699 = $133; //@line 138 "mcbits/vec.c"
 $2700 = $2699; //@line 138 "mcbits/vec.c"
 HEAP32[$2700>>2] = $2697; //@line 138 "mcbits/vec.c"
 $2701 = (($2699) + 4)|0; //@line 138 "mcbits/vec.c"
 $2702 = $2701; //@line 138 "mcbits/vec.c"
 HEAP32[$2702>>2] = $2698; //@line 138 "mcbits/vec.c"
 $2703 = $4; //@line 139 "mcbits/vec.c"
 $2704 = $2703; //@line 139 "mcbits/vec.c"
 $2705 = $2704; //@line 139 "mcbits/vec.c"
 $2706 = HEAP32[$2705>>2]|0; //@line 139 "mcbits/vec.c"
 $2707 = (($2704) + 4)|0; //@line 139 "mcbits/vec.c"
 $2708 = $2707; //@line 139 "mcbits/vec.c"
 $2709 = HEAP32[$2708>>2]|0; //@line 139 "mcbits/vec.c"
 $2710 = $4; //@line 139 "mcbits/vec.c"
 $2711 = ((($2710)) + 48|0); //@line 139 "mcbits/vec.c"
 $2712 = $2711; //@line 139 "mcbits/vec.c"
 $2713 = $2712; //@line 139 "mcbits/vec.c"
 $2714 = HEAP32[$2713>>2]|0; //@line 139 "mcbits/vec.c"
 $2715 = (($2712) + 4)|0; //@line 139 "mcbits/vec.c"
 $2716 = $2715; //@line 139 "mcbits/vec.c"
 $2717 = HEAP32[$2716>>2]|0; //@line 139 "mcbits/vec.c"
 $2718 = $2706 ^ $2714; //@line 139 "mcbits/vec.c"
 $2719 = $2709 ^ $2717; //@line 139 "mcbits/vec.c"
 $2720 = $134; //@line 139 "mcbits/vec.c"
 $2721 = $2720; //@line 139 "mcbits/vec.c"
 HEAP32[$2721>>2] = $2718; //@line 139 "mcbits/vec.c"
 $2722 = (($2720) + 4)|0; //@line 139 "mcbits/vec.c"
 $2723 = $2722; //@line 139 "mcbits/vec.c"
 HEAP32[$2723>>2] = $2719; //@line 139 "mcbits/vec.c"
 $2724 = $4; //@line 140 "mcbits/vec.c"
 $2725 = ((($2724)) + 8|0); //@line 140 "mcbits/vec.c"
 $2726 = $2725; //@line 140 "mcbits/vec.c"
 $2727 = $2726; //@line 140 "mcbits/vec.c"
 $2728 = HEAP32[$2727>>2]|0; //@line 140 "mcbits/vec.c"
 $2729 = (($2726) + 4)|0; //@line 140 "mcbits/vec.c"
 $2730 = $2729; //@line 140 "mcbits/vec.c"
 $2731 = HEAP32[$2730>>2]|0; //@line 140 "mcbits/vec.c"
 $2732 = $4; //@line 140 "mcbits/vec.c"
 $2733 = ((($2732)) + 56|0); //@line 140 "mcbits/vec.c"
 $2734 = $2733; //@line 140 "mcbits/vec.c"
 $2735 = $2734; //@line 140 "mcbits/vec.c"
 $2736 = HEAP32[$2735>>2]|0; //@line 140 "mcbits/vec.c"
 $2737 = (($2734) + 4)|0; //@line 140 "mcbits/vec.c"
 $2738 = $2737; //@line 140 "mcbits/vec.c"
 $2739 = HEAP32[$2738>>2]|0; //@line 140 "mcbits/vec.c"
 $2740 = $2728 ^ $2736; //@line 140 "mcbits/vec.c"
 $2741 = $2731 ^ $2739; //@line 140 "mcbits/vec.c"
 $2742 = $135; //@line 140 "mcbits/vec.c"
 $2743 = $2742; //@line 140 "mcbits/vec.c"
 HEAP32[$2743>>2] = $2740; //@line 140 "mcbits/vec.c"
 $2744 = (($2742) + 4)|0; //@line 140 "mcbits/vec.c"
 $2745 = $2744; //@line 140 "mcbits/vec.c"
 HEAP32[$2745>>2] = $2741; //@line 140 "mcbits/vec.c"
 $2746 = $4; //@line 141 "mcbits/vec.c"
 $2747 = ((($2746)) + 16|0); //@line 141 "mcbits/vec.c"
 $2748 = $2747; //@line 141 "mcbits/vec.c"
 $2749 = $2748; //@line 141 "mcbits/vec.c"
 $2750 = HEAP32[$2749>>2]|0; //@line 141 "mcbits/vec.c"
 $2751 = (($2748) + 4)|0; //@line 141 "mcbits/vec.c"
 $2752 = $2751; //@line 141 "mcbits/vec.c"
 $2753 = HEAP32[$2752>>2]|0; //@line 141 "mcbits/vec.c"
 $2754 = $4; //@line 141 "mcbits/vec.c"
 $2755 = ((($2754)) + 64|0); //@line 141 "mcbits/vec.c"
 $2756 = $2755; //@line 141 "mcbits/vec.c"
 $2757 = $2756; //@line 141 "mcbits/vec.c"
 $2758 = HEAP32[$2757>>2]|0; //@line 141 "mcbits/vec.c"
 $2759 = (($2756) + 4)|0; //@line 141 "mcbits/vec.c"
 $2760 = $2759; //@line 141 "mcbits/vec.c"
 $2761 = HEAP32[$2760>>2]|0; //@line 141 "mcbits/vec.c"
 $2762 = $2750 ^ $2758; //@line 141 "mcbits/vec.c"
 $2763 = $2753 ^ $2761; //@line 141 "mcbits/vec.c"
 $2764 = $136; //@line 141 "mcbits/vec.c"
 $2765 = $2764; //@line 141 "mcbits/vec.c"
 HEAP32[$2765>>2] = $2762; //@line 141 "mcbits/vec.c"
 $2766 = (($2764) + 4)|0; //@line 141 "mcbits/vec.c"
 $2767 = $2766; //@line 141 "mcbits/vec.c"
 HEAP32[$2767>>2] = $2763; //@line 141 "mcbits/vec.c"
 $2768 = $136; //@line 142 "mcbits/vec.c"
 $2769 = $2768; //@line 142 "mcbits/vec.c"
 $2770 = HEAP32[$2769>>2]|0; //@line 142 "mcbits/vec.c"
 $2771 = (($2768) + 4)|0; //@line 142 "mcbits/vec.c"
 $2772 = $2771; //@line 142 "mcbits/vec.c"
 $2773 = HEAP32[$2772>>2]|0; //@line 142 "mcbits/vec.c"
 $2774 = $130; //@line 142 "mcbits/vec.c"
 $2775 = $2774; //@line 142 "mcbits/vec.c"
 $2776 = HEAP32[$2775>>2]|0; //@line 142 "mcbits/vec.c"
 $2777 = (($2774) + 4)|0; //@line 142 "mcbits/vec.c"
 $2778 = $2777; //@line 142 "mcbits/vec.c"
 $2779 = HEAP32[$2778>>2]|0; //@line 142 "mcbits/vec.c"
 $2780 = $2770 & $2776; //@line 142 "mcbits/vec.c"
 $2781 = $2773 & $2779; //@line 142 "mcbits/vec.c"
 $2782 = $137; //@line 142 "mcbits/vec.c"
 $2783 = $2782; //@line 142 "mcbits/vec.c"
 HEAP32[$2783>>2] = $2780; //@line 142 "mcbits/vec.c"
 $2784 = (($2782) + 4)|0; //@line 142 "mcbits/vec.c"
 $2785 = $2784; //@line 142 "mcbits/vec.c"
 HEAP32[$2785>>2] = $2781; //@line 142 "mcbits/vec.c"
 $2786 = $136; //@line 143 "mcbits/vec.c"
 $2787 = $2786; //@line 143 "mcbits/vec.c"
 $2788 = HEAP32[$2787>>2]|0; //@line 143 "mcbits/vec.c"
 $2789 = (($2786) + 4)|0; //@line 143 "mcbits/vec.c"
 $2790 = $2789; //@line 143 "mcbits/vec.c"
 $2791 = HEAP32[$2790>>2]|0; //@line 143 "mcbits/vec.c"
 $2792 = $128; //@line 143 "mcbits/vec.c"
 $2793 = $2792; //@line 143 "mcbits/vec.c"
 $2794 = HEAP32[$2793>>2]|0; //@line 143 "mcbits/vec.c"
 $2795 = (($2792) + 4)|0; //@line 143 "mcbits/vec.c"
 $2796 = $2795; //@line 143 "mcbits/vec.c"
 $2797 = HEAP32[$2796>>2]|0; //@line 143 "mcbits/vec.c"
 $2798 = $2788 & $2794; //@line 143 "mcbits/vec.c"
 $2799 = $2791 & $2797; //@line 143 "mcbits/vec.c"
 $2800 = $138; //@line 143 "mcbits/vec.c"
 $2801 = $2800; //@line 143 "mcbits/vec.c"
 HEAP32[$2801>>2] = $2798; //@line 143 "mcbits/vec.c"
 $2802 = (($2800) + 4)|0; //@line 143 "mcbits/vec.c"
 $2803 = $2802; //@line 143 "mcbits/vec.c"
 HEAP32[$2803>>2] = $2799; //@line 143 "mcbits/vec.c"
 $2804 = $136; //@line 144 "mcbits/vec.c"
 $2805 = $2804; //@line 144 "mcbits/vec.c"
 $2806 = HEAP32[$2805>>2]|0; //@line 144 "mcbits/vec.c"
 $2807 = (($2804) + 4)|0; //@line 144 "mcbits/vec.c"
 $2808 = $2807; //@line 144 "mcbits/vec.c"
 $2809 = HEAP32[$2808>>2]|0; //@line 144 "mcbits/vec.c"
 $2810 = $129; //@line 144 "mcbits/vec.c"
 $2811 = $2810; //@line 144 "mcbits/vec.c"
 $2812 = HEAP32[$2811>>2]|0; //@line 144 "mcbits/vec.c"
 $2813 = (($2810) + 4)|0; //@line 144 "mcbits/vec.c"
 $2814 = $2813; //@line 144 "mcbits/vec.c"
 $2815 = HEAP32[$2814>>2]|0; //@line 144 "mcbits/vec.c"
 $2816 = $2806 & $2812; //@line 144 "mcbits/vec.c"
 $2817 = $2809 & $2815; //@line 144 "mcbits/vec.c"
 $2818 = $139; //@line 144 "mcbits/vec.c"
 $2819 = $2818; //@line 144 "mcbits/vec.c"
 HEAP32[$2819>>2] = $2816; //@line 144 "mcbits/vec.c"
 $2820 = (($2818) + 4)|0; //@line 144 "mcbits/vec.c"
 $2821 = $2820; //@line 144 "mcbits/vec.c"
 HEAP32[$2821>>2] = $2817; //@line 144 "mcbits/vec.c"
 $2822 = $134; //@line 145 "mcbits/vec.c"
 $2823 = $2822; //@line 145 "mcbits/vec.c"
 $2824 = HEAP32[$2823>>2]|0; //@line 145 "mcbits/vec.c"
 $2825 = (($2822) + 4)|0; //@line 145 "mcbits/vec.c"
 $2826 = $2825; //@line 145 "mcbits/vec.c"
 $2827 = HEAP32[$2826>>2]|0; //@line 145 "mcbits/vec.c"
 $2828 = $130; //@line 145 "mcbits/vec.c"
 $2829 = $2828; //@line 145 "mcbits/vec.c"
 $2830 = HEAP32[$2829>>2]|0; //@line 145 "mcbits/vec.c"
 $2831 = (($2828) + 4)|0; //@line 145 "mcbits/vec.c"
 $2832 = $2831; //@line 145 "mcbits/vec.c"
 $2833 = HEAP32[$2832>>2]|0; //@line 145 "mcbits/vec.c"
 $2834 = $2824 & $2830; //@line 145 "mcbits/vec.c"
 $2835 = $2827 & $2833; //@line 145 "mcbits/vec.c"
 $2836 = $140; //@line 145 "mcbits/vec.c"
 $2837 = $2836; //@line 145 "mcbits/vec.c"
 HEAP32[$2837>>2] = $2834; //@line 145 "mcbits/vec.c"
 $2838 = (($2836) + 4)|0; //@line 145 "mcbits/vec.c"
 $2839 = $2838; //@line 145 "mcbits/vec.c"
 HEAP32[$2839>>2] = $2835; //@line 145 "mcbits/vec.c"
 $2840 = $135; //@line 146 "mcbits/vec.c"
 $2841 = $2840; //@line 146 "mcbits/vec.c"
 $2842 = HEAP32[$2841>>2]|0; //@line 146 "mcbits/vec.c"
 $2843 = (($2840) + 4)|0; //@line 146 "mcbits/vec.c"
 $2844 = $2843; //@line 146 "mcbits/vec.c"
 $2845 = HEAP32[$2844>>2]|0; //@line 146 "mcbits/vec.c"
 $2846 = $130; //@line 146 "mcbits/vec.c"
 $2847 = $2846; //@line 146 "mcbits/vec.c"
 $2848 = HEAP32[$2847>>2]|0; //@line 146 "mcbits/vec.c"
 $2849 = (($2846) + 4)|0; //@line 146 "mcbits/vec.c"
 $2850 = $2849; //@line 146 "mcbits/vec.c"
 $2851 = HEAP32[$2850>>2]|0; //@line 146 "mcbits/vec.c"
 $2852 = $2842 & $2848; //@line 146 "mcbits/vec.c"
 $2853 = $2845 & $2851; //@line 146 "mcbits/vec.c"
 $2854 = $141; //@line 146 "mcbits/vec.c"
 $2855 = $2854; //@line 146 "mcbits/vec.c"
 HEAP32[$2855>>2] = $2852; //@line 146 "mcbits/vec.c"
 $2856 = (($2854) + 4)|0; //@line 146 "mcbits/vec.c"
 $2857 = $2856; //@line 146 "mcbits/vec.c"
 HEAP32[$2857>>2] = $2853; //@line 146 "mcbits/vec.c"
 $2858 = $135; //@line 147 "mcbits/vec.c"
 $2859 = $2858; //@line 147 "mcbits/vec.c"
 $2860 = HEAP32[$2859>>2]|0; //@line 147 "mcbits/vec.c"
 $2861 = (($2858) + 4)|0; //@line 147 "mcbits/vec.c"
 $2862 = $2861; //@line 147 "mcbits/vec.c"
 $2863 = HEAP32[$2862>>2]|0; //@line 147 "mcbits/vec.c"
 $2864 = $129; //@line 147 "mcbits/vec.c"
 $2865 = $2864; //@line 147 "mcbits/vec.c"
 $2866 = HEAP32[$2865>>2]|0; //@line 147 "mcbits/vec.c"
 $2867 = (($2864) + 4)|0; //@line 147 "mcbits/vec.c"
 $2868 = $2867; //@line 147 "mcbits/vec.c"
 $2869 = HEAP32[$2868>>2]|0; //@line 147 "mcbits/vec.c"
 $2870 = $2860 & $2866; //@line 147 "mcbits/vec.c"
 $2871 = $2863 & $2869; //@line 147 "mcbits/vec.c"
 $2872 = $142; //@line 147 "mcbits/vec.c"
 $2873 = $2872; //@line 147 "mcbits/vec.c"
 HEAP32[$2873>>2] = $2870; //@line 147 "mcbits/vec.c"
 $2874 = (($2872) + 4)|0; //@line 147 "mcbits/vec.c"
 $2875 = $2874; //@line 147 "mcbits/vec.c"
 HEAP32[$2875>>2] = $2871; //@line 147 "mcbits/vec.c"
 $2876 = $135; //@line 148 "mcbits/vec.c"
 $2877 = $2876; //@line 148 "mcbits/vec.c"
 $2878 = HEAP32[$2877>>2]|0; //@line 148 "mcbits/vec.c"
 $2879 = (($2876) + 4)|0; //@line 148 "mcbits/vec.c"
 $2880 = $2879; //@line 148 "mcbits/vec.c"
 $2881 = HEAP32[$2880>>2]|0; //@line 148 "mcbits/vec.c"
 $2882 = $128; //@line 148 "mcbits/vec.c"
 $2883 = $2882; //@line 148 "mcbits/vec.c"
 $2884 = HEAP32[$2883>>2]|0; //@line 148 "mcbits/vec.c"
 $2885 = (($2882) + 4)|0; //@line 148 "mcbits/vec.c"
 $2886 = $2885; //@line 148 "mcbits/vec.c"
 $2887 = HEAP32[$2886>>2]|0; //@line 148 "mcbits/vec.c"
 $2888 = $2878 & $2884; //@line 148 "mcbits/vec.c"
 $2889 = $2881 & $2887; //@line 148 "mcbits/vec.c"
 $2890 = $143; //@line 148 "mcbits/vec.c"
 $2891 = $2890; //@line 148 "mcbits/vec.c"
 HEAP32[$2891>>2] = $2888; //@line 148 "mcbits/vec.c"
 $2892 = (($2890) + 4)|0; //@line 148 "mcbits/vec.c"
 $2893 = $2892; //@line 148 "mcbits/vec.c"
 HEAP32[$2893>>2] = $2889; //@line 148 "mcbits/vec.c"
 $2894 = $134; //@line 149 "mcbits/vec.c"
 $2895 = $2894; //@line 149 "mcbits/vec.c"
 $2896 = HEAP32[$2895>>2]|0; //@line 149 "mcbits/vec.c"
 $2897 = (($2894) + 4)|0; //@line 149 "mcbits/vec.c"
 $2898 = $2897; //@line 149 "mcbits/vec.c"
 $2899 = HEAP32[$2898>>2]|0; //@line 149 "mcbits/vec.c"
 $2900 = $129; //@line 149 "mcbits/vec.c"
 $2901 = $2900; //@line 149 "mcbits/vec.c"
 $2902 = HEAP32[$2901>>2]|0; //@line 149 "mcbits/vec.c"
 $2903 = (($2900) + 4)|0; //@line 149 "mcbits/vec.c"
 $2904 = $2903; //@line 149 "mcbits/vec.c"
 $2905 = HEAP32[$2904>>2]|0; //@line 149 "mcbits/vec.c"
 $2906 = $2896 & $2902; //@line 149 "mcbits/vec.c"
 $2907 = $2899 & $2905; //@line 149 "mcbits/vec.c"
 $2908 = $144; //@line 149 "mcbits/vec.c"
 $2909 = $2908; //@line 149 "mcbits/vec.c"
 HEAP32[$2909>>2] = $2906; //@line 149 "mcbits/vec.c"
 $2910 = (($2908) + 4)|0; //@line 149 "mcbits/vec.c"
 $2911 = $2910; //@line 149 "mcbits/vec.c"
 HEAP32[$2911>>2] = $2907; //@line 149 "mcbits/vec.c"
 $2912 = $134; //@line 150 "mcbits/vec.c"
 $2913 = $2912; //@line 150 "mcbits/vec.c"
 $2914 = HEAP32[$2913>>2]|0; //@line 150 "mcbits/vec.c"
 $2915 = (($2912) + 4)|0; //@line 150 "mcbits/vec.c"
 $2916 = $2915; //@line 150 "mcbits/vec.c"
 $2917 = HEAP32[$2916>>2]|0; //@line 150 "mcbits/vec.c"
 $2918 = $128; //@line 150 "mcbits/vec.c"
 $2919 = $2918; //@line 150 "mcbits/vec.c"
 $2920 = HEAP32[$2919>>2]|0; //@line 150 "mcbits/vec.c"
 $2921 = (($2918) + 4)|0; //@line 150 "mcbits/vec.c"
 $2922 = $2921; //@line 150 "mcbits/vec.c"
 $2923 = HEAP32[$2922>>2]|0; //@line 150 "mcbits/vec.c"
 $2924 = $2914 & $2920; //@line 150 "mcbits/vec.c"
 $2925 = $2917 & $2923; //@line 150 "mcbits/vec.c"
 $2926 = $145; //@line 150 "mcbits/vec.c"
 $2927 = $2926; //@line 150 "mcbits/vec.c"
 HEAP32[$2927>>2] = $2924; //@line 150 "mcbits/vec.c"
 $2928 = (($2926) + 4)|0; //@line 150 "mcbits/vec.c"
 $2929 = $2928; //@line 150 "mcbits/vec.c"
 HEAP32[$2929>>2] = $2925; //@line 150 "mcbits/vec.c"
 $2930 = $144; //@line 151 "mcbits/vec.c"
 $2931 = $2930; //@line 151 "mcbits/vec.c"
 $2932 = HEAP32[$2931>>2]|0; //@line 151 "mcbits/vec.c"
 $2933 = (($2930) + 4)|0; //@line 151 "mcbits/vec.c"
 $2934 = $2933; //@line 151 "mcbits/vec.c"
 $2935 = HEAP32[$2934>>2]|0; //@line 151 "mcbits/vec.c"
 $2936 = $143; //@line 151 "mcbits/vec.c"
 $2937 = $2936; //@line 151 "mcbits/vec.c"
 $2938 = HEAP32[$2937>>2]|0; //@line 151 "mcbits/vec.c"
 $2939 = (($2936) + 4)|0; //@line 151 "mcbits/vec.c"
 $2940 = $2939; //@line 151 "mcbits/vec.c"
 $2941 = HEAP32[$2940>>2]|0; //@line 151 "mcbits/vec.c"
 $2942 = $2932 ^ $2938; //@line 151 "mcbits/vec.c"
 $2943 = $2935 ^ $2941; //@line 151 "mcbits/vec.c"
 $2944 = $146; //@line 151 "mcbits/vec.c"
 $2945 = $2944; //@line 151 "mcbits/vec.c"
 HEAP32[$2945>>2] = $2942; //@line 151 "mcbits/vec.c"
 $2946 = (($2944) + 4)|0; //@line 151 "mcbits/vec.c"
 $2947 = $2946; //@line 151 "mcbits/vec.c"
 HEAP32[$2947>>2] = $2943; //@line 151 "mcbits/vec.c"
 $2948 = $142; //@line 152 "mcbits/vec.c"
 $2949 = $2948; //@line 152 "mcbits/vec.c"
 $2950 = HEAP32[$2949>>2]|0; //@line 152 "mcbits/vec.c"
 $2951 = (($2948) + 4)|0; //@line 152 "mcbits/vec.c"
 $2952 = $2951; //@line 152 "mcbits/vec.c"
 $2953 = HEAP32[$2952>>2]|0; //@line 152 "mcbits/vec.c"
 $2954 = $140; //@line 152 "mcbits/vec.c"
 $2955 = $2954; //@line 152 "mcbits/vec.c"
 $2956 = HEAP32[$2955>>2]|0; //@line 152 "mcbits/vec.c"
 $2957 = (($2954) + 4)|0; //@line 152 "mcbits/vec.c"
 $2958 = $2957; //@line 152 "mcbits/vec.c"
 $2959 = HEAP32[$2958>>2]|0; //@line 152 "mcbits/vec.c"
 $2960 = $2950 ^ $2956; //@line 152 "mcbits/vec.c"
 $2961 = $2953 ^ $2959; //@line 152 "mcbits/vec.c"
 $2962 = $147; //@line 152 "mcbits/vec.c"
 $2963 = $2962; //@line 152 "mcbits/vec.c"
 HEAP32[$2963>>2] = $2960; //@line 152 "mcbits/vec.c"
 $2964 = (($2962) + 4)|0; //@line 152 "mcbits/vec.c"
 $2965 = $2964; //@line 152 "mcbits/vec.c"
 HEAP32[$2965>>2] = $2961; //@line 152 "mcbits/vec.c"
 $2966 = $147; //@line 153 "mcbits/vec.c"
 $2967 = $2966; //@line 153 "mcbits/vec.c"
 $2968 = HEAP32[$2967>>2]|0; //@line 153 "mcbits/vec.c"
 $2969 = (($2966) + 4)|0; //@line 153 "mcbits/vec.c"
 $2970 = $2969; //@line 153 "mcbits/vec.c"
 $2971 = HEAP32[$2970>>2]|0; //@line 153 "mcbits/vec.c"
 $2972 = $138; //@line 153 "mcbits/vec.c"
 $2973 = $2972; //@line 153 "mcbits/vec.c"
 $2974 = HEAP32[$2973>>2]|0; //@line 153 "mcbits/vec.c"
 $2975 = (($2972) + 4)|0; //@line 153 "mcbits/vec.c"
 $2976 = $2975; //@line 153 "mcbits/vec.c"
 $2977 = HEAP32[$2976>>2]|0; //@line 153 "mcbits/vec.c"
 $2978 = $2968 ^ $2974; //@line 153 "mcbits/vec.c"
 $2979 = $2971 ^ $2977; //@line 153 "mcbits/vec.c"
 $2980 = $148; //@line 153 "mcbits/vec.c"
 $2981 = $2980; //@line 153 "mcbits/vec.c"
 HEAP32[$2981>>2] = $2978; //@line 153 "mcbits/vec.c"
 $2982 = (($2980) + 4)|0; //@line 153 "mcbits/vec.c"
 $2983 = $2982; //@line 153 "mcbits/vec.c"
 HEAP32[$2983>>2] = $2979; //@line 153 "mcbits/vec.c"
 $2984 = $141; //@line 154 "mcbits/vec.c"
 $2985 = $2984; //@line 154 "mcbits/vec.c"
 $2986 = HEAP32[$2985>>2]|0; //@line 154 "mcbits/vec.c"
 $2987 = (($2984) + 4)|0; //@line 154 "mcbits/vec.c"
 $2988 = $2987; //@line 154 "mcbits/vec.c"
 $2989 = HEAP32[$2988>>2]|0; //@line 154 "mcbits/vec.c"
 $2990 = $139; //@line 154 "mcbits/vec.c"
 $2991 = $2990; //@line 154 "mcbits/vec.c"
 $2992 = HEAP32[$2991>>2]|0; //@line 154 "mcbits/vec.c"
 $2993 = (($2990) + 4)|0; //@line 154 "mcbits/vec.c"
 $2994 = $2993; //@line 154 "mcbits/vec.c"
 $2995 = HEAP32[$2994>>2]|0; //@line 154 "mcbits/vec.c"
 $2996 = $2986 ^ $2992; //@line 154 "mcbits/vec.c"
 $2997 = $2989 ^ $2995; //@line 154 "mcbits/vec.c"
 $2998 = $149; //@line 154 "mcbits/vec.c"
 $2999 = $2998; //@line 154 "mcbits/vec.c"
 HEAP32[$2999>>2] = $2996; //@line 154 "mcbits/vec.c"
 $3000 = (($2998) + 4)|0; //@line 154 "mcbits/vec.c"
 $3001 = $3000; //@line 154 "mcbits/vec.c"
 HEAP32[$3001>>2] = $2997; //@line 154 "mcbits/vec.c"
 $3002 = $133; //@line 155 "mcbits/vec.c"
 $3003 = $3002; //@line 155 "mcbits/vec.c"
 $3004 = HEAP32[$3003>>2]|0; //@line 155 "mcbits/vec.c"
 $3005 = (($3002) + 4)|0; //@line 155 "mcbits/vec.c"
 $3006 = $3005; //@line 155 "mcbits/vec.c"
 $3007 = HEAP32[$3006>>2]|0; //@line 155 "mcbits/vec.c"
 $3008 = $127; //@line 155 "mcbits/vec.c"
 $3009 = $3008; //@line 155 "mcbits/vec.c"
 $3010 = HEAP32[$3009>>2]|0; //@line 155 "mcbits/vec.c"
 $3011 = (($3008) + 4)|0; //@line 155 "mcbits/vec.c"
 $3012 = $3011; //@line 155 "mcbits/vec.c"
 $3013 = HEAP32[$3012>>2]|0; //@line 155 "mcbits/vec.c"
 $3014 = $3004 & $3010; //@line 155 "mcbits/vec.c"
 $3015 = $3007 & $3013; //@line 155 "mcbits/vec.c"
 $3016 = $150; //@line 155 "mcbits/vec.c"
 $3017 = $3016; //@line 155 "mcbits/vec.c"
 HEAP32[$3017>>2] = $3014; //@line 155 "mcbits/vec.c"
 $3018 = (($3016) + 4)|0; //@line 155 "mcbits/vec.c"
 $3019 = $3018; //@line 155 "mcbits/vec.c"
 HEAP32[$3019>>2] = $3015; //@line 155 "mcbits/vec.c"
 $3020 = $133; //@line 156 "mcbits/vec.c"
 $3021 = $3020; //@line 156 "mcbits/vec.c"
 $3022 = HEAP32[$3021>>2]|0; //@line 156 "mcbits/vec.c"
 $3023 = (($3020) + 4)|0; //@line 156 "mcbits/vec.c"
 $3024 = $3023; //@line 156 "mcbits/vec.c"
 $3025 = HEAP32[$3024>>2]|0; //@line 156 "mcbits/vec.c"
 $3026 = $125; //@line 156 "mcbits/vec.c"
 $3027 = $3026; //@line 156 "mcbits/vec.c"
 $3028 = HEAP32[$3027>>2]|0; //@line 156 "mcbits/vec.c"
 $3029 = (($3026) + 4)|0; //@line 156 "mcbits/vec.c"
 $3030 = $3029; //@line 156 "mcbits/vec.c"
 $3031 = HEAP32[$3030>>2]|0; //@line 156 "mcbits/vec.c"
 $3032 = $3022 & $3028; //@line 156 "mcbits/vec.c"
 $3033 = $3025 & $3031; //@line 156 "mcbits/vec.c"
 $3034 = $151; //@line 156 "mcbits/vec.c"
 $3035 = $3034; //@line 156 "mcbits/vec.c"
 HEAP32[$3035>>2] = $3032; //@line 156 "mcbits/vec.c"
 $3036 = (($3034) + 4)|0; //@line 156 "mcbits/vec.c"
 $3037 = $3036; //@line 156 "mcbits/vec.c"
 HEAP32[$3037>>2] = $3033; //@line 156 "mcbits/vec.c"
 $3038 = $133; //@line 157 "mcbits/vec.c"
 $3039 = $3038; //@line 157 "mcbits/vec.c"
 $3040 = HEAP32[$3039>>2]|0; //@line 157 "mcbits/vec.c"
 $3041 = (($3038) + 4)|0; //@line 157 "mcbits/vec.c"
 $3042 = $3041; //@line 157 "mcbits/vec.c"
 $3043 = HEAP32[$3042>>2]|0; //@line 157 "mcbits/vec.c"
 $3044 = $126; //@line 157 "mcbits/vec.c"
 $3045 = $3044; //@line 157 "mcbits/vec.c"
 $3046 = HEAP32[$3045>>2]|0; //@line 157 "mcbits/vec.c"
 $3047 = (($3044) + 4)|0; //@line 157 "mcbits/vec.c"
 $3048 = $3047; //@line 157 "mcbits/vec.c"
 $3049 = HEAP32[$3048>>2]|0; //@line 157 "mcbits/vec.c"
 $3050 = $3040 & $3046; //@line 157 "mcbits/vec.c"
 $3051 = $3043 & $3049; //@line 157 "mcbits/vec.c"
 $3052 = $152; //@line 157 "mcbits/vec.c"
 $3053 = $3052; //@line 157 "mcbits/vec.c"
 HEAP32[$3053>>2] = $3050; //@line 157 "mcbits/vec.c"
 $3054 = (($3052) + 4)|0; //@line 157 "mcbits/vec.c"
 $3055 = $3054; //@line 157 "mcbits/vec.c"
 HEAP32[$3055>>2] = $3051; //@line 157 "mcbits/vec.c"
 $3056 = $131; //@line 158 "mcbits/vec.c"
 $3057 = $3056; //@line 158 "mcbits/vec.c"
 $3058 = HEAP32[$3057>>2]|0; //@line 158 "mcbits/vec.c"
 $3059 = (($3056) + 4)|0; //@line 158 "mcbits/vec.c"
 $3060 = $3059; //@line 158 "mcbits/vec.c"
 $3061 = HEAP32[$3060>>2]|0; //@line 158 "mcbits/vec.c"
 $3062 = $127; //@line 158 "mcbits/vec.c"
 $3063 = $3062; //@line 158 "mcbits/vec.c"
 $3064 = HEAP32[$3063>>2]|0; //@line 158 "mcbits/vec.c"
 $3065 = (($3062) + 4)|0; //@line 158 "mcbits/vec.c"
 $3066 = $3065; //@line 158 "mcbits/vec.c"
 $3067 = HEAP32[$3066>>2]|0; //@line 158 "mcbits/vec.c"
 $3068 = $3058 & $3064; //@line 158 "mcbits/vec.c"
 $3069 = $3061 & $3067; //@line 158 "mcbits/vec.c"
 $3070 = $153; //@line 158 "mcbits/vec.c"
 $3071 = $3070; //@line 158 "mcbits/vec.c"
 HEAP32[$3071>>2] = $3068; //@line 158 "mcbits/vec.c"
 $3072 = (($3070) + 4)|0; //@line 158 "mcbits/vec.c"
 $3073 = $3072; //@line 158 "mcbits/vec.c"
 HEAP32[$3073>>2] = $3069; //@line 158 "mcbits/vec.c"
 $3074 = $132; //@line 159 "mcbits/vec.c"
 $3075 = $3074; //@line 159 "mcbits/vec.c"
 $3076 = HEAP32[$3075>>2]|0; //@line 159 "mcbits/vec.c"
 $3077 = (($3074) + 4)|0; //@line 159 "mcbits/vec.c"
 $3078 = $3077; //@line 159 "mcbits/vec.c"
 $3079 = HEAP32[$3078>>2]|0; //@line 159 "mcbits/vec.c"
 $3080 = $127; //@line 159 "mcbits/vec.c"
 $3081 = $3080; //@line 159 "mcbits/vec.c"
 $3082 = HEAP32[$3081>>2]|0; //@line 159 "mcbits/vec.c"
 $3083 = (($3080) + 4)|0; //@line 159 "mcbits/vec.c"
 $3084 = $3083; //@line 159 "mcbits/vec.c"
 $3085 = HEAP32[$3084>>2]|0; //@line 159 "mcbits/vec.c"
 $3086 = $3076 & $3082; //@line 159 "mcbits/vec.c"
 $3087 = $3079 & $3085; //@line 159 "mcbits/vec.c"
 $3088 = $154; //@line 159 "mcbits/vec.c"
 $3089 = $3088; //@line 159 "mcbits/vec.c"
 HEAP32[$3089>>2] = $3086; //@line 159 "mcbits/vec.c"
 $3090 = (($3088) + 4)|0; //@line 159 "mcbits/vec.c"
 $3091 = $3090; //@line 159 "mcbits/vec.c"
 HEAP32[$3091>>2] = $3087; //@line 159 "mcbits/vec.c"
 $3092 = $132; //@line 160 "mcbits/vec.c"
 $3093 = $3092; //@line 160 "mcbits/vec.c"
 $3094 = HEAP32[$3093>>2]|0; //@line 160 "mcbits/vec.c"
 $3095 = (($3092) + 4)|0; //@line 160 "mcbits/vec.c"
 $3096 = $3095; //@line 160 "mcbits/vec.c"
 $3097 = HEAP32[$3096>>2]|0; //@line 160 "mcbits/vec.c"
 $3098 = $126; //@line 160 "mcbits/vec.c"
 $3099 = $3098; //@line 160 "mcbits/vec.c"
 $3100 = HEAP32[$3099>>2]|0; //@line 160 "mcbits/vec.c"
 $3101 = (($3098) + 4)|0; //@line 160 "mcbits/vec.c"
 $3102 = $3101; //@line 160 "mcbits/vec.c"
 $3103 = HEAP32[$3102>>2]|0; //@line 160 "mcbits/vec.c"
 $3104 = $3094 & $3100; //@line 160 "mcbits/vec.c"
 $3105 = $3097 & $3103; //@line 160 "mcbits/vec.c"
 $3106 = $155; //@line 160 "mcbits/vec.c"
 $3107 = $3106; //@line 160 "mcbits/vec.c"
 HEAP32[$3107>>2] = $3104; //@line 160 "mcbits/vec.c"
 $3108 = (($3106) + 4)|0; //@line 160 "mcbits/vec.c"
 $3109 = $3108; //@line 160 "mcbits/vec.c"
 HEAP32[$3109>>2] = $3105; //@line 160 "mcbits/vec.c"
 $3110 = $132; //@line 161 "mcbits/vec.c"
 $3111 = $3110; //@line 161 "mcbits/vec.c"
 $3112 = HEAP32[$3111>>2]|0; //@line 161 "mcbits/vec.c"
 $3113 = (($3110) + 4)|0; //@line 161 "mcbits/vec.c"
 $3114 = $3113; //@line 161 "mcbits/vec.c"
 $3115 = HEAP32[$3114>>2]|0; //@line 161 "mcbits/vec.c"
 $3116 = $125; //@line 161 "mcbits/vec.c"
 $3117 = $3116; //@line 161 "mcbits/vec.c"
 $3118 = HEAP32[$3117>>2]|0; //@line 161 "mcbits/vec.c"
 $3119 = (($3116) + 4)|0; //@line 161 "mcbits/vec.c"
 $3120 = $3119; //@line 161 "mcbits/vec.c"
 $3121 = HEAP32[$3120>>2]|0; //@line 161 "mcbits/vec.c"
 $3122 = $3112 & $3118; //@line 161 "mcbits/vec.c"
 $3123 = $3115 & $3121; //@line 161 "mcbits/vec.c"
 $3124 = $156; //@line 161 "mcbits/vec.c"
 $3125 = $3124; //@line 161 "mcbits/vec.c"
 HEAP32[$3125>>2] = $3122; //@line 161 "mcbits/vec.c"
 $3126 = (($3124) + 4)|0; //@line 161 "mcbits/vec.c"
 $3127 = $3126; //@line 161 "mcbits/vec.c"
 HEAP32[$3127>>2] = $3123; //@line 161 "mcbits/vec.c"
 $3128 = $131; //@line 162 "mcbits/vec.c"
 $3129 = $3128; //@line 162 "mcbits/vec.c"
 $3130 = HEAP32[$3129>>2]|0; //@line 162 "mcbits/vec.c"
 $3131 = (($3128) + 4)|0; //@line 162 "mcbits/vec.c"
 $3132 = $3131; //@line 162 "mcbits/vec.c"
 $3133 = HEAP32[$3132>>2]|0; //@line 162 "mcbits/vec.c"
 $3134 = $126; //@line 162 "mcbits/vec.c"
 $3135 = $3134; //@line 162 "mcbits/vec.c"
 $3136 = HEAP32[$3135>>2]|0; //@line 162 "mcbits/vec.c"
 $3137 = (($3134) + 4)|0; //@line 162 "mcbits/vec.c"
 $3138 = $3137; //@line 162 "mcbits/vec.c"
 $3139 = HEAP32[$3138>>2]|0; //@line 162 "mcbits/vec.c"
 $3140 = $3130 & $3136; //@line 162 "mcbits/vec.c"
 $3141 = $3133 & $3139; //@line 162 "mcbits/vec.c"
 $3142 = $157; //@line 162 "mcbits/vec.c"
 $3143 = $3142; //@line 162 "mcbits/vec.c"
 HEAP32[$3143>>2] = $3140; //@line 162 "mcbits/vec.c"
 $3144 = (($3142) + 4)|0; //@line 162 "mcbits/vec.c"
 $3145 = $3144; //@line 162 "mcbits/vec.c"
 HEAP32[$3145>>2] = $3141; //@line 162 "mcbits/vec.c"
 $3146 = $131; //@line 163 "mcbits/vec.c"
 $3147 = $3146; //@line 163 "mcbits/vec.c"
 $3148 = HEAP32[$3147>>2]|0; //@line 163 "mcbits/vec.c"
 $3149 = (($3146) + 4)|0; //@line 163 "mcbits/vec.c"
 $3150 = $3149; //@line 163 "mcbits/vec.c"
 $3151 = HEAP32[$3150>>2]|0; //@line 163 "mcbits/vec.c"
 $3152 = $125; //@line 163 "mcbits/vec.c"
 $3153 = $3152; //@line 163 "mcbits/vec.c"
 $3154 = HEAP32[$3153>>2]|0; //@line 163 "mcbits/vec.c"
 $3155 = (($3152) + 4)|0; //@line 163 "mcbits/vec.c"
 $3156 = $3155; //@line 163 "mcbits/vec.c"
 $3157 = HEAP32[$3156>>2]|0; //@line 163 "mcbits/vec.c"
 $3158 = $3148 & $3154; //@line 163 "mcbits/vec.c"
 $3159 = $3151 & $3157; //@line 163 "mcbits/vec.c"
 $3160 = $158; //@line 163 "mcbits/vec.c"
 $3161 = $3160; //@line 163 "mcbits/vec.c"
 HEAP32[$3161>>2] = $3158; //@line 163 "mcbits/vec.c"
 $3162 = (($3160) + 4)|0; //@line 163 "mcbits/vec.c"
 $3163 = $3162; //@line 163 "mcbits/vec.c"
 HEAP32[$3163>>2] = $3159; //@line 163 "mcbits/vec.c"
 $3164 = $157; //@line 164 "mcbits/vec.c"
 $3165 = $3164; //@line 164 "mcbits/vec.c"
 $3166 = HEAP32[$3165>>2]|0; //@line 164 "mcbits/vec.c"
 $3167 = (($3164) + 4)|0; //@line 164 "mcbits/vec.c"
 $3168 = $3167; //@line 164 "mcbits/vec.c"
 $3169 = HEAP32[$3168>>2]|0; //@line 164 "mcbits/vec.c"
 $3170 = $156; //@line 164 "mcbits/vec.c"
 $3171 = $3170; //@line 164 "mcbits/vec.c"
 $3172 = HEAP32[$3171>>2]|0; //@line 164 "mcbits/vec.c"
 $3173 = (($3170) + 4)|0; //@line 164 "mcbits/vec.c"
 $3174 = $3173; //@line 164 "mcbits/vec.c"
 $3175 = HEAP32[$3174>>2]|0; //@line 164 "mcbits/vec.c"
 $3176 = $3166 ^ $3172; //@line 164 "mcbits/vec.c"
 $3177 = $3169 ^ $3175; //@line 164 "mcbits/vec.c"
 $3178 = $159; //@line 164 "mcbits/vec.c"
 $3179 = $3178; //@line 164 "mcbits/vec.c"
 HEAP32[$3179>>2] = $3176; //@line 164 "mcbits/vec.c"
 $3180 = (($3178) + 4)|0; //@line 164 "mcbits/vec.c"
 $3181 = $3180; //@line 164 "mcbits/vec.c"
 HEAP32[$3181>>2] = $3177; //@line 164 "mcbits/vec.c"
 $3182 = $155; //@line 165 "mcbits/vec.c"
 $3183 = $3182; //@line 165 "mcbits/vec.c"
 $3184 = HEAP32[$3183>>2]|0; //@line 165 "mcbits/vec.c"
 $3185 = (($3182) + 4)|0; //@line 165 "mcbits/vec.c"
 $3186 = $3185; //@line 165 "mcbits/vec.c"
 $3187 = HEAP32[$3186>>2]|0; //@line 165 "mcbits/vec.c"
 $3188 = $153; //@line 165 "mcbits/vec.c"
 $3189 = $3188; //@line 165 "mcbits/vec.c"
 $3190 = HEAP32[$3189>>2]|0; //@line 165 "mcbits/vec.c"
 $3191 = (($3188) + 4)|0; //@line 165 "mcbits/vec.c"
 $3192 = $3191; //@line 165 "mcbits/vec.c"
 $3193 = HEAP32[$3192>>2]|0; //@line 165 "mcbits/vec.c"
 $3194 = $3184 ^ $3190; //@line 165 "mcbits/vec.c"
 $3195 = $3187 ^ $3193; //@line 165 "mcbits/vec.c"
 $3196 = $160; //@line 165 "mcbits/vec.c"
 $3197 = $3196; //@line 165 "mcbits/vec.c"
 HEAP32[$3197>>2] = $3194; //@line 165 "mcbits/vec.c"
 $3198 = (($3196) + 4)|0; //@line 165 "mcbits/vec.c"
 $3199 = $3198; //@line 165 "mcbits/vec.c"
 HEAP32[$3199>>2] = $3195; //@line 165 "mcbits/vec.c"
 $3200 = $160; //@line 166 "mcbits/vec.c"
 $3201 = $3200; //@line 166 "mcbits/vec.c"
 $3202 = HEAP32[$3201>>2]|0; //@line 166 "mcbits/vec.c"
 $3203 = (($3200) + 4)|0; //@line 166 "mcbits/vec.c"
 $3204 = $3203; //@line 166 "mcbits/vec.c"
 $3205 = HEAP32[$3204>>2]|0; //@line 166 "mcbits/vec.c"
 $3206 = $151; //@line 166 "mcbits/vec.c"
 $3207 = $3206; //@line 166 "mcbits/vec.c"
 $3208 = HEAP32[$3207>>2]|0; //@line 166 "mcbits/vec.c"
 $3209 = (($3206) + 4)|0; //@line 166 "mcbits/vec.c"
 $3210 = $3209; //@line 166 "mcbits/vec.c"
 $3211 = HEAP32[$3210>>2]|0; //@line 166 "mcbits/vec.c"
 $3212 = $3202 ^ $3208; //@line 166 "mcbits/vec.c"
 $3213 = $3205 ^ $3211; //@line 166 "mcbits/vec.c"
 $3214 = $161; //@line 166 "mcbits/vec.c"
 $3215 = $3214; //@line 166 "mcbits/vec.c"
 HEAP32[$3215>>2] = $3212; //@line 166 "mcbits/vec.c"
 $3216 = (($3214) + 4)|0; //@line 166 "mcbits/vec.c"
 $3217 = $3216; //@line 166 "mcbits/vec.c"
 HEAP32[$3217>>2] = $3213; //@line 166 "mcbits/vec.c"
 $3218 = $154; //@line 167 "mcbits/vec.c"
 $3219 = $3218; //@line 167 "mcbits/vec.c"
 $3220 = HEAP32[$3219>>2]|0; //@line 167 "mcbits/vec.c"
 $3221 = (($3218) + 4)|0; //@line 167 "mcbits/vec.c"
 $3222 = $3221; //@line 167 "mcbits/vec.c"
 $3223 = HEAP32[$3222>>2]|0; //@line 167 "mcbits/vec.c"
 $3224 = $152; //@line 167 "mcbits/vec.c"
 $3225 = $3224; //@line 167 "mcbits/vec.c"
 $3226 = HEAP32[$3225>>2]|0; //@line 167 "mcbits/vec.c"
 $3227 = (($3224) + 4)|0; //@line 167 "mcbits/vec.c"
 $3228 = $3227; //@line 167 "mcbits/vec.c"
 $3229 = HEAP32[$3228>>2]|0; //@line 167 "mcbits/vec.c"
 $3230 = $3220 ^ $3226; //@line 167 "mcbits/vec.c"
 $3231 = $3223 ^ $3229; //@line 167 "mcbits/vec.c"
 $3232 = $162; //@line 167 "mcbits/vec.c"
 $3233 = $3232; //@line 167 "mcbits/vec.c"
 HEAP32[$3233>>2] = $3230; //@line 167 "mcbits/vec.c"
 $3234 = (($3232) + 4)|0; //@line 167 "mcbits/vec.c"
 $3235 = $3234; //@line 167 "mcbits/vec.c"
 HEAP32[$3235>>2] = $3231; //@line 167 "mcbits/vec.c"
 $3236 = $128; //@line 168 "mcbits/vec.c"
 $3237 = $3236; //@line 168 "mcbits/vec.c"
 $3238 = HEAP32[$3237>>2]|0; //@line 168 "mcbits/vec.c"
 $3239 = (($3236) + 4)|0; //@line 168 "mcbits/vec.c"
 $3240 = $3239; //@line 168 "mcbits/vec.c"
 $3241 = HEAP32[$3240>>2]|0; //@line 168 "mcbits/vec.c"
 $3242 = $125; //@line 168 "mcbits/vec.c"
 $3243 = $3242; //@line 168 "mcbits/vec.c"
 $3244 = HEAP32[$3243>>2]|0; //@line 168 "mcbits/vec.c"
 $3245 = (($3242) + 4)|0; //@line 168 "mcbits/vec.c"
 $3246 = $3245; //@line 168 "mcbits/vec.c"
 $3247 = HEAP32[$3246>>2]|0; //@line 168 "mcbits/vec.c"
 $3248 = $3238 ^ $3244; //@line 168 "mcbits/vec.c"
 $3249 = $3241 ^ $3247; //@line 168 "mcbits/vec.c"
 $3250 = $163; //@line 168 "mcbits/vec.c"
 $3251 = $3250; //@line 168 "mcbits/vec.c"
 HEAP32[$3251>>2] = $3248; //@line 168 "mcbits/vec.c"
 $3252 = (($3250) + 4)|0; //@line 168 "mcbits/vec.c"
 $3253 = $3252; //@line 168 "mcbits/vec.c"
 HEAP32[$3253>>2] = $3249; //@line 168 "mcbits/vec.c"
 $3254 = $129; //@line 169 "mcbits/vec.c"
 $3255 = $3254; //@line 169 "mcbits/vec.c"
 $3256 = HEAP32[$3255>>2]|0; //@line 169 "mcbits/vec.c"
 $3257 = (($3254) + 4)|0; //@line 169 "mcbits/vec.c"
 $3258 = $3257; //@line 169 "mcbits/vec.c"
 $3259 = HEAP32[$3258>>2]|0; //@line 169 "mcbits/vec.c"
 $3260 = $126; //@line 169 "mcbits/vec.c"
 $3261 = $3260; //@line 169 "mcbits/vec.c"
 $3262 = HEAP32[$3261>>2]|0; //@line 169 "mcbits/vec.c"
 $3263 = (($3260) + 4)|0; //@line 169 "mcbits/vec.c"
 $3264 = $3263; //@line 169 "mcbits/vec.c"
 $3265 = HEAP32[$3264>>2]|0; //@line 169 "mcbits/vec.c"
 $3266 = $3256 ^ $3262; //@line 169 "mcbits/vec.c"
 $3267 = $3259 ^ $3265; //@line 169 "mcbits/vec.c"
 $3268 = $164; //@line 169 "mcbits/vec.c"
 $3269 = $3268; //@line 169 "mcbits/vec.c"
 HEAP32[$3269>>2] = $3266; //@line 169 "mcbits/vec.c"
 $3270 = (($3268) + 4)|0; //@line 169 "mcbits/vec.c"
 $3271 = $3270; //@line 169 "mcbits/vec.c"
 HEAP32[$3271>>2] = $3267; //@line 169 "mcbits/vec.c"
 $3272 = $130; //@line 170 "mcbits/vec.c"
 $3273 = $3272; //@line 170 "mcbits/vec.c"
 $3274 = HEAP32[$3273>>2]|0; //@line 170 "mcbits/vec.c"
 $3275 = (($3272) + 4)|0; //@line 170 "mcbits/vec.c"
 $3276 = $3275; //@line 170 "mcbits/vec.c"
 $3277 = HEAP32[$3276>>2]|0; //@line 170 "mcbits/vec.c"
 $3278 = $127; //@line 170 "mcbits/vec.c"
 $3279 = $3278; //@line 170 "mcbits/vec.c"
 $3280 = HEAP32[$3279>>2]|0; //@line 170 "mcbits/vec.c"
 $3281 = (($3278) + 4)|0; //@line 170 "mcbits/vec.c"
 $3282 = $3281; //@line 170 "mcbits/vec.c"
 $3283 = HEAP32[$3282>>2]|0; //@line 170 "mcbits/vec.c"
 $3284 = $3274 ^ $3280; //@line 170 "mcbits/vec.c"
 $3285 = $3277 ^ $3283; //@line 170 "mcbits/vec.c"
 $3286 = $165; //@line 170 "mcbits/vec.c"
 $3287 = $3286; //@line 170 "mcbits/vec.c"
 HEAP32[$3287>>2] = $3284; //@line 170 "mcbits/vec.c"
 $3288 = (($3286) + 4)|0; //@line 170 "mcbits/vec.c"
 $3289 = $3288; //@line 170 "mcbits/vec.c"
 HEAP32[$3289>>2] = $3285; //@line 170 "mcbits/vec.c"
 $3290 = $134; //@line 171 "mcbits/vec.c"
 $3291 = $3290; //@line 171 "mcbits/vec.c"
 $3292 = HEAP32[$3291>>2]|0; //@line 171 "mcbits/vec.c"
 $3293 = (($3290) + 4)|0; //@line 171 "mcbits/vec.c"
 $3294 = $3293; //@line 171 "mcbits/vec.c"
 $3295 = HEAP32[$3294>>2]|0; //@line 171 "mcbits/vec.c"
 $3296 = $131; //@line 171 "mcbits/vec.c"
 $3297 = $3296; //@line 171 "mcbits/vec.c"
 $3298 = HEAP32[$3297>>2]|0; //@line 171 "mcbits/vec.c"
 $3299 = (($3296) + 4)|0; //@line 171 "mcbits/vec.c"
 $3300 = $3299; //@line 171 "mcbits/vec.c"
 $3301 = HEAP32[$3300>>2]|0; //@line 171 "mcbits/vec.c"
 $3302 = $3292 ^ $3298; //@line 171 "mcbits/vec.c"
 $3303 = $3295 ^ $3301; //@line 171 "mcbits/vec.c"
 $3304 = $166; //@line 171 "mcbits/vec.c"
 $3305 = $3304; //@line 171 "mcbits/vec.c"
 HEAP32[$3305>>2] = $3302; //@line 171 "mcbits/vec.c"
 $3306 = (($3304) + 4)|0; //@line 171 "mcbits/vec.c"
 $3307 = $3306; //@line 171 "mcbits/vec.c"
 HEAP32[$3307>>2] = $3303; //@line 171 "mcbits/vec.c"
 $3308 = $135; //@line 172 "mcbits/vec.c"
 $3309 = $3308; //@line 172 "mcbits/vec.c"
 $3310 = HEAP32[$3309>>2]|0; //@line 172 "mcbits/vec.c"
 $3311 = (($3308) + 4)|0; //@line 172 "mcbits/vec.c"
 $3312 = $3311; //@line 172 "mcbits/vec.c"
 $3313 = HEAP32[$3312>>2]|0; //@line 172 "mcbits/vec.c"
 $3314 = $132; //@line 172 "mcbits/vec.c"
 $3315 = $3314; //@line 172 "mcbits/vec.c"
 $3316 = HEAP32[$3315>>2]|0; //@line 172 "mcbits/vec.c"
 $3317 = (($3314) + 4)|0; //@line 172 "mcbits/vec.c"
 $3318 = $3317; //@line 172 "mcbits/vec.c"
 $3319 = HEAP32[$3318>>2]|0; //@line 172 "mcbits/vec.c"
 $3320 = $3310 ^ $3316; //@line 172 "mcbits/vec.c"
 $3321 = $3313 ^ $3319; //@line 172 "mcbits/vec.c"
 $3322 = $167; //@line 172 "mcbits/vec.c"
 $3323 = $3322; //@line 172 "mcbits/vec.c"
 HEAP32[$3323>>2] = $3320; //@line 172 "mcbits/vec.c"
 $3324 = (($3322) + 4)|0; //@line 172 "mcbits/vec.c"
 $3325 = $3324; //@line 172 "mcbits/vec.c"
 HEAP32[$3325>>2] = $3321; //@line 172 "mcbits/vec.c"
 $3326 = $136; //@line 173 "mcbits/vec.c"
 $3327 = $3326; //@line 173 "mcbits/vec.c"
 $3328 = HEAP32[$3327>>2]|0; //@line 173 "mcbits/vec.c"
 $3329 = (($3326) + 4)|0; //@line 173 "mcbits/vec.c"
 $3330 = $3329; //@line 173 "mcbits/vec.c"
 $3331 = HEAP32[$3330>>2]|0; //@line 173 "mcbits/vec.c"
 $3332 = $133; //@line 173 "mcbits/vec.c"
 $3333 = $3332; //@line 173 "mcbits/vec.c"
 $3334 = HEAP32[$3333>>2]|0; //@line 173 "mcbits/vec.c"
 $3335 = (($3332) + 4)|0; //@line 173 "mcbits/vec.c"
 $3336 = $3335; //@line 173 "mcbits/vec.c"
 $3337 = HEAP32[$3336>>2]|0; //@line 173 "mcbits/vec.c"
 $3338 = $3328 ^ $3334; //@line 173 "mcbits/vec.c"
 $3339 = $3331 ^ $3337; //@line 173 "mcbits/vec.c"
 $3340 = $168; //@line 173 "mcbits/vec.c"
 $3341 = $3340; //@line 173 "mcbits/vec.c"
 HEAP32[$3341>>2] = $3338; //@line 173 "mcbits/vec.c"
 $3342 = (($3340) + 4)|0; //@line 173 "mcbits/vec.c"
 $3343 = $3342; //@line 173 "mcbits/vec.c"
 HEAP32[$3343>>2] = $3339; //@line 173 "mcbits/vec.c"
 $3344 = $168; //@line 174 "mcbits/vec.c"
 $3345 = $3344; //@line 174 "mcbits/vec.c"
 $3346 = HEAP32[$3345>>2]|0; //@line 174 "mcbits/vec.c"
 $3347 = (($3344) + 4)|0; //@line 174 "mcbits/vec.c"
 $3348 = $3347; //@line 174 "mcbits/vec.c"
 $3349 = HEAP32[$3348>>2]|0; //@line 174 "mcbits/vec.c"
 $3350 = $165; //@line 174 "mcbits/vec.c"
 $3351 = $3350; //@line 174 "mcbits/vec.c"
 $3352 = HEAP32[$3351>>2]|0; //@line 174 "mcbits/vec.c"
 $3353 = (($3350) + 4)|0; //@line 174 "mcbits/vec.c"
 $3354 = $3353; //@line 174 "mcbits/vec.c"
 $3355 = HEAP32[$3354>>2]|0; //@line 174 "mcbits/vec.c"
 $3356 = $3346 & $3352; //@line 174 "mcbits/vec.c"
 $3357 = $3349 & $3355; //@line 174 "mcbits/vec.c"
 $3358 = $169; //@line 174 "mcbits/vec.c"
 $3359 = $3358; //@line 174 "mcbits/vec.c"
 HEAP32[$3359>>2] = $3356; //@line 174 "mcbits/vec.c"
 $3360 = (($3358) + 4)|0; //@line 174 "mcbits/vec.c"
 $3361 = $3360; //@line 174 "mcbits/vec.c"
 HEAP32[$3361>>2] = $3357; //@line 174 "mcbits/vec.c"
 $3362 = $168; //@line 175 "mcbits/vec.c"
 $3363 = $3362; //@line 175 "mcbits/vec.c"
 $3364 = HEAP32[$3363>>2]|0; //@line 175 "mcbits/vec.c"
 $3365 = (($3362) + 4)|0; //@line 175 "mcbits/vec.c"
 $3366 = $3365; //@line 175 "mcbits/vec.c"
 $3367 = HEAP32[$3366>>2]|0; //@line 175 "mcbits/vec.c"
 $3368 = $163; //@line 175 "mcbits/vec.c"
 $3369 = $3368; //@line 175 "mcbits/vec.c"
 $3370 = HEAP32[$3369>>2]|0; //@line 175 "mcbits/vec.c"
 $3371 = (($3368) + 4)|0; //@line 175 "mcbits/vec.c"
 $3372 = $3371; //@line 175 "mcbits/vec.c"
 $3373 = HEAP32[$3372>>2]|0; //@line 175 "mcbits/vec.c"
 $3374 = $3364 & $3370; //@line 175 "mcbits/vec.c"
 $3375 = $3367 & $3373; //@line 175 "mcbits/vec.c"
 $3376 = $170; //@line 175 "mcbits/vec.c"
 $3377 = $3376; //@line 175 "mcbits/vec.c"
 HEAP32[$3377>>2] = $3374; //@line 175 "mcbits/vec.c"
 $3378 = (($3376) + 4)|0; //@line 175 "mcbits/vec.c"
 $3379 = $3378; //@line 175 "mcbits/vec.c"
 HEAP32[$3379>>2] = $3375; //@line 175 "mcbits/vec.c"
 $3380 = $168; //@line 176 "mcbits/vec.c"
 $3381 = $3380; //@line 176 "mcbits/vec.c"
 $3382 = HEAP32[$3381>>2]|0; //@line 176 "mcbits/vec.c"
 $3383 = (($3380) + 4)|0; //@line 176 "mcbits/vec.c"
 $3384 = $3383; //@line 176 "mcbits/vec.c"
 $3385 = HEAP32[$3384>>2]|0; //@line 176 "mcbits/vec.c"
 $3386 = $164; //@line 176 "mcbits/vec.c"
 $3387 = $3386; //@line 176 "mcbits/vec.c"
 $3388 = HEAP32[$3387>>2]|0; //@line 176 "mcbits/vec.c"
 $3389 = (($3386) + 4)|0; //@line 176 "mcbits/vec.c"
 $3390 = $3389; //@line 176 "mcbits/vec.c"
 $3391 = HEAP32[$3390>>2]|0; //@line 176 "mcbits/vec.c"
 $3392 = $3382 & $3388; //@line 176 "mcbits/vec.c"
 $3393 = $3385 & $3391; //@line 176 "mcbits/vec.c"
 $3394 = $171; //@line 176 "mcbits/vec.c"
 $3395 = $3394; //@line 176 "mcbits/vec.c"
 HEAP32[$3395>>2] = $3392; //@line 176 "mcbits/vec.c"
 $3396 = (($3394) + 4)|0; //@line 176 "mcbits/vec.c"
 $3397 = $3396; //@line 176 "mcbits/vec.c"
 HEAP32[$3397>>2] = $3393; //@line 176 "mcbits/vec.c"
 $3398 = $166; //@line 177 "mcbits/vec.c"
 $3399 = $3398; //@line 177 "mcbits/vec.c"
 $3400 = HEAP32[$3399>>2]|0; //@line 177 "mcbits/vec.c"
 $3401 = (($3398) + 4)|0; //@line 177 "mcbits/vec.c"
 $3402 = $3401; //@line 177 "mcbits/vec.c"
 $3403 = HEAP32[$3402>>2]|0; //@line 177 "mcbits/vec.c"
 $3404 = $165; //@line 177 "mcbits/vec.c"
 $3405 = $3404; //@line 177 "mcbits/vec.c"
 $3406 = HEAP32[$3405>>2]|0; //@line 177 "mcbits/vec.c"
 $3407 = (($3404) + 4)|0; //@line 177 "mcbits/vec.c"
 $3408 = $3407; //@line 177 "mcbits/vec.c"
 $3409 = HEAP32[$3408>>2]|0; //@line 177 "mcbits/vec.c"
 $3410 = $3400 & $3406; //@line 177 "mcbits/vec.c"
 $3411 = $3403 & $3409; //@line 177 "mcbits/vec.c"
 $3412 = $172; //@line 177 "mcbits/vec.c"
 $3413 = $3412; //@line 177 "mcbits/vec.c"
 HEAP32[$3413>>2] = $3410; //@line 177 "mcbits/vec.c"
 $3414 = (($3412) + 4)|0; //@line 177 "mcbits/vec.c"
 $3415 = $3414; //@line 177 "mcbits/vec.c"
 HEAP32[$3415>>2] = $3411; //@line 177 "mcbits/vec.c"
 $3416 = $167; //@line 178 "mcbits/vec.c"
 $3417 = $3416; //@line 178 "mcbits/vec.c"
 $3418 = HEAP32[$3417>>2]|0; //@line 178 "mcbits/vec.c"
 $3419 = (($3416) + 4)|0; //@line 178 "mcbits/vec.c"
 $3420 = $3419; //@line 178 "mcbits/vec.c"
 $3421 = HEAP32[$3420>>2]|0; //@line 178 "mcbits/vec.c"
 $3422 = $165; //@line 178 "mcbits/vec.c"
 $3423 = $3422; //@line 178 "mcbits/vec.c"
 $3424 = HEAP32[$3423>>2]|0; //@line 178 "mcbits/vec.c"
 $3425 = (($3422) + 4)|0; //@line 178 "mcbits/vec.c"
 $3426 = $3425; //@line 178 "mcbits/vec.c"
 $3427 = HEAP32[$3426>>2]|0; //@line 178 "mcbits/vec.c"
 $3428 = $3418 & $3424; //@line 178 "mcbits/vec.c"
 $3429 = $3421 & $3427; //@line 178 "mcbits/vec.c"
 $3430 = $173; //@line 178 "mcbits/vec.c"
 $3431 = $3430; //@line 178 "mcbits/vec.c"
 HEAP32[$3431>>2] = $3428; //@line 178 "mcbits/vec.c"
 $3432 = (($3430) + 4)|0; //@line 178 "mcbits/vec.c"
 $3433 = $3432; //@line 178 "mcbits/vec.c"
 HEAP32[$3433>>2] = $3429; //@line 178 "mcbits/vec.c"
 $3434 = $167; //@line 179 "mcbits/vec.c"
 $3435 = $3434; //@line 179 "mcbits/vec.c"
 $3436 = HEAP32[$3435>>2]|0; //@line 179 "mcbits/vec.c"
 $3437 = (($3434) + 4)|0; //@line 179 "mcbits/vec.c"
 $3438 = $3437; //@line 179 "mcbits/vec.c"
 $3439 = HEAP32[$3438>>2]|0; //@line 179 "mcbits/vec.c"
 $3440 = $164; //@line 179 "mcbits/vec.c"
 $3441 = $3440; //@line 179 "mcbits/vec.c"
 $3442 = HEAP32[$3441>>2]|0; //@line 179 "mcbits/vec.c"
 $3443 = (($3440) + 4)|0; //@line 179 "mcbits/vec.c"
 $3444 = $3443; //@line 179 "mcbits/vec.c"
 $3445 = HEAP32[$3444>>2]|0; //@line 179 "mcbits/vec.c"
 $3446 = $3436 & $3442; //@line 179 "mcbits/vec.c"
 $3447 = $3439 & $3445; //@line 179 "mcbits/vec.c"
 $3448 = $174; //@line 179 "mcbits/vec.c"
 $3449 = $3448; //@line 179 "mcbits/vec.c"
 HEAP32[$3449>>2] = $3446; //@line 179 "mcbits/vec.c"
 $3450 = (($3448) + 4)|0; //@line 179 "mcbits/vec.c"
 $3451 = $3450; //@line 179 "mcbits/vec.c"
 HEAP32[$3451>>2] = $3447; //@line 179 "mcbits/vec.c"
 $3452 = $167; //@line 180 "mcbits/vec.c"
 $3453 = $3452; //@line 180 "mcbits/vec.c"
 $3454 = HEAP32[$3453>>2]|0; //@line 180 "mcbits/vec.c"
 $3455 = (($3452) + 4)|0; //@line 180 "mcbits/vec.c"
 $3456 = $3455; //@line 180 "mcbits/vec.c"
 $3457 = HEAP32[$3456>>2]|0; //@line 180 "mcbits/vec.c"
 $3458 = $163; //@line 180 "mcbits/vec.c"
 $3459 = $3458; //@line 180 "mcbits/vec.c"
 $3460 = HEAP32[$3459>>2]|0; //@line 180 "mcbits/vec.c"
 $3461 = (($3458) + 4)|0; //@line 180 "mcbits/vec.c"
 $3462 = $3461; //@line 180 "mcbits/vec.c"
 $3463 = HEAP32[$3462>>2]|0; //@line 180 "mcbits/vec.c"
 $3464 = $3454 & $3460; //@line 180 "mcbits/vec.c"
 $3465 = $3457 & $3463; //@line 180 "mcbits/vec.c"
 $3466 = $175; //@line 180 "mcbits/vec.c"
 $3467 = $3466; //@line 180 "mcbits/vec.c"
 HEAP32[$3467>>2] = $3464; //@line 180 "mcbits/vec.c"
 $3468 = (($3466) + 4)|0; //@line 180 "mcbits/vec.c"
 $3469 = $3468; //@line 180 "mcbits/vec.c"
 HEAP32[$3469>>2] = $3465; //@line 180 "mcbits/vec.c"
 $3470 = $166; //@line 181 "mcbits/vec.c"
 $3471 = $3470; //@line 181 "mcbits/vec.c"
 $3472 = HEAP32[$3471>>2]|0; //@line 181 "mcbits/vec.c"
 $3473 = (($3470) + 4)|0; //@line 181 "mcbits/vec.c"
 $3474 = $3473; //@line 181 "mcbits/vec.c"
 $3475 = HEAP32[$3474>>2]|0; //@line 181 "mcbits/vec.c"
 $3476 = $164; //@line 181 "mcbits/vec.c"
 $3477 = $3476; //@line 181 "mcbits/vec.c"
 $3478 = HEAP32[$3477>>2]|0; //@line 181 "mcbits/vec.c"
 $3479 = (($3476) + 4)|0; //@line 181 "mcbits/vec.c"
 $3480 = $3479; //@line 181 "mcbits/vec.c"
 $3481 = HEAP32[$3480>>2]|0; //@line 181 "mcbits/vec.c"
 $3482 = $3472 & $3478; //@line 181 "mcbits/vec.c"
 $3483 = $3475 & $3481; //@line 181 "mcbits/vec.c"
 $3484 = $176; //@line 181 "mcbits/vec.c"
 $3485 = $3484; //@line 181 "mcbits/vec.c"
 HEAP32[$3485>>2] = $3482; //@line 181 "mcbits/vec.c"
 $3486 = (($3484) + 4)|0; //@line 181 "mcbits/vec.c"
 $3487 = $3486; //@line 181 "mcbits/vec.c"
 HEAP32[$3487>>2] = $3483; //@line 181 "mcbits/vec.c"
 $3488 = $166; //@line 182 "mcbits/vec.c"
 $3489 = $3488; //@line 182 "mcbits/vec.c"
 $3490 = HEAP32[$3489>>2]|0; //@line 182 "mcbits/vec.c"
 $3491 = (($3488) + 4)|0; //@line 182 "mcbits/vec.c"
 $3492 = $3491; //@line 182 "mcbits/vec.c"
 $3493 = HEAP32[$3492>>2]|0; //@line 182 "mcbits/vec.c"
 $3494 = $163; //@line 182 "mcbits/vec.c"
 $3495 = $3494; //@line 182 "mcbits/vec.c"
 $3496 = HEAP32[$3495>>2]|0; //@line 182 "mcbits/vec.c"
 $3497 = (($3494) + 4)|0; //@line 182 "mcbits/vec.c"
 $3498 = $3497; //@line 182 "mcbits/vec.c"
 $3499 = HEAP32[$3498>>2]|0; //@line 182 "mcbits/vec.c"
 $3500 = $3490 & $3496; //@line 182 "mcbits/vec.c"
 $3501 = $3493 & $3499; //@line 182 "mcbits/vec.c"
 $3502 = $177; //@line 182 "mcbits/vec.c"
 $3503 = $3502; //@line 182 "mcbits/vec.c"
 HEAP32[$3503>>2] = $3500; //@line 182 "mcbits/vec.c"
 $3504 = (($3502) + 4)|0; //@line 182 "mcbits/vec.c"
 $3505 = $3504; //@line 182 "mcbits/vec.c"
 HEAP32[$3505>>2] = $3501; //@line 182 "mcbits/vec.c"
 $3506 = $176; //@line 183 "mcbits/vec.c"
 $3507 = $3506; //@line 183 "mcbits/vec.c"
 $3508 = HEAP32[$3507>>2]|0; //@line 183 "mcbits/vec.c"
 $3509 = (($3506) + 4)|0; //@line 183 "mcbits/vec.c"
 $3510 = $3509; //@line 183 "mcbits/vec.c"
 $3511 = HEAP32[$3510>>2]|0; //@line 183 "mcbits/vec.c"
 $3512 = $175; //@line 183 "mcbits/vec.c"
 $3513 = $3512; //@line 183 "mcbits/vec.c"
 $3514 = HEAP32[$3513>>2]|0; //@line 183 "mcbits/vec.c"
 $3515 = (($3512) + 4)|0; //@line 183 "mcbits/vec.c"
 $3516 = $3515; //@line 183 "mcbits/vec.c"
 $3517 = HEAP32[$3516>>2]|0; //@line 183 "mcbits/vec.c"
 $3518 = $3508 ^ $3514; //@line 183 "mcbits/vec.c"
 $3519 = $3511 ^ $3517; //@line 183 "mcbits/vec.c"
 $3520 = $178; //@line 183 "mcbits/vec.c"
 $3521 = $3520; //@line 183 "mcbits/vec.c"
 HEAP32[$3521>>2] = $3518; //@line 183 "mcbits/vec.c"
 $3522 = (($3520) + 4)|0; //@line 183 "mcbits/vec.c"
 $3523 = $3522; //@line 183 "mcbits/vec.c"
 HEAP32[$3523>>2] = $3519; //@line 183 "mcbits/vec.c"
 $3524 = $174; //@line 184 "mcbits/vec.c"
 $3525 = $3524; //@line 184 "mcbits/vec.c"
 $3526 = HEAP32[$3525>>2]|0; //@line 184 "mcbits/vec.c"
 $3527 = (($3524) + 4)|0; //@line 184 "mcbits/vec.c"
 $3528 = $3527; //@line 184 "mcbits/vec.c"
 $3529 = HEAP32[$3528>>2]|0; //@line 184 "mcbits/vec.c"
 $3530 = $172; //@line 184 "mcbits/vec.c"
 $3531 = $3530; //@line 184 "mcbits/vec.c"
 $3532 = HEAP32[$3531>>2]|0; //@line 184 "mcbits/vec.c"
 $3533 = (($3530) + 4)|0; //@line 184 "mcbits/vec.c"
 $3534 = $3533; //@line 184 "mcbits/vec.c"
 $3535 = HEAP32[$3534>>2]|0; //@line 184 "mcbits/vec.c"
 $3536 = $3526 ^ $3532; //@line 184 "mcbits/vec.c"
 $3537 = $3529 ^ $3535; //@line 184 "mcbits/vec.c"
 $3538 = $179; //@line 184 "mcbits/vec.c"
 $3539 = $3538; //@line 184 "mcbits/vec.c"
 HEAP32[$3539>>2] = $3536; //@line 184 "mcbits/vec.c"
 $3540 = (($3538) + 4)|0; //@line 184 "mcbits/vec.c"
 $3541 = $3540; //@line 184 "mcbits/vec.c"
 HEAP32[$3541>>2] = $3537; //@line 184 "mcbits/vec.c"
 $3542 = $179; //@line 185 "mcbits/vec.c"
 $3543 = $3542; //@line 185 "mcbits/vec.c"
 $3544 = HEAP32[$3543>>2]|0; //@line 185 "mcbits/vec.c"
 $3545 = (($3542) + 4)|0; //@line 185 "mcbits/vec.c"
 $3546 = $3545; //@line 185 "mcbits/vec.c"
 $3547 = HEAP32[$3546>>2]|0; //@line 185 "mcbits/vec.c"
 $3548 = $170; //@line 185 "mcbits/vec.c"
 $3549 = $3548; //@line 185 "mcbits/vec.c"
 $3550 = HEAP32[$3549>>2]|0; //@line 185 "mcbits/vec.c"
 $3551 = (($3548) + 4)|0; //@line 185 "mcbits/vec.c"
 $3552 = $3551; //@line 185 "mcbits/vec.c"
 $3553 = HEAP32[$3552>>2]|0; //@line 185 "mcbits/vec.c"
 $3554 = $3544 ^ $3550; //@line 185 "mcbits/vec.c"
 $3555 = $3547 ^ $3553; //@line 185 "mcbits/vec.c"
 $3556 = $180; //@line 185 "mcbits/vec.c"
 $3557 = $3556; //@line 185 "mcbits/vec.c"
 HEAP32[$3557>>2] = $3554; //@line 185 "mcbits/vec.c"
 $3558 = (($3556) + 4)|0; //@line 185 "mcbits/vec.c"
 $3559 = $3558; //@line 185 "mcbits/vec.c"
 HEAP32[$3559>>2] = $3555; //@line 185 "mcbits/vec.c"
 $3560 = $173; //@line 186 "mcbits/vec.c"
 $3561 = $3560; //@line 186 "mcbits/vec.c"
 $3562 = HEAP32[$3561>>2]|0; //@line 186 "mcbits/vec.c"
 $3563 = (($3560) + 4)|0; //@line 186 "mcbits/vec.c"
 $3564 = $3563; //@line 186 "mcbits/vec.c"
 $3565 = HEAP32[$3564>>2]|0; //@line 186 "mcbits/vec.c"
 $3566 = $171; //@line 186 "mcbits/vec.c"
 $3567 = $3566; //@line 186 "mcbits/vec.c"
 $3568 = HEAP32[$3567>>2]|0; //@line 186 "mcbits/vec.c"
 $3569 = (($3566) + 4)|0; //@line 186 "mcbits/vec.c"
 $3570 = $3569; //@line 186 "mcbits/vec.c"
 $3571 = HEAP32[$3570>>2]|0; //@line 186 "mcbits/vec.c"
 $3572 = $3562 ^ $3568; //@line 186 "mcbits/vec.c"
 $3573 = $3565 ^ $3571; //@line 186 "mcbits/vec.c"
 $3574 = $181; //@line 186 "mcbits/vec.c"
 $3575 = $3574; //@line 186 "mcbits/vec.c"
 HEAP32[$3575>>2] = $3572; //@line 186 "mcbits/vec.c"
 $3576 = (($3574) + 4)|0; //@line 186 "mcbits/vec.c"
 $3577 = $3576; //@line 186 "mcbits/vec.c"
 HEAP32[$3577>>2] = $3573; //@line 186 "mcbits/vec.c"
 $3578 = $149; //@line 187 "mcbits/vec.c"
 $3579 = $3578; //@line 187 "mcbits/vec.c"
 $3580 = HEAP32[$3579>>2]|0; //@line 187 "mcbits/vec.c"
 $3581 = (($3578) + 4)|0; //@line 187 "mcbits/vec.c"
 $3582 = $3581; //@line 187 "mcbits/vec.c"
 $3583 = HEAP32[$3582>>2]|0; //@line 187 "mcbits/vec.c"
 $3584 = $158; //@line 187 "mcbits/vec.c"
 $3585 = $3584; //@line 187 "mcbits/vec.c"
 $3586 = HEAP32[$3585>>2]|0; //@line 187 "mcbits/vec.c"
 $3587 = (($3584) + 4)|0; //@line 187 "mcbits/vec.c"
 $3588 = $3587; //@line 187 "mcbits/vec.c"
 $3589 = HEAP32[$3588>>2]|0; //@line 187 "mcbits/vec.c"
 $3590 = $3580 ^ $3586; //@line 187 "mcbits/vec.c"
 $3591 = $3583 ^ $3589; //@line 187 "mcbits/vec.c"
 $3592 = $182; //@line 187 "mcbits/vec.c"
 $3593 = $3592; //@line 187 "mcbits/vec.c"
 HEAP32[$3593>>2] = $3590; //@line 187 "mcbits/vec.c"
 $3594 = (($3592) + 4)|0; //@line 187 "mcbits/vec.c"
 $3595 = $3594; //@line 187 "mcbits/vec.c"
 HEAP32[$3595>>2] = $3591; //@line 187 "mcbits/vec.c"
 $3596 = $137; //@line 188 "mcbits/vec.c"
 $3597 = $3596; //@line 188 "mcbits/vec.c"
 $3598 = HEAP32[$3597>>2]|0; //@line 188 "mcbits/vec.c"
 $3599 = (($3596) + 4)|0; //@line 188 "mcbits/vec.c"
 $3600 = $3599; //@line 188 "mcbits/vec.c"
 $3601 = HEAP32[$3600>>2]|0; //@line 188 "mcbits/vec.c"
 $3602 = $159; //@line 188 "mcbits/vec.c"
 $3603 = $3602; //@line 188 "mcbits/vec.c"
 $3604 = HEAP32[$3603>>2]|0; //@line 188 "mcbits/vec.c"
 $3605 = (($3602) + 4)|0; //@line 188 "mcbits/vec.c"
 $3606 = $3605; //@line 188 "mcbits/vec.c"
 $3607 = HEAP32[$3606>>2]|0; //@line 188 "mcbits/vec.c"
 $3608 = $3598 ^ $3604; //@line 188 "mcbits/vec.c"
 $3609 = $3601 ^ $3607; //@line 188 "mcbits/vec.c"
 $3610 = $183; //@line 188 "mcbits/vec.c"
 $3611 = $3610; //@line 188 "mcbits/vec.c"
 HEAP32[$3611>>2] = $3608; //@line 188 "mcbits/vec.c"
 $3612 = (($3610) + 4)|0; //@line 188 "mcbits/vec.c"
 $3613 = $3612; //@line 188 "mcbits/vec.c"
 HEAP32[$3613>>2] = $3609; //@line 188 "mcbits/vec.c"
 $3614 = $177; //@line 189 "mcbits/vec.c"
 $3615 = $3614; //@line 189 "mcbits/vec.c"
 $3616 = HEAP32[$3615>>2]|0; //@line 189 "mcbits/vec.c"
 $3617 = (($3614) + 4)|0; //@line 189 "mcbits/vec.c"
 $3618 = $3617; //@line 189 "mcbits/vec.c"
 $3619 = HEAP32[$3618>>2]|0; //@line 189 "mcbits/vec.c"
 $3620 = $182; //@line 189 "mcbits/vec.c"
 $3621 = $3620; //@line 189 "mcbits/vec.c"
 $3622 = HEAP32[$3621>>2]|0; //@line 189 "mcbits/vec.c"
 $3623 = (($3620) + 4)|0; //@line 189 "mcbits/vec.c"
 $3624 = $3623; //@line 189 "mcbits/vec.c"
 $3625 = HEAP32[$3624>>2]|0; //@line 189 "mcbits/vec.c"
 $3626 = $3616 ^ $3622; //@line 189 "mcbits/vec.c"
 $3627 = $3619 ^ $3625; //@line 189 "mcbits/vec.c"
 $3628 = $184; //@line 189 "mcbits/vec.c"
 $3629 = $3628; //@line 189 "mcbits/vec.c"
 HEAP32[$3629>>2] = $3626; //@line 189 "mcbits/vec.c"
 $3630 = (($3628) + 4)|0; //@line 189 "mcbits/vec.c"
 $3631 = $3630; //@line 189 "mcbits/vec.c"
 HEAP32[$3631>>2] = $3627; //@line 189 "mcbits/vec.c"
 $3632 = $178; //@line 190 "mcbits/vec.c"
 $3633 = $3632; //@line 190 "mcbits/vec.c"
 $3634 = HEAP32[$3633>>2]|0; //@line 190 "mcbits/vec.c"
 $3635 = (($3632) + 4)|0; //@line 190 "mcbits/vec.c"
 $3636 = $3635; //@line 190 "mcbits/vec.c"
 $3637 = HEAP32[$3636>>2]|0; //@line 190 "mcbits/vec.c"
 $3638 = $183; //@line 190 "mcbits/vec.c"
 $3639 = $3638; //@line 190 "mcbits/vec.c"
 $3640 = HEAP32[$3639>>2]|0; //@line 190 "mcbits/vec.c"
 $3641 = (($3638) + 4)|0; //@line 190 "mcbits/vec.c"
 $3642 = $3641; //@line 190 "mcbits/vec.c"
 $3643 = HEAP32[$3642>>2]|0; //@line 190 "mcbits/vec.c"
 $3644 = $3634 ^ $3640; //@line 190 "mcbits/vec.c"
 $3645 = $3637 ^ $3643; //@line 190 "mcbits/vec.c"
 $3646 = $185; //@line 190 "mcbits/vec.c"
 $3647 = $3646; //@line 190 "mcbits/vec.c"
 HEAP32[$3647>>2] = $3644; //@line 190 "mcbits/vec.c"
 $3648 = (($3646) + 4)|0; //@line 190 "mcbits/vec.c"
 $3649 = $3648; //@line 190 "mcbits/vec.c"
 HEAP32[$3649>>2] = $3645; //@line 190 "mcbits/vec.c"
 $3650 = $180; //@line 191 "mcbits/vec.c"
 $3651 = $3650; //@line 191 "mcbits/vec.c"
 $3652 = HEAP32[$3651>>2]|0; //@line 191 "mcbits/vec.c"
 $3653 = (($3650) + 4)|0; //@line 191 "mcbits/vec.c"
 $3654 = $3653; //@line 191 "mcbits/vec.c"
 $3655 = HEAP32[$3654>>2]|0; //@line 191 "mcbits/vec.c"
 $3656 = $161; //@line 191 "mcbits/vec.c"
 $3657 = $3656; //@line 191 "mcbits/vec.c"
 $3658 = HEAP32[$3657>>2]|0; //@line 191 "mcbits/vec.c"
 $3659 = (($3656) + 4)|0; //@line 191 "mcbits/vec.c"
 $3660 = $3659; //@line 191 "mcbits/vec.c"
 $3661 = HEAP32[$3660>>2]|0; //@line 191 "mcbits/vec.c"
 $3662 = $3652 ^ $3658; //@line 191 "mcbits/vec.c"
 $3663 = $3655 ^ $3661; //@line 191 "mcbits/vec.c"
 $3664 = $186; //@line 191 "mcbits/vec.c"
 $3665 = $3664; //@line 191 "mcbits/vec.c"
 HEAP32[$3665>>2] = $3662; //@line 191 "mcbits/vec.c"
 $3666 = (($3664) + 4)|0; //@line 191 "mcbits/vec.c"
 $3667 = $3666; //@line 191 "mcbits/vec.c"
 HEAP32[$3667>>2] = $3663; //@line 191 "mcbits/vec.c"
 $3668 = $181; //@line 192 "mcbits/vec.c"
 $3669 = $3668; //@line 192 "mcbits/vec.c"
 $3670 = HEAP32[$3669>>2]|0; //@line 192 "mcbits/vec.c"
 $3671 = (($3668) + 4)|0; //@line 192 "mcbits/vec.c"
 $3672 = $3671; //@line 192 "mcbits/vec.c"
 $3673 = HEAP32[$3672>>2]|0; //@line 192 "mcbits/vec.c"
 $3674 = $162; //@line 192 "mcbits/vec.c"
 $3675 = $3674; //@line 192 "mcbits/vec.c"
 $3676 = HEAP32[$3675>>2]|0; //@line 192 "mcbits/vec.c"
 $3677 = (($3674) + 4)|0; //@line 192 "mcbits/vec.c"
 $3678 = $3677; //@line 192 "mcbits/vec.c"
 $3679 = HEAP32[$3678>>2]|0; //@line 192 "mcbits/vec.c"
 $3680 = $3670 ^ $3676; //@line 192 "mcbits/vec.c"
 $3681 = $3673 ^ $3679; //@line 192 "mcbits/vec.c"
 $3682 = $187; //@line 192 "mcbits/vec.c"
 $3683 = $3682; //@line 192 "mcbits/vec.c"
 HEAP32[$3683>>2] = $3680; //@line 192 "mcbits/vec.c"
 $3684 = (($3682) + 4)|0; //@line 192 "mcbits/vec.c"
 $3685 = $3684; //@line 192 "mcbits/vec.c"
 HEAP32[$3685>>2] = $3681; //@line 192 "mcbits/vec.c"
 $3686 = $169; //@line 193 "mcbits/vec.c"
 $3687 = $3686; //@line 193 "mcbits/vec.c"
 $3688 = HEAP32[$3687>>2]|0; //@line 193 "mcbits/vec.c"
 $3689 = (($3686) + 4)|0; //@line 193 "mcbits/vec.c"
 $3690 = $3689; //@line 193 "mcbits/vec.c"
 $3691 = HEAP32[$3690>>2]|0; //@line 193 "mcbits/vec.c"
 $3692 = $150; //@line 193 "mcbits/vec.c"
 $3693 = $3692; //@line 193 "mcbits/vec.c"
 $3694 = HEAP32[$3693>>2]|0; //@line 193 "mcbits/vec.c"
 $3695 = (($3692) + 4)|0; //@line 193 "mcbits/vec.c"
 $3696 = $3695; //@line 193 "mcbits/vec.c"
 $3697 = HEAP32[$3696>>2]|0; //@line 193 "mcbits/vec.c"
 $3698 = $3688 ^ $3694; //@line 193 "mcbits/vec.c"
 $3699 = $3691 ^ $3697; //@line 193 "mcbits/vec.c"
 $3700 = $188; //@line 193 "mcbits/vec.c"
 $3701 = $3700; //@line 193 "mcbits/vec.c"
 HEAP32[$3701>>2] = $3698; //@line 193 "mcbits/vec.c"
 $3702 = (($3700) + 4)|0; //@line 193 "mcbits/vec.c"
 $3703 = $3702; //@line 193 "mcbits/vec.c"
 HEAP32[$3703>>2] = $3699; //@line 193 "mcbits/vec.c"
 $3704 = $184; //@line 194 "mcbits/vec.c"
 $3705 = $3704; //@line 194 "mcbits/vec.c"
 $3706 = HEAP32[$3705>>2]|0; //@line 194 "mcbits/vec.c"
 $3707 = (($3704) + 4)|0; //@line 194 "mcbits/vec.c"
 $3708 = $3707; //@line 194 "mcbits/vec.c"
 $3709 = HEAP32[$3708>>2]|0; //@line 194 "mcbits/vec.c"
 $3710 = $145; //@line 194 "mcbits/vec.c"
 $3711 = $3710; //@line 194 "mcbits/vec.c"
 $3712 = HEAP32[$3711>>2]|0; //@line 194 "mcbits/vec.c"
 $3713 = (($3710) + 4)|0; //@line 194 "mcbits/vec.c"
 $3714 = $3713; //@line 194 "mcbits/vec.c"
 $3715 = HEAP32[$3714>>2]|0; //@line 194 "mcbits/vec.c"
 $3716 = $3706 ^ $3712; //@line 194 "mcbits/vec.c"
 $3717 = $3709 ^ $3715; //@line 194 "mcbits/vec.c"
 $3718 = $189; //@line 194 "mcbits/vec.c"
 $3719 = $3718; //@line 194 "mcbits/vec.c"
 HEAP32[$3719>>2] = $3716; //@line 194 "mcbits/vec.c"
 $3720 = (($3718) + 4)|0; //@line 194 "mcbits/vec.c"
 $3721 = $3720; //@line 194 "mcbits/vec.c"
 HEAP32[$3721>>2] = $3717; //@line 194 "mcbits/vec.c"
 $3722 = $185; //@line 195 "mcbits/vec.c"
 $3723 = $3722; //@line 195 "mcbits/vec.c"
 $3724 = HEAP32[$3723>>2]|0; //@line 195 "mcbits/vec.c"
 $3725 = (($3722) + 4)|0; //@line 195 "mcbits/vec.c"
 $3726 = $3725; //@line 195 "mcbits/vec.c"
 $3727 = HEAP32[$3726>>2]|0; //@line 195 "mcbits/vec.c"
 $3728 = $146; //@line 195 "mcbits/vec.c"
 $3729 = $3728; //@line 195 "mcbits/vec.c"
 $3730 = HEAP32[$3729>>2]|0; //@line 195 "mcbits/vec.c"
 $3731 = (($3728) + 4)|0; //@line 195 "mcbits/vec.c"
 $3732 = $3731; //@line 195 "mcbits/vec.c"
 $3733 = HEAP32[$3732>>2]|0; //@line 195 "mcbits/vec.c"
 $3734 = $3724 ^ $3730; //@line 195 "mcbits/vec.c"
 $3735 = $3727 ^ $3733; //@line 195 "mcbits/vec.c"
 $3736 = $190; //@line 195 "mcbits/vec.c"
 $3737 = $3736; //@line 195 "mcbits/vec.c"
 HEAP32[$3737>>2] = $3734; //@line 195 "mcbits/vec.c"
 $3738 = (($3736) + 4)|0; //@line 195 "mcbits/vec.c"
 $3739 = $3738; //@line 195 "mcbits/vec.c"
 HEAP32[$3739>>2] = $3735; //@line 195 "mcbits/vec.c"
 $3740 = $186; //@line 196 "mcbits/vec.c"
 $3741 = $3740; //@line 196 "mcbits/vec.c"
 $3742 = HEAP32[$3741>>2]|0; //@line 196 "mcbits/vec.c"
 $3743 = (($3740) + 4)|0; //@line 196 "mcbits/vec.c"
 $3744 = $3743; //@line 196 "mcbits/vec.c"
 $3745 = HEAP32[$3744>>2]|0; //@line 196 "mcbits/vec.c"
 $3746 = $148; //@line 196 "mcbits/vec.c"
 $3747 = $3746; //@line 196 "mcbits/vec.c"
 $3748 = HEAP32[$3747>>2]|0; //@line 196 "mcbits/vec.c"
 $3749 = (($3746) + 4)|0; //@line 196 "mcbits/vec.c"
 $3750 = $3749; //@line 196 "mcbits/vec.c"
 $3751 = HEAP32[$3750>>2]|0; //@line 196 "mcbits/vec.c"
 $3752 = $3742 ^ $3748; //@line 196 "mcbits/vec.c"
 $3753 = $3745 ^ $3751; //@line 196 "mcbits/vec.c"
 $3754 = $191; //@line 196 "mcbits/vec.c"
 $3755 = $3754; //@line 196 "mcbits/vec.c"
 HEAP32[$3755>>2] = $3752; //@line 196 "mcbits/vec.c"
 $3756 = (($3754) + 4)|0; //@line 196 "mcbits/vec.c"
 $3757 = $3756; //@line 196 "mcbits/vec.c"
 HEAP32[$3757>>2] = $3753; //@line 196 "mcbits/vec.c"
 $3758 = $187; //@line 197 "mcbits/vec.c"
 $3759 = $3758; //@line 197 "mcbits/vec.c"
 $3760 = HEAP32[$3759>>2]|0; //@line 197 "mcbits/vec.c"
 $3761 = (($3758) + 4)|0; //@line 197 "mcbits/vec.c"
 $3762 = $3761; //@line 197 "mcbits/vec.c"
 $3763 = HEAP32[$3762>>2]|0; //@line 197 "mcbits/vec.c"
 $3764 = $182; //@line 197 "mcbits/vec.c"
 $3765 = $3764; //@line 197 "mcbits/vec.c"
 $3766 = HEAP32[$3765>>2]|0; //@line 197 "mcbits/vec.c"
 $3767 = (($3764) + 4)|0; //@line 197 "mcbits/vec.c"
 $3768 = $3767; //@line 197 "mcbits/vec.c"
 $3769 = HEAP32[$3768>>2]|0; //@line 197 "mcbits/vec.c"
 $3770 = $3760 ^ $3766; //@line 197 "mcbits/vec.c"
 $3771 = $3763 ^ $3769; //@line 197 "mcbits/vec.c"
 $3772 = $192; //@line 197 "mcbits/vec.c"
 $3773 = $3772; //@line 197 "mcbits/vec.c"
 HEAP32[$3773>>2] = $3770; //@line 197 "mcbits/vec.c"
 $3774 = (($3772) + 4)|0; //@line 197 "mcbits/vec.c"
 $3775 = $3774; //@line 197 "mcbits/vec.c"
 HEAP32[$3775>>2] = $3771; //@line 197 "mcbits/vec.c"
 $3776 = $188; //@line 198 "mcbits/vec.c"
 $3777 = $3776; //@line 198 "mcbits/vec.c"
 $3778 = HEAP32[$3777>>2]|0; //@line 198 "mcbits/vec.c"
 $3779 = (($3776) + 4)|0; //@line 198 "mcbits/vec.c"
 $3780 = $3779; //@line 198 "mcbits/vec.c"
 $3781 = HEAP32[$3780>>2]|0; //@line 198 "mcbits/vec.c"
 $3782 = $183; //@line 198 "mcbits/vec.c"
 $3783 = $3782; //@line 198 "mcbits/vec.c"
 $3784 = HEAP32[$3783>>2]|0; //@line 198 "mcbits/vec.c"
 $3785 = (($3782) + 4)|0; //@line 198 "mcbits/vec.c"
 $3786 = $3785; //@line 198 "mcbits/vec.c"
 $3787 = HEAP32[$3786>>2]|0; //@line 198 "mcbits/vec.c"
 $3788 = $3778 ^ $3784; //@line 198 "mcbits/vec.c"
 $3789 = $3781 ^ $3787; //@line 198 "mcbits/vec.c"
 $3790 = $193; //@line 198 "mcbits/vec.c"
 $3791 = $3790; //@line 198 "mcbits/vec.c"
 HEAP32[$3791>>2] = $3788; //@line 198 "mcbits/vec.c"
 $3792 = (($3790) + 4)|0; //@line 198 "mcbits/vec.c"
 $3793 = $3792; //@line 198 "mcbits/vec.c"
 HEAP32[$3793>>2] = $3789; //@line 198 "mcbits/vec.c"
 $3794 = $118; //@line 199 "mcbits/vec.c"
 $3795 = $3794; //@line 199 "mcbits/vec.c"
 $3796 = HEAP32[$3795>>2]|0; //@line 199 "mcbits/vec.c"
 $3797 = (($3794) + 4)|0; //@line 199 "mcbits/vec.c"
 $3798 = $3797; //@line 199 "mcbits/vec.c"
 $3799 = HEAP32[$3798>>2]|0; //@line 199 "mcbits/vec.c"
 $3800 = $55; //@line 199 "mcbits/vec.c"
 $3801 = $3800; //@line 199 "mcbits/vec.c"
 $3802 = HEAP32[$3801>>2]|0; //@line 199 "mcbits/vec.c"
 $3803 = (($3800) + 4)|0; //@line 199 "mcbits/vec.c"
 $3804 = $3803; //@line 199 "mcbits/vec.c"
 $3805 = HEAP32[$3804>>2]|0; //@line 199 "mcbits/vec.c"
 $3806 = $3796 ^ $3802; //@line 199 "mcbits/vec.c"
 $3807 = $3799 ^ $3805; //@line 199 "mcbits/vec.c"
 $3808 = $194; //@line 199 "mcbits/vec.c"
 $3809 = $3808; //@line 199 "mcbits/vec.c"
 HEAP32[$3809>>2] = $3806; //@line 199 "mcbits/vec.c"
 $3810 = (($3808) + 4)|0; //@line 199 "mcbits/vec.c"
 $3811 = $3810; //@line 199 "mcbits/vec.c"
 HEAP32[$3811>>2] = $3807; //@line 199 "mcbits/vec.c"
 $3812 = $119; //@line 200 "mcbits/vec.c"
 $3813 = $3812; //@line 200 "mcbits/vec.c"
 $3814 = HEAP32[$3813>>2]|0; //@line 200 "mcbits/vec.c"
 $3815 = (($3812) + 4)|0; //@line 200 "mcbits/vec.c"
 $3816 = $3815; //@line 200 "mcbits/vec.c"
 $3817 = HEAP32[$3816>>2]|0; //@line 200 "mcbits/vec.c"
 $3818 = $56; //@line 200 "mcbits/vec.c"
 $3819 = $3818; //@line 200 "mcbits/vec.c"
 $3820 = HEAP32[$3819>>2]|0; //@line 200 "mcbits/vec.c"
 $3821 = (($3818) + 4)|0; //@line 200 "mcbits/vec.c"
 $3822 = $3821; //@line 200 "mcbits/vec.c"
 $3823 = HEAP32[$3822>>2]|0; //@line 200 "mcbits/vec.c"
 $3824 = $3814 ^ $3820; //@line 200 "mcbits/vec.c"
 $3825 = $3817 ^ $3823; //@line 200 "mcbits/vec.c"
 $3826 = $195; //@line 200 "mcbits/vec.c"
 $3827 = $3826; //@line 200 "mcbits/vec.c"
 HEAP32[$3827>>2] = $3824; //@line 200 "mcbits/vec.c"
 $3828 = (($3826) + 4)|0; //@line 200 "mcbits/vec.c"
 $3829 = $3828; //@line 200 "mcbits/vec.c"
 HEAP32[$3829>>2] = $3825; //@line 200 "mcbits/vec.c"
 $3830 = $109; //@line 201 "mcbits/vec.c"
 $3831 = $3830; //@line 201 "mcbits/vec.c"
 $3832 = HEAP32[$3831>>2]|0; //@line 201 "mcbits/vec.c"
 $3833 = (($3830) + 4)|0; //@line 201 "mcbits/vec.c"
 $3834 = $3833; //@line 201 "mcbits/vec.c"
 $3835 = HEAP32[$3834>>2]|0; //@line 201 "mcbits/vec.c"
 $3836 = $58; //@line 201 "mcbits/vec.c"
 $3837 = $3836; //@line 201 "mcbits/vec.c"
 $3838 = HEAP32[$3837>>2]|0; //@line 201 "mcbits/vec.c"
 $3839 = (($3836) + 4)|0; //@line 201 "mcbits/vec.c"
 $3840 = $3839; //@line 201 "mcbits/vec.c"
 $3841 = HEAP32[$3840>>2]|0; //@line 201 "mcbits/vec.c"
 $3842 = $3832 ^ $3838; //@line 201 "mcbits/vec.c"
 $3843 = $3835 ^ $3841; //@line 201 "mcbits/vec.c"
 $3844 = $196; //@line 201 "mcbits/vec.c"
 $3845 = $3844; //@line 201 "mcbits/vec.c"
 HEAP32[$3845>>2] = $3842; //@line 201 "mcbits/vec.c"
 $3846 = (($3844) + 4)|0; //@line 201 "mcbits/vec.c"
 $3847 = $3846; //@line 201 "mcbits/vec.c"
 HEAP32[$3847>>2] = $3843; //@line 201 "mcbits/vec.c"
 $3848 = $120; //@line 202 "mcbits/vec.c"
 $3849 = $3848; //@line 202 "mcbits/vec.c"
 $3850 = HEAP32[$3849>>2]|0; //@line 202 "mcbits/vec.c"
 $3851 = (($3848) + 4)|0; //@line 202 "mcbits/vec.c"
 $3852 = $3851; //@line 202 "mcbits/vec.c"
 $3853 = HEAP32[$3852>>2]|0; //@line 202 "mcbits/vec.c"
 $3854 = $115; //@line 202 "mcbits/vec.c"
 $3855 = $3854; //@line 202 "mcbits/vec.c"
 $3856 = HEAP32[$3855>>2]|0; //@line 202 "mcbits/vec.c"
 $3857 = (($3854) + 4)|0; //@line 202 "mcbits/vec.c"
 $3858 = $3857; //@line 202 "mcbits/vec.c"
 $3859 = HEAP32[$3858>>2]|0; //@line 202 "mcbits/vec.c"
 $3860 = $3850 ^ $3856; //@line 202 "mcbits/vec.c"
 $3861 = $3853 ^ $3859; //@line 202 "mcbits/vec.c"
 $3862 = $197; //@line 202 "mcbits/vec.c"
 $3863 = $3862; //@line 202 "mcbits/vec.c"
 HEAP32[$3863>>2] = $3860; //@line 202 "mcbits/vec.c"
 $3864 = (($3862) + 4)|0; //@line 202 "mcbits/vec.c"
 $3865 = $3864; //@line 202 "mcbits/vec.c"
 HEAP32[$3865>>2] = $3861; //@line 202 "mcbits/vec.c"
 $3866 = $121; //@line 203 "mcbits/vec.c"
 $3867 = $3866; //@line 203 "mcbits/vec.c"
 $3868 = HEAP32[$3867>>2]|0; //@line 203 "mcbits/vec.c"
 $3869 = (($3866) + 4)|0; //@line 203 "mcbits/vec.c"
 $3870 = $3869; //@line 203 "mcbits/vec.c"
 $3871 = HEAP32[$3870>>2]|0; //@line 203 "mcbits/vec.c"
 $3872 = $116; //@line 203 "mcbits/vec.c"
 $3873 = $3872; //@line 203 "mcbits/vec.c"
 $3874 = HEAP32[$3873>>2]|0; //@line 203 "mcbits/vec.c"
 $3875 = (($3872) + 4)|0; //@line 203 "mcbits/vec.c"
 $3876 = $3875; //@line 203 "mcbits/vec.c"
 $3877 = HEAP32[$3876>>2]|0; //@line 203 "mcbits/vec.c"
 $3878 = $3868 ^ $3874; //@line 203 "mcbits/vec.c"
 $3879 = $3871 ^ $3877; //@line 203 "mcbits/vec.c"
 $3880 = $198; //@line 203 "mcbits/vec.c"
 $3881 = $3880; //@line 203 "mcbits/vec.c"
 HEAP32[$3881>>2] = $3878; //@line 203 "mcbits/vec.c"
 $3882 = (($3880) + 4)|0; //@line 203 "mcbits/vec.c"
 $3883 = $3882; //@line 203 "mcbits/vec.c"
 HEAP32[$3883>>2] = $3879; //@line 203 "mcbits/vec.c"
 $3884 = $122; //@line 204 "mcbits/vec.c"
 $3885 = $3884; //@line 204 "mcbits/vec.c"
 $3886 = HEAP32[$3885>>2]|0; //@line 204 "mcbits/vec.c"
 $3887 = (($3884) + 4)|0; //@line 204 "mcbits/vec.c"
 $3888 = $3887; //@line 204 "mcbits/vec.c"
 $3889 = HEAP32[$3888>>2]|0; //@line 204 "mcbits/vec.c"
 $3890 = $117; //@line 204 "mcbits/vec.c"
 $3891 = $3890; //@line 204 "mcbits/vec.c"
 $3892 = HEAP32[$3891>>2]|0; //@line 204 "mcbits/vec.c"
 $3893 = (($3890) + 4)|0; //@line 204 "mcbits/vec.c"
 $3894 = $3893; //@line 204 "mcbits/vec.c"
 $3895 = HEAP32[$3894>>2]|0; //@line 204 "mcbits/vec.c"
 $3896 = $3886 ^ $3892; //@line 204 "mcbits/vec.c"
 $3897 = $3889 ^ $3895; //@line 204 "mcbits/vec.c"
 $3898 = $199; //@line 204 "mcbits/vec.c"
 $3899 = $3898; //@line 204 "mcbits/vec.c"
 HEAP32[$3899>>2] = $3896; //@line 204 "mcbits/vec.c"
 $3900 = (($3898) + 4)|0; //@line 204 "mcbits/vec.c"
 $3901 = $3900; //@line 204 "mcbits/vec.c"
 HEAP32[$3901>>2] = $3897; //@line 204 "mcbits/vec.c"
 $3902 = $123; //@line 205 "mcbits/vec.c"
 $3903 = $3902; //@line 205 "mcbits/vec.c"
 $3904 = HEAP32[$3903>>2]|0; //@line 205 "mcbits/vec.c"
 $3905 = (($3902) + 4)|0; //@line 205 "mcbits/vec.c"
 $3906 = $3905; //@line 205 "mcbits/vec.c"
 $3907 = HEAP32[$3906>>2]|0; //@line 205 "mcbits/vec.c"
 $3908 = $118; //@line 205 "mcbits/vec.c"
 $3909 = $3908; //@line 205 "mcbits/vec.c"
 $3910 = HEAP32[$3909>>2]|0; //@line 205 "mcbits/vec.c"
 $3911 = (($3908) + 4)|0; //@line 205 "mcbits/vec.c"
 $3912 = $3911; //@line 205 "mcbits/vec.c"
 $3913 = HEAP32[$3912>>2]|0; //@line 205 "mcbits/vec.c"
 $3914 = $3904 ^ $3910; //@line 205 "mcbits/vec.c"
 $3915 = $3907 ^ $3913; //@line 205 "mcbits/vec.c"
 $3916 = $200; //@line 205 "mcbits/vec.c"
 $3917 = $3916; //@line 205 "mcbits/vec.c"
 HEAP32[$3917>>2] = $3914; //@line 205 "mcbits/vec.c"
 $3918 = (($3916) + 4)|0; //@line 205 "mcbits/vec.c"
 $3919 = $3918; //@line 205 "mcbits/vec.c"
 HEAP32[$3919>>2] = $3915; //@line 205 "mcbits/vec.c"
 $3920 = $124; //@line 206 "mcbits/vec.c"
 $3921 = $3920; //@line 206 "mcbits/vec.c"
 $3922 = HEAP32[$3921>>2]|0; //@line 206 "mcbits/vec.c"
 $3923 = (($3920) + 4)|0; //@line 206 "mcbits/vec.c"
 $3924 = $3923; //@line 206 "mcbits/vec.c"
 $3925 = HEAP32[$3924>>2]|0; //@line 206 "mcbits/vec.c"
 $3926 = $119; //@line 206 "mcbits/vec.c"
 $3927 = $3926; //@line 206 "mcbits/vec.c"
 $3928 = HEAP32[$3927>>2]|0; //@line 206 "mcbits/vec.c"
 $3929 = (($3926) + 4)|0; //@line 206 "mcbits/vec.c"
 $3930 = $3929; //@line 206 "mcbits/vec.c"
 $3931 = HEAP32[$3930>>2]|0; //@line 206 "mcbits/vec.c"
 $3932 = $3922 ^ $3928; //@line 206 "mcbits/vec.c"
 $3933 = $3925 ^ $3931; //@line 206 "mcbits/vec.c"
 $3934 = $201; //@line 206 "mcbits/vec.c"
 $3935 = $3934; //@line 206 "mcbits/vec.c"
 HEAP32[$3935>>2] = $3932; //@line 206 "mcbits/vec.c"
 $3936 = (($3934) + 4)|0; //@line 206 "mcbits/vec.c"
 $3937 = $3936; //@line 206 "mcbits/vec.c"
 HEAP32[$3937>>2] = $3933; //@line 206 "mcbits/vec.c"
 $3938 = $19; //@line 207 "mcbits/vec.c"
 $3939 = $3938; //@line 207 "mcbits/vec.c"
 $3940 = HEAP32[$3939>>2]|0; //@line 207 "mcbits/vec.c"
 $3941 = (($3938) + 4)|0; //@line 207 "mcbits/vec.c"
 $3942 = $3941; //@line 207 "mcbits/vec.c"
 $3943 = HEAP32[$3942>>2]|0; //@line 207 "mcbits/vec.c"
 $3944 = $109; //@line 207 "mcbits/vec.c"
 $3945 = $3944; //@line 207 "mcbits/vec.c"
 $3946 = HEAP32[$3945>>2]|0; //@line 207 "mcbits/vec.c"
 $3947 = (($3944) + 4)|0; //@line 207 "mcbits/vec.c"
 $3948 = $3947; //@line 207 "mcbits/vec.c"
 $3949 = HEAP32[$3948>>2]|0; //@line 207 "mcbits/vec.c"
 $3950 = $3940 ^ $3946; //@line 207 "mcbits/vec.c"
 $3951 = $3943 ^ $3949; //@line 207 "mcbits/vec.c"
 $3952 = $202; //@line 207 "mcbits/vec.c"
 $3953 = $3952; //@line 207 "mcbits/vec.c"
 HEAP32[$3953>>2] = $3950; //@line 207 "mcbits/vec.c"
 $3954 = (($3952) + 4)|0; //@line 207 "mcbits/vec.c"
 $3955 = $3954; //@line 207 "mcbits/vec.c"
 HEAP32[$3955>>2] = $3951; //@line 207 "mcbits/vec.c"
 $3956 = $20; //@line 208 "mcbits/vec.c"
 $3957 = $3956; //@line 208 "mcbits/vec.c"
 $3958 = HEAP32[$3957>>2]|0; //@line 208 "mcbits/vec.c"
 $3959 = (($3956) + 4)|0; //@line 208 "mcbits/vec.c"
 $3960 = $3959; //@line 208 "mcbits/vec.c"
 $3961 = HEAP32[$3960>>2]|0; //@line 208 "mcbits/vec.c"
 $3962 = $120; //@line 208 "mcbits/vec.c"
 $3963 = $3962; //@line 208 "mcbits/vec.c"
 $3964 = HEAP32[$3963>>2]|0; //@line 208 "mcbits/vec.c"
 $3965 = (($3962) + 4)|0; //@line 208 "mcbits/vec.c"
 $3966 = $3965; //@line 208 "mcbits/vec.c"
 $3967 = HEAP32[$3966>>2]|0; //@line 208 "mcbits/vec.c"
 $3968 = $3958 ^ $3964; //@line 208 "mcbits/vec.c"
 $3969 = $3961 ^ $3967; //@line 208 "mcbits/vec.c"
 $3970 = $203; //@line 208 "mcbits/vec.c"
 $3971 = $3970; //@line 208 "mcbits/vec.c"
 HEAP32[$3971>>2] = $3968; //@line 208 "mcbits/vec.c"
 $3972 = (($3970) + 4)|0; //@line 208 "mcbits/vec.c"
 $3973 = $3972; //@line 208 "mcbits/vec.c"
 HEAP32[$3973>>2] = $3969; //@line 208 "mcbits/vec.c"
 $3974 = $8; //@line 209 "mcbits/vec.c"
 $3975 = $3974; //@line 209 "mcbits/vec.c"
 $3976 = HEAP32[$3975>>2]|0; //@line 209 "mcbits/vec.c"
 $3977 = (($3974) + 4)|0; //@line 209 "mcbits/vec.c"
 $3978 = $3977; //@line 209 "mcbits/vec.c"
 $3979 = HEAP32[$3978>>2]|0; //@line 209 "mcbits/vec.c"
 $3980 = $121; //@line 209 "mcbits/vec.c"
 $3981 = $3980; //@line 209 "mcbits/vec.c"
 $3982 = HEAP32[$3981>>2]|0; //@line 209 "mcbits/vec.c"
 $3983 = (($3980) + 4)|0; //@line 209 "mcbits/vec.c"
 $3984 = $3983; //@line 209 "mcbits/vec.c"
 $3985 = HEAP32[$3984>>2]|0; //@line 209 "mcbits/vec.c"
 $3986 = $3976 ^ $3982; //@line 209 "mcbits/vec.c"
 $3987 = $3979 ^ $3985; //@line 209 "mcbits/vec.c"
 $3988 = $204; //@line 209 "mcbits/vec.c"
 $3989 = $3988; //@line 209 "mcbits/vec.c"
 HEAP32[$3989>>2] = $3986; //@line 209 "mcbits/vec.c"
 $3990 = (($3988) + 4)|0; //@line 209 "mcbits/vec.c"
 $3991 = $3990; //@line 209 "mcbits/vec.c"
 HEAP32[$3991>>2] = $3987; //@line 209 "mcbits/vec.c"
 $3992 = $194; //@line 210 "mcbits/vec.c"
 $3993 = $3992; //@line 210 "mcbits/vec.c"
 $3994 = HEAP32[$3993>>2]|0; //@line 210 "mcbits/vec.c"
 $3995 = (($3992) + 4)|0; //@line 210 "mcbits/vec.c"
 $3996 = $3995; //@line 210 "mcbits/vec.c"
 $3997 = HEAP32[$3996>>2]|0; //@line 210 "mcbits/vec.c"
 $3998 = $145; //@line 210 "mcbits/vec.c"
 $3999 = $3998; //@line 210 "mcbits/vec.c"
 $4000 = HEAP32[$3999>>2]|0; //@line 210 "mcbits/vec.c"
 $4001 = (($3998) + 4)|0; //@line 210 "mcbits/vec.c"
 $4002 = $4001; //@line 210 "mcbits/vec.c"
 $4003 = HEAP32[$4002>>2]|0; //@line 210 "mcbits/vec.c"
 $4004 = $3994 ^ $4000; //@line 210 "mcbits/vec.c"
 $4005 = $3997 ^ $4003; //@line 210 "mcbits/vec.c"
 $4006 = $205; //@line 210 "mcbits/vec.c"
 $4007 = $4006; //@line 210 "mcbits/vec.c"
 HEAP32[$4007>>2] = $4004; //@line 210 "mcbits/vec.c"
 $4008 = (($4006) + 4)|0; //@line 210 "mcbits/vec.c"
 $4009 = $4008; //@line 210 "mcbits/vec.c"
 HEAP32[$4009>>2] = $4005; //@line 210 "mcbits/vec.c"
 $4010 = $195; //@line 211 "mcbits/vec.c"
 $4011 = $4010; //@line 211 "mcbits/vec.c"
 $4012 = HEAP32[$4011>>2]|0; //@line 211 "mcbits/vec.c"
 $4013 = (($4010) + 4)|0; //@line 211 "mcbits/vec.c"
 $4014 = $4013; //@line 211 "mcbits/vec.c"
 $4015 = HEAP32[$4014>>2]|0; //@line 211 "mcbits/vec.c"
 $4016 = $146; //@line 211 "mcbits/vec.c"
 $4017 = $4016; //@line 211 "mcbits/vec.c"
 $4018 = HEAP32[$4017>>2]|0; //@line 211 "mcbits/vec.c"
 $4019 = (($4016) + 4)|0; //@line 211 "mcbits/vec.c"
 $4020 = $4019; //@line 211 "mcbits/vec.c"
 $4021 = HEAP32[$4020>>2]|0; //@line 211 "mcbits/vec.c"
 $4022 = $4012 ^ $4018; //@line 211 "mcbits/vec.c"
 $4023 = $4015 ^ $4021; //@line 211 "mcbits/vec.c"
 $4024 = $206; //@line 211 "mcbits/vec.c"
 $4025 = $4024; //@line 211 "mcbits/vec.c"
 HEAP32[$4025>>2] = $4022; //@line 211 "mcbits/vec.c"
 $4026 = (($4024) + 4)|0; //@line 211 "mcbits/vec.c"
 $4027 = $4026; //@line 211 "mcbits/vec.c"
 HEAP32[$4027>>2] = $4023; //@line 211 "mcbits/vec.c"
 $4028 = $196; //@line 212 "mcbits/vec.c"
 $4029 = $4028; //@line 212 "mcbits/vec.c"
 $4030 = HEAP32[$4029>>2]|0; //@line 212 "mcbits/vec.c"
 $4031 = (($4028) + 4)|0; //@line 212 "mcbits/vec.c"
 $4032 = $4031; //@line 212 "mcbits/vec.c"
 $4033 = HEAP32[$4032>>2]|0; //@line 212 "mcbits/vec.c"
 $4034 = $148; //@line 212 "mcbits/vec.c"
 $4035 = $4034; //@line 212 "mcbits/vec.c"
 $4036 = HEAP32[$4035>>2]|0; //@line 212 "mcbits/vec.c"
 $4037 = (($4034) + 4)|0; //@line 212 "mcbits/vec.c"
 $4038 = $4037; //@line 212 "mcbits/vec.c"
 $4039 = HEAP32[$4038>>2]|0; //@line 212 "mcbits/vec.c"
 $4040 = $4030 ^ $4036; //@line 212 "mcbits/vec.c"
 $4041 = $4033 ^ $4039; //@line 212 "mcbits/vec.c"
 $4042 = $207; //@line 212 "mcbits/vec.c"
 $4043 = $4042; //@line 212 "mcbits/vec.c"
 HEAP32[$4043>>2] = $4040; //@line 212 "mcbits/vec.c"
 $4044 = (($4042) + 4)|0; //@line 212 "mcbits/vec.c"
 $4045 = $4044; //@line 212 "mcbits/vec.c"
 HEAP32[$4045>>2] = $4041; //@line 212 "mcbits/vec.c"
 $4046 = $197; //@line 213 "mcbits/vec.c"
 $4047 = $4046; //@line 213 "mcbits/vec.c"
 $4048 = HEAP32[$4047>>2]|0; //@line 213 "mcbits/vec.c"
 $4049 = (($4046) + 4)|0; //@line 213 "mcbits/vec.c"
 $4050 = $4049; //@line 213 "mcbits/vec.c"
 $4051 = HEAP32[$4050>>2]|0; //@line 213 "mcbits/vec.c"
 $4052 = $189; //@line 213 "mcbits/vec.c"
 $4053 = $4052; //@line 213 "mcbits/vec.c"
 $4054 = HEAP32[$4053>>2]|0; //@line 213 "mcbits/vec.c"
 $4055 = (($4052) + 4)|0; //@line 213 "mcbits/vec.c"
 $4056 = $4055; //@line 213 "mcbits/vec.c"
 $4057 = HEAP32[$4056>>2]|0; //@line 213 "mcbits/vec.c"
 $4058 = $4048 ^ $4054; //@line 213 "mcbits/vec.c"
 $4059 = $4051 ^ $4057; //@line 213 "mcbits/vec.c"
 $4060 = $208; //@line 213 "mcbits/vec.c"
 $4061 = $4060; //@line 213 "mcbits/vec.c"
 HEAP32[$4061>>2] = $4058; //@line 213 "mcbits/vec.c"
 $4062 = (($4060) + 4)|0; //@line 213 "mcbits/vec.c"
 $4063 = $4062; //@line 213 "mcbits/vec.c"
 HEAP32[$4063>>2] = $4059; //@line 213 "mcbits/vec.c"
 $4064 = $198; //@line 214 "mcbits/vec.c"
 $4065 = $4064; //@line 214 "mcbits/vec.c"
 $4066 = HEAP32[$4065>>2]|0; //@line 214 "mcbits/vec.c"
 $4067 = (($4064) + 4)|0; //@line 214 "mcbits/vec.c"
 $4068 = $4067; //@line 214 "mcbits/vec.c"
 $4069 = HEAP32[$4068>>2]|0; //@line 214 "mcbits/vec.c"
 $4070 = $190; //@line 214 "mcbits/vec.c"
 $4071 = $4070; //@line 214 "mcbits/vec.c"
 $4072 = HEAP32[$4071>>2]|0; //@line 214 "mcbits/vec.c"
 $4073 = (($4070) + 4)|0; //@line 214 "mcbits/vec.c"
 $4074 = $4073; //@line 214 "mcbits/vec.c"
 $4075 = HEAP32[$4074>>2]|0; //@line 214 "mcbits/vec.c"
 $4076 = $4066 ^ $4072; //@line 214 "mcbits/vec.c"
 $4077 = $4069 ^ $4075; //@line 214 "mcbits/vec.c"
 $4078 = $209; //@line 214 "mcbits/vec.c"
 $4079 = $4078; //@line 214 "mcbits/vec.c"
 HEAP32[$4079>>2] = $4076; //@line 214 "mcbits/vec.c"
 $4080 = (($4078) + 4)|0; //@line 214 "mcbits/vec.c"
 $4081 = $4080; //@line 214 "mcbits/vec.c"
 HEAP32[$4081>>2] = $4077; //@line 214 "mcbits/vec.c"
 $4082 = $199; //@line 215 "mcbits/vec.c"
 $4083 = $4082; //@line 215 "mcbits/vec.c"
 $4084 = HEAP32[$4083>>2]|0; //@line 215 "mcbits/vec.c"
 $4085 = (($4082) + 4)|0; //@line 215 "mcbits/vec.c"
 $4086 = $4085; //@line 215 "mcbits/vec.c"
 $4087 = HEAP32[$4086>>2]|0; //@line 215 "mcbits/vec.c"
 $4088 = $191; //@line 215 "mcbits/vec.c"
 $4089 = $4088; //@line 215 "mcbits/vec.c"
 $4090 = HEAP32[$4089>>2]|0; //@line 215 "mcbits/vec.c"
 $4091 = (($4088) + 4)|0; //@line 215 "mcbits/vec.c"
 $4092 = $4091; //@line 215 "mcbits/vec.c"
 $4093 = HEAP32[$4092>>2]|0; //@line 215 "mcbits/vec.c"
 $4094 = $4084 ^ $4090; //@line 215 "mcbits/vec.c"
 $4095 = $4087 ^ $4093; //@line 215 "mcbits/vec.c"
 $4096 = $210; //@line 215 "mcbits/vec.c"
 $4097 = $4096; //@line 215 "mcbits/vec.c"
 HEAP32[$4097>>2] = $4094; //@line 215 "mcbits/vec.c"
 $4098 = (($4096) + 4)|0; //@line 215 "mcbits/vec.c"
 $4099 = $4098; //@line 215 "mcbits/vec.c"
 HEAP32[$4099>>2] = $4095; //@line 215 "mcbits/vec.c"
 $4100 = $200; //@line 216 "mcbits/vec.c"
 $4101 = $4100; //@line 216 "mcbits/vec.c"
 $4102 = HEAP32[$4101>>2]|0; //@line 216 "mcbits/vec.c"
 $4103 = (($4100) + 4)|0; //@line 216 "mcbits/vec.c"
 $4104 = $4103; //@line 216 "mcbits/vec.c"
 $4105 = HEAP32[$4104>>2]|0; //@line 216 "mcbits/vec.c"
 $4106 = $192; //@line 216 "mcbits/vec.c"
 $4107 = $4106; //@line 216 "mcbits/vec.c"
 $4108 = HEAP32[$4107>>2]|0; //@line 216 "mcbits/vec.c"
 $4109 = (($4106) + 4)|0; //@line 216 "mcbits/vec.c"
 $4110 = $4109; //@line 216 "mcbits/vec.c"
 $4111 = HEAP32[$4110>>2]|0; //@line 216 "mcbits/vec.c"
 $4112 = $4102 ^ $4108; //@line 216 "mcbits/vec.c"
 $4113 = $4105 ^ $4111; //@line 216 "mcbits/vec.c"
 $4114 = $211; //@line 216 "mcbits/vec.c"
 $4115 = $4114; //@line 216 "mcbits/vec.c"
 HEAP32[$4115>>2] = $4112; //@line 216 "mcbits/vec.c"
 $4116 = (($4114) + 4)|0; //@line 216 "mcbits/vec.c"
 $4117 = $4116; //@line 216 "mcbits/vec.c"
 HEAP32[$4117>>2] = $4113; //@line 216 "mcbits/vec.c"
 $4118 = $201; //@line 217 "mcbits/vec.c"
 $4119 = $4118; //@line 217 "mcbits/vec.c"
 $4120 = HEAP32[$4119>>2]|0; //@line 217 "mcbits/vec.c"
 $4121 = (($4118) + 4)|0; //@line 217 "mcbits/vec.c"
 $4122 = $4121; //@line 217 "mcbits/vec.c"
 $4123 = HEAP32[$4122>>2]|0; //@line 217 "mcbits/vec.c"
 $4124 = $193; //@line 217 "mcbits/vec.c"
 $4125 = $4124; //@line 217 "mcbits/vec.c"
 $4126 = HEAP32[$4125>>2]|0; //@line 217 "mcbits/vec.c"
 $4127 = (($4124) + 4)|0; //@line 217 "mcbits/vec.c"
 $4128 = $4127; //@line 217 "mcbits/vec.c"
 $4129 = HEAP32[$4128>>2]|0; //@line 217 "mcbits/vec.c"
 $4130 = $4120 ^ $4126; //@line 217 "mcbits/vec.c"
 $4131 = $4123 ^ $4129; //@line 217 "mcbits/vec.c"
 $4132 = $212; //@line 217 "mcbits/vec.c"
 $4133 = $4132; //@line 217 "mcbits/vec.c"
 HEAP32[$4133>>2] = $4130; //@line 217 "mcbits/vec.c"
 $4134 = (($4132) + 4)|0; //@line 217 "mcbits/vec.c"
 $4135 = $4134; //@line 217 "mcbits/vec.c"
 HEAP32[$4135>>2] = $4131; //@line 217 "mcbits/vec.c"
 $4136 = $202; //@line 218 "mcbits/vec.c"
 $4137 = $4136; //@line 218 "mcbits/vec.c"
 $4138 = HEAP32[$4137>>2]|0; //@line 218 "mcbits/vec.c"
 $4139 = (($4136) + 4)|0; //@line 218 "mcbits/vec.c"
 $4140 = $4139; //@line 218 "mcbits/vec.c"
 $4141 = HEAP32[$4140>>2]|0; //@line 218 "mcbits/vec.c"
 $4142 = $161; //@line 218 "mcbits/vec.c"
 $4143 = $4142; //@line 218 "mcbits/vec.c"
 $4144 = HEAP32[$4143>>2]|0; //@line 218 "mcbits/vec.c"
 $4145 = (($4142) + 4)|0; //@line 218 "mcbits/vec.c"
 $4146 = $4145; //@line 218 "mcbits/vec.c"
 $4147 = HEAP32[$4146>>2]|0; //@line 218 "mcbits/vec.c"
 $4148 = $4138 ^ $4144; //@line 218 "mcbits/vec.c"
 $4149 = $4141 ^ $4147; //@line 218 "mcbits/vec.c"
 $4150 = $213; //@line 218 "mcbits/vec.c"
 $4151 = $4150; //@line 218 "mcbits/vec.c"
 HEAP32[$4151>>2] = $4148; //@line 218 "mcbits/vec.c"
 $4152 = (($4150) + 4)|0; //@line 218 "mcbits/vec.c"
 $4153 = $4152; //@line 218 "mcbits/vec.c"
 HEAP32[$4153>>2] = $4149; //@line 218 "mcbits/vec.c"
 $4154 = $203; //@line 219 "mcbits/vec.c"
 $4155 = $4154; //@line 219 "mcbits/vec.c"
 $4156 = HEAP32[$4155>>2]|0; //@line 219 "mcbits/vec.c"
 $4157 = (($4154) + 4)|0; //@line 219 "mcbits/vec.c"
 $4158 = $4157; //@line 219 "mcbits/vec.c"
 $4159 = HEAP32[$4158>>2]|0; //@line 219 "mcbits/vec.c"
 $4160 = $162; //@line 219 "mcbits/vec.c"
 $4161 = $4160; //@line 219 "mcbits/vec.c"
 $4162 = HEAP32[$4161>>2]|0; //@line 219 "mcbits/vec.c"
 $4163 = (($4160) + 4)|0; //@line 219 "mcbits/vec.c"
 $4164 = $4163; //@line 219 "mcbits/vec.c"
 $4165 = HEAP32[$4164>>2]|0; //@line 219 "mcbits/vec.c"
 $4166 = $4156 ^ $4162; //@line 219 "mcbits/vec.c"
 $4167 = $4159 ^ $4165; //@line 219 "mcbits/vec.c"
 $4168 = $214; //@line 219 "mcbits/vec.c"
 $4169 = $4168; //@line 219 "mcbits/vec.c"
 HEAP32[$4169>>2] = $4166; //@line 219 "mcbits/vec.c"
 $4170 = (($4168) + 4)|0; //@line 219 "mcbits/vec.c"
 $4171 = $4170; //@line 219 "mcbits/vec.c"
 HEAP32[$4171>>2] = $4167; //@line 219 "mcbits/vec.c"
 $4172 = $204; //@line 220 "mcbits/vec.c"
 $4173 = $4172; //@line 220 "mcbits/vec.c"
 $4174 = HEAP32[$4173>>2]|0; //@line 220 "mcbits/vec.c"
 $4175 = (($4172) + 4)|0; //@line 220 "mcbits/vec.c"
 $4176 = $4175; //@line 220 "mcbits/vec.c"
 $4177 = HEAP32[$4176>>2]|0; //@line 220 "mcbits/vec.c"
 $4178 = $150; //@line 220 "mcbits/vec.c"
 $4179 = $4178; //@line 220 "mcbits/vec.c"
 $4180 = HEAP32[$4179>>2]|0; //@line 220 "mcbits/vec.c"
 $4181 = (($4178) + 4)|0; //@line 220 "mcbits/vec.c"
 $4182 = $4181; //@line 220 "mcbits/vec.c"
 $4183 = HEAP32[$4182>>2]|0; //@line 220 "mcbits/vec.c"
 $4184 = $4174 ^ $4180; //@line 220 "mcbits/vec.c"
 $4185 = $4177 ^ $4183; //@line 220 "mcbits/vec.c"
 $4186 = $215; //@line 220 "mcbits/vec.c"
 $4187 = $4186; //@line 220 "mcbits/vec.c"
 HEAP32[$4187>>2] = $4184; //@line 220 "mcbits/vec.c"
 $4188 = (($4186) + 4)|0; //@line 220 "mcbits/vec.c"
 $4189 = $4188; //@line 220 "mcbits/vec.c"
 HEAP32[$4189>>2] = $4185; //@line 220 "mcbits/vec.c"
 $4190 = $55; //@line 222 "mcbits/vec.c"
 $4191 = $4190; //@line 222 "mcbits/vec.c"
 $4192 = HEAP32[$4191>>2]|0; //@line 222 "mcbits/vec.c"
 $4193 = (($4190) + 4)|0; //@line 222 "mcbits/vec.c"
 $4194 = $4193; //@line 222 "mcbits/vec.c"
 $4195 = HEAP32[$4194>>2]|0; //@line 222 "mcbits/vec.c"
 $4196 = $7; //@line 222 "mcbits/vec.c"
 $4197 = $4196; //@line 222 "mcbits/vec.c"
 HEAP32[$4197>>2] = $4192; //@line 222 "mcbits/vec.c"
 $4198 = (($4196) + 4)|0; //@line 222 "mcbits/vec.c"
 $4199 = $4198; //@line 222 "mcbits/vec.c"
 HEAP32[$4199>>2] = $4195; //@line 222 "mcbits/vec.c"
 $4200 = $56; //@line 223 "mcbits/vec.c"
 $4201 = $4200; //@line 223 "mcbits/vec.c"
 $4202 = HEAP32[$4201>>2]|0; //@line 223 "mcbits/vec.c"
 $4203 = (($4200) + 4)|0; //@line 223 "mcbits/vec.c"
 $4204 = $4203; //@line 223 "mcbits/vec.c"
 $4205 = HEAP32[$4204>>2]|0; //@line 223 "mcbits/vec.c"
 $4206 = ((($7)) + 8|0); //@line 223 "mcbits/vec.c"
 $4207 = $4206; //@line 223 "mcbits/vec.c"
 $4208 = $4207; //@line 223 "mcbits/vec.c"
 HEAP32[$4208>>2] = $4202; //@line 223 "mcbits/vec.c"
 $4209 = (($4207) + 4)|0; //@line 223 "mcbits/vec.c"
 $4210 = $4209; //@line 223 "mcbits/vec.c"
 HEAP32[$4210>>2] = $4205; //@line 223 "mcbits/vec.c"
 $4211 = $58; //@line 224 "mcbits/vec.c"
 $4212 = $4211; //@line 224 "mcbits/vec.c"
 $4213 = HEAP32[$4212>>2]|0; //@line 224 "mcbits/vec.c"
 $4214 = (($4211) + 4)|0; //@line 224 "mcbits/vec.c"
 $4215 = $4214; //@line 224 "mcbits/vec.c"
 $4216 = HEAP32[$4215>>2]|0; //@line 224 "mcbits/vec.c"
 $4217 = ((($7)) + 16|0); //@line 224 "mcbits/vec.c"
 $4218 = $4217; //@line 224 "mcbits/vec.c"
 $4219 = $4218; //@line 224 "mcbits/vec.c"
 HEAP32[$4219>>2] = $4213; //@line 224 "mcbits/vec.c"
 $4220 = (($4218) + 4)|0; //@line 224 "mcbits/vec.c"
 $4221 = $4220; //@line 224 "mcbits/vec.c"
 HEAP32[$4221>>2] = $4216; //@line 224 "mcbits/vec.c"
 $4222 = $115; //@line 225 "mcbits/vec.c"
 $4223 = $4222; //@line 225 "mcbits/vec.c"
 $4224 = HEAP32[$4223>>2]|0; //@line 225 "mcbits/vec.c"
 $4225 = (($4222) + 4)|0; //@line 225 "mcbits/vec.c"
 $4226 = $4225; //@line 225 "mcbits/vec.c"
 $4227 = HEAP32[$4226>>2]|0; //@line 225 "mcbits/vec.c"
 $4228 = ((($7)) + 24|0); //@line 225 "mcbits/vec.c"
 $4229 = $4228; //@line 225 "mcbits/vec.c"
 $4230 = $4229; //@line 225 "mcbits/vec.c"
 HEAP32[$4230>>2] = $4224; //@line 225 "mcbits/vec.c"
 $4231 = (($4229) + 4)|0; //@line 225 "mcbits/vec.c"
 $4232 = $4231; //@line 225 "mcbits/vec.c"
 HEAP32[$4232>>2] = $4227; //@line 225 "mcbits/vec.c"
 $4233 = $116; //@line 226 "mcbits/vec.c"
 $4234 = $4233; //@line 226 "mcbits/vec.c"
 $4235 = HEAP32[$4234>>2]|0; //@line 226 "mcbits/vec.c"
 $4236 = (($4233) + 4)|0; //@line 226 "mcbits/vec.c"
 $4237 = $4236; //@line 226 "mcbits/vec.c"
 $4238 = HEAP32[$4237>>2]|0; //@line 226 "mcbits/vec.c"
 $4239 = ((($7)) + 32|0); //@line 226 "mcbits/vec.c"
 $4240 = $4239; //@line 226 "mcbits/vec.c"
 $4241 = $4240; //@line 226 "mcbits/vec.c"
 HEAP32[$4241>>2] = $4235; //@line 226 "mcbits/vec.c"
 $4242 = (($4240) + 4)|0; //@line 226 "mcbits/vec.c"
 $4243 = $4242; //@line 226 "mcbits/vec.c"
 HEAP32[$4243>>2] = $4238; //@line 226 "mcbits/vec.c"
 $4244 = $117; //@line 227 "mcbits/vec.c"
 $4245 = $4244; //@line 227 "mcbits/vec.c"
 $4246 = HEAP32[$4245>>2]|0; //@line 227 "mcbits/vec.c"
 $4247 = (($4244) + 4)|0; //@line 227 "mcbits/vec.c"
 $4248 = $4247; //@line 227 "mcbits/vec.c"
 $4249 = HEAP32[$4248>>2]|0; //@line 227 "mcbits/vec.c"
 $4250 = ((($7)) + 40|0); //@line 227 "mcbits/vec.c"
 $4251 = $4250; //@line 227 "mcbits/vec.c"
 $4252 = $4251; //@line 227 "mcbits/vec.c"
 HEAP32[$4252>>2] = $4246; //@line 227 "mcbits/vec.c"
 $4253 = (($4251) + 4)|0; //@line 227 "mcbits/vec.c"
 $4254 = $4253; //@line 227 "mcbits/vec.c"
 HEAP32[$4254>>2] = $4249; //@line 227 "mcbits/vec.c"
 $4255 = $205; //@line 228 "mcbits/vec.c"
 $4256 = $4255; //@line 228 "mcbits/vec.c"
 $4257 = HEAP32[$4256>>2]|0; //@line 228 "mcbits/vec.c"
 $4258 = (($4255) + 4)|0; //@line 228 "mcbits/vec.c"
 $4259 = $4258; //@line 228 "mcbits/vec.c"
 $4260 = HEAP32[$4259>>2]|0; //@line 228 "mcbits/vec.c"
 $4261 = ((($7)) + 48|0); //@line 228 "mcbits/vec.c"
 $4262 = $4261; //@line 228 "mcbits/vec.c"
 $4263 = $4262; //@line 228 "mcbits/vec.c"
 HEAP32[$4263>>2] = $4257; //@line 228 "mcbits/vec.c"
 $4264 = (($4262) + 4)|0; //@line 228 "mcbits/vec.c"
 $4265 = $4264; //@line 228 "mcbits/vec.c"
 HEAP32[$4265>>2] = $4260; //@line 228 "mcbits/vec.c"
 $4266 = $206; //@line 229 "mcbits/vec.c"
 $4267 = $4266; //@line 229 "mcbits/vec.c"
 $4268 = HEAP32[$4267>>2]|0; //@line 229 "mcbits/vec.c"
 $4269 = (($4266) + 4)|0; //@line 229 "mcbits/vec.c"
 $4270 = $4269; //@line 229 "mcbits/vec.c"
 $4271 = HEAP32[$4270>>2]|0; //@line 229 "mcbits/vec.c"
 $4272 = ((($7)) + 56|0); //@line 229 "mcbits/vec.c"
 $4273 = $4272; //@line 229 "mcbits/vec.c"
 $4274 = $4273; //@line 229 "mcbits/vec.c"
 HEAP32[$4274>>2] = $4268; //@line 229 "mcbits/vec.c"
 $4275 = (($4273) + 4)|0; //@line 229 "mcbits/vec.c"
 $4276 = $4275; //@line 229 "mcbits/vec.c"
 HEAP32[$4276>>2] = $4271; //@line 229 "mcbits/vec.c"
 $4277 = $207; //@line 230 "mcbits/vec.c"
 $4278 = $4277; //@line 230 "mcbits/vec.c"
 $4279 = HEAP32[$4278>>2]|0; //@line 230 "mcbits/vec.c"
 $4280 = (($4277) + 4)|0; //@line 230 "mcbits/vec.c"
 $4281 = $4280; //@line 230 "mcbits/vec.c"
 $4282 = HEAP32[$4281>>2]|0; //@line 230 "mcbits/vec.c"
 $4283 = ((($7)) + 64|0); //@line 230 "mcbits/vec.c"
 $4284 = $4283; //@line 230 "mcbits/vec.c"
 $4285 = $4284; //@line 230 "mcbits/vec.c"
 HEAP32[$4285>>2] = $4279; //@line 230 "mcbits/vec.c"
 $4286 = (($4284) + 4)|0; //@line 230 "mcbits/vec.c"
 $4287 = $4286; //@line 230 "mcbits/vec.c"
 HEAP32[$4287>>2] = $4282; //@line 230 "mcbits/vec.c"
 $4288 = $208; //@line 231 "mcbits/vec.c"
 $4289 = $4288; //@line 231 "mcbits/vec.c"
 $4290 = HEAP32[$4289>>2]|0; //@line 231 "mcbits/vec.c"
 $4291 = (($4288) + 4)|0; //@line 231 "mcbits/vec.c"
 $4292 = $4291; //@line 231 "mcbits/vec.c"
 $4293 = HEAP32[$4292>>2]|0; //@line 231 "mcbits/vec.c"
 $4294 = ((($7)) + 72|0); //@line 231 "mcbits/vec.c"
 $4295 = $4294; //@line 231 "mcbits/vec.c"
 $4296 = $4295; //@line 231 "mcbits/vec.c"
 HEAP32[$4296>>2] = $4290; //@line 231 "mcbits/vec.c"
 $4297 = (($4295) + 4)|0; //@line 231 "mcbits/vec.c"
 $4298 = $4297; //@line 231 "mcbits/vec.c"
 HEAP32[$4298>>2] = $4293; //@line 231 "mcbits/vec.c"
 $4299 = $209; //@line 232 "mcbits/vec.c"
 $4300 = $4299; //@line 232 "mcbits/vec.c"
 $4301 = HEAP32[$4300>>2]|0; //@line 232 "mcbits/vec.c"
 $4302 = (($4299) + 4)|0; //@line 232 "mcbits/vec.c"
 $4303 = $4302; //@line 232 "mcbits/vec.c"
 $4304 = HEAP32[$4303>>2]|0; //@line 232 "mcbits/vec.c"
 $4305 = ((($7)) + 80|0); //@line 232 "mcbits/vec.c"
 $4306 = $4305; //@line 232 "mcbits/vec.c"
 $4307 = $4306; //@line 232 "mcbits/vec.c"
 HEAP32[$4307>>2] = $4301; //@line 232 "mcbits/vec.c"
 $4308 = (($4306) + 4)|0; //@line 232 "mcbits/vec.c"
 $4309 = $4308; //@line 232 "mcbits/vec.c"
 HEAP32[$4309>>2] = $4304; //@line 232 "mcbits/vec.c"
 $4310 = $210; //@line 233 "mcbits/vec.c"
 $4311 = $4310; //@line 233 "mcbits/vec.c"
 $4312 = HEAP32[$4311>>2]|0; //@line 233 "mcbits/vec.c"
 $4313 = (($4310) + 4)|0; //@line 233 "mcbits/vec.c"
 $4314 = $4313; //@line 233 "mcbits/vec.c"
 $4315 = HEAP32[$4314>>2]|0; //@line 233 "mcbits/vec.c"
 $4316 = ((($7)) + 88|0); //@line 233 "mcbits/vec.c"
 $4317 = $4316; //@line 233 "mcbits/vec.c"
 $4318 = $4317; //@line 233 "mcbits/vec.c"
 HEAP32[$4318>>2] = $4312; //@line 233 "mcbits/vec.c"
 $4319 = (($4317) + 4)|0; //@line 233 "mcbits/vec.c"
 $4320 = $4319; //@line 233 "mcbits/vec.c"
 HEAP32[$4320>>2] = $4315; //@line 233 "mcbits/vec.c"
 $4321 = $211; //@line 234 "mcbits/vec.c"
 $4322 = $4321; //@line 234 "mcbits/vec.c"
 $4323 = HEAP32[$4322>>2]|0; //@line 234 "mcbits/vec.c"
 $4324 = (($4321) + 4)|0; //@line 234 "mcbits/vec.c"
 $4325 = $4324; //@line 234 "mcbits/vec.c"
 $4326 = HEAP32[$4325>>2]|0; //@line 234 "mcbits/vec.c"
 $4327 = ((($7)) + 96|0); //@line 234 "mcbits/vec.c"
 $4328 = $4327; //@line 234 "mcbits/vec.c"
 $4329 = $4328; //@line 234 "mcbits/vec.c"
 HEAP32[$4329>>2] = $4323; //@line 234 "mcbits/vec.c"
 $4330 = (($4328) + 4)|0; //@line 234 "mcbits/vec.c"
 $4331 = $4330; //@line 234 "mcbits/vec.c"
 HEAP32[$4331>>2] = $4326; //@line 234 "mcbits/vec.c"
 $4332 = $212; //@line 235 "mcbits/vec.c"
 $4333 = $4332; //@line 235 "mcbits/vec.c"
 $4334 = HEAP32[$4333>>2]|0; //@line 235 "mcbits/vec.c"
 $4335 = (($4332) + 4)|0; //@line 235 "mcbits/vec.c"
 $4336 = $4335; //@line 235 "mcbits/vec.c"
 $4337 = HEAP32[$4336>>2]|0; //@line 235 "mcbits/vec.c"
 $4338 = ((($7)) + 104|0); //@line 235 "mcbits/vec.c"
 $4339 = $4338; //@line 235 "mcbits/vec.c"
 $4340 = $4339; //@line 235 "mcbits/vec.c"
 HEAP32[$4340>>2] = $4334; //@line 235 "mcbits/vec.c"
 $4341 = (($4339) + 4)|0; //@line 235 "mcbits/vec.c"
 $4342 = $4341; //@line 235 "mcbits/vec.c"
 HEAP32[$4342>>2] = $4337; //@line 235 "mcbits/vec.c"
 $4343 = $213; //@line 236 "mcbits/vec.c"
 $4344 = $4343; //@line 236 "mcbits/vec.c"
 $4345 = HEAP32[$4344>>2]|0; //@line 236 "mcbits/vec.c"
 $4346 = (($4343) + 4)|0; //@line 236 "mcbits/vec.c"
 $4347 = $4346; //@line 236 "mcbits/vec.c"
 $4348 = HEAP32[$4347>>2]|0; //@line 236 "mcbits/vec.c"
 $4349 = ((($7)) + 112|0); //@line 236 "mcbits/vec.c"
 $4350 = $4349; //@line 236 "mcbits/vec.c"
 $4351 = $4350; //@line 236 "mcbits/vec.c"
 HEAP32[$4351>>2] = $4345; //@line 236 "mcbits/vec.c"
 $4352 = (($4350) + 4)|0; //@line 236 "mcbits/vec.c"
 $4353 = $4352; //@line 236 "mcbits/vec.c"
 HEAP32[$4353>>2] = $4348; //@line 236 "mcbits/vec.c"
 $4354 = $214; //@line 237 "mcbits/vec.c"
 $4355 = $4354; //@line 237 "mcbits/vec.c"
 $4356 = HEAP32[$4355>>2]|0; //@line 237 "mcbits/vec.c"
 $4357 = (($4354) + 4)|0; //@line 237 "mcbits/vec.c"
 $4358 = $4357; //@line 237 "mcbits/vec.c"
 $4359 = HEAP32[$4358>>2]|0; //@line 237 "mcbits/vec.c"
 $4360 = ((($7)) + 120|0); //@line 237 "mcbits/vec.c"
 $4361 = $4360; //@line 237 "mcbits/vec.c"
 $4362 = $4361; //@line 237 "mcbits/vec.c"
 HEAP32[$4362>>2] = $4356; //@line 237 "mcbits/vec.c"
 $4363 = (($4361) + 4)|0; //@line 237 "mcbits/vec.c"
 $4364 = $4363; //@line 237 "mcbits/vec.c"
 HEAP32[$4364>>2] = $4359; //@line 237 "mcbits/vec.c"
 $4365 = $215; //@line 238 "mcbits/vec.c"
 $4366 = $4365; //@line 238 "mcbits/vec.c"
 $4367 = HEAP32[$4366>>2]|0; //@line 238 "mcbits/vec.c"
 $4368 = (($4365) + 4)|0; //@line 238 "mcbits/vec.c"
 $4369 = $4368; //@line 238 "mcbits/vec.c"
 $4370 = HEAP32[$4369>>2]|0; //@line 238 "mcbits/vec.c"
 $4371 = ((($7)) + 128|0); //@line 238 "mcbits/vec.c"
 $4372 = $4371; //@line 238 "mcbits/vec.c"
 $4373 = $4372; //@line 238 "mcbits/vec.c"
 HEAP32[$4373>>2] = $4367; //@line 238 "mcbits/vec.c"
 $4374 = (($4372) + 4)|0; //@line 238 "mcbits/vec.c"
 $4375 = $4374; //@line 238 "mcbits/vec.c"
 HEAP32[$4375>>2] = $4370; //@line 238 "mcbits/vec.c"
 $4376 = $122; //@line 239 "mcbits/vec.c"
 $4377 = $4376; //@line 239 "mcbits/vec.c"
 $4378 = HEAP32[$4377>>2]|0; //@line 239 "mcbits/vec.c"
 $4379 = (($4376) + 4)|0; //@line 239 "mcbits/vec.c"
 $4380 = $4379; //@line 239 "mcbits/vec.c"
 $4381 = HEAP32[$4380>>2]|0; //@line 239 "mcbits/vec.c"
 $4382 = ((($7)) + 136|0); //@line 239 "mcbits/vec.c"
 $4383 = $4382; //@line 239 "mcbits/vec.c"
 $4384 = $4383; //@line 239 "mcbits/vec.c"
 HEAP32[$4384>>2] = $4378; //@line 239 "mcbits/vec.c"
 $4385 = (($4383) + 4)|0; //@line 239 "mcbits/vec.c"
 $4386 = $4385; //@line 239 "mcbits/vec.c"
 HEAP32[$4386>>2] = $4381; //@line 239 "mcbits/vec.c"
 $4387 = $123; //@line 240 "mcbits/vec.c"
 $4388 = $4387; //@line 240 "mcbits/vec.c"
 $4389 = HEAP32[$4388>>2]|0; //@line 240 "mcbits/vec.c"
 $4390 = (($4387) + 4)|0; //@line 240 "mcbits/vec.c"
 $4391 = $4390; //@line 240 "mcbits/vec.c"
 $4392 = HEAP32[$4391>>2]|0; //@line 240 "mcbits/vec.c"
 $4393 = ((($7)) + 144|0); //@line 240 "mcbits/vec.c"
 $4394 = $4393; //@line 240 "mcbits/vec.c"
 $4395 = $4394; //@line 240 "mcbits/vec.c"
 HEAP32[$4395>>2] = $4389; //@line 240 "mcbits/vec.c"
 $4396 = (($4394) + 4)|0; //@line 240 "mcbits/vec.c"
 $4397 = $4396; //@line 240 "mcbits/vec.c"
 HEAP32[$4397>>2] = $4392; //@line 240 "mcbits/vec.c"
 $4398 = $124; //@line 241 "mcbits/vec.c"
 $4399 = $4398; //@line 241 "mcbits/vec.c"
 $4400 = HEAP32[$4399>>2]|0; //@line 241 "mcbits/vec.c"
 $4401 = (($4398) + 4)|0; //@line 241 "mcbits/vec.c"
 $4402 = $4401; //@line 241 "mcbits/vec.c"
 $4403 = HEAP32[$4402>>2]|0; //@line 241 "mcbits/vec.c"
 $4404 = ((($7)) + 152|0); //@line 241 "mcbits/vec.c"
 $4405 = $4404; //@line 241 "mcbits/vec.c"
 $4406 = $4405; //@line 241 "mcbits/vec.c"
 HEAP32[$4406>>2] = $4400; //@line 241 "mcbits/vec.c"
 $4407 = (($4405) + 4)|0; //@line 241 "mcbits/vec.c"
 $4408 = $4407; //@line 241 "mcbits/vec.c"
 HEAP32[$4408>>2] = $4403; //@line 241 "mcbits/vec.c"
 $4409 = $19; //@line 242 "mcbits/vec.c"
 $4410 = $4409; //@line 242 "mcbits/vec.c"
 $4411 = HEAP32[$4410>>2]|0; //@line 242 "mcbits/vec.c"
 $4412 = (($4409) + 4)|0; //@line 242 "mcbits/vec.c"
 $4413 = $4412; //@line 242 "mcbits/vec.c"
 $4414 = HEAP32[$4413>>2]|0; //@line 242 "mcbits/vec.c"
 $4415 = ((($7)) + 160|0); //@line 242 "mcbits/vec.c"
 $4416 = $4415; //@line 242 "mcbits/vec.c"
 $4417 = $4416; //@line 242 "mcbits/vec.c"
 HEAP32[$4417>>2] = $4411; //@line 242 "mcbits/vec.c"
 $4418 = (($4416) + 4)|0; //@line 242 "mcbits/vec.c"
 $4419 = $4418; //@line 242 "mcbits/vec.c"
 HEAP32[$4419>>2] = $4414; //@line 242 "mcbits/vec.c"
 $4420 = $20; //@line 243 "mcbits/vec.c"
 $4421 = $4420; //@line 243 "mcbits/vec.c"
 $4422 = HEAP32[$4421>>2]|0; //@line 243 "mcbits/vec.c"
 $4423 = (($4420) + 4)|0; //@line 243 "mcbits/vec.c"
 $4424 = $4423; //@line 243 "mcbits/vec.c"
 $4425 = HEAP32[$4424>>2]|0; //@line 243 "mcbits/vec.c"
 $4426 = ((($7)) + 168|0); //@line 243 "mcbits/vec.c"
 $4427 = $4426; //@line 243 "mcbits/vec.c"
 $4428 = $4427; //@line 243 "mcbits/vec.c"
 HEAP32[$4428>>2] = $4422; //@line 243 "mcbits/vec.c"
 $4429 = (($4427) + 4)|0; //@line 243 "mcbits/vec.c"
 $4430 = $4429; //@line 243 "mcbits/vec.c"
 HEAP32[$4430>>2] = $4425; //@line 243 "mcbits/vec.c"
 $4431 = $8; //@line 244 "mcbits/vec.c"
 $4432 = $4431; //@line 244 "mcbits/vec.c"
 $4433 = HEAP32[$4432>>2]|0; //@line 244 "mcbits/vec.c"
 $4434 = (($4431) + 4)|0; //@line 244 "mcbits/vec.c"
 $4435 = $4434; //@line 244 "mcbits/vec.c"
 $4436 = HEAP32[$4435>>2]|0; //@line 244 "mcbits/vec.c"
 $4437 = ((($7)) + 176|0); //@line 244 "mcbits/vec.c"
 $4438 = $4437; //@line 244 "mcbits/vec.c"
 $4439 = $4438; //@line 244 "mcbits/vec.c"
 HEAP32[$4439>>2] = $4433; //@line 244 "mcbits/vec.c"
 $4440 = (($4438) + 4)|0; //@line 244 "mcbits/vec.c"
 $4441 = $4440; //@line 244 "mcbits/vec.c"
 HEAP32[$4441>>2] = $4436; //@line 244 "mcbits/vec.c"
 $6 = 22; //@line 248 "mcbits/vec.c"
 while(1) {
  $4442 = $6; //@line 248 "mcbits/vec.c"
  $4443 = ($4442|0)>=(12); //@line 248 "mcbits/vec.c"
  if (!($4443)) {
   break;
  }
  $4444 = $6; //@line 250 "mcbits/vec.c"
  $4445 = (($7) + ($4444<<3)|0); //@line 250 "mcbits/vec.c"
  $4446 = $4445; //@line 250 "mcbits/vec.c"
  $4447 = $4446; //@line 250 "mcbits/vec.c"
  $4448 = HEAP32[$4447>>2]|0; //@line 250 "mcbits/vec.c"
  $4449 = (($4446) + 4)|0; //@line 250 "mcbits/vec.c"
  $4450 = $4449; //@line 250 "mcbits/vec.c"
  $4451 = HEAP32[$4450>>2]|0; //@line 250 "mcbits/vec.c"
  $4452 = $6; //@line 250 "mcbits/vec.c"
  $4453 = (($4452) - 9)|0; //@line 250 "mcbits/vec.c"
  $4454 = (($7) + ($4453<<3)|0); //@line 250 "mcbits/vec.c"
  $4455 = $4454; //@line 250 "mcbits/vec.c"
  $4456 = $4455; //@line 250 "mcbits/vec.c"
  $4457 = HEAP32[$4456>>2]|0; //@line 250 "mcbits/vec.c"
  $4458 = (($4455) + 4)|0; //@line 250 "mcbits/vec.c"
  $4459 = $4458; //@line 250 "mcbits/vec.c"
  $4460 = HEAP32[$4459>>2]|0; //@line 250 "mcbits/vec.c"
  $4461 = $4457 ^ $4448; //@line 250 "mcbits/vec.c"
  $4462 = $4460 ^ $4451; //@line 250 "mcbits/vec.c"
  $4463 = $4454; //@line 250 "mcbits/vec.c"
  $4464 = $4463; //@line 250 "mcbits/vec.c"
  HEAP32[$4464>>2] = $4461; //@line 250 "mcbits/vec.c"
  $4465 = (($4463) + 4)|0; //@line 250 "mcbits/vec.c"
  $4466 = $4465; //@line 250 "mcbits/vec.c"
  HEAP32[$4466>>2] = $4462; //@line 250 "mcbits/vec.c"
  $4467 = $6; //@line 251 "mcbits/vec.c"
  $4468 = (($7) + ($4467<<3)|0); //@line 251 "mcbits/vec.c"
  $4469 = $4468; //@line 251 "mcbits/vec.c"
  $4470 = $4469; //@line 251 "mcbits/vec.c"
  $4471 = HEAP32[$4470>>2]|0; //@line 251 "mcbits/vec.c"
  $4472 = (($4469) + 4)|0; //@line 251 "mcbits/vec.c"
  $4473 = $4472; //@line 251 "mcbits/vec.c"
  $4474 = HEAP32[$4473>>2]|0; //@line 251 "mcbits/vec.c"
  $4475 = $6; //@line 251 "mcbits/vec.c"
  $4476 = (($4475) - 12)|0; //@line 251 "mcbits/vec.c"
  $4477 = (($7) + ($4476<<3)|0); //@line 251 "mcbits/vec.c"
  $4478 = $4477; //@line 251 "mcbits/vec.c"
  $4479 = $4478; //@line 251 "mcbits/vec.c"
  $4480 = HEAP32[$4479>>2]|0; //@line 251 "mcbits/vec.c"
  $4481 = (($4478) + 4)|0; //@line 251 "mcbits/vec.c"
  $4482 = $4481; //@line 251 "mcbits/vec.c"
  $4483 = HEAP32[$4482>>2]|0; //@line 251 "mcbits/vec.c"
  $4484 = $4480 ^ $4471; //@line 251 "mcbits/vec.c"
  $4485 = $4483 ^ $4474; //@line 251 "mcbits/vec.c"
  $4486 = $4477; //@line 251 "mcbits/vec.c"
  $4487 = $4486; //@line 251 "mcbits/vec.c"
  HEAP32[$4487>>2] = $4484; //@line 251 "mcbits/vec.c"
  $4488 = (($4486) + 4)|0; //@line 251 "mcbits/vec.c"
  $4489 = $4488; //@line 251 "mcbits/vec.c"
  HEAP32[$4489>>2] = $4485; //@line 251 "mcbits/vec.c"
  $4490 = $6; //@line 248 "mcbits/vec.c"
  $4491 = (($4490) + -1)|0; //@line 248 "mcbits/vec.c"
  $6 = $4491; //@line 248 "mcbits/vec.c"
 }
 $6 = 0; //@line 256 "mcbits/vec.c"
 while(1) {
  $4492 = $6; //@line 256 "mcbits/vec.c"
  $4493 = ($4492|0)<(12); //@line 256 "mcbits/vec.c"
  if (!($4493)) {
   break;
  }
  $4494 = $6; //@line 257 "mcbits/vec.c"
  $4495 = (($7) + ($4494<<3)|0); //@line 257 "mcbits/vec.c"
  $4496 = $4495; //@line 257 "mcbits/vec.c"
  $4497 = $4496; //@line 257 "mcbits/vec.c"
  $4498 = HEAP32[$4497>>2]|0; //@line 257 "mcbits/vec.c"
  $4499 = (($4496) + 4)|0; //@line 257 "mcbits/vec.c"
  $4500 = $4499; //@line 257 "mcbits/vec.c"
  $4501 = HEAP32[$4500>>2]|0; //@line 257 "mcbits/vec.c"
  $4502 = $3; //@line 257 "mcbits/vec.c"
  $4503 = $6; //@line 257 "mcbits/vec.c"
  $4504 = (($4502) + ($4503<<3)|0); //@line 257 "mcbits/vec.c"
  $4505 = $4504; //@line 257 "mcbits/vec.c"
  $4506 = $4505; //@line 257 "mcbits/vec.c"
  HEAP32[$4506>>2] = $4498; //@line 257 "mcbits/vec.c"
  $4507 = (($4505) + 4)|0; //@line 257 "mcbits/vec.c"
  $4508 = $4507; //@line 257 "mcbits/vec.c"
  HEAP32[$4508>>2] = $4501; //@line 257 "mcbits/vec.c"
  $4509 = $6; //@line 256 "mcbits/vec.c"
  $4510 = (($4509) + 1)|0; //@line 256 "mcbits/vec.c"
  $6 = $4510; //@line 256 "mcbits/vec.c"
 }
 STACKTOP = sp;return; //@line 258 "mcbits/vec.c"
}
function _vec_sq($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 112|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(112|0);
 $5 = sp_a;
 $2 = $0;
 $3 = $1;
 $6 = $3; //@line 267 "mcbits/vec.c"
 $7 = $6; //@line 267 "mcbits/vec.c"
 $8 = $7; //@line 267 "mcbits/vec.c"
 $9 = HEAP32[$8>>2]|0; //@line 267 "mcbits/vec.c"
 $10 = (($7) + 4)|0; //@line 267 "mcbits/vec.c"
 $11 = $10; //@line 267 "mcbits/vec.c"
 $12 = HEAP32[$11>>2]|0; //@line 267 "mcbits/vec.c"
 $13 = $3; //@line 267 "mcbits/vec.c"
 $14 = ((($13)) + 48|0); //@line 267 "mcbits/vec.c"
 $15 = $14; //@line 267 "mcbits/vec.c"
 $16 = $15; //@line 267 "mcbits/vec.c"
 $17 = HEAP32[$16>>2]|0; //@line 267 "mcbits/vec.c"
 $18 = (($15) + 4)|0; //@line 267 "mcbits/vec.c"
 $19 = $18; //@line 267 "mcbits/vec.c"
 $20 = HEAP32[$19>>2]|0; //@line 267 "mcbits/vec.c"
 $21 = $9 ^ $17; //@line 267 "mcbits/vec.c"
 $22 = $12 ^ $20; //@line 267 "mcbits/vec.c"
 $23 = $5; //@line 267 "mcbits/vec.c"
 $24 = $23; //@line 267 "mcbits/vec.c"
 HEAP32[$24>>2] = $21; //@line 267 "mcbits/vec.c"
 $25 = (($23) + 4)|0; //@line 267 "mcbits/vec.c"
 $26 = $25; //@line 267 "mcbits/vec.c"
 HEAP32[$26>>2] = $22; //@line 267 "mcbits/vec.c"
 $27 = $3; //@line 268 "mcbits/vec.c"
 $28 = ((($27)) + 88|0); //@line 268 "mcbits/vec.c"
 $29 = $28; //@line 268 "mcbits/vec.c"
 $30 = $29; //@line 268 "mcbits/vec.c"
 $31 = HEAP32[$30>>2]|0; //@line 268 "mcbits/vec.c"
 $32 = (($29) + 4)|0; //@line 268 "mcbits/vec.c"
 $33 = $32; //@line 268 "mcbits/vec.c"
 $34 = HEAP32[$33>>2]|0; //@line 268 "mcbits/vec.c"
 $35 = ((($5)) + 8|0); //@line 268 "mcbits/vec.c"
 $36 = $35; //@line 268 "mcbits/vec.c"
 $37 = $36; //@line 268 "mcbits/vec.c"
 HEAP32[$37>>2] = $31; //@line 268 "mcbits/vec.c"
 $38 = (($36) + 4)|0; //@line 268 "mcbits/vec.c"
 $39 = $38; //@line 268 "mcbits/vec.c"
 HEAP32[$39>>2] = $34; //@line 268 "mcbits/vec.c"
 $40 = $3; //@line 269 "mcbits/vec.c"
 $41 = ((($40)) + 8|0); //@line 269 "mcbits/vec.c"
 $42 = $41; //@line 269 "mcbits/vec.c"
 $43 = $42; //@line 269 "mcbits/vec.c"
 $44 = HEAP32[$43>>2]|0; //@line 269 "mcbits/vec.c"
 $45 = (($42) + 4)|0; //@line 269 "mcbits/vec.c"
 $46 = $45; //@line 269 "mcbits/vec.c"
 $47 = HEAP32[$46>>2]|0; //@line 269 "mcbits/vec.c"
 $48 = $3; //@line 269 "mcbits/vec.c"
 $49 = ((($48)) + 56|0); //@line 269 "mcbits/vec.c"
 $50 = $49; //@line 269 "mcbits/vec.c"
 $51 = $50; //@line 269 "mcbits/vec.c"
 $52 = HEAP32[$51>>2]|0; //@line 269 "mcbits/vec.c"
 $53 = (($50) + 4)|0; //@line 269 "mcbits/vec.c"
 $54 = $53; //@line 269 "mcbits/vec.c"
 $55 = HEAP32[$54>>2]|0; //@line 269 "mcbits/vec.c"
 $56 = $44 ^ $52; //@line 269 "mcbits/vec.c"
 $57 = $47 ^ $55; //@line 269 "mcbits/vec.c"
 $58 = ((($5)) + 16|0); //@line 269 "mcbits/vec.c"
 $59 = $58; //@line 269 "mcbits/vec.c"
 $60 = $59; //@line 269 "mcbits/vec.c"
 HEAP32[$60>>2] = $56; //@line 269 "mcbits/vec.c"
 $61 = (($59) + 4)|0; //@line 269 "mcbits/vec.c"
 $62 = $61; //@line 269 "mcbits/vec.c"
 HEAP32[$62>>2] = $57; //@line 269 "mcbits/vec.c"
 $63 = $3; //@line 270 "mcbits/vec.c"
 $64 = ((($63)) + 48|0); //@line 270 "mcbits/vec.c"
 $65 = $64; //@line 270 "mcbits/vec.c"
 $66 = $65; //@line 270 "mcbits/vec.c"
 $67 = HEAP32[$66>>2]|0; //@line 270 "mcbits/vec.c"
 $68 = (($65) + 4)|0; //@line 270 "mcbits/vec.c"
 $69 = $68; //@line 270 "mcbits/vec.c"
 $70 = HEAP32[$69>>2]|0; //@line 270 "mcbits/vec.c"
 $71 = ((($5)) + 24|0); //@line 270 "mcbits/vec.c"
 $72 = $71; //@line 270 "mcbits/vec.c"
 $73 = $72; //@line 270 "mcbits/vec.c"
 HEAP32[$73>>2] = $67; //@line 270 "mcbits/vec.c"
 $74 = (($72) + 4)|0; //@line 270 "mcbits/vec.c"
 $75 = $74; //@line 270 "mcbits/vec.c"
 HEAP32[$75>>2] = $70; //@line 270 "mcbits/vec.c"
 $76 = $3; //@line 271 "mcbits/vec.c"
 $77 = ((($76)) + 16|0); //@line 271 "mcbits/vec.c"
 $78 = $77; //@line 271 "mcbits/vec.c"
 $79 = $78; //@line 271 "mcbits/vec.c"
 $80 = HEAP32[$79>>2]|0; //@line 271 "mcbits/vec.c"
 $81 = (($78) + 4)|0; //@line 271 "mcbits/vec.c"
 $82 = $81; //@line 271 "mcbits/vec.c"
 $83 = HEAP32[$82>>2]|0; //@line 271 "mcbits/vec.c"
 $84 = $3; //@line 271 "mcbits/vec.c"
 $85 = ((($84)) + 88|0); //@line 271 "mcbits/vec.c"
 $86 = $85; //@line 271 "mcbits/vec.c"
 $87 = $86; //@line 271 "mcbits/vec.c"
 $88 = HEAP32[$87>>2]|0; //@line 271 "mcbits/vec.c"
 $89 = (($86) + 4)|0; //@line 271 "mcbits/vec.c"
 $90 = $89; //@line 271 "mcbits/vec.c"
 $91 = HEAP32[$90>>2]|0; //@line 271 "mcbits/vec.c"
 $92 = $80 ^ $88; //@line 271 "mcbits/vec.c"
 $93 = $83 ^ $91; //@line 271 "mcbits/vec.c"
 $94 = $3; //@line 271 "mcbits/vec.c"
 $95 = ((($94)) + 64|0); //@line 271 "mcbits/vec.c"
 $96 = $95; //@line 271 "mcbits/vec.c"
 $97 = $96; //@line 271 "mcbits/vec.c"
 $98 = HEAP32[$97>>2]|0; //@line 271 "mcbits/vec.c"
 $99 = (($96) + 4)|0; //@line 271 "mcbits/vec.c"
 $100 = $99; //@line 271 "mcbits/vec.c"
 $101 = HEAP32[$100>>2]|0; //@line 271 "mcbits/vec.c"
 $102 = $92 ^ $98; //@line 271 "mcbits/vec.c"
 $103 = $93 ^ $101; //@line 271 "mcbits/vec.c"
 $104 = ((($5)) + 32|0); //@line 271 "mcbits/vec.c"
 $105 = $104; //@line 271 "mcbits/vec.c"
 $106 = $105; //@line 271 "mcbits/vec.c"
 HEAP32[$106>>2] = $102; //@line 271 "mcbits/vec.c"
 $107 = (($105) + 4)|0; //@line 271 "mcbits/vec.c"
 $108 = $107; //@line 271 "mcbits/vec.c"
 HEAP32[$108>>2] = $103; //@line 271 "mcbits/vec.c"
 $109 = $3; //@line 272 "mcbits/vec.c"
 $110 = ((($109)) + 56|0); //@line 272 "mcbits/vec.c"
 $111 = $110; //@line 272 "mcbits/vec.c"
 $112 = $111; //@line 272 "mcbits/vec.c"
 $113 = HEAP32[$112>>2]|0; //@line 272 "mcbits/vec.c"
 $114 = (($111) + 4)|0; //@line 272 "mcbits/vec.c"
 $115 = $114; //@line 272 "mcbits/vec.c"
 $116 = HEAP32[$115>>2]|0; //@line 272 "mcbits/vec.c"
 $117 = ((($5)) + 40|0); //@line 272 "mcbits/vec.c"
 $118 = $117; //@line 272 "mcbits/vec.c"
 $119 = $118; //@line 272 "mcbits/vec.c"
 HEAP32[$119>>2] = $113; //@line 272 "mcbits/vec.c"
 $120 = (($118) + 4)|0; //@line 272 "mcbits/vec.c"
 $121 = $120; //@line 272 "mcbits/vec.c"
 HEAP32[$121>>2] = $116; //@line 272 "mcbits/vec.c"
 $122 = $3; //@line 273 "mcbits/vec.c"
 $123 = ((($122)) + 24|0); //@line 273 "mcbits/vec.c"
 $124 = $123; //@line 273 "mcbits/vec.c"
 $125 = $124; //@line 273 "mcbits/vec.c"
 $126 = HEAP32[$125>>2]|0; //@line 273 "mcbits/vec.c"
 $127 = (($124) + 4)|0; //@line 273 "mcbits/vec.c"
 $128 = $127; //@line 273 "mcbits/vec.c"
 $129 = HEAP32[$128>>2]|0; //@line 273 "mcbits/vec.c"
 $130 = $3; //@line 273 "mcbits/vec.c"
 $131 = ((($130)) + 72|0); //@line 273 "mcbits/vec.c"
 $132 = $131; //@line 273 "mcbits/vec.c"
 $133 = $132; //@line 273 "mcbits/vec.c"
 $134 = HEAP32[$133>>2]|0; //@line 273 "mcbits/vec.c"
 $135 = (($132) + 4)|0; //@line 273 "mcbits/vec.c"
 $136 = $135; //@line 273 "mcbits/vec.c"
 $137 = HEAP32[$136>>2]|0; //@line 273 "mcbits/vec.c"
 $138 = $126 ^ $134; //@line 273 "mcbits/vec.c"
 $139 = $129 ^ $137; //@line 273 "mcbits/vec.c"
 $140 = ((($5)) + 48|0); //@line 273 "mcbits/vec.c"
 $141 = $140; //@line 273 "mcbits/vec.c"
 $142 = $141; //@line 273 "mcbits/vec.c"
 HEAP32[$142>>2] = $138; //@line 273 "mcbits/vec.c"
 $143 = (($141) + 4)|0; //@line 273 "mcbits/vec.c"
 $144 = $143; //@line 273 "mcbits/vec.c"
 HEAP32[$144>>2] = $139; //@line 273 "mcbits/vec.c"
 $145 = $3; //@line 274 "mcbits/vec.c"
 $146 = ((($145)) + 64|0); //@line 274 "mcbits/vec.c"
 $147 = $146; //@line 274 "mcbits/vec.c"
 $148 = $147; //@line 274 "mcbits/vec.c"
 $149 = HEAP32[$148>>2]|0; //@line 274 "mcbits/vec.c"
 $150 = (($147) + 4)|0; //@line 274 "mcbits/vec.c"
 $151 = $150; //@line 274 "mcbits/vec.c"
 $152 = HEAP32[$151>>2]|0; //@line 274 "mcbits/vec.c"
 $153 = ((($5)) + 56|0); //@line 274 "mcbits/vec.c"
 $154 = $153; //@line 274 "mcbits/vec.c"
 $155 = $154; //@line 274 "mcbits/vec.c"
 HEAP32[$155>>2] = $149; //@line 274 "mcbits/vec.c"
 $156 = (($154) + 4)|0; //@line 274 "mcbits/vec.c"
 $157 = $156; //@line 274 "mcbits/vec.c"
 HEAP32[$157>>2] = $152; //@line 274 "mcbits/vec.c"
 $158 = $3; //@line 275 "mcbits/vec.c"
 $159 = ((($158)) + 32|0); //@line 275 "mcbits/vec.c"
 $160 = $159; //@line 275 "mcbits/vec.c"
 $161 = $160; //@line 275 "mcbits/vec.c"
 $162 = HEAP32[$161>>2]|0; //@line 275 "mcbits/vec.c"
 $163 = (($160) + 4)|0; //@line 275 "mcbits/vec.c"
 $164 = $163; //@line 275 "mcbits/vec.c"
 $165 = HEAP32[$164>>2]|0; //@line 275 "mcbits/vec.c"
 $166 = $3; //@line 275 "mcbits/vec.c"
 $167 = ((($166)) + 80|0); //@line 275 "mcbits/vec.c"
 $168 = $167; //@line 275 "mcbits/vec.c"
 $169 = $168; //@line 275 "mcbits/vec.c"
 $170 = HEAP32[$169>>2]|0; //@line 275 "mcbits/vec.c"
 $171 = (($168) + 4)|0; //@line 275 "mcbits/vec.c"
 $172 = $171; //@line 275 "mcbits/vec.c"
 $173 = HEAP32[$172>>2]|0; //@line 275 "mcbits/vec.c"
 $174 = $162 ^ $170; //@line 275 "mcbits/vec.c"
 $175 = $165 ^ $173; //@line 275 "mcbits/vec.c"
 $176 = ((($5)) + 64|0); //@line 275 "mcbits/vec.c"
 $177 = $176; //@line 275 "mcbits/vec.c"
 $178 = $177; //@line 275 "mcbits/vec.c"
 HEAP32[$178>>2] = $174; //@line 275 "mcbits/vec.c"
 $179 = (($177) + 4)|0; //@line 275 "mcbits/vec.c"
 $180 = $179; //@line 275 "mcbits/vec.c"
 HEAP32[$180>>2] = $175; //@line 275 "mcbits/vec.c"
 $181 = $3; //@line 276 "mcbits/vec.c"
 $182 = ((($181)) + 72|0); //@line 276 "mcbits/vec.c"
 $183 = $182; //@line 276 "mcbits/vec.c"
 $184 = $183; //@line 276 "mcbits/vec.c"
 $185 = HEAP32[$184>>2]|0; //@line 276 "mcbits/vec.c"
 $186 = (($183) + 4)|0; //@line 276 "mcbits/vec.c"
 $187 = $186; //@line 276 "mcbits/vec.c"
 $188 = HEAP32[$187>>2]|0; //@line 276 "mcbits/vec.c"
 $189 = ((($5)) + 72|0); //@line 276 "mcbits/vec.c"
 $190 = $189; //@line 276 "mcbits/vec.c"
 $191 = $190; //@line 276 "mcbits/vec.c"
 HEAP32[$191>>2] = $185; //@line 276 "mcbits/vec.c"
 $192 = (($190) + 4)|0; //@line 276 "mcbits/vec.c"
 $193 = $192; //@line 276 "mcbits/vec.c"
 HEAP32[$193>>2] = $188; //@line 276 "mcbits/vec.c"
 $194 = $3; //@line 277 "mcbits/vec.c"
 $195 = ((($194)) + 40|0); //@line 277 "mcbits/vec.c"
 $196 = $195; //@line 277 "mcbits/vec.c"
 $197 = $196; //@line 277 "mcbits/vec.c"
 $198 = HEAP32[$197>>2]|0; //@line 277 "mcbits/vec.c"
 $199 = (($196) + 4)|0; //@line 277 "mcbits/vec.c"
 $200 = $199; //@line 277 "mcbits/vec.c"
 $201 = HEAP32[$200>>2]|0; //@line 277 "mcbits/vec.c"
 $202 = $3; //@line 277 "mcbits/vec.c"
 $203 = ((($202)) + 88|0); //@line 277 "mcbits/vec.c"
 $204 = $203; //@line 277 "mcbits/vec.c"
 $205 = $204; //@line 277 "mcbits/vec.c"
 $206 = HEAP32[$205>>2]|0; //@line 277 "mcbits/vec.c"
 $207 = (($204) + 4)|0; //@line 277 "mcbits/vec.c"
 $208 = $207; //@line 277 "mcbits/vec.c"
 $209 = HEAP32[$208>>2]|0; //@line 277 "mcbits/vec.c"
 $210 = $198 ^ $206; //@line 277 "mcbits/vec.c"
 $211 = $201 ^ $209; //@line 277 "mcbits/vec.c"
 $212 = ((($5)) + 80|0); //@line 277 "mcbits/vec.c"
 $213 = $212; //@line 277 "mcbits/vec.c"
 $214 = $213; //@line 277 "mcbits/vec.c"
 HEAP32[$214>>2] = $210; //@line 277 "mcbits/vec.c"
 $215 = (($213) + 4)|0; //@line 277 "mcbits/vec.c"
 $216 = $215; //@line 277 "mcbits/vec.c"
 HEAP32[$216>>2] = $211; //@line 277 "mcbits/vec.c"
 $217 = $3; //@line 278 "mcbits/vec.c"
 $218 = ((($217)) + 80|0); //@line 278 "mcbits/vec.c"
 $219 = $218; //@line 278 "mcbits/vec.c"
 $220 = $219; //@line 278 "mcbits/vec.c"
 $221 = HEAP32[$220>>2]|0; //@line 278 "mcbits/vec.c"
 $222 = (($219) + 4)|0; //@line 278 "mcbits/vec.c"
 $223 = $222; //@line 278 "mcbits/vec.c"
 $224 = HEAP32[$223>>2]|0; //@line 278 "mcbits/vec.c"
 $225 = ((($5)) + 88|0); //@line 278 "mcbits/vec.c"
 $226 = $225; //@line 278 "mcbits/vec.c"
 $227 = $226; //@line 278 "mcbits/vec.c"
 HEAP32[$227>>2] = $221; //@line 278 "mcbits/vec.c"
 $228 = (($226) + 4)|0; //@line 278 "mcbits/vec.c"
 $229 = $228; //@line 278 "mcbits/vec.c"
 HEAP32[$229>>2] = $224; //@line 278 "mcbits/vec.c"
 $4 = 0; //@line 282 "mcbits/vec.c"
 while(1) {
  $230 = $4; //@line 282 "mcbits/vec.c"
  $231 = ($230|0)<(12); //@line 282 "mcbits/vec.c"
  if (!($231)) {
   break;
  }
  $232 = $4; //@line 283 "mcbits/vec.c"
  $233 = (($5) + ($232<<3)|0); //@line 283 "mcbits/vec.c"
  $234 = $233; //@line 283 "mcbits/vec.c"
  $235 = $234; //@line 283 "mcbits/vec.c"
  $236 = HEAP32[$235>>2]|0; //@line 283 "mcbits/vec.c"
  $237 = (($234) + 4)|0; //@line 283 "mcbits/vec.c"
  $238 = $237; //@line 283 "mcbits/vec.c"
  $239 = HEAP32[$238>>2]|0; //@line 283 "mcbits/vec.c"
  $240 = $2; //@line 283 "mcbits/vec.c"
  $241 = $4; //@line 283 "mcbits/vec.c"
  $242 = (($240) + ($241<<3)|0); //@line 283 "mcbits/vec.c"
  $243 = $242; //@line 283 "mcbits/vec.c"
  $244 = $243; //@line 283 "mcbits/vec.c"
  HEAP32[$244>>2] = $236; //@line 283 "mcbits/vec.c"
  $245 = (($243) + 4)|0; //@line 283 "mcbits/vec.c"
  $246 = $245; //@line 283 "mcbits/vec.c"
  HEAP32[$246>>2] = $239; //@line 283 "mcbits/vec.c"
  $247 = $4; //@line 282 "mcbits/vec.c"
  $248 = (($247) + 1)|0; //@line 282 "mcbits/vec.c"
  $4 = $248; //@line 282 "mcbits/vec.c"
 }
 STACKTOP = sp;return; //@line 284 "mcbits/vec.c"
}
function _vec_copy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = 0; //@line 290 "mcbits/vec.c"
 while(1) {
  $5 = $4; //@line 290 "mcbits/vec.c"
  $6 = ($5|0)<(12); //@line 290 "mcbits/vec.c"
  if (!($6)) {
   break;
  }
  $7 = $3; //@line 291 "mcbits/vec.c"
  $8 = $4; //@line 291 "mcbits/vec.c"
  $9 = (($7) + ($8<<3)|0); //@line 291 "mcbits/vec.c"
  $10 = $9; //@line 291 "mcbits/vec.c"
  $11 = $10; //@line 291 "mcbits/vec.c"
  $12 = HEAP32[$11>>2]|0; //@line 291 "mcbits/vec.c"
  $13 = (($10) + 4)|0; //@line 291 "mcbits/vec.c"
  $14 = $13; //@line 291 "mcbits/vec.c"
  $15 = HEAP32[$14>>2]|0; //@line 291 "mcbits/vec.c"
  $16 = $2; //@line 291 "mcbits/vec.c"
  $17 = $4; //@line 291 "mcbits/vec.c"
  $18 = (($16) + ($17<<3)|0); //@line 291 "mcbits/vec.c"
  $19 = $18; //@line 291 "mcbits/vec.c"
  $20 = $19; //@line 291 "mcbits/vec.c"
  HEAP32[$20>>2] = $12; //@line 291 "mcbits/vec.c"
  $21 = (($19) + 4)|0; //@line 291 "mcbits/vec.c"
  $22 = $21; //@line 291 "mcbits/vec.c"
  HEAP32[$22>>2] = $15; //@line 291 "mcbits/vec.c"
  $23 = $4; //@line 290 "mcbits/vec.c"
  $24 = (($23) + 1)|0; //@line 290 "mcbits/vec.c"
  $4 = $24; //@line 290 "mcbits/vec.c"
 }
 STACKTOP = sp;return; //@line 292 "mcbits/vec.c"
}
function _vec_or($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $3 = sp_a;
 $1 = $0;
 $4 = $1; //@line 297 "mcbits/vec.c"
 $5 = $4; //@line 297 "mcbits/vec.c"
 $6 = $5; //@line 297 "mcbits/vec.c"
 $7 = HEAP32[$6>>2]|0; //@line 297 "mcbits/vec.c"
 $8 = (($5) + 4)|0; //@line 297 "mcbits/vec.c"
 $9 = $8; //@line 297 "mcbits/vec.c"
 $10 = HEAP32[$9>>2]|0; //@line 297 "mcbits/vec.c"
 $11 = $3; //@line 297 "mcbits/vec.c"
 $12 = $11; //@line 297 "mcbits/vec.c"
 HEAP32[$12>>2] = $7; //@line 297 "mcbits/vec.c"
 $13 = (($11) + 4)|0; //@line 297 "mcbits/vec.c"
 $14 = $13; //@line 297 "mcbits/vec.c"
 HEAP32[$14>>2] = $10; //@line 297 "mcbits/vec.c"
 $2 = 1; //@line 299 "mcbits/vec.c"
 while(1) {
  $15 = $2; //@line 299 "mcbits/vec.c"
  $16 = ($15|0)<(12); //@line 299 "mcbits/vec.c"
  if (!($16)) {
   break;
  }
  $17 = $1; //@line 300 "mcbits/vec.c"
  $18 = $2; //@line 300 "mcbits/vec.c"
  $19 = (($17) + ($18<<3)|0); //@line 300 "mcbits/vec.c"
  $20 = $19; //@line 300 "mcbits/vec.c"
  $21 = $20; //@line 300 "mcbits/vec.c"
  $22 = HEAP32[$21>>2]|0; //@line 300 "mcbits/vec.c"
  $23 = (($20) + 4)|0; //@line 300 "mcbits/vec.c"
  $24 = $23; //@line 300 "mcbits/vec.c"
  $25 = HEAP32[$24>>2]|0; //@line 300 "mcbits/vec.c"
  $26 = $3; //@line 300 "mcbits/vec.c"
  $27 = $26; //@line 300 "mcbits/vec.c"
  $28 = HEAP32[$27>>2]|0; //@line 300 "mcbits/vec.c"
  $29 = (($26) + 4)|0; //@line 300 "mcbits/vec.c"
  $30 = $29; //@line 300 "mcbits/vec.c"
  $31 = HEAP32[$30>>2]|0; //@line 300 "mcbits/vec.c"
  $32 = $28 | $22; //@line 300 "mcbits/vec.c"
  $33 = $31 | $25; //@line 300 "mcbits/vec.c"
  $34 = $3; //@line 300 "mcbits/vec.c"
  $35 = $34; //@line 300 "mcbits/vec.c"
  HEAP32[$35>>2] = $32; //@line 300 "mcbits/vec.c"
  $36 = (($34) + 4)|0; //@line 300 "mcbits/vec.c"
  $37 = $36; //@line 300 "mcbits/vec.c"
  HEAP32[$37>>2] = $33; //@line 300 "mcbits/vec.c"
  $38 = $2; //@line 299 "mcbits/vec.c"
  $39 = (($38) + 1)|0; //@line 299 "mcbits/vec.c"
  $2 = $39; //@line 299 "mcbits/vec.c"
 }
 $40 = $3; //@line 302 "mcbits/vec.c"
 $41 = $40; //@line 302 "mcbits/vec.c"
 $42 = HEAP32[$41>>2]|0; //@line 302 "mcbits/vec.c"
 $43 = (($40) + 4)|0; //@line 302 "mcbits/vec.c"
 $44 = $43; //@line 302 "mcbits/vec.c"
 $45 = HEAP32[$44>>2]|0; //@line 302 "mcbits/vec.c"
 tempRet0 = ($45); //@line 302 "mcbits/vec.c"
 STACKTOP = sp;return ($42|0); //@line 302 "mcbits/vec.c"
}
function _vec_inv($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 208|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(208|0);
 $4 = sp_a + 96|0;
 $5 = sp_a;
 $2 = $0;
 $3 = $1;
 $6 = $2; //@line 310 "mcbits/vec.c"
 $7 = $3; //@line 310 "mcbits/vec.c"
 _vec_copy($6,$7); //@line 310 "mcbits/vec.c"
 $8 = $2; //@line 312 "mcbits/vec.c"
 $9 = $2; //@line 312 "mcbits/vec.c"
 _vec_sq($8,$9); //@line 312 "mcbits/vec.c"
 $10 = $2; //@line 313 "mcbits/vec.c"
 $11 = $3; //@line 313 "mcbits/vec.c"
 _vec_mul($4,$10,$11); //@line 313 "mcbits/vec.c"
 $12 = $2; //@line 315 "mcbits/vec.c"
 _vec_sq($12,$4); //@line 315 "mcbits/vec.c"
 $13 = $2; //@line 316 "mcbits/vec.c"
 $14 = $2; //@line 316 "mcbits/vec.c"
 _vec_sq($13,$14); //@line 316 "mcbits/vec.c"
 $15 = $2; //@line 317 "mcbits/vec.c"
 _vec_mul($5,$15,$4); //@line 317 "mcbits/vec.c"
 $16 = $2; //@line 319 "mcbits/vec.c"
 _vec_sq($16,$5); //@line 319 "mcbits/vec.c"
 $17 = $2; //@line 320 "mcbits/vec.c"
 $18 = $2; //@line 320 "mcbits/vec.c"
 _vec_sq($17,$18); //@line 320 "mcbits/vec.c"
 $19 = $2; //@line 321 "mcbits/vec.c"
 $20 = $2; //@line 321 "mcbits/vec.c"
 _vec_sq($19,$20); //@line 321 "mcbits/vec.c"
 $21 = $2; //@line 322 "mcbits/vec.c"
 $22 = $2; //@line 322 "mcbits/vec.c"
 _vec_sq($21,$22); //@line 322 "mcbits/vec.c"
 $23 = $2; //@line 323 "mcbits/vec.c"
 $24 = $2; //@line 323 "mcbits/vec.c"
 _vec_mul($23,$24,$5); //@line 323 "mcbits/vec.c"
 $25 = $2; //@line 325 "mcbits/vec.c"
 $26 = $2; //@line 325 "mcbits/vec.c"
 _vec_sq($25,$26); //@line 325 "mcbits/vec.c"
 $27 = $2; //@line 326 "mcbits/vec.c"
 $28 = $2; //@line 326 "mcbits/vec.c"
 _vec_sq($27,$28); //@line 326 "mcbits/vec.c"
 $29 = $2; //@line 327 "mcbits/vec.c"
 $30 = $2; //@line 327 "mcbits/vec.c"
 _vec_mul($29,$30,$4); //@line 327 "mcbits/vec.c"
 $31 = $2; //@line 329 "mcbits/vec.c"
 $32 = $2; //@line 329 "mcbits/vec.c"
 _vec_sq($31,$32); //@line 329 "mcbits/vec.c"
 $33 = $2; //@line 330 "mcbits/vec.c"
 $34 = $2; //@line 330 "mcbits/vec.c"
 $35 = $3; //@line 330 "mcbits/vec.c"
 _vec_mul($33,$34,$35); //@line 330 "mcbits/vec.c"
 $36 = $2; //@line 332 "mcbits/vec.c"
 $37 = $2; //@line 332 "mcbits/vec.c"
 _vec_sq($36,$37); //@line 332 "mcbits/vec.c"
 STACKTOP = sp;return; //@line 333 "mcbits/vec.c"
}
function _mceliecejs_init() {
 var label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 _randombytes_stir(); //@line 7 "mceliece.c"
 return; //@line 8 "mceliece.c"
}
function _mceliecejs_public_key_bytes() {
 var label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 return 311736; //@line 11 "mceliece.c"
}
function _mceliecejs_private_key_bytes() {
 var label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 return 5984; //@line 15 "mceliece.c"
}
function _mceliecejs_encrypted_bytes() {
 var label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 return 512; //@line 19 "mceliece.c"
}
function _mceliecejs_decrypted_bytes() {
 var label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 return 403; //@line 23 "mceliece.c"
}
function _mceliecejs_get_cyphertext_len($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = 512; //@line 27 "mceliece.c"
 while(1) {
  $4 = $3; //@line 27 "mceliece.c"
  $5 = ($4|0)>(0); //@line 27 "mceliece.c"
  if (!($5)) {
   label = 6;
   break;
  }
  $6 = $2; //@line 28 "mceliece.c"
  $7 = $3; //@line 28 "mceliece.c"
  $8 = (($7) - 1)|0; //@line 28 "mceliece.c"
  $9 = (($6) + ($8)|0); //@line 28 "mceliece.c"
  $10 = HEAP8[$9>>0]|0; //@line 28 "mceliece.c"
  $11 = $10&255; //@line 28 "mceliece.c"
  $12 = ($11|0)!=(0); //@line 28 "mceliece.c"
  $13 = $3;
  if ($12) {
   label = 4;
   break;
  }
  $14 = (($13) + -1)|0; //@line 27 "mceliece.c"
  $3 = $14; //@line 27 "mceliece.c"
 }
 if ((label|0) == 4) {
  $1 = $13; //@line 29 "mceliece.c"
  $15 = $1; //@line 34 "mceliece.c"
  STACKTOP = sp;return ($15|0); //@line 34 "mceliece.c"
 }
 else if ((label|0) == 6) {
  $1 = 0; //@line 33 "mceliece.c"
  $15 = $1; //@line 34 "mceliece.c"
  STACKTOP = sp;return ($15|0); //@line 34 "mceliece.c"
 }
 return (0)|0;
}
function _mceliecejs_keypair($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $2 = $0;
 $3 = $1;
 $4 = $2; //@line 40 "mceliece.c"
 $5 = $3; //@line 40 "mceliece.c"
 $6 = (_crypto_encrypt_keypair($4,$5)|0); //@line 40 "mceliece.c"
 STACKTOP = sp;return ($6|0); //@line 40 "mceliece.c"
}
function _mceliecejs_encrypt($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $8 = sp_a;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $7 = $3;
 $11 = $7; //@line 52 "mceliece.c"
 $12 = $4; //@line 54 "mceliece.c"
 $13 = $5; //@line 55 "mceliece.c"
 $14 = ($13|0)<(0); //@line 55 "mceliece.c"
 $15 = $14 << 31 >> 31; //@line 55 "mceliece.c"
 $16 = $6; //@line 56 "mceliece.c"
 $17 = (_crypto_encrypt($11,$8,$12,$13,$15,$16)|0); //@line 51 "mceliece.c"
 $9 = $17; //@line 51 "mceliece.c"
 $18 = $8; //@line 59 "mceliece.c"
 $19 = $18; //@line 59 "mceliece.c"
 $20 = HEAP32[$19>>2]|0; //@line 59 "mceliece.c"
 $21 = (($18) + 4)|0; //@line 59 "mceliece.c"
 $22 = $21; //@line 59 "mceliece.c"
 $23 = HEAP32[$22>>2]|0; //@line 59 "mceliece.c"
 $10 = $20; //@line 59 "mceliece.c"
 while(1) {
  $24 = $10; //@line 59 "mceliece.c"
  $25 = ($24|0)<(512); //@line 59 "mceliece.c"
  if (!($25)) {
   break;
  }
  $26 = $7; //@line 60 "mceliece.c"
  $27 = $10; //@line 60 "mceliece.c"
  $28 = (($26) + ($27)|0); //@line 60 "mceliece.c"
  HEAP8[$28>>0] = 0; //@line 60 "mceliece.c"
  $29 = $10; //@line 59 "mceliece.c"
  $30 = (($29) + 1)|0; //@line 59 "mceliece.c"
  $10 = $30; //@line 59 "mceliece.c"
 }
 $31 = $9; //@line 63 "mceliece.c"
 STACKTOP = sp;return ($31|0); //@line 63 "mceliece.c"
}
function _mceliecejs_decrypt($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 32|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(32|0);
 $7 = sp_a;
 $4 = $0;
 $5 = $1;
 $6 = $2;
 $9 = $6; //@line 74 "mceliece.c"
 $10 = $4; //@line 76 "mceliece.c"
 $11 = $4; //@line 77 "mceliece.c"
 $12 = (_mceliecejs_get_cyphertext_len($11)|0); //@line 77 "mceliece.c"
 $13 = ($12|0)<(0); //@line 77 "mceliece.c"
 $14 = $13 << 31 >> 31; //@line 77 "mceliece.c"
 $15 = $5; //@line 78 "mceliece.c"
 $16 = (_crypto_encrypt_open($9,$7,$10,$12,$14,$15)|0); //@line 73 "mceliece.c"
 $8 = $16; //@line 73 "mceliece.c"
 $17 = $8; //@line 81 "mceliece.c"
 $18 = ($17|0)==(0); //@line 81 "mceliece.c"
 if ($18) {
  $19 = $7; //@line 82 "mceliece.c"
  $20 = $19; //@line 82 "mceliece.c"
  $21 = HEAP32[$20>>2]|0; //@line 82 "mceliece.c"
  $22 = (($19) + 4)|0; //@line 82 "mceliece.c"
  $23 = $22; //@line 82 "mceliece.c"
  $24 = HEAP32[$23>>2]|0; //@line 82 "mceliece.c"
  $3 = $21; //@line 82 "mceliece.c"
  $27 = $3; //@line 87 "mceliece.c"
  STACKTOP = sp;return ($27|0); //@line 87 "mceliece.c"
 } else {
  $25 = $8; //@line 85 "mceliece.c"
  $26 = (0 - ($25))|0; //@line 85 "mceliece.c"
  $3 = $26; //@line 85 "mceliece.c"
  $27 = $3; //@line 87 "mceliece.c"
  STACKTOP = sp;return ($27|0); //@line 87 "mceliece.c"
 }
 return (0)|0;
}
function _emscripten_get_global_libc() {
 var label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 return (15416|0);
}
function ___errno_location() {
 var $0 = 0, $1 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 $0 = (___pthread_self_29()|0);
 $1 = ((($0)) + 64|0);
 return ($1|0);
}
function ___pthread_self_29() {
 var $0 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _pthread_self() {
 var label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 return (14204|0);
}
function _malloc($0) {
 $0 = $0|0;
 var $$$0192$i = 0, $$$0193$i = 0, $$$4236$i = 0, $$$4351$i = 0, $$$i = 0, $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i18$i = 0, $$01$i$i = 0, $$0189$i = 0, $$0192$lcssa$i = 0, $$01928$i = 0, $$0193$lcssa$i = 0, $$01937$i = 0, $$0197 = 0, $$0199 = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$0211$i$i = 0;
 var $$0212$i$i = 0, $$024371$i = 0, $$0287$i$i = 0, $$0288$i$i = 0, $$0289$i$i = 0, $$0295$i$i = 0, $$0296$i$i = 0, $$0342$i = 0, $$0344$i = 0, $$0345$i = 0, $$0347$i = 0, $$0353$i = 0, $$0358$i = 0, $$0359$$i = 0, $$0359$i = 0, $$0361$i = 0, $$0362$i = 0, $$0368$i = 0, $$1196$i = 0, $$1198$i = 0;
 var $$124470$i = 0, $$1291$i$i = 0, $$1293$i$i = 0, $$1343$i = 0, $$1348$i = 0, $$1363$i = 0, $$1370$i = 0, $$1374$i = 0, $$2234253237$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2355$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i201 = 0, $$3350$i = 0, $$3372$i = 0, $$4$lcssa$i = 0, $$4$ph$i = 0, $$415$i = 0;
 var $$4236$i = 0, $$4351$lcssa$i = 0, $$435114$i = 0, $$4357$$4$i = 0, $$4357$ph$i = 0, $$435713$i = 0, $$723948$i = 0, $$749$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i19$i = 0, $$pre$i210 = 0, $$pre$i212 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i20$iZ2D = 0, $$pre$phi$i211Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi11$i$iZ2D = 0, $$pre$phiZ2D = 0;
 var $$pre10$i$i = 0, $$sink1$i = 0, $$sink1$i$i = 0, $$sink16$i = 0, $$sink2$i = 0, $$sink2$i204 = 0, $$sink3$i = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0;
 var $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0;
 var $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0;
 var $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0;
 var $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0;
 var $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0;
 var $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0;
 var $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0;
 var $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i208 = 0, $exitcond$i$i = 0, $not$$i = 0, $not$$i$i = 0, $not$$i17$i = 0, $not$$i209 = 0, $not$$i216 = 0, $not$1$i = 0, $not$1$i203 = 0, $not$5$i = 0, $not$7$i$i = 0, $not$8$i = 0, $not$9$i = 0;
 var $or$cond$i = 0, $or$cond$i214 = 0, $or$cond1$i = 0, $or$cond10$i = 0, $or$cond11$i = 0, $or$cond11$not$i = 0, $or$cond12$i = 0, $or$cond2$i = 0, $or$cond2$i215 = 0, $or$cond5$i = 0, $or$cond50$i = 0, $or$cond51$i = 0, $or$cond7$i = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 sp_a = STACKTOP = (STACKTOP + 63)&-64;
 STACKTOP = STACKTOP + 16|0; if ((STACKTOP|0) >= (STACK_MAX|0)) abortStackOverflow(16|0);
 $1 = sp_a;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[3870]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (15520 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($16|0)==($20|0);
    do {
     if ($21) {
      $22 = 1 << $14;
      $23 = $22 ^ -1;
      $24 = $8 & $23;
      HEAP32[3870] = $24;
     } else {
      $25 = HEAP32[(15496)>>2]|0;
      $26 = ($20>>>0)<($25>>>0);
      if ($26) {
       _abort();
       // unreachable;
      }
      $27 = ((($20)) + 12|0);
      $28 = HEAP32[$27>>2]|0;
      $29 = ($28|0)==($18|0);
      if ($29) {
       HEAP32[$27>>2] = $16;
       HEAP32[$17>>2] = $20;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $30 = $14 << 3;
    $31 = $30 | 3;
    $32 = ((($18)) + 4|0);
    HEAP32[$32>>2] = $31;
    $33 = (($18) + ($30)|0);
    $34 = ((($33)) + 4|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = $35 | 1;
    HEAP32[$34>>2] = $36;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $37 = HEAP32[(15488)>>2]|0;
   $38 = ($6>>>0)>($37>>>0);
   if ($38) {
    $39 = ($9|0)==(0);
    if (!($39)) {
     $40 = $9 << $7;
     $41 = 2 << $7;
     $42 = (0 - ($41))|0;
     $43 = $41 | $42;
     $44 = $40 & $43;
     $45 = (0 - ($44))|0;
     $46 = $44 & $45;
     $47 = (($46) + -1)|0;
     $48 = $47 >>> 12;
     $49 = $48 & 16;
     $50 = $47 >>> $49;
     $51 = $50 >>> 5;
     $52 = $51 & 8;
     $53 = $52 | $49;
     $54 = $50 >>> $52;
     $55 = $54 >>> 2;
     $56 = $55 & 4;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 2;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = $62 >>> 1;
     $64 = $63 & 1;
     $65 = $61 | $64;
     $66 = $62 >>> $64;
     $67 = (($65) + ($66))|0;
     $68 = $67 << 1;
     $69 = (15520 + ($68<<2)|0);
     $70 = ((($69)) + 8|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ((($71)) + 8|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = ($69|0)==($73|0);
     do {
      if ($74) {
       $75 = 1 << $67;
       $76 = $75 ^ -1;
       $77 = $8 & $76;
       HEAP32[3870] = $77;
       $98 = $77;
      } else {
       $78 = HEAP32[(15496)>>2]|0;
       $79 = ($73>>>0)<($78>>>0);
       if ($79) {
        _abort();
        // unreachable;
       }
       $80 = ((($73)) + 12|0);
       $81 = HEAP32[$80>>2]|0;
       $82 = ($81|0)==($71|0);
       if ($82) {
        HEAP32[$80>>2] = $69;
        HEAP32[$70>>2] = $73;
        $98 = $8;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $83 = $67 << 3;
     $84 = (($83) - ($6))|0;
     $85 = $6 | 3;
     $86 = ((($71)) + 4|0);
     HEAP32[$86>>2] = $85;
     $87 = (($71) + ($6)|0);
     $88 = $84 | 1;
     $89 = ((($87)) + 4|0);
     HEAP32[$89>>2] = $88;
     $90 = (($87) + ($84)|0);
     HEAP32[$90>>2] = $84;
     $91 = ($37|0)==(0);
     if (!($91)) {
      $92 = HEAP32[(15500)>>2]|0;
      $93 = $37 >>> 3;
      $94 = $93 << 1;
      $95 = (15520 + ($94<<2)|0);
      $96 = 1 << $93;
      $97 = $98 & $96;
      $99 = ($97|0)==(0);
      if ($99) {
       $100 = $98 | $96;
       HEAP32[3870] = $100;
       $$pre = ((($95)) + 8|0);
       $$0199 = $95;$$pre$phiZ2D = $$pre;
      } else {
       $101 = ((($95)) + 8|0);
       $102 = HEAP32[$101>>2]|0;
       $103 = HEAP32[(15496)>>2]|0;
       $104 = ($102>>>0)<($103>>>0);
       if ($104) {
        _abort();
        // unreachable;
       } else {
        $$0199 = $102;$$pre$phiZ2D = $101;
       }
      }
      HEAP32[$$pre$phiZ2D>>2] = $92;
      $105 = ((($$0199)) + 12|0);
      HEAP32[$105>>2] = $92;
      $106 = ((($92)) + 8|0);
      HEAP32[$106>>2] = $$0199;
      $107 = ((($92)) + 12|0);
      HEAP32[$107>>2] = $95;
     }
     HEAP32[(15488)>>2] = $84;
     HEAP32[(15500)>>2] = $87;
     $$0 = $72;
     STACKTOP = sp;return ($$0|0);
    }
    $108 = HEAP32[(15484)>>2]|0;
    $109 = ($108|0)==(0);
    if ($109) {
     $$0197 = $6;
    } else {
     $110 = (0 - ($108))|0;
     $111 = $108 & $110;
     $112 = (($111) + -1)|0;
     $113 = $112 >>> 12;
     $114 = $113 & 16;
     $115 = $112 >>> $114;
     $116 = $115 >>> 5;
     $117 = $116 & 8;
     $118 = $117 | $114;
     $119 = $115 >>> $117;
     $120 = $119 >>> 2;
     $121 = $120 & 4;
     $122 = $118 | $121;
     $123 = $119 >>> $121;
     $124 = $123 >>> 1;
     $125 = $124 & 2;
     $126 = $122 | $125;
     $127 = $123 >>> $125;
     $128 = $127 >>> 1;
     $129 = $128 & 1;
     $130 = $126 | $129;
     $131 = $127 >>> $129;
     $132 = (($130) + ($131))|0;
     $133 = (15784 + ($132<<2)|0);
     $134 = HEAP32[$133>>2]|0;
     $135 = ((($134)) + 4|0);
     $136 = HEAP32[$135>>2]|0;
     $137 = $136 & -8;
     $138 = (($137) - ($6))|0;
     $139 = ((($134)) + 16|0);
     $140 = HEAP32[$139>>2]|0;
     $not$5$i = ($140|0)==(0|0);
     $$sink16$i = $not$5$i&1;
     $141 = (((($134)) + 16|0) + ($$sink16$i<<2)|0);
     $142 = HEAP32[$141>>2]|0;
     $143 = ($142|0)==(0|0);
     if ($143) {
      $$0192$lcssa$i = $134;$$0193$lcssa$i = $138;
     } else {
      $$01928$i = $134;$$01937$i = $138;$145 = $142;
      while(1) {
       $144 = ((($145)) + 4|0);
       $146 = HEAP32[$144>>2]|0;
       $147 = $146 & -8;
       $148 = (($147) - ($6))|0;
       $149 = ($148>>>0)<($$01937$i>>>0);
       $$$0193$i = $149 ? $148 : $$01937$i;
       $$$0192$i = $149 ? $145 : $$01928$i;
       $150 = ((($145)) + 16|0);
       $151 = HEAP32[$150>>2]|0;
       $not$$i = ($151|0)==(0|0);
       $$sink1$i = $not$$i&1;
       $152 = (((($145)) + 16|0) + ($$sink1$i<<2)|0);
       $153 = HEAP32[$152>>2]|0;
       $154 = ($153|0)==(0|0);
       if ($154) {
        $$0192$lcssa$i = $$$0192$i;$$0193$lcssa$i = $$$0193$i;
        break;
       } else {
        $$01928$i = $$$0192$i;$$01937$i = $$$0193$i;$145 = $153;
       }
      }
     }
     $155 = HEAP32[(15496)>>2]|0;
     $156 = ($$0192$lcssa$i>>>0)<($155>>>0);
     if ($156) {
      _abort();
      // unreachable;
     }
     $157 = (($$0192$lcssa$i) + ($6)|0);
     $158 = ($$0192$lcssa$i>>>0)<($157>>>0);
     if (!($158)) {
      _abort();
      // unreachable;
     }
     $159 = ((($$0192$lcssa$i)) + 24|0);
     $160 = HEAP32[$159>>2]|0;
     $161 = ((($$0192$lcssa$i)) + 12|0);
     $162 = HEAP32[$161>>2]|0;
     $163 = ($162|0)==($$0192$lcssa$i|0);
     do {
      if ($163) {
       $173 = ((($$0192$lcssa$i)) + 20|0);
       $174 = HEAP32[$173>>2]|0;
       $175 = ($174|0)==(0|0);
       if ($175) {
        $176 = ((($$0192$lcssa$i)) + 16|0);
        $177 = HEAP32[$176>>2]|0;
        $178 = ($177|0)==(0|0);
        if ($178) {
         $$3$i = 0;
         break;
        } else {
         $$1196$i = $177;$$1198$i = $176;
        }
       } else {
        $$1196$i = $174;$$1198$i = $173;
       }
       while(1) {
        $179 = ((($$1196$i)) + 20|0);
        $180 = HEAP32[$179>>2]|0;
        $181 = ($180|0)==(0|0);
        if (!($181)) {
         $$1196$i = $180;$$1198$i = $179;
         continue;
        }
        $182 = ((($$1196$i)) + 16|0);
        $183 = HEAP32[$182>>2]|0;
        $184 = ($183|0)==(0|0);
        if ($184) {
         break;
        } else {
         $$1196$i = $183;$$1198$i = $182;
        }
       }
       $185 = ($$1198$i>>>0)<($155>>>0);
       if ($185) {
        _abort();
        // unreachable;
       } else {
        HEAP32[$$1198$i>>2] = 0;
        $$3$i = $$1196$i;
        break;
       }
      } else {
       $164 = ((($$0192$lcssa$i)) + 8|0);
       $165 = HEAP32[$164>>2]|0;
       $166 = ($165>>>0)<($155>>>0);
       if ($166) {
        _abort();
        // unreachable;
       }
       $167 = ((($165)) + 12|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ($168|0)==($$0192$lcssa$i|0);
       if (!($169)) {
        _abort();
        // unreachable;
       }
       $170 = ((($162)) + 8|0);
       $171 = HEAP32[$170>>2]|0;
       $172 = ($171|0)==($$0192$lcssa$i|0);
       if ($172) {
        HEAP32[$167>>2] = $162;
        HEAP32[$170>>2] = $165;
        $$3$i = $162;
        break;
       } else {
        _abort();
        // unreachable;
       }
      }
     } while(0);
     $186 = ($160|0)==(0|0);
     L73: do {
      if (!($186)) {
       $187 = ((($$0192$lcssa$i)) + 28|0);
       $188 = HEAP32[$187>>2]|0;
       $189 = (15784 + ($188<<2)|0);
       $190 = HEAP32[$189>>2]|0;
       $191 = ($$0192$lcssa$i|0)==($190|0);
       do {
        if ($191) {
         HEAP32[$189>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $192 = 1 << $188;
          $193 = $192 ^ -1;
          $194 = $108 & $193;
          HEAP32[(15484)>>2] = $194;
          break L73;
         }
        } else {
         $195 = HEAP32[(15496)>>2]|0;
         $196 = ($160>>>0)<($195>>>0);
         if ($196) {
          _abort();
          // unreachable;
         } else {
          $197 = ((($160)) + 16|0);
          $198 = HEAP32[$197>>2]|0;
          $not$1$i = ($198|0)!=($$0192$lcssa$i|0);
          $$sink2$i = $not$1$i&1;
          $199 = (((($160)) + 16|0) + ($$sink2$i<<2)|0);
          HEAP32[$199>>2] = $$3$i;
          $200 = ($$3$i|0)==(0|0);
          if ($200) {
           break L73;
          } else {
           break;
          }
         }
        }
       } while(0);
       $201 = HEAP32[(15496)>>2]|0;
       $202 = ($$3$i>>>0)<($201>>>0);
       if ($202) {
        _abort();
        // unreachable;
       }
       $203 = ((($$3$i)) + 24|0);
       HEAP32[$203>>2] = $160;
       $204 = ((($$0192$lcssa$i)) + 16|0);
       $205 = HEAP32[$204>>2]|0;
       $206 = ($205|0)==(0|0);
       do {
        if (!($206)) {
         $207 = ($205>>>0)<($201>>>0);
         if ($207) {
          _abort();
          // unreachable;
         } else {
          $208 = ((($$3$i)) + 16|0);
          HEAP32[$208>>2] = $205;
          $209 = ((($205)) + 24|0);
          HEAP32[$209>>2] = $$3$i;
          break;
         }
        }
       } while(0);
       $210 = ((($$0192$lcssa$i)) + 20|0);
       $211 = HEAP32[$210>>2]|0;
       $212 = ($211|0)==(0|0);
       if (!($212)) {
        $213 = HEAP32[(15496)>>2]|0;
        $214 = ($211>>>0)<($213>>>0);
        if ($214) {
         _abort();
         // unreachable;
        } else {
         $215 = ((($$3$i)) + 20|0);
         HEAP32[$215>>2] = $211;
         $216 = ((($211)) + 24|0);
         HEAP32[$216>>2] = $$3$i;
         break;
        }
       }
      }
     } while(0);
     $217 = ($$0193$lcssa$i>>>0)<(16);
     if ($217) {
      $218 = (($$0193$lcssa$i) + ($6))|0;
      $219 = $218 | 3;
      $220 = ((($$0192$lcssa$i)) + 4|0);
      HEAP32[$220>>2] = $219;
      $221 = (($$0192$lcssa$i) + ($218)|0);
      $222 = ((($221)) + 4|0);
      $223 = HEAP32[$222>>2]|0;
      $224 = $223 | 1;
      HEAP32[$222>>2] = $224;
     } else {
      $225 = $6 | 3;
      $226 = ((($$0192$lcssa$i)) + 4|0);
      HEAP32[$226>>2] = $225;
      $227 = $$0193$lcssa$i | 1;
      $228 = ((($157)) + 4|0);
      HEAP32[$228>>2] = $227;
      $229 = (($157) + ($$0193$lcssa$i)|0);
      HEAP32[$229>>2] = $$0193$lcssa$i;
      $230 = ($37|0)==(0);
      if (!($230)) {
       $231 = HEAP32[(15500)>>2]|0;
       $232 = $37 >>> 3;
       $233 = $232 << 1;
       $234 = (15520 + ($233<<2)|0);
       $235 = 1 << $232;
       $236 = $8 & $235;
       $237 = ($236|0)==(0);
       if ($237) {
        $238 = $8 | $235;
        HEAP32[3870] = $238;
        $$pre$i = ((($234)) + 8|0);
        $$0189$i = $234;$$pre$phi$iZ2D = $$pre$i;
       } else {
        $239 = ((($234)) + 8|0);
        $240 = HEAP32[$239>>2]|0;
        $241 = HEAP32[(15496)>>2]|0;
        $242 = ($240>>>0)<($241>>>0);
        if ($242) {
         _abort();
         // unreachable;
        } else {
         $$0189$i = $240;$$pre$phi$iZ2D = $239;
        }
       }
       HEAP32[$$pre$phi$iZ2D>>2] = $231;
       $243 = ((($$0189$i)) + 12|0);
       HEAP32[$243>>2] = $231;
       $244 = ((($231)) + 8|0);
       HEAP32[$244>>2] = $$0189$i;
       $245 = ((($231)) + 12|0);
       HEAP32[$245>>2] = $234;
      }
      HEAP32[(15488)>>2] = $$0193$lcssa$i;
      HEAP32[(15500)>>2] = $157;
     }
     $246 = ((($$0192$lcssa$i)) + 8|0);
     $$0 = $246;
     STACKTOP = sp;return ($$0|0);
    }
   } else {
    $$0197 = $6;
   }
  } else {
   $247 = ($0>>>0)>(4294967231);
   if ($247) {
    $$0197 = -1;
   } else {
    $248 = (($0) + 11)|0;
    $249 = $248 & -8;
    $250 = HEAP32[(15484)>>2]|0;
    $251 = ($250|0)==(0);
    if ($251) {
     $$0197 = $249;
    } else {
     $252 = (0 - ($249))|0;
     $253 = $248 >>> 8;
     $254 = ($253|0)==(0);
     if ($254) {
      $$0358$i = 0;
     } else {
      $255 = ($249>>>0)>(16777215);
      if ($255) {
       $$0358$i = 31;
      } else {
       $256 = (($253) + 1048320)|0;
       $257 = $256 >>> 16;
       $258 = $257 & 8;
       $259 = $253 << $258;
       $260 = (($259) + 520192)|0;
       $261 = $260 >>> 16;
       $262 = $261 & 4;
       $263 = $262 | $258;
       $264 = $259 << $262;
       $265 = (($264) + 245760)|0;
       $266 = $265 >>> 16;
       $267 = $266 & 2;
       $268 = $263 | $267;
       $269 = (14 - ($268))|0;
       $270 = $264 << $267;
       $271 = $270 >>> 15;
       $272 = (($269) + ($271))|0;
       $273 = $272 << 1;
       $274 = (($272) + 7)|0;
       $275 = $249 >>> $274;
       $276 = $275 & 1;
       $277 = $276 | $273;
       $$0358$i = $277;
      }
     }
     $278 = (15784 + ($$0358$i<<2)|0);
     $279 = HEAP32[$278>>2]|0;
     $280 = ($279|0)==(0|0);
     L117: do {
      if ($280) {
       $$2355$i = 0;$$3$i201 = 0;$$3350$i = $252;
       label = 81;
      } else {
       $281 = ($$0358$i|0)==(31);
       $282 = $$0358$i >>> 1;
       $283 = (25 - ($282))|0;
       $284 = $281 ? 0 : $283;
       $285 = $249 << $284;
       $$0342$i = 0;$$0347$i = $252;$$0353$i = $279;$$0359$i = $285;$$0362$i = 0;
       while(1) {
        $286 = ((($$0353$i)) + 4|0);
        $287 = HEAP32[$286>>2]|0;
        $288 = $287 & -8;
        $289 = (($288) - ($249))|0;
        $290 = ($289>>>0)<($$0347$i>>>0);
        if ($290) {
         $291 = ($289|0)==(0);
         if ($291) {
          $$415$i = $$0353$i;$$435114$i = 0;$$435713$i = $$0353$i;
          label = 85;
          break L117;
         } else {
          $$1343$i = $$0353$i;$$1348$i = $289;
         }
        } else {
         $$1343$i = $$0342$i;$$1348$i = $$0347$i;
        }
        $292 = ((($$0353$i)) + 20|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = $$0359$i >>> 31;
        $295 = (((($$0353$i)) + 16|0) + ($294<<2)|0);
        $296 = HEAP32[$295>>2]|0;
        $297 = ($293|0)==(0|0);
        $298 = ($293|0)==($296|0);
        $or$cond2$i = $297 | $298;
        $$1363$i = $or$cond2$i ? $$0362$i : $293;
        $299 = ($296|0)==(0|0);
        $not$8$i = $299 ^ 1;
        $300 = $not$8$i&1;
        $$0359$$i = $$0359$i << $300;
        if ($299) {
         $$2355$i = $$1363$i;$$3$i201 = $$1343$i;$$3350$i = $$1348$i;
         label = 81;
         break;
        } else {
         $$0342$i = $$1343$i;$$0347$i = $$1348$i;$$0353$i = $296;$$0359$i = $$0359$$i;$$0362$i = $$1363$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 81) {
      $301 = ($$2355$i|0)==(0|0);
      $302 = ($$3$i201|0)==(0|0);
      $or$cond$i = $301 & $302;
      if ($or$cond$i) {
       $303 = 2 << $$0358$i;
       $304 = (0 - ($303))|0;
       $305 = $303 | $304;
       $306 = $250 & $305;
       $307 = ($306|0)==(0);
       if ($307) {
        $$0197 = $249;
        break;
       }
       $308 = (0 - ($306))|0;
       $309 = $306 & $308;
       $310 = (($309) + -1)|0;
       $311 = $310 >>> 12;
       $312 = $311 & 16;
       $313 = $310 >>> $312;
       $314 = $313 >>> 5;
       $315 = $314 & 8;
       $316 = $315 | $312;
       $317 = $313 >>> $315;
       $318 = $317 >>> 2;
       $319 = $318 & 4;
       $320 = $316 | $319;
       $321 = $317 >>> $319;
       $322 = $321 >>> 1;
       $323 = $322 & 2;
       $324 = $320 | $323;
       $325 = $321 >>> $323;
       $326 = $325 >>> 1;
       $327 = $326 & 1;
       $328 = $324 | $327;
       $329 = $325 >>> $327;
       $330 = (($328) + ($329))|0;
       $331 = (15784 + ($330<<2)|0);
       $332 = HEAP32[$331>>2]|0;
       $$4$ph$i = 0;$$4357$ph$i = $332;
      } else {
       $$4$ph$i = $$3$i201;$$4357$ph$i = $$2355$i;
      }
      $333 = ($$4357$ph$i|0)==(0|0);
      if ($333) {
       $$4$lcssa$i = $$4$ph$i;$$4351$lcssa$i = $$3350$i;
      } else {
       $$415$i = $$4$ph$i;$$435114$i = $$3350$i;$$435713$i = $$4357$ph$i;
       label = 85;
      }
     }
     if ((label|0) == 85) {
      while(1) {
       label = 0;
       $334 = ((($$435713$i)) + 4|0);
       $335 = HEAP32[$334>>2]|0;
       $336 = $335 & -8;
       $337 = (($336) - ($249))|0;
       $338 = ($337>>>0)<($$435114$i>>>0);
       $$$4351$i = $338 ? $337 : $$435114$i;
       $$4357$$4$i = $338 ? $$435713$i : $$415$i;
       $339 = ((($$435713$i)) + 16|0);
       $340 = HEAP32[$339>>2]|0;
       $not$1$i203 = ($340|0)==(0|0);
       $$sink2$i204 = $not$1$i203&1;
       $341 = (((($$435713$i)) + 16|0) + ($$sink2$i204<<2)|0);
       $342 = HEAP32[$341>>2]|0;
       $343 = ($342|0)==(0|0);
       if ($343) {
        $$4$lcssa$i = $$4357$$4$i;$$4351$lcssa$i = $$$4351$i;
        break;
       } else {
        $$415$i = $$4357$$4$i;$$435114$i = $$$4351$i;$$435713$i = $342;
        label = 85;
       }
      }
     }
     $344 = ($$4$lcssa$i|0)==(0|0);
     if ($344) {
      $$0197 = $249;
     } else {
      $345 = HEAP32[(15488)>>2]|0;
      $346 = (($345) - ($249))|0;
      $347 = ($$4351$lcssa$i>>>0)<($346>>>0);
      if ($347) {
       $348 = HEAP32[(15496)>>2]|0;
       $349 = ($$4$lcssa$i>>>0)<($348>>>0);
       if ($349) {
        _abort();
        // unreachable;
       }
       $350 = (($$4$lcssa$i) + ($249)|0);
       $351 = ($$4$lcssa$i>>>0)<($350>>>0);
       if (!($351)) {
        _abort();
        // unreachable;
       }
       $352 = ((($$4$lcssa$i)) + 24|0);
       $353 = HEAP32[$352>>2]|0;
       $354 = ((($$4$lcssa$i)) + 12|0);
       $355 = HEAP32[$354>>2]|0;
       $356 = ($355|0)==($$4$lcssa$i|0);
       do {
        if ($356) {
         $366 = ((($$4$lcssa$i)) + 20|0);
         $367 = HEAP32[$366>>2]|0;
         $368 = ($367|0)==(0|0);
         if ($368) {
          $369 = ((($$4$lcssa$i)) + 16|0);
          $370 = HEAP32[$369>>2]|0;
          $371 = ($370|0)==(0|0);
          if ($371) {
           $$3372$i = 0;
           break;
          } else {
           $$1370$i = $370;$$1374$i = $369;
          }
         } else {
          $$1370$i = $367;$$1374$i = $366;
         }
         while(1) {
          $372 = ((($$1370$i)) + 20|0);
          $373 = HEAP32[$372>>2]|0;
          $374 = ($373|0)==(0|0);
          if (!($374)) {
           $$1370$i = $373;$$1374$i = $372;
           continue;
          }
          $375 = ((($$1370$i)) + 16|0);
          $376 = HEAP32[$375>>2]|0;
          $377 = ($376|0)==(0|0);
          if ($377) {
           break;
          } else {
           $$1370$i = $376;$$1374$i = $375;
          }
         }
         $378 = ($$1374$i>>>0)<($348>>>0);
         if ($378) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$$1374$i>>2] = 0;
          $$3372$i = $$1370$i;
          break;
         }
        } else {
         $357 = ((($$4$lcssa$i)) + 8|0);
         $358 = HEAP32[$357>>2]|0;
         $359 = ($358>>>0)<($348>>>0);
         if ($359) {
          _abort();
          // unreachable;
         }
         $360 = ((($358)) + 12|0);
         $361 = HEAP32[$360>>2]|0;
         $362 = ($361|0)==($$4$lcssa$i|0);
         if (!($362)) {
          _abort();
          // unreachable;
         }
         $363 = ((($355)) + 8|0);
         $364 = HEAP32[$363>>2]|0;
         $365 = ($364|0)==($$4$lcssa$i|0);
         if ($365) {
          HEAP32[$360>>2] = $355;
          HEAP32[$363>>2] = $358;
          $$3372$i = $355;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       } while(0);
       $379 = ($353|0)==(0|0);
       L164: do {
        if ($379) {
         $470 = $250;
        } else {
         $380 = ((($$4$lcssa$i)) + 28|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = (15784 + ($381<<2)|0);
         $383 = HEAP32[$382>>2]|0;
         $384 = ($$4$lcssa$i|0)==($383|0);
         do {
          if ($384) {
           HEAP32[$382>>2] = $$3372$i;
           $cond$i208 = ($$3372$i|0)==(0|0);
           if ($cond$i208) {
            $385 = 1 << $381;
            $386 = $385 ^ -1;
            $387 = $250 & $386;
            HEAP32[(15484)>>2] = $387;
            $470 = $387;
            break L164;
           }
          } else {
           $388 = HEAP32[(15496)>>2]|0;
           $389 = ($353>>>0)<($388>>>0);
           if ($389) {
            _abort();
            // unreachable;
           } else {
            $390 = ((($353)) + 16|0);
            $391 = HEAP32[$390>>2]|0;
            $not$$i209 = ($391|0)!=($$4$lcssa$i|0);
            $$sink3$i = $not$$i209&1;
            $392 = (((($353)) + 16|0) + ($$sink3$i<<2)|0);
            HEAP32[$392>>2] = $$3372$i;
            $393 = ($$3372$i|0)==(0|0);
            if ($393) {
             $470 = $250;
             break L164;
            } else {
             break;
            }
           }
          }
         } while(0);
         $394 = HEAP32[(15496)>>2]|0;
         $395 = ($$3372$i>>>0)<($394>>>0);
         if ($395) {
          _abort();
          // unreachable;
         }
         $396 = ((($$3372$i)) + 24|0);
         HEAP32[$396>>2] = $353;
         $397 = ((($$4$lcssa$i)) + 16|0);
         $398 = HEAP32[$397>>2]|0;
         $399 = ($398|0)==(0|0);
         do {
          if (!($399)) {
           $400 = ($398>>>0)<($394>>>0);
           if ($400) {
            _abort();
            // unreachable;
           } else {
            $401 = ((($$3372$i)) + 16|0);
            HEAP32[$401>>2] = $398;
            $402 = ((($398)) + 24|0);
            HEAP32[$402>>2] = $$3372$i;
            break;
           }
          }
         } while(0);
         $403 = ((($$4$lcssa$i)) + 20|0);
         $404 = HEAP32[$403>>2]|0;
         $405 = ($404|0)==(0|0);
         if ($405) {
          $470 = $250;
         } else {
          $406 = HEAP32[(15496)>>2]|0;
          $407 = ($404>>>0)<($406>>>0);
          if ($407) {
           _abort();
           // unreachable;
          } else {
           $408 = ((($$3372$i)) + 20|0);
           HEAP32[$408>>2] = $404;
           $409 = ((($404)) + 24|0);
           HEAP32[$409>>2] = $$3372$i;
           $470 = $250;
           break;
          }
         }
        }
       } while(0);
       $410 = ($$4351$lcssa$i>>>0)<(16);
       do {
        if ($410) {
         $411 = (($$4351$lcssa$i) + ($249))|0;
         $412 = $411 | 3;
         $413 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$413>>2] = $412;
         $414 = (($$4$lcssa$i) + ($411)|0);
         $415 = ((($414)) + 4|0);
         $416 = HEAP32[$415>>2]|0;
         $417 = $416 | 1;
         HEAP32[$415>>2] = $417;
        } else {
         $418 = $249 | 3;
         $419 = ((($$4$lcssa$i)) + 4|0);
         HEAP32[$419>>2] = $418;
         $420 = $$4351$lcssa$i | 1;
         $421 = ((($350)) + 4|0);
         HEAP32[$421>>2] = $420;
         $422 = (($350) + ($$4351$lcssa$i)|0);
         HEAP32[$422>>2] = $$4351$lcssa$i;
         $423 = $$4351$lcssa$i >>> 3;
         $424 = ($$4351$lcssa$i>>>0)<(256);
         if ($424) {
          $425 = $423 << 1;
          $426 = (15520 + ($425<<2)|0);
          $427 = HEAP32[3870]|0;
          $428 = 1 << $423;
          $429 = $427 & $428;
          $430 = ($429|0)==(0);
          if ($430) {
           $431 = $427 | $428;
           HEAP32[3870] = $431;
           $$pre$i210 = ((($426)) + 8|0);
           $$0368$i = $426;$$pre$phi$i211Z2D = $$pre$i210;
          } else {
           $432 = ((($426)) + 8|0);
           $433 = HEAP32[$432>>2]|0;
           $434 = HEAP32[(15496)>>2]|0;
           $435 = ($433>>>0)<($434>>>0);
           if ($435) {
            _abort();
            // unreachable;
           } else {
            $$0368$i = $433;$$pre$phi$i211Z2D = $432;
           }
          }
          HEAP32[$$pre$phi$i211Z2D>>2] = $350;
          $436 = ((($$0368$i)) + 12|0);
          HEAP32[$436>>2] = $350;
          $437 = ((($350)) + 8|0);
          HEAP32[$437>>2] = $$0368$i;
          $438 = ((($350)) + 12|0);
          HEAP32[$438>>2] = $426;
          break;
         }
         $439 = $$4351$lcssa$i >>> 8;
         $440 = ($439|0)==(0);
         if ($440) {
          $$0361$i = 0;
         } else {
          $441 = ($$4351$lcssa$i>>>0)>(16777215);
          if ($441) {
           $$0361$i = 31;
          } else {
           $442 = (($439) + 1048320)|0;
           $443 = $442 >>> 16;
           $444 = $443 & 8;
           $445 = $439 << $444;
           $446 = (($445) + 520192)|0;
           $447 = $446 >>> 16;
           $448 = $447 & 4;
           $449 = $448 | $444;
           $450 = $445 << $448;
           $451 = (($450) + 245760)|0;
           $452 = $451 >>> 16;
           $453 = $452 & 2;
           $454 = $449 | $453;
           $455 = (14 - ($454))|0;
           $456 = $450 << $453;
           $457 = $456 >>> 15;
           $458 = (($455) + ($457))|0;
           $459 = $458 << 1;
           $460 = (($458) + 7)|0;
           $461 = $$4351$lcssa$i >>> $460;
           $462 = $461 & 1;
           $463 = $462 | $459;
           $$0361$i = $463;
          }
         }
         $464 = (15784 + ($$0361$i<<2)|0);
         $465 = ((($350)) + 28|0);
         HEAP32[$465>>2] = $$0361$i;
         $466 = ((($350)) + 16|0);
         $467 = ((($466)) + 4|0);
         HEAP32[$467>>2] = 0;
         HEAP32[$466>>2] = 0;
         $468 = 1 << $$0361$i;
         $469 = $470 & $468;
         $471 = ($469|0)==(0);
         if ($471) {
          $472 = $470 | $468;
          HEAP32[(15484)>>2] = $472;
          HEAP32[$464>>2] = $350;
          $473 = ((($350)) + 24|0);
          HEAP32[$473>>2] = $464;
          $474 = ((($350)) + 12|0);
          HEAP32[$474>>2] = $350;
          $475 = ((($350)) + 8|0);
          HEAP32[$475>>2] = $350;
          break;
         }
         $476 = HEAP32[$464>>2]|0;
         $477 = ($$0361$i|0)==(31);
         $478 = $$0361$i >>> 1;
         $479 = (25 - ($478))|0;
         $480 = $477 ? 0 : $479;
         $481 = $$4351$lcssa$i << $480;
         $$0344$i = $481;$$0345$i = $476;
         while(1) {
          $482 = ((($$0345$i)) + 4|0);
          $483 = HEAP32[$482>>2]|0;
          $484 = $483 & -8;
          $485 = ($484|0)==($$4351$lcssa$i|0);
          if ($485) {
           label = 139;
           break;
          }
          $486 = $$0344$i >>> 31;
          $487 = (((($$0345$i)) + 16|0) + ($486<<2)|0);
          $488 = $$0344$i << 1;
          $489 = HEAP32[$487>>2]|0;
          $490 = ($489|0)==(0|0);
          if ($490) {
           label = 136;
           break;
          } else {
           $$0344$i = $488;$$0345$i = $489;
          }
         }
         if ((label|0) == 136) {
          $491 = HEAP32[(15496)>>2]|0;
          $492 = ($487>>>0)<($491>>>0);
          if ($492) {
           _abort();
           // unreachable;
          } else {
           HEAP32[$487>>2] = $350;
           $493 = ((($350)) + 24|0);
           HEAP32[$493>>2] = $$0345$i;
           $494 = ((($350)) + 12|0);
           HEAP32[$494>>2] = $350;
           $495 = ((($350)) + 8|0);
           HEAP32[$495>>2] = $350;
           break;
          }
         }
         else if ((label|0) == 139) {
          $496 = ((($$0345$i)) + 8|0);
          $497 = HEAP32[$496>>2]|0;
          $498 = HEAP32[(15496)>>2]|0;
          $499 = ($497>>>0)>=($498>>>0);
          $not$9$i = ($$0345$i>>>0)>=($498>>>0);
          $500 = $499 & $not$9$i;
          if ($500) {
           $501 = ((($497)) + 12|0);
           HEAP32[$501>>2] = $350;
           HEAP32[$496>>2] = $350;
           $502 = ((($350)) + 8|0);
           HEAP32[$502>>2] = $497;
           $503 = ((($350)) + 12|0);
           HEAP32[$503>>2] = $$0345$i;
           $504 = ((($350)) + 24|0);
           HEAP32[$504>>2] = 0;
           break;
          } else {
           _abort();
           // unreachable;
          }
         }
        }
       } while(0);
       $505 = ((($$4$lcssa$i)) + 8|0);
       $$0 = $505;
       STACKTOP = sp;return ($$0|0);
      } else {
       $$0197 = $249;
      }
     }
    }
   }
  }
 } while(0);
 $506 = HEAP32[(15488)>>2]|0;
 $507 = ($506>>>0)<($$0197>>>0);
 if (!($507)) {
  $508 = (($506) - ($$0197))|0;
  $509 = HEAP32[(15500)>>2]|0;
  $510 = ($508>>>0)>(15);
  if ($510) {
   $511 = (($509) + ($$0197)|0);
   HEAP32[(15500)>>2] = $511;
   HEAP32[(15488)>>2] = $508;
   $512 = $508 | 1;
   $513 = ((($511)) + 4|0);
   HEAP32[$513>>2] = $512;
   $514 = (($511) + ($508)|0);
   HEAP32[$514>>2] = $508;
   $515 = $$0197 | 3;
   $516 = ((($509)) + 4|0);
   HEAP32[$516>>2] = $515;
  } else {
   HEAP32[(15488)>>2] = 0;
   HEAP32[(15500)>>2] = 0;
   $517 = $506 | 3;
   $518 = ((($509)) + 4|0);
   HEAP32[$518>>2] = $517;
   $519 = (($509) + ($506)|0);
   $520 = ((($519)) + 4|0);
   $521 = HEAP32[$520>>2]|0;
   $522 = $521 | 1;
   HEAP32[$520>>2] = $522;
  }
  $523 = ((($509)) + 8|0);
  $$0 = $523;
  STACKTOP = sp;return ($$0|0);
 }
 $524 = HEAP32[(15492)>>2]|0;
 $525 = ($524>>>0)>($$0197>>>0);
 if ($525) {
  $526 = (($524) - ($$0197))|0;
  HEAP32[(15492)>>2] = $526;
  $527 = HEAP32[(15504)>>2]|0;
  $528 = (($527) + ($$0197)|0);
  HEAP32[(15504)>>2] = $528;
  $529 = $526 | 1;
  $530 = ((($528)) + 4|0);
  HEAP32[$530>>2] = $529;
  $531 = $$0197 | 3;
  $532 = ((($527)) + 4|0);
  HEAP32[$532>>2] = $531;
  $533 = ((($527)) + 8|0);
  $$0 = $533;
  STACKTOP = sp;return ($$0|0);
 }
 $534 = HEAP32[3988]|0;
 $535 = ($534|0)==(0);
 if ($535) {
  HEAP32[(15960)>>2] = 4096;
  HEAP32[(15956)>>2] = 4096;
  HEAP32[(15964)>>2] = -1;
  HEAP32[(15968)>>2] = -1;
  HEAP32[(15972)>>2] = 0;
  HEAP32[(15924)>>2] = 0;
  $536 = $1;
  $537 = $536 & -16;
  $538 = $537 ^ 1431655768;
  HEAP32[$1>>2] = $538;
  HEAP32[3988] = $538;
  $542 = 4096;
 } else {
  $$pre$i212 = HEAP32[(15960)>>2]|0;
  $542 = $$pre$i212;
 }
 $539 = (($$0197) + 48)|0;
 $540 = (($$0197) + 47)|0;
 $541 = (($542) + ($540))|0;
 $543 = (0 - ($542))|0;
 $544 = $541 & $543;
 $545 = ($544>>>0)>($$0197>>>0);
 if (!($545)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $546 = HEAP32[(15920)>>2]|0;
 $547 = ($546|0)==(0);
 if (!($547)) {
  $548 = HEAP32[(15912)>>2]|0;
  $549 = (($548) + ($544))|0;
  $550 = ($549>>>0)<=($548>>>0);
  $551 = ($549>>>0)>($546>>>0);
  $or$cond1$i = $550 | $551;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $552 = HEAP32[(15924)>>2]|0;
 $553 = $552 & 4;
 $554 = ($553|0)==(0);
 L244: do {
  if ($554) {
   $555 = HEAP32[(15504)>>2]|0;
   $556 = ($555|0)==(0|0);
   L246: do {
    if ($556) {
     label = 163;
    } else {
     $$0$i$i = (15928);
     while(1) {
      $557 = HEAP32[$$0$i$i>>2]|0;
      $558 = ($557>>>0)>($555>>>0);
      if (!($558)) {
       $559 = ((($$0$i$i)) + 4|0);
       $560 = HEAP32[$559>>2]|0;
       $561 = (($557) + ($560)|0);
       $562 = ($561>>>0)>($555>>>0);
       if ($562) {
        break;
       }
      }
      $563 = ((($$0$i$i)) + 8|0);
      $564 = HEAP32[$563>>2]|0;
      $565 = ($564|0)==(0|0);
      if ($565) {
       label = 163;
       break L246;
      } else {
       $$0$i$i = $564;
      }
     }
     $588 = (($541) - ($524))|0;
     $589 = $588 & $543;
     $590 = ($589>>>0)<(2147483647);
     if ($590) {
      $591 = (_sbrk(($589|0))|0);
      $592 = HEAP32[$$0$i$i>>2]|0;
      $593 = HEAP32[$559>>2]|0;
      $594 = (($592) + ($593)|0);
      $595 = ($591|0)==($594|0);
      if ($595) {
       $596 = ($591|0)==((-1)|0);
       if ($596) {
        $$2234253237$i = $589;
       } else {
        $$723948$i = $589;$$749$i = $591;
        label = 180;
        break L244;
       }
      } else {
       $$2247$ph$i = $591;$$2253$ph$i = $589;
       label = 171;
      }
     } else {
      $$2234253237$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 163) {
     $566 = (_sbrk(0)|0);
     $567 = ($566|0)==((-1)|0);
     if ($567) {
      $$2234253237$i = 0;
     } else {
      $568 = $566;
      $569 = HEAP32[(15956)>>2]|0;
      $570 = (($569) + -1)|0;
      $571 = $570 & $568;
      $572 = ($571|0)==(0);
      $573 = (($570) + ($568))|0;
      $574 = (0 - ($569))|0;
      $575 = $573 & $574;
      $576 = (($575) - ($568))|0;
      $577 = $572 ? 0 : $576;
      $$$i = (($577) + ($544))|0;
      $578 = HEAP32[(15912)>>2]|0;
      $579 = (($$$i) + ($578))|0;
      $580 = ($$$i>>>0)>($$0197>>>0);
      $581 = ($$$i>>>0)<(2147483647);
      $or$cond$i214 = $580 & $581;
      if ($or$cond$i214) {
       $582 = HEAP32[(15920)>>2]|0;
       $583 = ($582|0)==(0);
       if (!($583)) {
        $584 = ($579>>>0)<=($578>>>0);
        $585 = ($579>>>0)>($582>>>0);
        $or$cond2$i215 = $584 | $585;
        if ($or$cond2$i215) {
         $$2234253237$i = 0;
         break;
        }
       }
       $586 = (_sbrk(($$$i|0))|0);
       $587 = ($586|0)==($566|0);
       if ($587) {
        $$723948$i = $$$i;$$749$i = $566;
        label = 180;
        break L244;
       } else {
        $$2247$ph$i = $586;$$2253$ph$i = $$$i;
        label = 171;
       }
      } else {
       $$2234253237$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 171) {
     $597 = (0 - ($$2253$ph$i))|0;
     $598 = ($$2247$ph$i|0)!=((-1)|0);
     $599 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $599 & $598;
     $600 = ($539>>>0)>($$2253$ph$i>>>0);
     $or$cond10$i = $600 & $or$cond7$i;
     if (!($or$cond10$i)) {
      $610 = ($$2247$ph$i|0)==((-1)|0);
      if ($610) {
       $$2234253237$i = 0;
       break;
      } else {
       $$723948$i = $$2253$ph$i;$$749$i = $$2247$ph$i;
       label = 180;
       break L244;
      }
     }
     $601 = HEAP32[(15960)>>2]|0;
     $602 = (($540) - ($$2253$ph$i))|0;
     $603 = (($602) + ($601))|0;
     $604 = (0 - ($601))|0;
     $605 = $603 & $604;
     $606 = ($605>>>0)<(2147483647);
     if (!($606)) {
      $$723948$i = $$2253$ph$i;$$749$i = $$2247$ph$i;
      label = 180;
      break L244;
     }
     $607 = (_sbrk(($605|0))|0);
     $608 = ($607|0)==((-1)|0);
     if ($608) {
      (_sbrk(($597|0))|0);
      $$2234253237$i = 0;
      break;
     } else {
      $609 = (($605) + ($$2253$ph$i))|0;
      $$723948$i = $609;$$749$i = $$2247$ph$i;
      label = 180;
      break L244;
     }
    }
   } while(0);
   $611 = HEAP32[(15924)>>2]|0;
   $612 = $611 | 4;
   HEAP32[(15924)>>2] = $612;
   $$4236$i = $$2234253237$i;
   label = 178;
  } else {
   $$4236$i = 0;
   label = 178;
  }
 } while(0);
 if ((label|0) == 178) {
  $613 = ($544>>>0)<(2147483647);
  if ($613) {
   $614 = (_sbrk(($544|0))|0);
   $615 = (_sbrk(0)|0);
   $616 = ($614|0)!=((-1)|0);
   $617 = ($615|0)!=((-1)|0);
   $or$cond5$i = $616 & $617;
   $618 = ($614>>>0)<($615>>>0);
   $or$cond11$i = $618 & $or$cond5$i;
   $619 = $615;
   $620 = $614;
   $621 = (($619) - ($620))|0;
   $622 = (($$0197) + 40)|0;
   $623 = ($621>>>0)>($622>>>0);
   $$$4236$i = $623 ? $621 : $$4236$i;
   $or$cond11$not$i = $or$cond11$i ^ 1;
   $624 = ($614|0)==((-1)|0);
   $not$$i216 = $623 ^ 1;
   $625 = $624 | $not$$i216;
   $or$cond50$i = $625 | $or$cond11$not$i;
   if (!($or$cond50$i)) {
    $$723948$i = $$$4236$i;$$749$i = $614;
    label = 180;
   }
  }
 }
 if ((label|0) == 180) {
  $626 = HEAP32[(15912)>>2]|0;
  $627 = (($626) + ($$723948$i))|0;
  HEAP32[(15912)>>2] = $627;
  $628 = HEAP32[(15916)>>2]|0;
  $629 = ($627>>>0)>($628>>>0);
  if ($629) {
   HEAP32[(15916)>>2] = $627;
  }
  $630 = HEAP32[(15504)>>2]|0;
  $631 = ($630|0)==(0|0);
  do {
   if ($631) {
    $632 = HEAP32[(15496)>>2]|0;
    $633 = ($632|0)==(0|0);
    $634 = ($$749$i>>>0)<($632>>>0);
    $or$cond12$i = $633 | $634;
    if ($or$cond12$i) {
     HEAP32[(15496)>>2] = $$749$i;
    }
    HEAP32[(15928)>>2] = $$749$i;
    HEAP32[(15932)>>2] = $$723948$i;
    HEAP32[(15940)>>2] = 0;
    $635 = HEAP32[3988]|0;
    HEAP32[(15516)>>2] = $635;
    HEAP32[(15512)>>2] = -1;
    $$01$i$i = 0;
    while(1) {
     $636 = $$01$i$i << 1;
     $637 = (15520 + ($636<<2)|0);
     $638 = ((($637)) + 12|0);
     HEAP32[$638>>2] = $637;
     $639 = ((($637)) + 8|0);
     HEAP32[$639>>2] = $637;
     $640 = (($$01$i$i) + 1)|0;
     $exitcond$i$i = ($640|0)==(32);
     if ($exitcond$i$i) {
      break;
     } else {
      $$01$i$i = $640;
     }
    }
    $641 = (($$723948$i) + -40)|0;
    $642 = ((($$749$i)) + 8|0);
    $643 = $642;
    $644 = $643 & 7;
    $645 = ($644|0)==(0);
    $646 = (0 - ($643))|0;
    $647 = $646 & 7;
    $648 = $645 ? 0 : $647;
    $649 = (($$749$i) + ($648)|0);
    $650 = (($641) - ($648))|0;
    HEAP32[(15504)>>2] = $649;
    HEAP32[(15492)>>2] = $650;
    $651 = $650 | 1;
    $652 = ((($649)) + 4|0);
    HEAP32[$652>>2] = $651;
    $653 = (($649) + ($650)|0);
    $654 = ((($653)) + 4|0);
    HEAP32[$654>>2] = 40;
    $655 = HEAP32[(15968)>>2]|0;
    HEAP32[(15508)>>2] = $655;
   } else {
    $$024371$i = (15928);
    while(1) {
     $656 = HEAP32[$$024371$i>>2]|0;
     $657 = ((($$024371$i)) + 4|0);
     $658 = HEAP32[$657>>2]|0;
     $659 = (($656) + ($658)|0);
     $660 = ($$749$i|0)==($659|0);
     if ($660) {
      label = 190;
      break;
     }
     $661 = ((($$024371$i)) + 8|0);
     $662 = HEAP32[$661>>2]|0;
     $663 = ($662|0)==(0|0);
     if ($663) {
      break;
     } else {
      $$024371$i = $662;
     }
    }
    if ((label|0) == 190) {
     $664 = ((($$024371$i)) + 12|0);
     $665 = HEAP32[$664>>2]|0;
     $666 = $665 & 8;
     $667 = ($666|0)==(0);
     if ($667) {
      $668 = ($630>>>0)>=($656>>>0);
      $669 = ($630>>>0)<($$749$i>>>0);
      $or$cond51$i = $669 & $668;
      if ($or$cond51$i) {
       $670 = (($658) + ($$723948$i))|0;
       HEAP32[$657>>2] = $670;
       $671 = HEAP32[(15492)>>2]|0;
       $672 = ((($630)) + 8|0);
       $673 = $672;
       $674 = $673 & 7;
       $675 = ($674|0)==(0);
       $676 = (0 - ($673))|0;
       $677 = $676 & 7;
       $678 = $675 ? 0 : $677;
       $679 = (($630) + ($678)|0);
       $680 = (($$723948$i) - ($678))|0;
       $681 = (($671) + ($680))|0;
       HEAP32[(15504)>>2] = $679;
       HEAP32[(15492)>>2] = $681;
       $682 = $681 | 1;
       $683 = ((($679)) + 4|0);
       HEAP32[$683>>2] = $682;
       $684 = (($679) + ($681)|0);
       $685 = ((($684)) + 4|0);
       HEAP32[$685>>2] = 40;
       $686 = HEAP32[(15968)>>2]|0;
       HEAP32[(15508)>>2] = $686;
       break;
      }
     }
    }
    $687 = HEAP32[(15496)>>2]|0;
    $688 = ($$749$i>>>0)<($687>>>0);
    if ($688) {
     HEAP32[(15496)>>2] = $$749$i;
     $752 = $$749$i;
    } else {
     $752 = $687;
    }
    $689 = (($$749$i) + ($$723948$i)|0);
    $$124470$i = (15928);
    while(1) {
     $690 = HEAP32[$$124470$i>>2]|0;
     $691 = ($690|0)==($689|0);
     if ($691) {
      label = 198;
      break;
     }
     $692 = ((($$124470$i)) + 8|0);
     $693 = HEAP32[$692>>2]|0;
     $694 = ($693|0)==(0|0);
     if ($694) {
      break;
     } else {
      $$124470$i = $693;
     }
    }
    if ((label|0) == 198) {
     $695 = ((($$124470$i)) + 12|0);
     $696 = HEAP32[$695>>2]|0;
     $697 = $696 & 8;
     $698 = ($697|0)==(0);
     if ($698) {
      HEAP32[$$124470$i>>2] = $$749$i;
      $699 = ((($$124470$i)) + 4|0);
      $700 = HEAP32[$699>>2]|0;
      $701 = (($700) + ($$723948$i))|0;
      HEAP32[$699>>2] = $701;
      $702 = ((($$749$i)) + 8|0);
      $703 = $702;
      $704 = $703 & 7;
      $705 = ($704|0)==(0);
      $706 = (0 - ($703))|0;
      $707 = $706 & 7;
      $708 = $705 ? 0 : $707;
      $709 = (($$749$i) + ($708)|0);
      $710 = ((($689)) + 8|0);
      $711 = $710;
      $712 = $711 & 7;
      $713 = ($712|0)==(0);
      $714 = (0 - ($711))|0;
      $715 = $714 & 7;
      $716 = $713 ? 0 : $715;
      $717 = (($689) + ($716)|0);
      $718 = $717;
      $719 = $709;
      $720 = (($718) - ($719))|0;
      $721 = (($709) + ($$0197)|0);
      $722 = (($720) - ($$0197))|0;
      $723 = $$0197 | 3;
      $724 = ((($709)) + 4|0);
      HEAP32[$724>>2] = $723;
      $725 = ($717|0)==($630|0);
      do {
       if ($725) {
        $726 = HEAP32[(15492)>>2]|0;
        $727 = (($726) + ($722))|0;
        HEAP32[(15492)>>2] = $727;
        HEAP32[(15504)>>2] = $721;
        $728 = $727 | 1;
        $729 = ((($721)) + 4|0);
        HEAP32[$729>>2] = $728;
       } else {
        $730 = HEAP32[(15500)>>2]|0;
        $731 = ($717|0)==($730|0);
        if ($731) {
         $732 = HEAP32[(15488)>>2]|0;
         $733 = (($732) + ($722))|0;
         HEAP32[(15488)>>2] = $733;
         HEAP32[(15500)>>2] = $721;
         $734 = $733 | 1;
         $735 = ((($721)) + 4|0);
         HEAP32[$735>>2] = $734;
         $736 = (($721) + ($733)|0);
         HEAP32[$736>>2] = $733;
         break;
        }
        $737 = ((($717)) + 4|0);
        $738 = HEAP32[$737>>2]|0;
        $739 = $738 & 3;
        $740 = ($739|0)==(1);
        if ($740) {
         $741 = $738 & -8;
         $742 = $738 >>> 3;
         $743 = ($738>>>0)<(256);
         L314: do {
          if ($743) {
           $744 = ((($717)) + 8|0);
           $745 = HEAP32[$744>>2]|0;
           $746 = ((($717)) + 12|0);
           $747 = HEAP32[$746>>2]|0;
           $748 = $742 << 1;
           $749 = (15520 + ($748<<2)|0);
           $750 = ($745|0)==($749|0);
           do {
            if (!($750)) {
             $751 = ($745>>>0)<($752>>>0);
             if ($751) {
              _abort();
              // unreachable;
             }
             $753 = ((($745)) + 12|0);
             $754 = HEAP32[$753>>2]|0;
             $755 = ($754|0)==($717|0);
             if ($755) {
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $756 = ($747|0)==($745|0);
           if ($756) {
            $757 = 1 << $742;
            $758 = $757 ^ -1;
            $759 = HEAP32[3870]|0;
            $760 = $759 & $758;
            HEAP32[3870] = $760;
            break;
           }
           $761 = ($747|0)==($749|0);
           do {
            if ($761) {
             $$pre10$i$i = ((($747)) + 8|0);
             $$pre$phi11$i$iZ2D = $$pre10$i$i;
            } else {
             $762 = ($747>>>0)<($752>>>0);
             if ($762) {
              _abort();
              // unreachable;
             }
             $763 = ((($747)) + 8|0);
             $764 = HEAP32[$763>>2]|0;
             $765 = ($764|0)==($717|0);
             if ($765) {
              $$pre$phi11$i$iZ2D = $763;
              break;
             }
             _abort();
             // unreachable;
            }
           } while(0);
           $766 = ((($745)) + 12|0);
           HEAP32[$766>>2] = $747;
           HEAP32[$$pre$phi11$i$iZ2D>>2] = $745;
          } else {
           $767 = ((($717)) + 24|0);
           $768 = HEAP32[$767>>2]|0;
           $769 = ((($717)) + 12|0);
           $770 = HEAP32[$769>>2]|0;
           $771 = ($770|0)==($717|0);
           do {
            if ($771) {
             $781 = ((($717)) + 16|0);
             $782 = ((($781)) + 4|0);
             $783 = HEAP32[$782>>2]|0;
             $784 = ($783|0)==(0|0);
             if ($784) {
              $785 = HEAP32[$781>>2]|0;
              $786 = ($785|0)==(0|0);
              if ($786) {
               $$3$i$i = 0;
               break;
              } else {
               $$1291$i$i = $785;$$1293$i$i = $781;
              }
             } else {
              $$1291$i$i = $783;$$1293$i$i = $782;
             }
             while(1) {
              $787 = ((($$1291$i$i)) + 20|0);
              $788 = HEAP32[$787>>2]|0;
              $789 = ($788|0)==(0|0);
              if (!($789)) {
               $$1291$i$i = $788;$$1293$i$i = $787;
               continue;
              }
              $790 = ((($$1291$i$i)) + 16|0);
              $791 = HEAP32[$790>>2]|0;
              $792 = ($791|0)==(0|0);
              if ($792) {
               break;
              } else {
               $$1291$i$i = $791;$$1293$i$i = $790;
              }
             }
             $793 = ($$1293$i$i>>>0)<($752>>>0);
             if ($793) {
              _abort();
              // unreachable;
             } else {
              HEAP32[$$1293$i$i>>2] = 0;
              $$3$i$i = $$1291$i$i;
              break;
             }
            } else {
             $772 = ((($717)) + 8|0);
             $773 = HEAP32[$772>>2]|0;
             $774 = ($773>>>0)<($752>>>0);
             if ($774) {
              _abort();
              // unreachable;
             }
             $775 = ((($773)) + 12|0);
             $776 = HEAP32[$775>>2]|0;
             $777 = ($776|0)==($717|0);
             if (!($777)) {
              _abort();
              // unreachable;
             }
             $778 = ((($770)) + 8|0);
             $779 = HEAP32[$778>>2]|0;
             $780 = ($779|0)==($717|0);
             if ($780) {
              HEAP32[$775>>2] = $770;
              HEAP32[$778>>2] = $773;
              $$3$i$i = $770;
              break;
             } else {
              _abort();
              // unreachable;
             }
            }
           } while(0);
           $794 = ($768|0)==(0|0);
           if ($794) {
            break;
           }
           $795 = ((($717)) + 28|0);
           $796 = HEAP32[$795>>2]|0;
           $797 = (15784 + ($796<<2)|0);
           $798 = HEAP32[$797>>2]|0;
           $799 = ($717|0)==($798|0);
           do {
            if ($799) {
             HEAP32[$797>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $800 = 1 << $796;
             $801 = $800 ^ -1;
             $802 = HEAP32[(15484)>>2]|0;
             $803 = $802 & $801;
             HEAP32[(15484)>>2] = $803;
             break L314;
            } else {
             $804 = HEAP32[(15496)>>2]|0;
             $805 = ($768>>>0)<($804>>>0);
             if ($805) {
              _abort();
              // unreachable;
             } else {
              $806 = ((($768)) + 16|0);
              $807 = HEAP32[$806>>2]|0;
              $not$$i17$i = ($807|0)!=($717|0);
              $$sink1$i$i = $not$$i17$i&1;
              $808 = (((($768)) + 16|0) + ($$sink1$i$i<<2)|0);
              HEAP32[$808>>2] = $$3$i$i;
              $809 = ($$3$i$i|0)==(0|0);
              if ($809) {
               break L314;
              } else {
               break;
              }
             }
            }
           } while(0);
           $810 = HEAP32[(15496)>>2]|0;
           $811 = ($$3$i$i>>>0)<($810>>>0);
           if ($811) {
            _abort();
            // unreachable;
           }
           $812 = ((($$3$i$i)) + 24|0);
           HEAP32[$812>>2] = $768;
           $813 = ((($717)) + 16|0);
           $814 = HEAP32[$813>>2]|0;
           $815 = ($814|0)==(0|0);
           do {
            if (!($815)) {
             $816 = ($814>>>0)<($810>>>0);
             if ($816) {
              _abort();
              // unreachable;
             } else {
              $817 = ((($$3$i$i)) + 16|0);
              HEAP32[$817>>2] = $814;
              $818 = ((($814)) + 24|0);
              HEAP32[$818>>2] = $$3$i$i;
              break;
             }
            }
           } while(0);
           $819 = ((($813)) + 4|0);
           $820 = HEAP32[$819>>2]|0;
           $821 = ($820|0)==(0|0);
           if ($821) {
            break;
           }
           $822 = HEAP32[(15496)>>2]|0;
           $823 = ($820>>>0)<($822>>>0);
           if ($823) {
            _abort();
            // unreachable;
           } else {
            $824 = ((($$3$i$i)) + 20|0);
            HEAP32[$824>>2] = $820;
            $825 = ((($820)) + 24|0);
            HEAP32[$825>>2] = $$3$i$i;
            break;
           }
          }
         } while(0);
         $826 = (($717) + ($741)|0);
         $827 = (($741) + ($722))|0;
         $$0$i18$i = $826;$$0287$i$i = $827;
        } else {
         $$0$i18$i = $717;$$0287$i$i = $722;
        }
        $828 = ((($$0$i18$i)) + 4|0);
        $829 = HEAP32[$828>>2]|0;
        $830 = $829 & -2;
        HEAP32[$828>>2] = $830;
        $831 = $$0287$i$i | 1;
        $832 = ((($721)) + 4|0);
        HEAP32[$832>>2] = $831;
        $833 = (($721) + ($$0287$i$i)|0);
        HEAP32[$833>>2] = $$0287$i$i;
        $834 = $$0287$i$i >>> 3;
        $835 = ($$0287$i$i>>>0)<(256);
        if ($835) {
         $836 = $834 << 1;
         $837 = (15520 + ($836<<2)|0);
         $838 = HEAP32[3870]|0;
         $839 = 1 << $834;
         $840 = $838 & $839;
         $841 = ($840|0)==(0);
         do {
          if ($841) {
           $842 = $838 | $839;
           HEAP32[3870] = $842;
           $$pre$i19$i = ((($837)) + 8|0);
           $$0295$i$i = $837;$$pre$phi$i20$iZ2D = $$pre$i19$i;
          } else {
           $843 = ((($837)) + 8|0);
           $844 = HEAP32[$843>>2]|0;
           $845 = HEAP32[(15496)>>2]|0;
           $846 = ($844>>>0)<($845>>>0);
           if (!($846)) {
            $$0295$i$i = $844;$$pre$phi$i20$iZ2D = $843;
            break;
           }
           _abort();
           // unreachable;
          }
         } while(0);
         HEAP32[$$pre$phi$i20$iZ2D>>2] = $721;
         $847 = ((($$0295$i$i)) + 12|0);
         HEAP32[$847>>2] = $721;
         $848 = ((($721)) + 8|0);
         HEAP32[$848>>2] = $$0295$i$i;
         $849 = ((($721)) + 12|0);
         HEAP32[$849>>2] = $837;
         break;
        }
        $850 = $$0287$i$i >>> 8;
        $851 = ($850|0)==(0);
        do {
         if ($851) {
          $$0296$i$i = 0;
         } else {
          $852 = ($$0287$i$i>>>0)>(16777215);
          if ($852) {
           $$0296$i$i = 31;
           break;
          }
          $853 = (($850) + 1048320)|0;
          $854 = $853 >>> 16;
          $855 = $854 & 8;
          $856 = $850 << $855;
          $857 = (($856) + 520192)|0;
          $858 = $857 >>> 16;
          $859 = $858 & 4;
          $860 = $859 | $855;
          $861 = $856 << $859;
          $862 = (($861) + 245760)|0;
          $863 = $862 >>> 16;
          $864 = $863 & 2;
          $865 = $860 | $864;
          $866 = (14 - ($865))|0;
          $867 = $861 << $864;
          $868 = $867 >>> 15;
          $869 = (($866) + ($868))|0;
          $870 = $869 << 1;
          $871 = (($869) + 7)|0;
          $872 = $$0287$i$i >>> $871;
          $873 = $872 & 1;
          $874 = $873 | $870;
          $$0296$i$i = $874;
         }
        } while(0);
        $875 = (15784 + ($$0296$i$i<<2)|0);
        $876 = ((($721)) + 28|0);
        HEAP32[$876>>2] = $$0296$i$i;
        $877 = ((($721)) + 16|0);
        $878 = ((($877)) + 4|0);
        HEAP32[$878>>2] = 0;
        HEAP32[$877>>2] = 0;
        $879 = HEAP32[(15484)>>2]|0;
        $880 = 1 << $$0296$i$i;
        $881 = $879 & $880;
        $882 = ($881|0)==(0);
        if ($882) {
         $883 = $879 | $880;
         HEAP32[(15484)>>2] = $883;
         HEAP32[$875>>2] = $721;
         $884 = ((($721)) + 24|0);
         HEAP32[$884>>2] = $875;
         $885 = ((($721)) + 12|0);
         HEAP32[$885>>2] = $721;
         $886 = ((($721)) + 8|0);
         HEAP32[$886>>2] = $721;
         break;
        }
        $887 = HEAP32[$875>>2]|0;
        $888 = ($$0296$i$i|0)==(31);
        $889 = $$0296$i$i >>> 1;
        $890 = (25 - ($889))|0;
        $891 = $888 ? 0 : $890;
        $892 = $$0287$i$i << $891;
        $$0288$i$i = $892;$$0289$i$i = $887;
        while(1) {
         $893 = ((($$0289$i$i)) + 4|0);
         $894 = HEAP32[$893>>2]|0;
         $895 = $894 & -8;
         $896 = ($895|0)==($$0287$i$i|0);
         if ($896) {
          label = 265;
          break;
         }
         $897 = $$0288$i$i >>> 31;
         $898 = (((($$0289$i$i)) + 16|0) + ($897<<2)|0);
         $899 = $$0288$i$i << 1;
         $900 = HEAP32[$898>>2]|0;
         $901 = ($900|0)==(0|0);
         if ($901) {
          label = 262;
          break;
         } else {
          $$0288$i$i = $899;$$0289$i$i = $900;
         }
        }
        if ((label|0) == 262) {
         $902 = HEAP32[(15496)>>2]|0;
         $903 = ($898>>>0)<($902>>>0);
         if ($903) {
          _abort();
          // unreachable;
         } else {
          HEAP32[$898>>2] = $721;
          $904 = ((($721)) + 24|0);
          HEAP32[$904>>2] = $$0289$i$i;
          $905 = ((($721)) + 12|0);
          HEAP32[$905>>2] = $721;
          $906 = ((($721)) + 8|0);
          HEAP32[$906>>2] = $721;
          break;
         }
        }
        else if ((label|0) == 265) {
         $907 = ((($$0289$i$i)) + 8|0);
         $908 = HEAP32[$907>>2]|0;
         $909 = HEAP32[(15496)>>2]|0;
         $910 = ($908>>>0)>=($909>>>0);
         $not$7$i$i = ($$0289$i$i>>>0)>=($909>>>0);
         $911 = $910 & $not$7$i$i;
         if ($911) {
          $912 = ((($908)) + 12|0);
          HEAP32[$912>>2] = $721;
          HEAP32[$907>>2] = $721;
          $913 = ((($721)) + 8|0);
          HEAP32[$913>>2] = $908;
          $914 = ((($721)) + 12|0);
          HEAP32[$914>>2] = $$0289$i$i;
          $915 = ((($721)) + 24|0);
          HEAP32[$915>>2] = 0;
          break;
         } else {
          _abort();
          // unreachable;
         }
        }
       }
      } while(0);
      $1047 = ((($709)) + 8|0);
      $$0 = $1047;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $$0$i$i$i = (15928);
    while(1) {
     $916 = HEAP32[$$0$i$i$i>>2]|0;
     $917 = ($916>>>0)>($630>>>0);
     if (!($917)) {
      $918 = ((($$0$i$i$i)) + 4|0);
      $919 = HEAP32[$918>>2]|0;
      $920 = (($916) + ($919)|0);
      $921 = ($920>>>0)>($630>>>0);
      if ($921) {
       break;
      }
     }
     $922 = ((($$0$i$i$i)) + 8|0);
     $923 = HEAP32[$922>>2]|0;
     $$0$i$i$i = $923;
    }
    $924 = ((($920)) + -47|0);
    $925 = ((($924)) + 8|0);
    $926 = $925;
    $927 = $926 & 7;
    $928 = ($927|0)==(0);
    $929 = (0 - ($926))|0;
    $930 = $929 & 7;
    $931 = $928 ? 0 : $930;
    $932 = (($924) + ($931)|0);
    $933 = ((($630)) + 16|0);
    $934 = ($932>>>0)<($933>>>0);
    $935 = $934 ? $630 : $932;
    $936 = ((($935)) + 8|0);
    $937 = ((($935)) + 24|0);
    $938 = (($$723948$i) + -40)|0;
    $939 = ((($$749$i)) + 8|0);
    $940 = $939;
    $941 = $940 & 7;
    $942 = ($941|0)==(0);
    $943 = (0 - ($940))|0;
    $944 = $943 & 7;
    $945 = $942 ? 0 : $944;
    $946 = (($$749$i) + ($945)|0);
    $947 = (($938) - ($945))|0;
    HEAP32[(15504)>>2] = $946;
    HEAP32[(15492)>>2] = $947;
    $948 = $947 | 1;
    $949 = ((($946)) + 4|0);
    HEAP32[$949>>2] = $948;
    $950 = (($946) + ($947)|0);
    $951 = ((($950)) + 4|0);
    HEAP32[$951>>2] = 40;
    $952 = HEAP32[(15968)>>2]|0;
    HEAP32[(15508)>>2] = $952;
    $953 = ((($935)) + 4|0);
    HEAP32[$953>>2] = 27;
    ;HEAP32[$936>>2]=HEAP32[(15928)>>2]|0;HEAP32[$936+4>>2]=HEAP32[(15928)+4>>2]|0;HEAP32[$936+8>>2]=HEAP32[(15928)+8>>2]|0;HEAP32[$936+12>>2]=HEAP32[(15928)+12>>2]|0;
    HEAP32[(15928)>>2] = $$749$i;
    HEAP32[(15932)>>2] = $$723948$i;
    HEAP32[(15940)>>2] = 0;
    HEAP32[(15936)>>2] = $936;
    $955 = $937;
    while(1) {
     $954 = ((($955)) + 4|0);
     HEAP32[$954>>2] = 7;
     $956 = ((($955)) + 8|0);
     $957 = ($956>>>0)<($920>>>0);
     if ($957) {
      $955 = $954;
     } else {
      break;
     }
    }
    $958 = ($935|0)==($630|0);
    if (!($958)) {
     $959 = $935;
     $960 = $630;
     $961 = (($959) - ($960))|0;
     $962 = HEAP32[$953>>2]|0;
     $963 = $962 & -2;
     HEAP32[$953>>2] = $963;
     $964 = $961 | 1;
     $965 = ((($630)) + 4|0);
     HEAP32[$965>>2] = $964;
     HEAP32[$935>>2] = $961;
     $966 = $961 >>> 3;
     $967 = ($961>>>0)<(256);
     if ($967) {
      $968 = $966 << 1;
      $969 = (15520 + ($968<<2)|0);
      $970 = HEAP32[3870]|0;
      $971 = 1 << $966;
      $972 = $970 & $971;
      $973 = ($972|0)==(0);
      if ($973) {
       $974 = $970 | $971;
       HEAP32[3870] = $974;
       $$pre$i$i = ((($969)) + 8|0);
       $$0211$i$i = $969;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $975 = ((($969)) + 8|0);
       $976 = HEAP32[$975>>2]|0;
       $977 = HEAP32[(15496)>>2]|0;
       $978 = ($976>>>0)<($977>>>0);
       if ($978) {
        _abort();
        // unreachable;
       } else {
        $$0211$i$i = $976;$$pre$phi$i$iZ2D = $975;
       }
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $630;
      $979 = ((($$0211$i$i)) + 12|0);
      HEAP32[$979>>2] = $630;
      $980 = ((($630)) + 8|0);
      HEAP32[$980>>2] = $$0211$i$i;
      $981 = ((($630)) + 12|0);
      HEAP32[$981>>2] = $969;
      break;
     }
     $982 = $961 >>> 8;
     $983 = ($982|0)==(0);
     if ($983) {
      $$0212$i$i = 0;
     } else {
      $984 = ($961>>>0)>(16777215);
      if ($984) {
       $$0212$i$i = 31;
      } else {
       $985 = (($982) + 1048320)|0;
       $986 = $985 >>> 16;
       $987 = $986 & 8;
       $988 = $982 << $987;
       $989 = (($988) + 520192)|0;
       $990 = $989 >>> 16;
       $991 = $990 & 4;
       $992 = $991 | $987;
       $993 = $988 << $991;
       $994 = (($993) + 245760)|0;
       $995 = $994 >>> 16;
       $996 = $995 & 2;
       $997 = $992 | $996;
       $998 = (14 - ($997))|0;
       $999 = $993 << $996;
       $1000 = $999 >>> 15;
       $1001 = (($998) + ($1000))|0;
       $1002 = $1001 << 1;
       $1003 = (($1001) + 7)|0;
       $1004 = $961 >>> $1003;
       $1005 = $1004 & 1;
       $1006 = $1005 | $1002;
       $$0212$i$i = $1006;
      }
     }
     $1007 = (15784 + ($$0212$i$i<<2)|0);
     $1008 = ((($630)) + 28|0);
     HEAP32[$1008>>2] = $$0212$i$i;
     $1009 = ((($630)) + 20|0);
     HEAP32[$1009>>2] = 0;
     HEAP32[$933>>2] = 0;
     $1010 = HEAP32[(15484)>>2]|0;
     $1011 = 1 << $$0212$i$i;
     $1012 = $1010 & $1011;
     $1013 = ($1012|0)==(0);
     if ($1013) {
      $1014 = $1010 | $1011;
      HEAP32[(15484)>>2] = $1014;
      HEAP32[$1007>>2] = $630;
      $1015 = ((($630)) + 24|0);
      HEAP32[$1015>>2] = $1007;
      $1016 = ((($630)) + 12|0);
      HEAP32[$1016>>2] = $630;
      $1017 = ((($630)) + 8|0);
      HEAP32[$1017>>2] = $630;
      break;
     }
     $1018 = HEAP32[$1007>>2]|0;
     $1019 = ($$0212$i$i|0)==(31);
     $1020 = $$0212$i$i >>> 1;
     $1021 = (25 - ($1020))|0;
     $1022 = $1019 ? 0 : $1021;
     $1023 = $961 << $1022;
     $$0206$i$i = $1023;$$0207$i$i = $1018;
     while(1) {
      $1024 = ((($$0207$i$i)) + 4|0);
      $1025 = HEAP32[$1024>>2]|0;
      $1026 = $1025 & -8;
      $1027 = ($1026|0)==($961|0);
      if ($1027) {
       label = 292;
       break;
      }
      $1028 = $$0206$i$i >>> 31;
      $1029 = (((($$0207$i$i)) + 16|0) + ($1028<<2)|0);
      $1030 = $$0206$i$i << 1;
      $1031 = HEAP32[$1029>>2]|0;
      $1032 = ($1031|0)==(0|0);
      if ($1032) {
       label = 289;
       break;
      } else {
       $$0206$i$i = $1030;$$0207$i$i = $1031;
      }
     }
     if ((label|0) == 289) {
      $1033 = HEAP32[(15496)>>2]|0;
      $1034 = ($1029>>>0)<($1033>>>0);
      if ($1034) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$1029>>2] = $630;
       $1035 = ((($630)) + 24|0);
       HEAP32[$1035>>2] = $$0207$i$i;
       $1036 = ((($630)) + 12|0);
       HEAP32[$1036>>2] = $630;
       $1037 = ((($630)) + 8|0);
       HEAP32[$1037>>2] = $630;
       break;
      }
     }
     else if ((label|0) == 292) {
      $1038 = ((($$0207$i$i)) + 8|0);
      $1039 = HEAP32[$1038>>2]|0;
      $1040 = HEAP32[(15496)>>2]|0;
      $1041 = ($1039>>>0)>=($1040>>>0);
      $not$$i$i = ($$0207$i$i>>>0)>=($1040>>>0);
      $1042 = $1041 & $not$$i$i;
      if ($1042) {
       $1043 = ((($1039)) + 12|0);
       HEAP32[$1043>>2] = $630;
       HEAP32[$1038>>2] = $630;
       $1044 = ((($630)) + 8|0);
       HEAP32[$1044>>2] = $1039;
       $1045 = ((($630)) + 12|0);
       HEAP32[$1045>>2] = $$0207$i$i;
       $1046 = ((($630)) + 24|0);
       HEAP32[$1046>>2] = 0;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    }
   }
  } while(0);
  $1048 = HEAP32[(15492)>>2]|0;
  $1049 = ($1048>>>0)>($$0197>>>0);
  if ($1049) {
   $1050 = (($1048) - ($$0197))|0;
   HEAP32[(15492)>>2] = $1050;
   $1051 = HEAP32[(15504)>>2]|0;
   $1052 = (($1051) + ($$0197)|0);
   HEAP32[(15504)>>2] = $1052;
   $1053 = $1050 | 1;
   $1054 = ((($1052)) + 4|0);
   HEAP32[$1054>>2] = $1053;
   $1055 = $$0197 | 3;
   $1056 = ((($1051)) + 4|0);
   HEAP32[$1056>>2] = $1055;
   $1057 = ((($1051)) + 8|0);
   $$0 = $1057;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1058 = (___errno_location()|0);
 HEAP32[$1058>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0212$i = 0, $$0212$in$i = 0, $$0383 = 0, $$0384 = 0, $$0396 = 0, $$0403 = 0, $$1 = 0, $$1382 = 0, $$1387 = 0, $$1390 = 0, $$1398 = 0, $$1402 = 0, $$2 = 0, $$3 = 0, $$3400 = 0, $$pre = 0, $$pre$phi443Z2D = 0, $$pre$phi445Z2D = 0, $$pre$phiZ2D = 0, $$pre442 = 0;
 var $$pre444 = 0, $$sink3 = 0, $$sink5 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $cond421 = 0, $cond422 = 0, $not$ = 0, $not$405 = 0, $not$437 = 0, label = 0, sp = 0, sp_a = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(15496)>>2]|0;
 $4 = ($2>>>0)<($3>>>0);
 if ($4) {
  _abort();
  // unreachable;
 }
 $5 = ((($0)) + -4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 3;
 $8 = ($7|0)==(1);
 if ($8) {
  _abort();
  // unreachable;
 }
 $9 = $6 & -8;
 $10 = (($2) + ($9)|0);
 $11 = $6 & 1;
 $12 = ($11|0)==(0);
 L10: do {
  if ($12) {
   $13 = HEAP32[$2>>2]|0;
   $14 = ($7|0)==(0);
   if ($14) {
    return;
   }
   $15 = (0 - ($13))|0;
   $16 = (($2) + ($15)|0);
   $17 = (($13) + ($9))|0;
   $18 = ($16>>>0)<($3>>>0);
   if ($18) {
    _abort();
    // unreachable;
   }
   $19 = HEAP32[(15500)>>2]|0;
   $20 = ($16|0)==($19|0);
   if ($20) {
    $104 = ((($10)) + 4|0);
    $105 = HEAP32[$104>>2]|0;
    $106 = $105 & 3;
    $107 = ($106|0)==(3);
    if (!($107)) {
     $$1 = $16;$$1382 = $17;$112 = $16;
     break;
    }
    $108 = (($16) + ($17)|0);
    $109 = ((($16)) + 4|0);
    $110 = $17 | 1;
    $111 = $105 & -2;
    HEAP32[(15488)>>2] = $17;
    HEAP32[$104>>2] = $111;
    HEAP32[$109>>2] = $110;
    HEAP32[$108>>2] = $17;
    return;
   }
   $21 = $13 >>> 3;
   $22 = ($13>>>0)<(256);
   if ($22) {
    $23 = ((($16)) + 8|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($16)) + 12|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $21 << 1;
    $28 = (15520 + ($27<<2)|0);
    $29 = ($24|0)==($28|0);
    if (!($29)) {
     $30 = ($24>>>0)<($3>>>0);
     if ($30) {
      _abort();
      // unreachable;
     }
     $31 = ((($24)) + 12|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ($32|0)==($16|0);
     if (!($33)) {
      _abort();
      // unreachable;
     }
    }
    $34 = ($26|0)==($24|0);
    if ($34) {
     $35 = 1 << $21;
     $36 = $35 ^ -1;
     $37 = HEAP32[3870]|0;
     $38 = $37 & $36;
     HEAP32[3870] = $38;
     $$1 = $16;$$1382 = $17;$112 = $16;
     break;
    }
    $39 = ($26|0)==($28|0);
    if ($39) {
     $$pre444 = ((($26)) + 8|0);
     $$pre$phi445Z2D = $$pre444;
    } else {
     $40 = ($26>>>0)<($3>>>0);
     if ($40) {
      _abort();
      // unreachable;
     }
     $41 = ((($26)) + 8|0);
     $42 = HEAP32[$41>>2]|0;
     $43 = ($42|0)==($16|0);
     if ($43) {
      $$pre$phi445Z2D = $41;
     } else {
      _abort();
      // unreachable;
     }
    }
    $44 = ((($24)) + 12|0);
    HEAP32[$44>>2] = $26;
    HEAP32[$$pre$phi445Z2D>>2] = $24;
    $$1 = $16;$$1382 = $17;$112 = $16;
    break;
   }
   $45 = ((($16)) + 24|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($16)) + 12|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ($48|0)==($16|0);
   do {
    if ($49) {
     $59 = ((($16)) + 16|0);
     $60 = ((($59)) + 4|0);
     $61 = HEAP32[$60>>2]|0;
     $62 = ($61|0)==(0|0);
     if ($62) {
      $63 = HEAP32[$59>>2]|0;
      $64 = ($63|0)==(0|0);
      if ($64) {
       $$3 = 0;
       break;
      } else {
       $$1387 = $63;$$1390 = $59;
      }
     } else {
      $$1387 = $61;$$1390 = $60;
     }
     while(1) {
      $65 = ((($$1387)) + 20|0);
      $66 = HEAP32[$65>>2]|0;
      $67 = ($66|0)==(0|0);
      if (!($67)) {
       $$1387 = $66;$$1390 = $65;
       continue;
      }
      $68 = ((($$1387)) + 16|0);
      $69 = HEAP32[$68>>2]|0;
      $70 = ($69|0)==(0|0);
      if ($70) {
       break;
      } else {
       $$1387 = $69;$$1390 = $68;
      }
     }
     $71 = ($$1390>>>0)<($3>>>0);
     if ($71) {
      _abort();
      // unreachable;
     } else {
      HEAP32[$$1390>>2] = 0;
      $$3 = $$1387;
      break;
     }
    } else {
     $50 = ((($16)) + 8|0);
     $51 = HEAP32[$50>>2]|0;
     $52 = ($51>>>0)<($3>>>0);
     if ($52) {
      _abort();
      // unreachable;
     }
     $53 = ((($51)) + 12|0);
     $54 = HEAP32[$53>>2]|0;
     $55 = ($54|0)==($16|0);
     if (!($55)) {
      _abort();
      // unreachable;
     }
     $56 = ((($48)) + 8|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($57|0)==($16|0);
     if ($58) {
      HEAP32[$53>>2] = $48;
      HEAP32[$56>>2] = $51;
      $$3 = $48;
      break;
     } else {
      _abort();
      // unreachable;
     }
    }
   } while(0);
   $72 = ($46|0)==(0|0);
   if ($72) {
    $$1 = $16;$$1382 = $17;$112 = $16;
   } else {
    $73 = ((($16)) + 28|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = (15784 + ($74<<2)|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = ($16|0)==($76|0);
    do {
     if ($77) {
      HEAP32[$75>>2] = $$3;
      $cond421 = ($$3|0)==(0|0);
      if ($cond421) {
       $78 = 1 << $74;
       $79 = $78 ^ -1;
       $80 = HEAP32[(15484)>>2]|0;
       $81 = $80 & $79;
       HEAP32[(15484)>>2] = $81;
       $$1 = $16;$$1382 = $17;$112 = $16;
       break L10;
      }
     } else {
      $82 = HEAP32[(15496)>>2]|0;
      $83 = ($46>>>0)<($82>>>0);
      if ($83) {
       _abort();
       // unreachable;
      } else {
       $84 = ((($46)) + 16|0);
       $85 = HEAP32[$84>>2]|0;
       $not$405 = ($85|0)!=($16|0);
       $$sink3 = $not$405&1;
       $86 = (((($46)) + 16|0) + ($$sink3<<2)|0);
       HEAP32[$86>>2] = $$3;
       $87 = ($$3|0)==(0|0);
       if ($87) {
        $$1 = $16;$$1382 = $17;$112 = $16;
        break L10;
       } else {
        break;
       }
      }
     }
    } while(0);
    $88 = HEAP32[(15496)>>2]|0;
    $89 = ($$3>>>0)<($88>>>0);
    if ($89) {
     _abort();
     // unreachable;
    }
    $90 = ((($$3)) + 24|0);
    HEAP32[$90>>2] = $46;
    $91 = ((($16)) + 16|0);
    $92 = HEAP32[$91>>2]|0;
    $93 = ($92|0)==(0|0);
    do {
     if (!($93)) {
      $94 = ($92>>>0)<($88>>>0);
      if ($94) {
       _abort();
       // unreachable;
      } else {
       $95 = ((($$3)) + 16|0);
       HEAP32[$95>>2] = $92;
       $96 = ((($92)) + 24|0);
       HEAP32[$96>>2] = $$3;
       break;
      }
     }
    } while(0);
    $97 = ((($91)) + 4|0);
    $98 = HEAP32[$97>>2]|0;
    $99 = ($98|0)==(0|0);
    if ($99) {
     $$1 = $16;$$1382 = $17;$112 = $16;
    } else {
     $100 = HEAP32[(15496)>>2]|0;
     $101 = ($98>>>0)<($100>>>0);
     if ($101) {
      _abort();
      // unreachable;
     } else {
      $102 = ((($$3)) + 20|0);
      HEAP32[$102>>2] = $98;
      $103 = ((($98)) + 24|0);
      HEAP32[$103>>2] = $$3;
      $$1 = $16;$$1382 = $17;$112 = $16;
      break;
     }
    }
   }
  } else {
   $$1 = $2;$$1382 = $9;$112 = $2;
  }
 } while(0);
 $113 = ($112>>>0)<($10>>>0);
 if (!($113)) {
  _abort();
  // unreachable;
 }
 $114 = ((($10)) + 4|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = $115 & 1;
 $117 = ($116|0)==(0);
 if ($117) {
  _abort();
  // unreachable;
 }
 $118 = $115 & 2;
 $119 = ($118|0)==(0);
 if ($119) {
  $120 = HEAP32[(15504)>>2]|0;
  $121 = ($10|0)==($120|0);
  $122 = HEAP32[(15500)>>2]|0;
  if ($121) {
   $123 = HEAP32[(15492)>>2]|0;
   $124 = (($123) + ($$1382))|0;
   HEAP32[(15492)>>2] = $124;
   HEAP32[(15504)>>2] = $$1;
   $125 = $124 | 1;
   $126 = ((($$1)) + 4|0);
   HEAP32[$126>>2] = $125;
   $127 = ($$1|0)==($122|0);
   if (!($127)) {
    return;
   }
   HEAP32[(15500)>>2] = 0;
   HEAP32[(15488)>>2] = 0;
   return;
  }
  $128 = ($10|0)==($122|0);
  if ($128) {
   $129 = HEAP32[(15488)>>2]|0;
   $130 = (($129) + ($$1382))|0;
   HEAP32[(15488)>>2] = $130;
   HEAP32[(15500)>>2] = $112;
   $131 = $130 | 1;
   $132 = ((($$1)) + 4|0);
   HEAP32[$132>>2] = $131;
   $133 = (($112) + ($130)|0);
   HEAP32[$133>>2] = $130;
   return;
  }
  $134 = $115 & -8;
  $135 = (($134) + ($$1382))|0;
  $136 = $115 >>> 3;
  $137 = ($115>>>0)<(256);
  L108: do {
   if ($137) {
    $138 = ((($10)) + 8|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = ((($10)) + 12|0);
    $141 = HEAP32[$140>>2]|0;
    $142 = $136 << 1;
    $143 = (15520 + ($142<<2)|0);
    $144 = ($139|0)==($143|0);
    if (!($144)) {
     $145 = HEAP32[(15496)>>2]|0;
     $146 = ($139>>>0)<($145>>>0);
     if ($146) {
      _abort();
      // unreachable;
     }
     $147 = ((($139)) + 12|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = ($148|0)==($10|0);
     if (!($149)) {
      _abort();
      // unreachable;
     }
    }
    $150 = ($141|0)==($139|0);
    if ($150) {
     $151 = 1 << $136;
     $152 = $151 ^ -1;
     $153 = HEAP32[3870]|0;
     $154 = $153 & $152;
     HEAP32[3870] = $154;
     break;
    }
    $155 = ($141|0)==($143|0);
    if ($155) {
     $$pre442 = ((($141)) + 8|0);
     $$pre$phi443Z2D = $$pre442;
    } else {
     $156 = HEAP32[(15496)>>2]|0;
     $157 = ($141>>>0)<($156>>>0);
     if ($157) {
      _abort();
      // unreachable;
     }
     $158 = ((($141)) + 8|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ($159|0)==($10|0);
     if ($160) {
      $$pre$phi443Z2D = $158;
     } else {
      _abort();
      // unreachable;
     }
    }
    $161 = ((($139)) + 12|0);
    HEAP32[$161>>2] = $141;
    HEAP32[$$pre$phi443Z2D>>2] = $139;
   } else {
    $162 = ((($10)) + 24|0);
    $163 = HEAP32[$162>>2]|0;
    $164 = ((($10)) + 12|0);
    $165 = HEAP32[$164>>2]|0;
    $166 = ($165|0)==($10|0);
    do {
     if ($166) {
      $177 = ((($10)) + 16|0);
      $178 = ((($177)) + 4|0);
      $179 = HEAP32[$178>>2]|0;
      $180 = ($179|0)==(0|0);
      if ($180) {
       $181 = HEAP32[$177>>2]|0;
       $182 = ($181|0)==(0|0);
       if ($182) {
        $$3400 = 0;
        break;
       } else {
        $$1398 = $181;$$1402 = $177;
       }
      } else {
       $$1398 = $179;$$1402 = $178;
      }
      while(1) {
       $183 = ((($$1398)) + 20|0);
       $184 = HEAP32[$183>>2]|0;
       $185 = ($184|0)==(0|0);
       if (!($185)) {
        $$1398 = $184;$$1402 = $183;
        continue;
       }
       $186 = ((($$1398)) + 16|0);
       $187 = HEAP32[$186>>2]|0;
       $188 = ($187|0)==(0|0);
       if ($188) {
        break;
       } else {
        $$1398 = $187;$$1402 = $186;
       }
      }
      $189 = HEAP32[(15496)>>2]|0;
      $190 = ($$1402>>>0)<($189>>>0);
      if ($190) {
       _abort();
       // unreachable;
      } else {
       HEAP32[$$1402>>2] = 0;
       $$3400 = $$1398;
       break;
      }
     } else {
      $167 = ((($10)) + 8|0);
      $168 = HEAP32[$167>>2]|0;
      $169 = HEAP32[(15496)>>2]|0;
      $170 = ($168>>>0)<($169>>>0);
      if ($170) {
       _abort();
       // unreachable;
      }
      $171 = ((($168)) + 12|0);
      $172 = HEAP32[$171>>2]|0;
      $173 = ($172|0)==($10|0);
      if (!($173)) {
       _abort();
       // unreachable;
      }
      $174 = ((($165)) + 8|0);
      $175 = HEAP32[$174>>2]|0;
      $176 = ($175|0)==($10|0);
      if ($176) {
       HEAP32[$171>>2] = $165;
       HEAP32[$174>>2] = $168;
       $$3400 = $165;
       break;
      } else {
       _abort();
       // unreachable;
      }
     }
    } while(0);
    $191 = ($163|0)==(0|0);
    if (!($191)) {
     $192 = ((($10)) + 28|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = (15784 + ($193<<2)|0);
     $195 = HEAP32[$194>>2]|0;
     $196 = ($10|0)==($195|0);
     do {
      if ($196) {
       HEAP32[$194>>2] = $$3400;
       $cond422 = ($$3400|0)==(0|0);
       if ($cond422) {
        $197 = 1 << $193;
        $198 = $197 ^ -1;
        $199 = HEAP32[(15484)>>2]|0;
        $200 = $199 & $198;
        HEAP32[(15484)>>2] = $200;
        break L108;
       }
      } else {
       $201 = HEAP32[(15496)>>2]|0;
       $202 = ($163>>>0)<($201>>>0);
       if ($202) {
        _abort();
        // unreachable;
       } else {
        $203 = ((($163)) + 16|0);
        $204 = HEAP32[$203>>2]|0;
        $not$ = ($204|0)!=($10|0);
        $$sink5 = $not$&1;
        $205 = (((($163)) + 16|0) + ($$sink5<<2)|0);
        HEAP32[$205>>2] = $$3400;
        $206 = ($$3400|0)==(0|0);
        if ($206) {
         break L108;
        } else {
         break;
        }
       }
      }
     } while(0);
     $207 = HEAP32[(15496)>>2]|0;
     $208 = ($$3400>>>0)<($207>>>0);
     if ($208) {
      _abort();
      // unreachable;
     }
     $209 = ((($$3400)) + 24|0);
     HEAP32[$209>>2] = $163;
     $210 = ((($10)) + 16|0);
     $211 = HEAP32[$210>>2]|0;
     $212 = ($211|0)==(0|0);
     do {
      if (!($212)) {
       $213 = ($211>>>0)<($207>>>0);
       if ($213) {
        _abort();
        // unreachable;
       } else {
        $214 = ((($$3400)) + 16|0);
        HEAP32[$214>>2] = $211;
        $215 = ((($211)) + 24|0);
        HEAP32[$215>>2] = $$3400;
        break;
       }
      }
     } while(0);
     $216 = ((($210)) + 4|0);
     $217 = HEAP32[$216>>2]|0;
     $218 = ($217|0)==(0|0);
     if (!($218)) {
      $219 = HEAP32[(15496)>>2]|0;
      $220 = ($217>>>0)<($219>>>0);
      if ($220) {
       _abort();
       // unreachable;
      } else {
       $221 = ((($$3400)) + 20|0);
       HEAP32[$221>>2] = $217;
       $222 = ((($217)) + 24|0);
       HEAP32[$222>>2] = $$3400;
       break;
      }
     }
    }
   }
  } while(0);
  $223 = $135 | 1;
  $224 = ((($$1)) + 4|0);
  HEAP32[$224>>2] = $223;
  $225 = (($112) + ($135)|0);
  HEAP32[$225>>2] = $135;
  $226 = HEAP32[(15500)>>2]|0;
  $227 = ($$1|0)==($226|0);
  if ($227) {
   HEAP32[(15488)>>2] = $135;
   return;
  } else {
   $$2 = $135;
  }
 } else {
  $228 = $115 & -2;
  HEAP32[$114>>2] = $228;
  $229 = $$1382 | 1;
  $230 = ((($$1)) + 4|0);
  HEAP32[$230>>2] = $229;
  $231 = (($112) + ($$1382)|0);
  HEAP32[$231>>2] = $$1382;
  $$2 = $$1382;
 }
 $232 = $$2 >>> 3;
 $233 = ($$2>>>0)<(256);
 if ($233) {
  $234 = $232 << 1;
  $235 = (15520 + ($234<<2)|0);
  $236 = HEAP32[3870]|0;
  $237 = 1 << $232;
  $238 = $236 & $237;
  $239 = ($238|0)==(0);
  if ($239) {
   $240 = $236 | $237;
   HEAP32[3870] = $240;
   $$pre = ((($235)) + 8|0);
   $$0403 = $235;$$pre$phiZ2D = $$pre;
  } else {
   $241 = ((($235)) + 8|0);
   $242 = HEAP32[$241>>2]|0;
   $243 = HEAP32[(15496)>>2]|0;
   $244 = ($242>>>0)<($243>>>0);
   if ($244) {
    _abort();
    // unreachable;
   } else {
    $$0403 = $242;$$pre$phiZ2D = $241;
   }
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $245 = ((($$0403)) + 12|0);
  HEAP32[$245>>2] = $$1;
  $246 = ((($$1)) + 8|0);
  HEAP32[$246>>2] = $$0403;
  $247 = ((($$1)) + 12|0);
  HEAP32[$247>>2] = $235;
  return;
 }
 $248 = $$2 >>> 8;
 $249 = ($248|0)==(0);
 if ($249) {
  $$0396 = 0;
 } else {
  $250 = ($$2>>>0)>(16777215);
  if ($250) {
   $$0396 = 31;
  } else {
   $251 = (($248) + 1048320)|0;
   $252 = $251 >>> 16;
   $253 = $252 & 8;
   $254 = $248 << $253;
   $255 = (($254) + 520192)|0;
   $256 = $255 >>> 16;
   $257 = $256 & 4;
   $258 = $257 | $253;
   $259 = $254 << $257;
   $260 = (($259) + 245760)|0;
   $261 = $260 >>> 16;
   $262 = $261 & 2;
   $263 = $258 | $262;
   $264 = (14 - ($263))|0;
   $265 = $259 << $262;
   $266 = $265 >>> 15;
   $267 = (($264) + ($266))|0;
   $268 = $267 << 1;
   $269 = (($267) + 7)|0;
   $270 = $$2 >>> $269;
   $271 = $270 & 1;
   $272 = $271 | $268;
   $$0396 = $272;
  }
 }
 $273 = (15784 + ($$0396<<2)|0);
 $274 = ((($$1)) + 28|0);
 HEAP32[$274>>2] = $$0396;
 $275 = ((($$1)) + 16|0);
 $276 = ((($$1)) + 20|0);
 HEAP32[$276>>2] = 0;
 HEAP32[$275>>2] = 0;
 $277 = HEAP32[(15484)>>2]|0;
 $278 = 1 << $$0396;
 $279 = $277 & $278;
 $280 = ($279|0)==(0);
 do {
  if ($280) {
   $281 = $277 | $278;
   HEAP32[(15484)>>2] = $281;
   HEAP32[$273>>2] = $$1;
   $282 = ((($$1)) + 24|0);
   HEAP32[$282>>2] = $273;
   $283 = ((($$1)) + 12|0);
   HEAP32[$283>>2] = $$1;
   $284 = ((($$1)) + 8|0);
   HEAP32[$284>>2] = $$1;
  } else {
   $285 = HEAP32[$273>>2]|0;
   $286 = ($$0396|0)==(31);
   $287 = $$0396 >>> 1;
   $288 = (25 - ($287))|0;
   $289 = $286 ? 0 : $288;
   $290 = $$2 << $289;
   $$0383 = $290;$$0384 = $285;
   while(1) {
    $291 = ((($$0384)) + 4|0);
    $292 = HEAP32[$291>>2]|0;
    $293 = $292 & -8;
    $294 = ($293|0)==($$2|0);
    if ($294) {
     label = 124;
     break;
    }
    $295 = $$0383 >>> 31;
    $296 = (((($$0384)) + 16|0) + ($295<<2)|0);
    $297 = $$0383 << 1;
    $298 = HEAP32[$296>>2]|0;
    $299 = ($298|0)==(0|0);
    if ($299) {
     label = 121;
     break;
    } else {
     $$0383 = $297;$$0384 = $298;
    }
   }
   if ((label|0) == 121) {
    $300 = HEAP32[(15496)>>2]|0;
    $301 = ($296>>>0)<($300>>>0);
    if ($301) {
     _abort();
     // unreachable;
    } else {
     HEAP32[$296>>2] = $$1;
     $302 = ((($$1)) + 24|0);
     HEAP32[$302>>2] = $$0384;
     $303 = ((($$1)) + 12|0);
     HEAP32[$303>>2] = $$1;
     $304 = ((($$1)) + 8|0);
     HEAP32[$304>>2] = $$1;
     break;
    }
   }
   else if ((label|0) == 124) {
    $305 = ((($$0384)) + 8|0);
    $306 = HEAP32[$305>>2]|0;
    $307 = HEAP32[(15496)>>2]|0;
    $308 = ($306>>>0)>=($307>>>0);
    $not$437 = ($$0384>>>0)>=($307>>>0);
    $309 = $308 & $not$437;
    if ($309) {
     $310 = ((($306)) + 12|0);
     HEAP32[$310>>2] = $$1;
     HEAP32[$305>>2] = $$1;
     $311 = ((($$1)) + 8|0);
     HEAP32[$311>>2] = $306;
     $312 = ((($$1)) + 12|0);
     HEAP32[$312>>2] = $$0384;
     $313 = ((($$1)) + 24|0);
     HEAP32[$313>>2] = 0;
     break;
    } else {
     _abort();
     // unreachable;
    }
   }
  }
 } while(0);
 $314 = HEAP32[(15512)>>2]|0;
 $315 = (($314) + -1)|0;
 HEAP32[(15512)>>2] = $315;
 $316 = ($315|0)==(0);
 if ($316) {
  $$0212$in$i = (15936);
 } else {
  return;
 }
 while(1) {
  $$0212$i = HEAP32[$$0212$in$i>>2]|0;
  $317 = ($$0212$i|0)==(0|0);
  $318 = ((($$0212$i)) + 8|0);
  if ($317) {
   break;
  } else {
   $$0212$in$i = $318;
  }
 }
 HEAP32[(15512)>>2] = -1;
 return;
}
function runPostSets() {
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    increment = ((increment + 15) & -16)|0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        ___setErrNo(12);
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        return -1;
      }
    }
    return oldDynamicTop|0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}

  
function dynCall_iiiii(index,a1,a2,a3,a4) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return FUNCTION_TABLE_iiiii[index&31](a1|0,a2|0,a3|0,a4|0)|0;
}


function jsCall_iiiii_0(a1,a2,a3,a4) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return jsCall_iiiii(0,a1|0,a2|0,a3|0,a4|0)|0;
}



function jsCall_iiiii_1(a1,a2,a3,a4) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return jsCall_iiiii(1,a1|0,a2|0,a3|0,a4|0)|0;
}



function jsCall_iiiii_2(a1,a2,a3,a4) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return jsCall_iiiii(2,a1|0,a2|0,a3|0,a4|0)|0;
}



function jsCall_iiiii_3(a1,a2,a3,a4) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return jsCall_iiiii(3,a1|0,a2|0,a3|0,a4|0)|0;
}



function jsCall_iiiii_4(a1,a2,a3,a4) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return jsCall_iiiii(4,a1|0,a2|0,a3|0,a4|0)|0;
}



function jsCall_iiiii_5(a1,a2,a3,a4) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return jsCall_iiiii(5,a1|0,a2|0,a3|0,a4|0)|0;
}



function jsCall_iiiii_6(a1,a2,a3,a4) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return jsCall_iiiii(6,a1|0,a2|0,a3|0,a4|0)|0;
}



function jsCall_iiiii_7(a1,a2,a3,a4) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0;
  return jsCall_iiiii(7,a1|0,a2|0,a3|0,a4|0)|0;
}



function dynCall_iiiiii(index,a1,a2,a3,a4,a5) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return FUNCTION_TABLE_iiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}


function jsCall_iiiiii_0(a1,a2,a3,a4,a5) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return jsCall_iiiiii(0,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}



function jsCall_iiiiii_1(a1,a2,a3,a4,a5) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return jsCall_iiiiii(1,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}



function jsCall_iiiiii_2(a1,a2,a3,a4,a5) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return jsCall_iiiiii(2,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}



function jsCall_iiiiii_3(a1,a2,a3,a4,a5) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return jsCall_iiiiii(3,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}



function jsCall_iiiiii_4(a1,a2,a3,a4,a5) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return jsCall_iiiiii(4,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}



function jsCall_iiiiii_5(a1,a2,a3,a4,a5) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return jsCall_iiiiii(5,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}



function jsCall_iiiiii_6(a1,a2,a3,a4,a5) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return jsCall_iiiiii(6,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}



function jsCall_iiiiii_7(a1,a2,a3,a4,a5) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0;
  return jsCall_iiiiii(7,a1|0,a2|0,a3|0,a4|0,a5|0)|0;
}



function dynCall_iii(index,a1,a2) {
  index = index|0;
  a1=a1|0; a2=a2|0;
  return FUNCTION_TABLE_iii[index&31](a1|0,a2|0)|0;
}


function jsCall_iii_0(a1,a2) {
  a1=a1|0; a2=a2|0;
  return jsCall_iii(0,a1|0,a2|0)|0;
}



function jsCall_iii_1(a1,a2) {
  a1=a1|0; a2=a2|0;
  return jsCall_iii(1,a1|0,a2|0)|0;
}



function jsCall_iii_2(a1,a2) {
  a1=a1|0; a2=a2|0;
  return jsCall_iii(2,a1|0,a2|0)|0;
}



function jsCall_iii_3(a1,a2) {
  a1=a1|0; a2=a2|0;
  return jsCall_iii(3,a1|0,a2|0)|0;
}



function jsCall_iii_4(a1,a2) {
  a1=a1|0; a2=a2|0;
  return jsCall_iii(4,a1|0,a2|0)|0;
}



function jsCall_iii_5(a1,a2) {
  a1=a1|0; a2=a2|0;
  return jsCall_iii(5,a1|0,a2|0)|0;
}



function jsCall_iii_6(a1,a2) {
  a1=a1|0; a2=a2|0;
  return jsCall_iii(6,a1|0,a2|0)|0;
}



function jsCall_iii_7(a1,a2) {
  a1=a1|0; a2=a2|0;
  return jsCall_iii(7,a1|0,a2|0)|0;
}



function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  index = index|0;
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return FUNCTION_TABLE_iiiiiiiii[index&31](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function jsCall_iiiiiiiii_0(a1,a2,a3,a4,a5,a6,a7,a8) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return jsCall_iiiiiiiii(0,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}



function jsCall_iiiiiiiii_1(a1,a2,a3,a4,a5,a6,a7,a8) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return jsCall_iiiiiiiii(1,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}



function jsCall_iiiiiiiii_2(a1,a2,a3,a4,a5,a6,a7,a8) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return jsCall_iiiiiiiii(2,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}



function jsCall_iiiiiiiii_3(a1,a2,a3,a4,a5,a6,a7,a8) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return jsCall_iiiiiiiii(3,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}



function jsCall_iiiiiiiii_4(a1,a2,a3,a4,a5,a6,a7,a8) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return jsCall_iiiiiiiii(4,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}



function jsCall_iiiiiiiii_5(a1,a2,a3,a4,a5,a6,a7,a8) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return jsCall_iiiiiiiii(5,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}



function jsCall_iiiiiiiii_6(a1,a2,a3,a4,a5,a6,a7,a8) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return jsCall_iiiiiiiii(6,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}



function jsCall_iiiiiiiii_7(a1,a2,a3,a4,a5,a6,a7,a8) {
  a1=a1|0; a2=a2|0; a3=a3|0; a4=a4|0; a5=a5|0; a6=a6|0; a7=a7|0; a8=a8|0;
  return jsCall_iiiiiiiii(7,a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0;
}


function b1(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(0);return 0;
}
function b2(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(9);return 0;
}
function b3(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(10);return 0;
}
function b4(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(11);return 0;
}
function b5(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(12);return 0;
}
function b6(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(13);return 0;
}
function b7(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(14);return 0;
}
function b8(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(15);return 0;
}
function b9(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(16);return 0;
}
function b10(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(17);return 0;
}
function b11(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(19);return 0;
}
function b12(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(20);return 0;
}
function b13(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(21);return 0;
}
function b14(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(22);return 0;
}
function b15(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(23);return 0;
}
function b16(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(24);return 0;
}
function b17(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(25);return 0;
}
function b18(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(26);return 0;
}
function b19(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(27);return 0;
}
function b20(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(28);return 0;
}
function b21(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(29);return 0;
}
function b22(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(30);return 0;
}
function b23(p0,p1,p2,p3) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0; nullFunc_iiiii(31);return 0;
}
function b25(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(0);return 0;
}
function b26(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(9);return 0;
}
function b27(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(10);return 0;
}
function b28(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(11);return 0;
}
function b29(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(12);return 0;
}
function b30(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(13);return 0;
}
function b31(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(14);return 0;
}
function b32(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(15);return 0;
}
function b33(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(16);return 0;
}
function b34(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(17);return 0;
}
function b35(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(21);return 0;
}
function b36(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(22);return 0;
}
function b37(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(23);return 0;
}
function b38(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(24);return 0;
}
function b39(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(25);return 0;
}
function b40(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(26);return 0;
}
function b41(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(27);return 0;
}
function b42(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(28);return 0;
}
function b43(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(29);return 0;
}
function b44(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(30);return 0;
}
function b45(p0,p1,p2,p3,p4) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0; nullFunc_iiiiii(31);return 0;
}
function b47(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(0);return 0;
}
function b48(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(9);return 0;
}
function b49(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(10);return 0;
}
function b50(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(11);return 0;
}
function b51(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(12);return 0;
}
function b52(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(13);return 0;
}
function b53(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(14);return 0;
}
function b54(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(15);return 0;
}
function b55(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(16);return 0;
}
function b56(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(17);return 0;
}
function b57(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(20);return 0;
}
function b58(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(21);return 0;
}
function b59(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(22);return 0;
}
function b60(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(23);return 0;
}
function b61(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(24);return 0;
}
function b62(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(25);return 0;
}
function b63(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(26);return 0;
}
function b64(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(27);return 0;
}
function b65(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(28);return 0;
}
function b66(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(29);return 0;
}
function b67(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(30);return 0;
}
function b68(p0,p1) {
 p0 = p0|0;p1 = p1|0; nullFunc_iii(31);return 0;
}
function b70(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(0);return 0;
}
function b71(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(9);return 0;
}
function b72(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(10);return 0;
}
function b73(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(11);return 0;
}
function b74(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(12);return 0;
}
function b75(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(13);return 0;
}
function b76(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(14);return 0;
}
function b77(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(15);return 0;
}
function b78(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(16);return 0;
}
function b79(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(17);return 0;
}
function b80(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(19);return 0;
}
function b81(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(20);return 0;
}
function b82(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(21);return 0;
}
function b83(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(22);return 0;
}
function b84(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(23);return 0;
}
function b85(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(24);return 0;
}
function b86(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(25);return 0;
}
function b87(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(26);return 0;
}
function b88(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(27);return 0;
}
function b89(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(28);return 0;
}
function b90(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(29);return 0;
}
function b91(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(30);return 0;
}
function b92(p0,p1,p2,p3,p4,p5,p6,p7) {
 p0 = p0|0;p1 = p1|0;p2 = p2|0;p3 = p3|0;p4 = p4|0;p5 = p5|0;p6 = p6|0;p7 = p7|0; nullFunc_iiiiiiiii(31);return 0;
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiiii = [b1,jsCall_iiiii_0,jsCall_iiiii_1,jsCall_iiiii_2,jsCall_iiiii_3,jsCall_iiiii_4,jsCall_iiiii_5,jsCall_iiiii_6,jsCall_iiiii_7,b2,b3,b4,b5,b6,b7,b8,b9,b10,_crypto_onetimeauth_poly1305_donna_update,b11,b12,b13,b14,b15,b16,b17,b18,b19,b20
,b21,b22,b23];
var FUNCTION_TABLE_iiiiii = [b25,jsCall_iiiiii_0,jsCall_iiiiii_1,jsCall_iiiiii_2,jsCall_iiiiii_3,jsCall_iiiiii_4,jsCall_iiiiii_5,jsCall_iiiiii_6,jsCall_iiiiii_7,b26,b27,b28,b29,b30,b31,b32,b33,b34,_crypto_onetimeauth_poly1305_donna,_crypto_onetimeauth_poly1305_donna_verify,_stream_ref,b35,b36,b37,b38,b39,b40,b41,b42
,b43,b44,b45];
var FUNCTION_TABLE_iii = [b47,jsCall_iii_0,jsCall_iii_1,jsCall_iii_2,jsCall_iii_3,jsCall_iii_4,jsCall_iii_5,jsCall_iii_6,jsCall_iii_7,b48,b49,b50,b51,b52,b53,b54,b55,b56,_crypto_onetimeauth_poly1305_donna_init,_crypto_onetimeauth_poly1305_donna_final,b57,b58,b59,b60,b61,b62,b63,b64,b65
,b66,b67,b68];
var FUNCTION_TABLE_iiiiiiiii = [b70,jsCall_iiiiiiiii_0,jsCall_iiiiiiiii_1,jsCall_iiiiiiiii_2,jsCall_iiiiiiiii_3,jsCall_iiiiiiiii_4,jsCall_iiiiiiiii_5,jsCall_iiiiiiiii_6,jsCall_iiiiiiiii_7,b71,b72,b73,b74,b75,b76,b77,b78,b79,_stream_ref_xor_ic,b80,b81,b82,b83,b84,b85,b86,b87,b88,b89
,b90,b91,b92];

  return { _mceliecejs_init: _mceliecejs_init, ___muldsi3: ___muldsi3, _mceliecejs_encrypt: _mceliecejs_encrypt, _free: _free, _mceliecejs_private_key_bytes: _mceliecejs_private_key_bytes, _mceliecejs_decrypted_bytes: _mceliecejs_decrypted_bytes, _i64Add: _i64Add, _mceliecejs_keypair: _mceliecejs_keypair, _i64Subtract: _i64Subtract, _memset: _memset, _malloc: _malloc, _mceliecejs_public_key_bytes: _mceliecejs_public_key_bytes, _emscripten_get_global_libc: _emscripten_get_global_libc, _memcpy: _memcpy, ___muldi3: ___muldi3, _sbrk: _sbrk, _bitshift64Lshr: _bitshift64Lshr, _mceliecejs_encrypted_bytes: _mceliecejs_encrypted_bytes, _mceliecejs_decrypt: _mceliecejs_decrypt, _bitshift64Shl: _bitshift64Shl, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setTempRet0: setTempRet0, getTempRet0: getTempRet0, setThrew: setThrew, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiiii: dynCall_iiiii, dynCall_iiiiii: dynCall_iiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiiiiii: dynCall_iiiiiiiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);

var real_stackSave = asm["stackSave"]; asm["stackSave"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_stackSave.apply(null, arguments);
};

var real_getTempRet0 = asm["getTempRet0"]; asm["getTempRet0"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_getTempRet0.apply(null, arguments);
};

var real__mceliecejs_public_key_bytes = asm["_mceliecejs_public_key_bytes"]; asm["_mceliecejs_public_key_bytes"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__mceliecejs_public_key_bytes.apply(null, arguments);
};

var real_setThrew = asm["setThrew"]; asm["setThrew"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_setThrew.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Lshr.apply(null, arguments);
};

var real__mceliecejs_encrypted_bytes = asm["_mceliecejs_encrypted_bytes"]; asm["_mceliecejs_encrypted_bytes"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__mceliecejs_encrypted_bytes.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__bitshift64Shl.apply(null, arguments);
};

var real__mceliecejs_encrypt = asm["_mceliecejs_encrypt"]; asm["_mceliecejs_encrypt"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__mceliecejs_encrypt.apply(null, arguments);
};

var real__mceliecejs_keypair = asm["_mceliecejs_keypair"]; asm["_mceliecejs_keypair"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__mceliecejs_keypair.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__sbrk.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"]; asm["stackAlloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_stackAlloc.apply(null, arguments);
};

var real____muldi3 = asm["___muldi3"]; asm["___muldi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____muldi3.apply(null, arguments);
};

var real__mceliecejs_init = asm["_mceliecejs_init"]; asm["_mceliecejs_init"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__mceliecejs_init.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Subtract.apply(null, arguments);
};

var real_setTempRet0 = asm["setTempRet0"]; asm["setTempRet0"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_setTempRet0.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__i64Add.apply(null, arguments);
};

var real__mceliecejs_decrypted_bytes = asm["_mceliecejs_decrypted_bytes"]; asm["_mceliecejs_decrypted_bytes"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__mceliecejs_decrypted_bytes.apply(null, arguments);
};

var real__emscripten_get_global_libc = asm["_emscripten_get_global_libc"]; asm["_emscripten_get_global_libc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__emscripten_get_global_libc.apply(null, arguments);
};

var real__mceliecejs_decrypt = asm["_mceliecejs_decrypt"]; asm["_mceliecejs_decrypt"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__mceliecejs_decrypt.apply(null, arguments);
};

var real____muldsi3 = asm["___muldsi3"]; asm["___muldsi3"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real____muldsi3.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__free.apply(null, arguments);
};

var real__mceliecejs_private_key_bytes = asm["_mceliecejs_private_key_bytes"]; asm["_mceliecejs_private_key_bytes"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__mceliecejs_private_key_bytes.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"]; asm["establishStackSpace"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_establishStackSpace.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"]; asm["stackRestore"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real_stackRestore.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
return real__malloc.apply(null, arguments);
};
var stackSave = Module["stackSave"] = asm["stackSave"];
var getTempRet0 = Module["getTempRet0"] = asm["getTempRet0"];
var _mceliecejs_public_key_bytes = Module["_mceliecejs_public_key_bytes"] = asm["_mceliecejs_public_key_bytes"];
var setThrew = Module["setThrew"] = asm["setThrew"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _mceliecejs_encrypted_bytes = Module["_mceliecejs_encrypted_bytes"] = asm["_mceliecejs_encrypted_bytes"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _mceliecejs_encrypt = Module["_mceliecejs_encrypt"] = asm["_mceliecejs_encrypt"];
var _mceliecejs_keypair = Module["_mceliecejs_keypair"] = asm["_mceliecejs_keypair"];
var _memset = Module["_memset"] = asm["_memset"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var _mceliecejs_init = Module["_mceliecejs_init"] = asm["_mceliecejs_init"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var setTempRet0 = Module["setTempRet0"] = asm["setTempRet0"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _mceliecejs_decrypted_bytes = Module["_mceliecejs_decrypted_bytes"] = asm["_mceliecejs_decrypted_bytes"];
var _emscripten_get_global_libc = Module["_emscripten_get_global_libc"] = asm["_emscripten_get_global_libc"];
var _mceliecejs_decrypt = Module["_mceliecejs_decrypt"] = asm["_mceliecejs_decrypt"];
var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];
var _free = Module["_free"] = asm["_free"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var _mceliecejs_private_key_bytes = Module["_mceliecejs_private_key_bytes"] = asm["_mceliecejs_private_key_bytes"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
;

Runtime.stackAlloc = Module['stackAlloc'];
Runtime.stackSave = Module['stackSave'];
Runtime.stackRestore = Module['stackRestore'];
Runtime.establishStackSpace = Module['establishStackSpace'];

Runtime.setTempRet0 = Module['setTempRet0'];
Runtime.getTempRet0 = Module['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;





function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      var toLog = e;
      if (e && typeof e === 'object' && e.stack) {
        toLog = [e, e.stack];
      }
      Module.printErr('exception thrown: ' + toLog);
      Module['quit'](1, e);
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (ENVIRONMENT_IS_WEB && preloadStartTime !== null) {
      Module.printErr('pre-main prep time: ' + (Date.now() - preloadStartTime) + ' ms');
    }

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') implicitly called by end of main(), but noExitRuntime, so not exiting the runtime (you can use emscripten_force_exit, if you want to force a true shutdown)');
    return;
  }

  if (Module['noExitRuntime']) {
    Module.printErr('exit(' + status + ') called, but noExitRuntime, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)');
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  }
  Module['quit'](status, new ExitStatus(status));
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}





// {{MODULE_ADDITIONS}}


// EMSCRIPTEN_GENERATED_FUNCTIONS: ["_i64Subtract","_sbrk","_i64Add","_memset","_bitshift64Lshr","_bitshift64Shl","___muldsi3","___muldi3","_memcpy"]


;

function dataReturn (returnValue, result) {
	if (returnValue === 0) {
		return result;
	}
	else {
		throw new Error('McEliece error: ' + returnValue);
	}
}

function dataResult (buffer, bytes) {
	return new Uint8Array(
		new Uint8Array(Module.HEAPU8.buffer, buffer, bytes)
	);
}

function dataFree (buffer) {
	try {
		Module._free(buffer);
	}
	catch (_) {}
}


Module._mceliecejs_init();


var mceliece	= {
	publicKeyBytes: Module._mceliecejs_public_key_bytes(),
	privateKeyBytes: Module._mceliecejs_private_key_bytes(),
	cyphertextBytes: Module._mceliecejs_encrypted_bytes(),
	plaintextBytes: Module._mceliecejs_decrypted_bytes(),

	keyPair: function () {
		var publicKeyBuffer		= Module._malloc(mceliece.publicKeyBytes);
		var privateKeyBuffer	= Module._malloc(mceliece.privateKeyBytes);

		try {
			var returnValue	= Module._mceliecejs_keypair(
				publicKeyBuffer,
				privateKeyBuffer
			);

			return dataReturn(returnValue, {
				publicKey: dataResult(publicKeyBuffer, mceliece.publicKeyBytes),
				privateKey: dataResult(privateKeyBuffer, mceliece.privateKeyBytes)
			});
		}
		finally {
			dataFree(publicKeyBuffer);
			dataFree(privateKeyBuffer);
		}
	},

	encrypt: function (message, publicKey) {
		if (message.length > mceliece.plaintextBytes) {
			throw new Error('Plaintext length exceeds mceliece.plaintextBytes.');
		}

		var messageBuffer	= Module._malloc(message.length);
		var publicKeyBuffer	= Module._malloc(mceliece.publicKeyBytes);
		var encryptedBuffer	= Module._malloc(mceliece.cyphertextBytes);

		Module.writeArrayToMemory(message, messageBuffer);
		Module.writeArrayToMemory(publicKey, publicKeyBuffer);

		try {
			var returnValue	= Module._mceliecejs_encrypt(
				messageBuffer,
				message.length,
				publicKeyBuffer,
				encryptedBuffer
			);

			return dataReturn(
				returnValue,
				dataResult(encryptedBuffer, mceliece.cyphertextBytes)
			);
		}
		finally {
			dataFree(messageBuffer);
			dataFree(publicKeyBuffer);
			dataFree(encryptedBuffer);
		}
	},

	decrypt: function (encrypted, privateKey) {
		var encryptedBuffer		= Module._malloc(mceliece.cyphertextBytes);
		var privateKeyBuffer	= Module._malloc(mceliece.privateKeyBytes);
		var decryptedBuffer		= Module._malloc(mceliece.plaintextBytes);

		Module.writeArrayToMemory(encrypted, encryptedBuffer);
		Module.writeArrayToMemory(privateKey, privateKeyBuffer);

		try {
			var returnValue	= Module._mceliecejs_decrypt(
				encryptedBuffer,
				privateKeyBuffer,
				decryptedBuffer
			);

			if (returnValue >= 0) {
				return dataResult(decryptedBuffer, returnValue);
			}
			else {
				dataReturn(-returnValue);
			}
		}
		finally {
			dataFree(encryptedBuffer);
			dataFree(privateKeyBuffer);
			dataFree(decryptedBuffer);
		}
	}
};



return mceliece;

}());


if (typeof module !== 'undefined' && module.exports) {
	mceliece.mceliece	= mceliece;
	module.exports		= mceliece;
}
else {
	self.mceliece		= mceliece;
}

//# sourceMappingURL=mceliece.debug.js.map